I0130 08:11:22.796860      24 e2e.go:126] Starting e2e run "b6f505ae-8bd7-4dec-ae19-dd37380037d5" on Ginkgo node 1
Jan 30 08:11:22.809: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1675066282 - will randomize all specs

Will run 368 of 7069 specs
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Jan 30 08:11:22.915: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:11:22.917: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Jan 30 08:11:22.930: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Jan 30 08:11:22.943: INFO: 9 / 9 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Jan 30 08:11:22.943: INFO: expected 2 pod replicas in namespace 'kube-system', 2 are Running and Ready.
Jan 30 08:11:22.943: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Jan 30 08:11:22.947: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
Jan 30 08:11:22.947: INFO: e2e test version: v1.26.0
Jan 30 08:11:22.948: INFO: kube-apiserver version: v1.26.0
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Jan 30 08:11:22.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:11:22.950: INFO: Cluster IP family: ipv4
------------------------------
[SynchronizedBeforeSuite] PASSED [0.036 seconds]
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77

  Begin Captured GinkgoWriter Output >>
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Jan 30 08:11:22.915: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:11:22.917: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
    Jan 30 08:11:22.930: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
    Jan 30 08:11:22.943: INFO: 9 / 9 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
    Jan 30 08:11:22.943: INFO: expected 2 pod replicas in namespace 'kube-system', 2 are Running and Ready.
    Jan 30 08:11:22.943: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
    Jan 30 08:11:22.947: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
    Jan 30 08:11:22.947: INFO: e2e test version: v1.26.0
    Jan 30 08:11:22.948: INFO: kube-apiserver version: v1.26.0
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Jan 30 08:11:22.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:11:22.950: INFO: Cluster IP family: ipv4
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:11:22.963
Jan 30 08:11:22.963: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename events 01/30/23 08:11:22.963
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:22.972
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:22.973
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
STEP: creating a test event 01/30/23 08:11:22.975
STEP: listing events in all namespaces 01/30/23 08:11:22.979
STEP: listing events in test namespace 01/30/23 08:11:22.982
STEP: listing events with field selection filtering on source 01/30/23 08:11:22.984
STEP: listing events with field selection filtering on reportingController 01/30/23 08:11:22.985
STEP: getting the test event 01/30/23 08:11:22.993
STEP: patching the test event 01/30/23 08:11:22.994
STEP: getting the test event 01/30/23 08:11:22.999
STEP: updating the test event 01/30/23 08:11:23
STEP: getting the test event 01/30/23 08:11:23.004
STEP: deleting the test event 01/30/23 08:11:23.005
STEP: listing events in all namespaces 01/30/23 08:11:23.008
STEP: listing events in test namespace 01/30/23 08:11:23.014
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Jan 30 08:11:23.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-6929" for this suite. 01/30/23 08:11:23.018
------------------------------
â€¢ [0.058 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:11:22.963
    Jan 30 08:11:22.963: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename events 01/30/23 08:11:22.963
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:22.972
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:22.973
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
      test/e2e/instrumentation/events.go:98
    STEP: creating a test event 01/30/23 08:11:22.975
    STEP: listing events in all namespaces 01/30/23 08:11:22.979
    STEP: listing events in test namespace 01/30/23 08:11:22.982
    STEP: listing events with field selection filtering on source 01/30/23 08:11:22.984
    STEP: listing events with field selection filtering on reportingController 01/30/23 08:11:22.985
    STEP: getting the test event 01/30/23 08:11:22.993
    STEP: patching the test event 01/30/23 08:11:22.994
    STEP: getting the test event 01/30/23 08:11:22.999
    STEP: updating the test event 01/30/23 08:11:23
    STEP: getting the test event 01/30/23 08:11:23.004
    STEP: deleting the test event 01/30/23 08:11:23.005
    STEP: listing events in all namespaces 01/30/23 08:11:23.008
    STEP: listing events in test namespace 01/30/23 08:11:23.014
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:11:23.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-6929" for this suite. 01/30/23 08:11:23.018
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:11:23.023
Jan 30 08:11:23.023: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:11:23.023
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:23.031
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:23.033
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
STEP: Creating secret with name secret-test-4e88f0d7-3105-4e59-99b3-2559362f0130 01/30/23 08:11:23.045
STEP: Creating a pod to test consume secrets 01/30/23 08:11:23.048
Jan 30 08:11:23.053: INFO: Waiting up to 5m0s for pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139" in namespace "secrets-193" to be "Succeeded or Failed"
Jan 30 08:11:23.054: INFO: Pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139": Phase="Pending", Reason="", readiness=false. Elapsed: 1.378962ms
Jan 30 08:11:25.057: INFO: Pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00452329s
Jan 30 08:11:27.057: INFO: Pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004632338s
STEP: Saw pod success 01/30/23 08:11:27.057
Jan 30 08:11:27.058: INFO: Pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139" satisfied condition "Succeeded or Failed"
Jan 30 08:11:27.059: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139 container secret-volume-test: <nil>
STEP: delete the pod 01/30/23 08:11:27.074
Jan 30 08:11:27.084: INFO: Waiting for pod pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139 to disappear
Jan 30 08:11:27.085: INFO: Pod pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:11:27.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-193" for this suite. 01/30/23 08:11:27.087
STEP: Destroying namespace "secret-namespace-8922" for this suite. 01/30/23 08:11:27.094
------------------------------
â€¢ [4.075 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:11:23.023
    Jan 30 08:11:23.023: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:11:23.023
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:23.031
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:23.033
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:99
    STEP: Creating secret with name secret-test-4e88f0d7-3105-4e59-99b3-2559362f0130 01/30/23 08:11:23.045
    STEP: Creating a pod to test consume secrets 01/30/23 08:11:23.048
    Jan 30 08:11:23.053: INFO: Waiting up to 5m0s for pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139" in namespace "secrets-193" to be "Succeeded or Failed"
    Jan 30 08:11:23.054: INFO: Pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139": Phase="Pending", Reason="", readiness=false. Elapsed: 1.378962ms
    Jan 30 08:11:25.057: INFO: Pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00452329s
    Jan 30 08:11:27.057: INFO: Pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004632338s
    STEP: Saw pod success 01/30/23 08:11:27.057
    Jan 30 08:11:27.058: INFO: Pod "pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139" satisfied condition "Succeeded or Failed"
    Jan 30 08:11:27.059: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139 container secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:11:27.074
    Jan 30 08:11:27.084: INFO: Waiting for pod pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139 to disappear
    Jan 30 08:11:27.085: INFO: Pod pod-secrets-35d243ff-cfb5-4f3e-8aa4-6f39aa801139 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:11:27.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-193" for this suite. 01/30/23 08:11:27.087
    STEP: Destroying namespace "secret-namespace-8922" for this suite. 01/30/23 08:11:27.094
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:11:27.098
Jan 30 08:11:27.098: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename svcaccounts 01/30/23 08:11:27.099
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:27.105
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:27.107
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
Jan 30 08:11:27.116: INFO: Waiting up to 5m0s for pod "pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3" in namespace "svcaccounts-657" to be "running"
Jan 30 08:11:27.117: INFO: Pod "pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3": Phase="Pending", Reason="", readiness=false. Elapsed: 1.721134ms
Jan 30 08:11:29.120: INFO: Pod "pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3": Phase="Running", Reason="", readiness=true. Elapsed: 2.004570691s
Jan 30 08:11:29.120: INFO: Pod "pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3" satisfied condition "running"
STEP: reading a file in the container 01/30/23 08:11:29.12
Jan 30 08:11:29.120: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-657 pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container 01/30/23 08:11:29.267
Jan 30 08:11:29.268: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-657 pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container 01/30/23 08:11:29.337
Jan 30 08:11:29.337: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-657 pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Jan 30 08:11:29.486: INFO: Got root ca configmap in namespace "svcaccounts-657"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 30 08:11:29.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-657" for this suite. 01/30/23 08:11:29.505
------------------------------
â€¢ [2.416 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:11:27.098
    Jan 30 08:11:27.098: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename svcaccounts 01/30/23 08:11:27.099
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:27.105
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:27.107
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount an API token into pods  [Conformance]
      test/e2e/auth/service_accounts.go:78
    Jan 30 08:11:27.116: INFO: Waiting up to 5m0s for pod "pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3" in namespace "svcaccounts-657" to be "running"
    Jan 30 08:11:27.117: INFO: Pod "pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3": Phase="Pending", Reason="", readiness=false. Elapsed: 1.721134ms
    Jan 30 08:11:29.120: INFO: Pod "pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3": Phase="Running", Reason="", readiness=true. Elapsed: 2.004570691s
    Jan 30 08:11:29.120: INFO: Pod "pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3" satisfied condition "running"
    STEP: reading a file in the container 01/30/23 08:11:29.12
    Jan 30 08:11:29.120: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-657 pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
    STEP: reading a file in the container 01/30/23 08:11:29.267
    Jan 30 08:11:29.268: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-657 pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
    STEP: reading a file in the container 01/30/23 08:11:29.337
    Jan 30 08:11:29.337: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-657 pod-service-account-81b49083-0e88-47ee-aaaa-7906890723a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
    Jan 30 08:11:29.486: INFO: Got root ca configmap in namespace "svcaccounts-657"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:11:29.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-657" for this suite. 01/30/23 08:11:29.505
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:11:29.515
Jan 30 08:11:29.515: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename svcaccounts 01/30/23 08:11:29.515
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:29.523
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:29.525
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
Jan 30 08:11:29.527: INFO: Got root ca configmap in namespace "svcaccounts-5750"
Jan 30 08:11:29.530: INFO: Deleted root ca configmap in namespace "svcaccounts-5750"
STEP: waiting for a new root ca configmap created 01/30/23 08:11:30.031
Jan 30 08:11:30.033: INFO: Recreated root ca configmap in namespace "svcaccounts-5750"
Jan 30 08:11:30.036: INFO: Updated root ca configmap in namespace "svcaccounts-5750"
STEP: waiting for the root ca configmap reconciled 01/30/23 08:11:30.537
Jan 30 08:11:30.539: INFO: Reconciled root ca configmap in namespace "svcaccounts-5750"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 30 08:11:30.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-5750" for this suite. 01/30/23 08:11:30.54
------------------------------
â€¢ [1.032 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:11:29.515
    Jan 30 08:11:29.515: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename svcaccounts 01/30/23 08:11:29.515
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:29.523
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:29.525
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
      test/e2e/auth/service_accounts.go:742
    Jan 30 08:11:29.527: INFO: Got root ca configmap in namespace "svcaccounts-5750"
    Jan 30 08:11:29.530: INFO: Deleted root ca configmap in namespace "svcaccounts-5750"
    STEP: waiting for a new root ca configmap created 01/30/23 08:11:30.031
    Jan 30 08:11:30.033: INFO: Recreated root ca configmap in namespace "svcaccounts-5750"
    Jan 30 08:11:30.036: INFO: Updated root ca configmap in namespace "svcaccounts-5750"
    STEP: waiting for the root ca configmap reconciled 01/30/23 08:11:30.537
    Jan 30 08:11:30.539: INFO: Reconciled root ca configmap in namespace "svcaccounts-5750"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:11:30.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-5750" for this suite. 01/30/23 08:11:30.54
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] ReplicaSet
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:11:30.547
Jan 30 08:11:30.547: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replicaset 01/30/23 08:11:30.547
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:30.554
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:30.556
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
STEP: Create a ReplicaSet 01/30/23 08:11:30.557
STEP: Verify that the required pods have come up 01/30/23 08:11:30.561
Jan 30 08:11:30.562: INFO: Pod name sample-pod: Found 0 pods out of 3
Jan 30 08:11:35.565: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running 01/30/23 08:11:35.565
Jan 30 08:11:35.567: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets 01/30/23 08:11:35.567
STEP: DeleteCollection of the ReplicaSets 01/30/23 08:11:35.57
STEP: After DeleteCollection verify that ReplicaSets have been deleted 01/30/23 08:11:35.573
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:11:35.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-2793" for this suite. 01/30/23 08:11:35.578
------------------------------
â€¢ [SLOW TEST] [5.034 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:11:30.547
    Jan 30 08:11:30.547: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replicaset 01/30/23 08:11:30.547
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:30.554
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:30.556
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of ReplicaSets [Conformance]
      test/e2e/apps/replica_set.go:165
    STEP: Create a ReplicaSet 01/30/23 08:11:30.557
    STEP: Verify that the required pods have come up 01/30/23 08:11:30.561
    Jan 30 08:11:30.562: INFO: Pod name sample-pod: Found 0 pods out of 3
    Jan 30 08:11:35.565: INFO: Pod name sample-pod: Found 3 pods out of 3
    STEP: ensuring each pod is running 01/30/23 08:11:35.565
    Jan 30 08:11:35.567: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
    STEP: Listing all ReplicaSets 01/30/23 08:11:35.567
    STEP: DeleteCollection of the ReplicaSets 01/30/23 08:11:35.57
    STEP: After DeleteCollection verify that ReplicaSets have been deleted 01/30/23 08:11:35.573
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:11:35.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-2793" for this suite. 01/30/23 08:11:35.578
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:11:35.583
Jan 30 08:11:35.583: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename gc 01/30/23 08:11:35.584
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:35.601
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:35.603
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
STEP: create the rc 01/30/23 08:11:35.606
STEP: delete the rc 01/30/23 08:11:40.611
STEP: wait for the rc to be deleted 01/30/23 08:11:40.616
Jan 30 08:11:41.643: INFO: 80 pods remaining
Jan 30 08:11:41.643: INFO: 80 pods has nil DeletionTimestamp
Jan 30 08:11:41.643: INFO: 
Jan 30 08:11:42.624: INFO: 72 pods remaining
Jan 30 08:11:42.624: INFO: 72 pods has nil DeletionTimestamp
Jan 30 08:11:42.624: INFO: 
Jan 30 08:11:43.635: INFO: 59 pods remaining
Jan 30 08:11:43.635: INFO: 58 pods has nil DeletionTimestamp
Jan 30 08:11:43.635: INFO: 
Jan 30 08:11:44.636: INFO: 40 pods remaining
Jan 30 08:11:44.636: INFO: 40 pods has nil DeletionTimestamp
Jan 30 08:11:44.636: INFO: 
Jan 30 08:11:45.621: INFO: 32 pods remaining
Jan 30 08:11:45.621: INFO: 32 pods has nil DeletionTimestamp
Jan 30 08:11:45.621: INFO: 
Jan 30 08:11:46.626: INFO: 19 pods remaining
Jan 30 08:11:46.626: INFO: 18 pods has nil DeletionTimestamp
Jan 30 08:11:46.626: INFO: 
STEP: Gathering metrics 01/30/23 08:11:47.621
Jan 30 08:11:47.651: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
Jan 30 08:11:47.653: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.195224ms
Jan 30 08:11:47.653: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
Jan 30 08:11:47.653: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
Jan 30 08:11:47.710: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 30 08:11:47.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-172" for this suite. 01/30/23 08:11:47.713
------------------------------
â€¢ [SLOW TEST] [12.133 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:11:35.583
    Jan 30 08:11:35.583: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename gc 01/30/23 08:11:35.584
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:35.601
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:35.603
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:650
    STEP: create the rc 01/30/23 08:11:35.606
    STEP: delete the rc 01/30/23 08:11:40.611
    STEP: wait for the rc to be deleted 01/30/23 08:11:40.616
    Jan 30 08:11:41.643: INFO: 80 pods remaining
    Jan 30 08:11:41.643: INFO: 80 pods has nil DeletionTimestamp
    Jan 30 08:11:41.643: INFO: 
    Jan 30 08:11:42.624: INFO: 72 pods remaining
    Jan 30 08:11:42.624: INFO: 72 pods has nil DeletionTimestamp
    Jan 30 08:11:42.624: INFO: 
    Jan 30 08:11:43.635: INFO: 59 pods remaining
    Jan 30 08:11:43.635: INFO: 58 pods has nil DeletionTimestamp
    Jan 30 08:11:43.635: INFO: 
    Jan 30 08:11:44.636: INFO: 40 pods remaining
    Jan 30 08:11:44.636: INFO: 40 pods has nil DeletionTimestamp
    Jan 30 08:11:44.636: INFO: 
    Jan 30 08:11:45.621: INFO: 32 pods remaining
    Jan 30 08:11:45.621: INFO: 32 pods has nil DeletionTimestamp
    Jan 30 08:11:45.621: INFO: 
    Jan 30 08:11:46.626: INFO: 19 pods remaining
    Jan 30 08:11:46.626: INFO: 18 pods has nil DeletionTimestamp
    Jan 30 08:11:46.626: INFO: 
    STEP: Gathering metrics 01/30/23 08:11:47.621
    Jan 30 08:11:47.651: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
    Jan 30 08:11:47.653: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.195224ms
    Jan 30 08:11:47.653: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
    Jan 30 08:11:47.653: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
    Jan 30 08:11:47.710: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:11:47.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-172" for this suite. 01/30/23 08:11:47.713
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:11:47.717
Jan 30 08:11:47.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:11:47.718
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:47.73
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:47.732
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
STEP: Creating configMap that has name configmap-test-emptyKey-f4f2b7f3-c9eb-42b3-a630-52bfceb3d65b 01/30/23 08:11:47.733
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:11:47.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4857" for this suite. 01/30/23 08:11:47.736
------------------------------
â€¢ [0.025 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:11:47.717
    Jan 30 08:11:47.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:11:47.718
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:47.73
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:47.732
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create ConfigMap with empty key [Conformance]
      test/e2e/common/node/configmap.go:138
    STEP: Creating configMap that has name configmap-test-emptyKey-f4f2b7f3-c9eb-42b3-a630-52bfceb3d65b 01/30/23 08:11:47.733
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:11:47.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4857" for this suite. 01/30/23 08:11:47.736
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] Services
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:11:47.742
Jan 30 08:11:47.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:11:47.742
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:47.75
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:47.752
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
STEP: creating a service nodeport-service with the type=NodePort in namespace services-1460 01/30/23 08:11:47.755
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 01/30/23 08:11:47.765
STEP: creating service externalsvc in namespace services-1460 01/30/23 08:11:47.765
STEP: creating replication controller externalsvc in namespace services-1460 01/30/23 08:11:47.783
I0130 08:11:47.800711      24 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1460, replica count: 2
I0130 08:11:50.851589      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 08:11:53.852388      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 08:11:56.853262      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 08:11:59.854271      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName 01/30/23 08:11:59.856
Jan 30 08:11:59.894: INFO: Creating new exec pod
Jan 30 08:11:59.899: INFO: Waiting up to 5m0s for pod "execpodg5jl9" in namespace "services-1460" to be "running"
Jan 30 08:11:59.901: INFO: Pod "execpodg5jl9": Phase="Pending", Reason="", readiness=false. Elapsed: 1.914215ms
Jan 30 08:12:01.904: INFO: Pod "execpodg5jl9": Phase="Running", Reason="", readiness=true. Elapsed: 2.005077737s
Jan 30 08:12:01.904: INFO: Pod "execpodg5jl9" satisfied condition "running"
Jan 30 08:12:01.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1460 exec execpodg5jl9 -- /bin/sh -x -c nslookup nodeport-service.services-1460.svc.cluster.local'
Jan 30 08:12:02.103: INFO: stderr: "+ nslookup nodeport-service.services-1460.svc.cluster.local\n"
Jan 30 08:12:02.103: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-1460.svc.cluster.local\tcanonical name = externalsvc.services-1460.svc.cluster.local.\nName:\texternalsvc.services-1460.svc.cluster.local\nAddress: 10.96.131.26\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-1460, will wait for the garbage collector to delete the pods 01/30/23 08:12:02.103
Jan 30 08:12:02.183: INFO: Deleting ReplicationController externalsvc took: 26.777281ms
Jan 30 08:12:02.284: INFO: Terminating ReplicationController externalsvc pods took: 101.70593ms
Jan 30 08:12:04.396: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:12:04.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1460" for this suite. 01/30/23 08:12:04.405
------------------------------
â€¢ [SLOW TEST] [16.680 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:11:47.742
    Jan 30 08:11:47.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:11:47.742
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:11:47.75
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:11:47.752
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from NodePort to ExternalName [Conformance]
      test/e2e/network/service.go:1557
    STEP: creating a service nodeport-service with the type=NodePort in namespace services-1460 01/30/23 08:11:47.755
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 01/30/23 08:11:47.765
    STEP: creating service externalsvc in namespace services-1460 01/30/23 08:11:47.765
    STEP: creating replication controller externalsvc in namespace services-1460 01/30/23 08:11:47.783
    I0130 08:11:47.800711      24 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1460, replica count: 2
    I0130 08:11:50.851589      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0130 08:11:53.852388      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0130 08:11:56.853262      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0130 08:11:59.854271      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the NodePort service to type=ExternalName 01/30/23 08:11:59.856
    Jan 30 08:11:59.894: INFO: Creating new exec pod
    Jan 30 08:11:59.899: INFO: Waiting up to 5m0s for pod "execpodg5jl9" in namespace "services-1460" to be "running"
    Jan 30 08:11:59.901: INFO: Pod "execpodg5jl9": Phase="Pending", Reason="", readiness=false. Elapsed: 1.914215ms
    Jan 30 08:12:01.904: INFO: Pod "execpodg5jl9": Phase="Running", Reason="", readiness=true. Elapsed: 2.005077737s
    Jan 30 08:12:01.904: INFO: Pod "execpodg5jl9" satisfied condition "running"
    Jan 30 08:12:01.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1460 exec execpodg5jl9 -- /bin/sh -x -c nslookup nodeport-service.services-1460.svc.cluster.local'
    Jan 30 08:12:02.103: INFO: stderr: "+ nslookup nodeport-service.services-1460.svc.cluster.local\n"
    Jan 30 08:12:02.103: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-1460.svc.cluster.local\tcanonical name = externalsvc.services-1460.svc.cluster.local.\nName:\texternalsvc.services-1460.svc.cluster.local\nAddress: 10.96.131.26\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-1460, will wait for the garbage collector to delete the pods 01/30/23 08:12:02.103
    Jan 30 08:12:02.183: INFO: Deleting ReplicationController externalsvc took: 26.777281ms
    Jan 30 08:12:02.284: INFO: Terminating ReplicationController externalsvc pods took: 101.70593ms
    Jan 30 08:12:04.396: INFO: Cleaning up the NodePort to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:12:04.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1460" for this suite. 01/30/23 08:12:04.405
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:12:04.422
Jan 30 08:12:04.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:12:04.422
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:04.432
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:04.433
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1700
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/30/23 08:12:04.435
Jan 30 08:12:04.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4147 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
Jan 30 08:12:04.484: INFO: stderr: ""
Jan 30 08:12:04.484: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created 01/30/23 08:12:04.484
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1704
Jan 30 08:12:04.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4147 delete pods e2e-test-httpd-pod'
Jan 30 08:12:07.291: INFO: stderr: ""
Jan 30 08:12:07.291: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:12:07.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4147" for this suite. 01/30/23 08:12:07.293
------------------------------
â€¢ [2.875 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl run pod
  test/e2e/kubectl/kubectl.go:1697
    should create a pod from an image when restart is Never  [Conformance]
    test/e2e/kubectl/kubectl.go:1713

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:12:04.422
    Jan 30 08:12:04.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:12:04.422
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:04.432
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:04.433
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1700
    [It] should create a pod from an image when restart is Never  [Conformance]
      test/e2e/kubectl/kubectl.go:1713
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/30/23 08:12:04.435
    Jan 30 08:12:04.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4147 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
    Jan 30 08:12:04.484: INFO: stderr: ""
    Jan 30 08:12:04.484: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod was created 01/30/23 08:12:04.484
    [AfterEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1704
    Jan 30 08:12:04.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4147 delete pods e2e-test-httpd-pod'
    Jan 30 08:12:07.291: INFO: stderr: ""
    Jan 30 08:12:07.291: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:12:07.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4147" for this suite. 01/30/23 08:12:07.293
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:12:07.297
Jan 30 08:12:07.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename watch 01/30/23 08:12:07.298
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:07.305
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:07.307
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
STEP: creating a new configmap 01/30/23 08:12:07.309
STEP: modifying the configmap once 01/30/23 08:12:07.312
STEP: modifying the configmap a second time 01/30/23 08:12:07.316
STEP: deleting the configmap 01/30/23 08:12:07.334
STEP: creating a watch on configmaps from the resource version returned by the first update 01/30/23 08:12:07.338
STEP: Expecting to observe notifications for all changes to the configmap after the first update 01/30/23 08:12:07.338
Jan 30 08:12:07.338: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9735  e7d11ee4-3c94-4e91-83a4-a83b99a76428 2278 0 2023-01-30 08:12:07 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-01-30 08:12:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:12:07.339: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9735  e7d11ee4-3c94-4e91-83a4-a83b99a76428 2279 0 2023-01-30 08:12:07 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-01-30 08:12:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 30 08:12:07.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-9735" for this suite. 01/30/23 08:12:07.34
------------------------------
â€¢ [0.047 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:12:07.297
    Jan 30 08:12:07.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename watch 01/30/23 08:12:07.298
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:07.305
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:07.307
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to start watching from a specific resource version [Conformance]
      test/e2e/apimachinery/watch.go:142
    STEP: creating a new configmap 01/30/23 08:12:07.309
    STEP: modifying the configmap once 01/30/23 08:12:07.312
    STEP: modifying the configmap a second time 01/30/23 08:12:07.316
    STEP: deleting the configmap 01/30/23 08:12:07.334
    STEP: creating a watch on configmaps from the resource version returned by the first update 01/30/23 08:12:07.338
    STEP: Expecting to observe notifications for all changes to the configmap after the first update 01/30/23 08:12:07.338
    Jan 30 08:12:07.338: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9735  e7d11ee4-3c94-4e91-83a4-a83b99a76428 2278 0 2023-01-30 08:12:07 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-01-30 08:12:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:12:07.339: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9735  e7d11ee4-3c94-4e91-83a4-a83b99a76428 2279 0 2023-01-30 08:12:07 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-01-30 08:12:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:12:07.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-9735" for this suite. 01/30/23 08:12:07.34
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Aggregator
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
[BeforeEach] [sig-api-machinery] Aggregator
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:12:07.345
Jan 30 08:12:07.345: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename aggregator 01/30/23 08:12:07.345
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:07.353
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:07.355
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:78
Jan 30 08:12:07.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
STEP: Registering the sample API server. 01/30/23 08:12:07.357
Jan 30 08:12:07.717: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Jan 30 08:12:09.754: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:11.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:13.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:15.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:17.756: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:19.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:21.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:23.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:25.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:27.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:29.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:12:31.882: INFO: Waited 110.136512ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com 01/30/23 08:12:31.92
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 01/30/23 08:12:31.921
STEP: List APIServices 01/30/23 08:12:31.926
Jan 30 08:12:31.929: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:68
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/node/init/init.go:32
Jan 30 08:12:32.026: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  tear down framework | framework.go:193
STEP: Destroying namespace "aggregator-4390" for this suite. 01/30/23 08:12:32.028
------------------------------
â€¢ [SLOW TEST] [24.740 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Aggregator
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:12:07.345
    Jan 30 08:12:07.345: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename aggregator 01/30/23 08:12:07.345
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:07.353
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:07.355
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:78
    Jan 30 08:12:07.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
      test/e2e/apimachinery/aggregator.go:100
    STEP: Registering the sample API server. 01/30/23 08:12:07.357
    Jan 30 08:12:07.717: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
    Jan 30 08:12:09.754: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:11.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:13.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:15.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:17.756: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:19.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:21.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:23.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:25.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:27.757: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:29.758: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:12:31.882: INFO: Waited 110.136512ms for the sample-apiserver to be ready to handle requests.
    STEP: Read Status for v1alpha1.wardle.example.com 01/30/23 08:12:31.92
    STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 01/30/23 08:12:31.921
    STEP: List APIServices 01/30/23 08:12:31.926
    Jan 30 08:12:31.929: INFO: Found v1alpha1.wardle.example.com in APIServiceList
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:68
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:12:32.026: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      tear down framework | framework.go:193
    STEP: Destroying namespace "aggregator-4390" for this suite. 01/30/23 08:12:32.028
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial]
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:12:32.085
Jan 30 08:12:32.086: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename daemonsets 01/30/23 08:12:32.086
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:32.094
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:32.095
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
Jan 30 08:12:32.107: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 08:12:32.11
Jan 30 08:12:32.112: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:32.115: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:12:32.115: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:12:33.118: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:33.120: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:12:33.120: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:12:34.119: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:34.121: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 08:12:34.121: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Update daemon pods image. 01/30/23 08:12:34.127
STEP: Check that daemon pods images are updated. 01/30/23 08:12:34.147
Jan 30 08:12:34.148: INFO: Wrong image for pod: daemon-set-dn9bm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 30 08:12:34.148: INFO: Wrong image for pod: daemon-set-s78wz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 30 08:12:34.150: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:35.152: INFO: Wrong image for pod: daemon-set-dn9bm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 30 08:12:35.154: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:36.152: INFO: Wrong image for pod: daemon-set-dn9bm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 30 08:12:36.154: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:37.152: INFO: Pod daemon-set-8c86r is not available
Jan 30 08:12:37.152: INFO: Wrong image for pod: daemon-set-dn9bm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Jan 30 08:12:37.154: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:38.155: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:39.152: INFO: Pod daemon-set-nz9nj is not available
Jan 30 08:12:39.154: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster. 01/30/23 08:12:39.154
Jan 30 08:12:39.156: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:39.157: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:12:39.157: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:12:40.160: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:12:40.161: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 08:12:40.161: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/30/23 08:12:40.168
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6227, will wait for the garbage collector to delete the pods 01/30/23 08:12:40.168
Jan 30 08:12:40.223: INFO: Deleting DaemonSet.extensions daemon-set took: 3.54563ms
Jan 30 08:12:40.324: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.725962ms
Jan 30 08:12:42.426: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:12:42.426: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 08:12:42.428: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2509"},"items":null}

Jan 30 08:12:42.429: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2509"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:12:42.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-6227" for this suite. 01/30/23 08:12:42.435
------------------------------
â€¢ [SLOW TEST] [10.353 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:12:32.085
    Jan 30 08:12:32.086: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename daemonsets 01/30/23 08:12:32.086
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:32.094
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:32.095
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
      test/e2e/apps/daemon_set.go:374
    Jan 30 08:12:32.107: INFO: Creating simple daemon set daemon-set
    STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 08:12:32.11
    Jan 30 08:12:32.112: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:32.115: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:12:32.115: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:12:33.118: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:33.120: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:12:33.120: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:12:34.119: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:34.121: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 08:12:34.121: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Update daemon pods image. 01/30/23 08:12:34.127
    STEP: Check that daemon pods images are updated. 01/30/23 08:12:34.147
    Jan 30 08:12:34.148: INFO: Wrong image for pod: daemon-set-dn9bm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 30 08:12:34.148: INFO: Wrong image for pod: daemon-set-s78wz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 30 08:12:34.150: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:35.152: INFO: Wrong image for pod: daemon-set-dn9bm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 30 08:12:35.154: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:36.152: INFO: Wrong image for pod: daemon-set-dn9bm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 30 08:12:36.154: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:37.152: INFO: Pod daemon-set-8c86r is not available
    Jan 30 08:12:37.152: INFO: Wrong image for pod: daemon-set-dn9bm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Jan 30 08:12:37.154: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:38.155: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:39.152: INFO: Pod daemon-set-nz9nj is not available
    Jan 30 08:12:39.154: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    STEP: Check that daemon pods are still running on every node of the cluster. 01/30/23 08:12:39.154
    Jan 30 08:12:39.156: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:39.157: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:12:39.157: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:12:40.160: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:12:40.161: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 08:12:40.161: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/30/23 08:12:40.168
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6227, will wait for the garbage collector to delete the pods 01/30/23 08:12:40.168
    Jan 30 08:12:40.223: INFO: Deleting DaemonSet.extensions daemon-set took: 3.54563ms
    Jan 30 08:12:40.324: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.725962ms
    Jan 30 08:12:42.426: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:12:42.426: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 30 08:12:42.428: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2509"},"items":null}

    Jan 30 08:12:42.429: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2509"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:12:42.433: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-6227" for this suite. 01/30/23 08:12:42.435
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:12:42.439
Jan 30 08:12:42.439: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename namespaces 01/30/23 08:12:42.44
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:42.449
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:42.45
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
STEP: creating a Namespace 01/30/23 08:12:42.451
STEP: patching the Namespace 01/30/23 08:12:42.459
STEP: get the Namespace and ensuring it has the label 01/30/23 08:12:42.462
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:12:42.463: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-317" for this suite. 01/30/23 08:12:42.465
STEP: Destroying namespace "nspatchtest-754bd00a-4a16-45cf-9b30-efabba868b65-1102" for this suite. 01/30/23 08:12:42.468
------------------------------
â€¢ [0.033 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:12:42.439
    Jan 30 08:12:42.439: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename namespaces 01/30/23 08:12:42.44
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:42.449
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:42.45
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:268
    STEP: creating a Namespace 01/30/23 08:12:42.451
    STEP: patching the Namespace 01/30/23 08:12:42.459
    STEP: get the Namespace and ensuring it has the label 01/30/23 08:12:42.462
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:12:42.463: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-317" for this suite. 01/30/23 08:12:42.465
    STEP: Destroying namespace "nspatchtest-754bd00a-4a16-45cf-9b30-efabba868b65-1102" for this suite. 01/30/23 08:12:42.468
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Probing container
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:12:42.472
Jan 30 08:12:42.472: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-probe 01/30/23 08:12:42.473
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:42.48
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:42.482
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
STEP: Creating pod test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04 in namespace container-probe-49 01/30/23 08:12:42.484
Jan 30 08:12:42.489: INFO: Waiting up to 5m0s for pod "test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04" in namespace "container-probe-49" to be "not pending"
Jan 30 08:12:42.491: INFO: Pod "test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04": Phase="Pending", Reason="", readiness=false. Elapsed: 1.486457ms
Jan 30 08:12:44.493: INFO: Pod "test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04": Phase="Running", Reason="", readiness=true. Elapsed: 2.003894443s
Jan 30 08:12:44.493: INFO: Pod "test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04" satisfied condition "not pending"
Jan 30 08:12:44.493: INFO: Started pod test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04 in namespace container-probe-49
STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 08:12:44.493
Jan 30 08:12:44.494: INFO: Initial restart count of pod test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04 is 0
STEP: deleting the pod 01/30/23 08:16:44.882
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 30 08:16:44.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-49" for this suite. 01/30/23 08:16:44.898
------------------------------
â€¢ [SLOW TEST] [242.430 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:12:42.472
    Jan 30 08:12:42.472: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-probe 01/30/23 08:12:42.473
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:12:42.48
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:12:42.482
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:215
    STEP: Creating pod test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04 in namespace container-probe-49 01/30/23 08:12:42.484
    Jan 30 08:12:42.489: INFO: Waiting up to 5m0s for pod "test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04" in namespace "container-probe-49" to be "not pending"
    Jan 30 08:12:42.491: INFO: Pod "test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04": Phase="Pending", Reason="", readiness=false. Elapsed: 1.486457ms
    Jan 30 08:12:44.493: INFO: Pod "test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04": Phase="Running", Reason="", readiness=true. Elapsed: 2.003894443s
    Jan 30 08:12:44.493: INFO: Pod "test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04" satisfied condition "not pending"
    Jan 30 08:12:44.493: INFO: Started pod test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04 in namespace container-probe-49
    STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 08:12:44.493
    Jan 30 08:12:44.494: INFO: Initial restart count of pod test-webserver-4d3386be-9c19-4587-98bc-b1a90ad4df04 is 0
    STEP: deleting the pod 01/30/23 08:16:44.882
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:16:44.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-49" for this suite. 01/30/23 08:16:44.898
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:16:44.904
Jan 30 08:16:44.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pod-network-test 01/30/23 08:16:44.904
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:16:44.961
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:16:44.963
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
STEP: Performing setup for networking test in namespace pod-network-test-835 01/30/23 08:16:44.965
STEP: creating a selector 01/30/23 08:16:44.965
STEP: Creating the service pods in kubernetes 01/30/23 08:16:44.965
Jan 30 08:16:44.965: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 30 08:16:44.984: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-835" to be "running and ready"
Jan 30 08:16:44.988: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.468218ms
Jan 30 08:16:44.988: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:16:46.990: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.006395043s
Jan 30 08:16:46.990: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 08:16:48.991: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.006467849s
Jan 30 08:16:48.991: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 08:16:50.991: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.007075262s
Jan 30 08:16:50.991: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 08:16:52.990: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.005975883s
Jan 30 08:16:52.990: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 08:16:54.990: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.006428196s
Jan 30 08:16:54.990: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 08:16:56.991: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.007041381s
Jan 30 08:16:56.991: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Jan 30 08:16:56.991: INFO: Pod "netserver-0" satisfied condition "running and ready"
Jan 30 08:16:56.993: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-835" to be "running and ready"
Jan 30 08:16:56.994: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.429579ms
Jan 30 08:16:56.994: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Jan 30 08:16:56.994: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 01/30/23 08:16:56.996
Jan 30 08:16:57.004: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-835" to be "running"
Jan 30 08:16:57.008: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.805879ms
Jan 30 08:16:59.010: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.006028203s
Jan 30 08:16:59.010: INFO: Pod "test-container-pod" satisfied condition "running"
Jan 30 08:16:59.012: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-835" to be "running"
Jan 30 08:16:59.013: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 1.414596ms
Jan 30 08:16:59.013: INFO: Pod "host-test-container-pod" satisfied condition "running"
Jan 30 08:16:59.015: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jan 30 08:16:59.015: INFO: Going to poll 10.244.2.46 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Jan 30 08:16:59.016: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.46 8081 | grep -v '^\s*$'] Namespace:pod-network-test-835 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:16:59.016: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:16:59.017: INFO: ExecWithOptions: Clientset creation
Jan 30 08:16:59.017: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-835/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.46+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 08:17:00.121: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 30 08:17:00.121: INFO: Going to poll 10.244.1.59 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Jan 30 08:17:00.123: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.59 8081 | grep -v '^\s*$'] Namespace:pod-network-test-835 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:17:00.123: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:17:00.123: INFO: ExecWithOptions: Clientset creation
Jan 30 08:17:00.123: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-835/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.59+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 08:17:01.213: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:01.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-835" for this suite. 01/30/23 08:17:01.216
------------------------------
â€¢ [SLOW TEST] [16.328 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:16:44.904
    Jan 30 08:16:44.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pod-network-test 01/30/23 08:16:44.904
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:16:44.961
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:16:44.963
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:122
    STEP: Performing setup for networking test in namespace pod-network-test-835 01/30/23 08:16:44.965
    STEP: creating a selector 01/30/23 08:16:44.965
    STEP: Creating the service pods in kubernetes 01/30/23 08:16:44.965
    Jan 30 08:16:44.965: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Jan 30 08:16:44.984: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-835" to be "running and ready"
    Jan 30 08:16:44.988: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.468218ms
    Jan 30 08:16:44.988: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:16:46.990: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.006395043s
    Jan 30 08:16:46.990: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 08:16:48.991: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.006467849s
    Jan 30 08:16:48.991: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 08:16:50.991: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.007075262s
    Jan 30 08:16:50.991: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 08:16:52.990: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.005975883s
    Jan 30 08:16:52.990: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 08:16:54.990: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.006428196s
    Jan 30 08:16:54.990: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 08:16:56.991: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.007041381s
    Jan 30 08:16:56.991: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Jan 30 08:16:56.991: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Jan 30 08:16:56.993: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-835" to be "running and ready"
    Jan 30 08:16:56.994: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.429579ms
    Jan 30 08:16:56.994: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Jan 30 08:16:56.994: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 01/30/23 08:16:56.996
    Jan 30 08:16:57.004: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-835" to be "running"
    Jan 30 08:16:57.008: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.805879ms
    Jan 30 08:16:59.010: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.006028203s
    Jan 30 08:16:59.010: INFO: Pod "test-container-pod" satisfied condition "running"
    Jan 30 08:16:59.012: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-835" to be "running"
    Jan 30 08:16:59.013: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 1.414596ms
    Jan 30 08:16:59.013: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Jan 30 08:16:59.015: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Jan 30 08:16:59.015: INFO: Going to poll 10.244.2.46 on port 8081 at least 0 times, with a maximum of 34 tries before failing
    Jan 30 08:16:59.016: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.46 8081 | grep -v '^\s*$'] Namespace:pod-network-test-835 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:16:59.016: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:16:59.017: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:16:59.017: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-835/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.46+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 30 08:17:00.121: INFO: Found all 1 expected endpoints: [netserver-0]
    Jan 30 08:17:00.121: INFO: Going to poll 10.244.1.59 on port 8081 at least 0 times, with a maximum of 34 tries before failing
    Jan 30 08:17:00.123: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.59 8081 | grep -v '^\s*$'] Namespace:pod-network-test-835 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:17:00.123: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:17:00.123: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:17:00.123: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-835/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.59+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 30 08:17:01.213: INFO: Found all 1 expected endpoints: [netserver-1]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:01.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-835" for this suite. 01/30/23 08:17:01.216
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:01.233
Jan 30 08:17:01.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-pred 01/30/23 08:17:01.233
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:01.244
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:01.246
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Jan 30 08:17:01.248: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 30 08:17:01.253: INFO: Waiting for terminating namespaces to be deleted...
Jan 30 08:17:01.254: INFO: 
Logging pods the apiserver thinks is on node tce-worker before test
Jan 30 08:17:01.258: INFO: kube-flannel-ds-f9fvr from kube-flannel started at 2023-01-30 08:08:06 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.258: INFO: 	Container kube-flannel ready: true, restart count 0
Jan 30 08:17:01.258: INFO: kube-proxy-qskrv from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.258: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 30 08:17:01.258: INFO: host-test-container-pod from pod-network-test-835 started at 2023-01-30 08:16:57 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.258: INFO: 	Container agnhost-container ready: true, restart count 0
Jan 30 08:17:01.258: INFO: netserver-0 from pod-network-test-835 started at 2023-01-30 08:16:44 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.258: INFO: 	Container webserver ready: true, restart count 0
Jan 30 08:17:01.258: INFO: sonobuoy from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.258: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 30 08:17:01.258: INFO: sonobuoy-e2e-job-bfd46d4d86374bf4 from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (2 container statuses recorded)
Jan 30 08:17:01.258: INFO: 	Container e2e ready: true, restart count 0
Jan 30 08:17:01.258: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:17:01.258: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
Jan 30 08:17:01.258: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:17:01.258: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:17:01.258: INFO: 
Logging pods the apiserver thinks is on node tce-worker2 before test
Jan 30 08:17:01.261: INFO: kube-flannel-ds-8h4ls from kube-flannel started at 2023-01-30 08:08:06 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.261: INFO: 	Container kube-flannel ready: true, restart count 0
Jan 30 08:17:01.261: INFO: coredns-787d4945fb-48bt4 from kube-system started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.261: INFO: 	Container coredns ready: true, restart count 0
Jan 30 08:17:01.261: INFO: coredns-787d4945fb-rhbnv from kube-system started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.261: INFO: 	Container coredns ready: true, restart count 0
Jan 30 08:17:01.261: INFO: kube-proxy-6h6xz from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.261: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 30 08:17:01.261: INFO: local-path-provisioner-c8855d4bb-9rgrk from local-path-storage started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.261: INFO: 	Container local-path-provisioner ready: true, restart count 0
Jan 30 08:17:01.261: INFO: netserver-1 from pod-network-test-835 started at 2023-01-30 08:16:44 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.261: INFO: 	Container webserver ready: true, restart count 0
Jan 30 08:17:01.261: INFO: test-container-pod from pod-network-test-835 started at 2023-01-30 08:16:57 +0000 UTC (1 container statuses recorded)
Jan 30 08:17:01.261: INFO: 	Container webserver ready: true, restart count 0
Jan 30 08:17:01.261: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
Jan 30 08:17:01.261: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:17:01.261: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
STEP: Trying to schedule Pod with nonempty NodeSelector. 01/30/23 08:17:01.261
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.173f08379851a853], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] 01/30/23 08:17:01.279
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:02.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-8744" for this suite. 01/30/23 08:17:02.281
------------------------------
â€¢ [1.053 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:01.233
    Jan 30 08:17:01.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-pred 01/30/23 08:17:01.233
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:01.244
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:01.246
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Jan 30 08:17:01.248: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Jan 30 08:17:01.253: INFO: Waiting for terminating namespaces to be deleted...
    Jan 30 08:17:01.254: INFO: 
    Logging pods the apiserver thinks is on node tce-worker before test
    Jan 30 08:17:01.258: INFO: kube-flannel-ds-f9fvr from kube-flannel started at 2023-01-30 08:08:06 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.258: INFO: 	Container kube-flannel ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: kube-proxy-qskrv from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.258: INFO: 	Container kube-proxy ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: host-test-container-pod from pod-network-test-835 started at 2023-01-30 08:16:57 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.258: INFO: 	Container agnhost-container ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: netserver-0 from pod-network-test-835 started at 2023-01-30 08:16:44 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.258: INFO: 	Container webserver ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: sonobuoy from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.258: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: sonobuoy-e2e-job-bfd46d4d86374bf4 from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (2 container statuses recorded)
    Jan 30 08:17:01.258: INFO: 	Container e2e ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
    Jan 30 08:17:01.258: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 30 08:17:01.258: INFO: 
    Logging pods the apiserver thinks is on node tce-worker2 before test
    Jan 30 08:17:01.261: INFO: kube-flannel-ds-8h4ls from kube-flannel started at 2023-01-30 08:08:06 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.261: INFO: 	Container kube-flannel ready: true, restart count 0
    Jan 30 08:17:01.261: INFO: coredns-787d4945fb-48bt4 from kube-system started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.261: INFO: 	Container coredns ready: true, restart count 0
    Jan 30 08:17:01.261: INFO: coredns-787d4945fb-rhbnv from kube-system started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.261: INFO: 	Container coredns ready: true, restart count 0
    Jan 30 08:17:01.261: INFO: kube-proxy-6h6xz from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.261: INFO: 	Container kube-proxy ready: true, restart count 0
    Jan 30 08:17:01.261: INFO: local-path-provisioner-c8855d4bb-9rgrk from local-path-storage started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.261: INFO: 	Container local-path-provisioner ready: true, restart count 0
    Jan 30 08:17:01.261: INFO: netserver-1 from pod-network-test-835 started at 2023-01-30 08:16:44 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.261: INFO: 	Container webserver ready: true, restart count 0
    Jan 30 08:17:01.261: INFO: test-container-pod from pod-network-test-835 started at 2023-01-30 08:16:57 +0000 UTC (1 container statuses recorded)
    Jan 30 08:17:01.261: INFO: 	Container webserver ready: true, restart count 0
    Jan 30 08:17:01.261: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
    Jan 30 08:17:01.261: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 08:17:01.261: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if not matching  [Conformance]
      test/e2e/scheduling/predicates.go:443
    STEP: Trying to schedule Pod with nonempty NodeSelector. 01/30/23 08:17:01.261
    STEP: Considering event: 
    Type = [Warning], Name = [restricted-pod.173f08379851a853], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] 01/30/23 08:17:01.279
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:02.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-8744" for this suite. 01/30/23 08:17:02.281
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Services
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:02.286
Jan 30 08:17:02.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:17:02.287
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:02.297
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:02.299
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
STEP: creating an Endpoint 01/30/23 08:17:02.302
STEP: waiting for available Endpoint 01/30/23 08:17:02.305
STEP: listing all Endpoints 01/30/23 08:17:02.306
STEP: updating the Endpoint 01/30/23 08:17:02.308
STEP: fetching the Endpoint 01/30/23 08:17:02.312
STEP: patching the Endpoint 01/30/23 08:17:02.313
STEP: fetching the Endpoint 01/30/23 08:17:02.318
STEP: deleting the Endpoint by Collection 01/30/23 08:17:02.32
STEP: waiting for Endpoint deletion 01/30/23 08:17:02.324
STEP: fetching the Endpoint 01/30/23 08:17:02.325
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:02.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6683" for this suite. 01/30/23 08:17:02.329
------------------------------
â€¢ [0.047 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:02.286
    Jan 30 08:17:02.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:17:02.287
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:02.297
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:02.299
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should test the lifecycle of an Endpoint [Conformance]
      test/e2e/network/service.go:3244
    STEP: creating an Endpoint 01/30/23 08:17:02.302
    STEP: waiting for available Endpoint 01/30/23 08:17:02.305
    STEP: listing all Endpoints 01/30/23 08:17:02.306
    STEP: updating the Endpoint 01/30/23 08:17:02.308
    STEP: fetching the Endpoint 01/30/23 08:17:02.312
    STEP: patching the Endpoint 01/30/23 08:17:02.313
    STEP: fetching the Endpoint 01/30/23 08:17:02.318
    STEP: deleting the Endpoint by Collection 01/30/23 08:17:02.32
    STEP: waiting for Endpoint deletion 01/30/23 08:17:02.324
    STEP: fetching the Endpoint 01/30/23 08:17:02.325
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:02.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6683" for this suite. 01/30/23 08:17:02.329
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:02.334
Jan 30 08:17:02.334: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:17:02.334
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:02.348
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:02.351
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:17:02.365
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:17:02.523
STEP: Deploying the webhook pod 01/30/23 08:17:02.528
STEP: Wait for the deployment to be ready 01/30/23 08:17:02.537
Jan 30 08:17:02.543: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:17:04.55
STEP: Verifying the service has paired with the endpoint 01/30/23 08:17:04.556
Jan 30 08:17:05.557: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
STEP: fetching the /apis discovery document 01/30/23 08:17:05.559
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 01/30/23 08:17:05.56
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 01/30/23 08:17:05.56
STEP: fetching the /apis/admissionregistration.k8s.io discovery document 01/30/23 08:17:05.56
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 01/30/23 08:17:05.561
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 01/30/23 08:17:05.561
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 01/30/23 08:17:05.561
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:05.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3390" for this suite. 01/30/23 08:17:05.614
STEP: Destroying namespace "webhook-3390-markers" for this suite. 01/30/23 08:17:05.618
------------------------------
â€¢ [3.290 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:02.334
    Jan 30 08:17:02.334: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:17:02.334
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:02.348
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:02.351
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:17:02.365
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:17:02.523
    STEP: Deploying the webhook pod 01/30/23 08:17:02.528
    STEP: Wait for the deployment to be ready 01/30/23 08:17:02.537
    Jan 30 08:17:02.543: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:17:04.55
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:17:04.556
    Jan 30 08:17:05.557: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should include webhook resources in discovery documents [Conformance]
      test/e2e/apimachinery/webhook.go:117
    STEP: fetching the /apis discovery document 01/30/23 08:17:05.559
    STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 01/30/23 08:17:05.56
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 01/30/23 08:17:05.56
    STEP: fetching the /apis/admissionregistration.k8s.io discovery document 01/30/23 08:17:05.56
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 01/30/23 08:17:05.561
    STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 01/30/23 08:17:05.561
    STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 01/30/23 08:17:05.561
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:05.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3390" for this suite. 01/30/23 08:17:05.614
    STEP: Destroying namespace "webhook-3390-markers" for this suite. 01/30/23 08:17:05.618
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:05.625
Jan 30 08:17:05.625: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename deployment 01/30/23 08:17:05.625
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:05.635
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:05.638
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
Jan 30 08:17:05.644: INFO: Pod name rollover-pod: Found 0 pods out of 1
Jan 30 08:17:10.646: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/30/23 08:17:10.646
Jan 30 08:17:10.647: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Jan 30 08:17:12.649: INFO: Creating deployment "test-rollover-deployment"
Jan 30 08:17:12.656: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Jan 30 08:17:14.661: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Jan 30 08:17:14.664: INFO: Ensure that both replica sets have 1 created replica
Jan 30 08:17:14.667: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Jan 30 08:17:14.683: INFO: Updating deployment test-rollover-deployment
Jan 30 08:17:14.683: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Jan 30 08:17:16.687: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Jan 30 08:17:16.693: INFO: Make sure deployment "test-rollover-deployment" is complete
Jan 30 08:17:16.696: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:17:16.696: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:17:18.700: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:17:18.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:17:20.700: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:17:20.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:17:22.702: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:17:22.702: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:17:24.701: INFO: all replica sets need to contain the pod-template-hash label
Jan 30 08:17:24.702: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jan 30 08:17:26.700: INFO: 
Jan 30 08:17:26.700: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:17:26.705: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-2487  6ac578f3-7576-44e0-afb3-3762af624b30 3241 2 2023-01-30 08:17:12 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003c07c58 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 08:17:12 +0000 UTC,LastTransitionTime:2023-01-30 08:17:12 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-01-30 08:17:25 +0000 UTC,LastTransitionTime:2023-01-30 08:17:12 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 08:17:26.706: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-2487  64f808a7-12ad-4eb4-9825-8c9a64a925db 3231 2 2023-01-30 08:17:14 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 6ac578f3-7576-44e0-afb3-3762af624b30 0xc003e3e107 0xc003e3e108}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ac578f3-7576-44e0-afb3-3762af624b30\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:25 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003e3e1b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:17:26.707: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Jan 30 08:17:26.707: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-2487  bb574ccb-3ad4-4ea3-bfa8-6060711489ac 3240 2 2023-01-30 08:17:05 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 6ac578f3-7576-44e0-afb3-3762af624b30 0xc003c07fdf 0xc003c07ff0}] [] [{e2e.test Update apps/v1 2023-01-30 08:17:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ac578f3-7576-44e0-afb3-3762af624b30\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:25 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003e3e0a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:17:26.707: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-2487  ea042659-6a4d-40e6-bfbb-81797c74ec54 3196 2 2023-01-30 08:17:12 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 6ac578f3-7576-44e0-afb3-3762af624b30 0xc003e3e217 0xc003e3e218}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ac578f3-7576-44e0-afb3-3762af624b30\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003e3e2c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:17:26.709: INFO: Pod "test-rollover-deployment-6c6df9974f-t6z64" is available:
&Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-t6z64 test-rollover-deployment-6c6df9974f- deployment-2487  aa84a332-10e4-40bc-88d9-5d92aecce251 3213 0 2023-01-30 08:17:14 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f 64f808a7-12ad-4eb4-9825-8c9a64a925db 0xc003e3e807 0xc003e3e808}] [] [{kube-controller-manager Update v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"64f808a7-12ad-4eb4-9825-8c9a64a925db\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:17:15 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.63\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ptjrp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ptjrp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:17:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:17:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:17:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:17:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.63,StartTime:2023-01-30 08:17:14 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:17:15 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a,ContainerID:containerd://40edf2cd93d535aca93038231e063e6d961e2aa7b3dc73a6c2beae4f4d10d365,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.63,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:26.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-2487" for this suite. 01/30/23 08:17:26.711
------------------------------
â€¢ [SLOW TEST] [21.101 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:05.625
    Jan 30 08:17:05.625: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename deployment 01/30/23 08:17:05.625
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:05.635
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:05.638
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support rollover [Conformance]
      test/e2e/apps/deployment.go:132
    Jan 30 08:17:05.644: INFO: Pod name rollover-pod: Found 0 pods out of 1
    Jan 30 08:17:10.646: INFO: Pod name rollover-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/30/23 08:17:10.646
    Jan 30 08:17:10.647: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
    Jan 30 08:17:12.649: INFO: Creating deployment "test-rollover-deployment"
    Jan 30 08:17:12.656: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
    Jan 30 08:17:14.661: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
    Jan 30 08:17:14.664: INFO: Ensure that both replica sets have 1 created replica
    Jan 30 08:17:14.667: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
    Jan 30 08:17:14.683: INFO: Updating deployment test-rollover-deployment
    Jan 30 08:17:14.683: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
    Jan 30 08:17:16.687: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
    Jan 30 08:17:16.693: INFO: Make sure deployment "test-rollover-deployment" is complete
    Jan 30 08:17:16.696: INFO: all replica sets need to contain the pod-template-hash label
    Jan 30 08:17:16.696: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:17:18.700: INFO: all replica sets need to contain the pod-template-hash label
    Jan 30 08:17:18.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:17:20.700: INFO: all replica sets need to contain the pod-template-hash label
    Jan 30 08:17:20.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:17:22.702: INFO: all replica sets need to contain the pod-template-hash label
    Jan 30 08:17:22.702: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:17:24.701: INFO: all replica sets need to contain the pod-template-hash label
    Jan 30 08:17:24.702: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 17, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 17, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Jan 30 08:17:26.700: INFO: 
    Jan 30 08:17:26.700: INFO: Ensure that both old replica sets have no replicas
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 30 08:17:26.705: INFO: Deployment "test-rollover-deployment":
    &Deployment{ObjectMeta:{test-rollover-deployment  deployment-2487  6ac578f3-7576-44e0-afb3-3762af624b30 3241 2 2023-01-30 08:17:12 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003c07c58 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 08:17:12 +0000 UTC,LastTransitionTime:2023-01-30 08:17:12 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-01-30 08:17:25 +0000 UTC,LastTransitionTime:2023-01-30 08:17:12 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Jan 30 08:17:26.706: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
    &ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-2487  64f808a7-12ad-4eb4-9825-8c9a64a925db 3231 2 2023-01-30 08:17:14 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 6ac578f3-7576-44e0-afb3-3762af624b30 0xc003e3e107 0xc003e3e108}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ac578f3-7576-44e0-afb3-3762af624b30\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:25 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003e3e1b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:17:26.707: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
    Jan 30 08:17:26.707: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-2487  bb574ccb-3ad4-4ea3-bfa8-6060711489ac 3240 2 2023-01-30 08:17:05 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 6ac578f3-7576-44e0-afb3-3762af624b30 0xc003c07fdf 0xc003c07ff0}] [] [{e2e.test Update apps/v1 2023-01-30 08:17:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ac578f3-7576-44e0-afb3-3762af624b30\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:25 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003e3e0a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:17:26.707: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-2487  ea042659-6a4d-40e6-bfbb-81797c74ec54 3196 2 2023-01-30 08:17:12 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 6ac578f3-7576-44e0-afb3-3762af624b30 0xc003e3e217 0xc003e3e218}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ac578f3-7576-44e0-afb3-3762af624b30\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003e3e2c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:17:26.709: INFO: Pod "test-rollover-deployment-6c6df9974f-t6z64" is available:
    &Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-t6z64 test-rollover-deployment-6c6df9974f- deployment-2487  aa84a332-10e4-40bc-88d9-5d92aecce251 3213 0 2023-01-30 08:17:14 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f 64f808a7-12ad-4eb4-9825-8c9a64a925db 0xc003e3e807 0xc003e3e808}] [] [{kube-controller-manager Update v1 2023-01-30 08:17:14 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"64f808a7-12ad-4eb4-9825-8c9a64a925db\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:17:15 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.63\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ptjrp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ptjrp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:17:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:17:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:17:15 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:17:14 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.63,StartTime:2023-01-30 08:17:14 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:17:15 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a,ContainerID:containerd://40edf2cd93d535aca93038231e063e6d961e2aa7b3dc73a6c2beae4f4d10d365,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.63,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:26.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-2487" for this suite. 01/30/23 08:17:26.711
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:26.726
Jan 30 08:17:26.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename endpointslice 01/30/23 08:17:26.727
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:26.74
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:26.742
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
Jan 30 08:17:26.748: INFO: Endpoints addresses: [172.20.0.3] , ports: [6443]
Jan 30 08:17:26.748: INFO: EndpointSlices addresses: [172.20.0.3] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:26.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-8023" for this suite. 01/30/23 08:17:26.75
------------------------------
â€¢ [0.028 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:26.726
    Jan 30 08:17:26.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename endpointslice 01/30/23 08:17:26.727
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:26.74
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:26.742
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
      test/e2e/network/endpointslice.go:66
    Jan 30 08:17:26.748: INFO: Endpoints addresses: [172.20.0.3] , ports: [6443]
    Jan 30 08:17:26.748: INFO: EndpointSlices addresses: [172.20.0.3] , ports: [6443]
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:26.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-8023" for this suite. 01/30/23 08:17:26.75
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:26.755
Jan 30 08:17:26.755: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:17:26.755
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:26.765
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:26.766
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
STEP: Creating configMap with name configmap-test-upd-bb61e8d2-1769-49b8-8b42-5cada02fd226 01/30/23 08:17:26.77
STEP: Creating the pod 01/30/23 08:17:26.774
Jan 30 08:17:26.780: INFO: Waiting up to 5m0s for pod "pod-configmaps-1baafdba-cab3-40e1-977d-a37298b3e53a" in namespace "configmap-9995" to be "running"
Jan 30 08:17:26.782: INFO: Pod "pod-configmaps-1baafdba-cab3-40e1-977d-a37298b3e53a": Phase="Pending", Reason="", readiness=false. Elapsed: 1.929205ms
Jan 30 08:17:28.785: INFO: Pod "pod-configmaps-1baafdba-cab3-40e1-977d-a37298b3e53a": Phase="Running", Reason="", readiness=false. Elapsed: 2.004086886s
Jan 30 08:17:28.785: INFO: Pod "pod-configmaps-1baafdba-cab3-40e1-977d-a37298b3e53a" satisfied condition "running"
STEP: Waiting for pod with text data 01/30/23 08:17:28.785
STEP: Waiting for pod with binary data 01/30/23 08:17:28.793
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:28.797: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9995" for this suite. 01/30/23 08:17:28.799
------------------------------
â€¢ [2.049 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:26.755
    Jan 30 08:17:26.755: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:17:26.755
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:26.765
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:26.766
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] binary data should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:175
    STEP: Creating configMap with name configmap-test-upd-bb61e8d2-1769-49b8-8b42-5cada02fd226 01/30/23 08:17:26.77
    STEP: Creating the pod 01/30/23 08:17:26.774
    Jan 30 08:17:26.780: INFO: Waiting up to 5m0s for pod "pod-configmaps-1baafdba-cab3-40e1-977d-a37298b3e53a" in namespace "configmap-9995" to be "running"
    Jan 30 08:17:26.782: INFO: Pod "pod-configmaps-1baafdba-cab3-40e1-977d-a37298b3e53a": Phase="Pending", Reason="", readiness=false. Elapsed: 1.929205ms
    Jan 30 08:17:28.785: INFO: Pod "pod-configmaps-1baafdba-cab3-40e1-977d-a37298b3e53a": Phase="Running", Reason="", readiness=false. Elapsed: 2.004086886s
    Jan 30 08:17:28.785: INFO: Pod "pod-configmaps-1baafdba-cab3-40e1-977d-a37298b3e53a" satisfied condition "running"
    STEP: Waiting for pod with text data 01/30/23 08:17:28.785
    STEP: Waiting for pod with binary data 01/30/23 08:17:28.793
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:28.797: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9995" for this suite. 01/30/23 08:17:28.799
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:28.806
Jan 30 08:17:28.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:17:28.806
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:28.815
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:28.817
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
STEP: Creating Pod 01/30/23 08:17:28.819
Jan 30 08:17:28.825: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0" in namespace "emptydir-9273" to be "running"
Jan 30 08:17:28.826: INFO: Pod "pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0": Phase="Pending", Reason="", readiness=false. Elapsed: 1.662618ms
Jan 30 08:17:30.830: INFO: Pod "pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0": Phase="Running", Reason="", readiness=false. Elapsed: 2.005800114s
Jan 30 08:17:30.831: INFO: Pod "pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0" satisfied condition "running"
STEP: Reading file content from the nginx-container 01/30/23 08:17:30.831
Jan 30 08:17:30.831: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9273 PodName:pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:17:30.831: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:17:30.831: INFO: ExecWithOptions: Clientset creation
Jan 30 08:17:30.831: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-9273/pods/pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Jan 30 08:17:30.882: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:30.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9273" for this suite. 01/30/23 08:17:30.884
------------------------------
â€¢ [2.096 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:28.806
    Jan 30 08:17:28.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:17:28.806
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:28.815
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:28.817
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] pod should support shared volumes between containers [Conformance]
      test/e2e/common/storage/empty_dir.go:227
    STEP: Creating Pod 01/30/23 08:17:28.819
    Jan 30 08:17:28.825: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0" in namespace "emptydir-9273" to be "running"
    Jan 30 08:17:28.826: INFO: Pod "pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0": Phase="Pending", Reason="", readiness=false. Elapsed: 1.662618ms
    Jan 30 08:17:30.830: INFO: Pod "pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0": Phase="Running", Reason="", readiness=false. Elapsed: 2.005800114s
    Jan 30 08:17:30.831: INFO: Pod "pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0" satisfied condition "running"
    STEP: Reading file content from the nginx-container 01/30/23 08:17:30.831
    Jan 30 08:17:30.831: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9273 PodName:pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:17:30.831: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:17:30.831: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:17:30.831: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-9273/pods/pod-sharedvolume-74604560-6d9f-44c4-b113-4d39396aeeb0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
    Jan 30 08:17:30.882: INFO: Exec stderr: ""
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:30.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9273" for this suite. 01/30/23 08:17:30.884
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
[BeforeEach] [sig-api-machinery] server version
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:30.902
Jan 30 08:17:30.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename server-version 01/30/23 08:17:30.903
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:30.912
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:30.914
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:31
[It] should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
STEP: Request ServerVersion 01/30/23 08:17:30.916
STEP: Confirm major version 01/30/23 08:17:30.917
Jan 30 08:17:30.917: INFO: Major version: 1
STEP: Confirm minor version 01/30/23 08:17:30.917
Jan 30 08:17:30.917: INFO: cleanMinorVersion: 26
Jan 30 08:17:30.917: INFO: Minor version: 26
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:30.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] server version
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] server version
  tear down framework | framework.go:193
STEP: Destroying namespace "server-version-5449" for this suite. 01/30/23 08:17:30.92
------------------------------
â€¢ [0.021 seconds]
[sig-api-machinery] server version
test/e2e/apimachinery/framework.go:23
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] server version
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:30.902
    Jan 30 08:17:30.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename server-version 01/30/23 08:17:30.903
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:30.912
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:30.914
    [BeforeEach] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:31
    [It] should find the server version [Conformance]
      test/e2e/apimachinery/server_version.go:39
    STEP: Request ServerVersion 01/30/23 08:17:30.916
    STEP: Confirm major version 01/30/23 08:17:30.917
    Jan 30 08:17:30.917: INFO: Major version: 1
    STEP: Confirm minor version 01/30/23 08:17:30.917
    Jan 30 08:17:30.917: INFO: cleanMinorVersion: 26
    Jan 30 08:17:30.917: INFO: Minor version: 26
    [AfterEach] [sig-api-machinery] server version
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:30.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] server version
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] server version
      tear down framework | framework.go:193
    STEP: Destroying namespace "server-version-5449" for this suite. 01/30/23 08:17:30.92
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:30.924
Jan 30 08:17:30.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 08:17:30.925
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:30.934
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:30.936
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
Jan 30 08:17:30.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/30/23 08:17:32.198
Jan 30 08:17:32.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 --namespace=crd-publish-openapi-5381 create -f -'
Jan 30 08:17:32.570: INFO: stderr: ""
Jan 30 08:17:32.570: INFO: stdout: "e2e-test-crd-publish-openapi-4593-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 30 08:17:32.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 --namespace=crd-publish-openapi-5381 delete e2e-test-crd-publish-openapi-4593-crds test-cr'
Jan 30 08:17:32.618: INFO: stderr: ""
Jan 30 08:17:32.618: INFO: stdout: "e2e-test-crd-publish-openapi-4593-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Jan 30 08:17:32.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 --namespace=crd-publish-openapi-5381 apply -f -'
Jan 30 08:17:32.737: INFO: stderr: ""
Jan 30 08:17:32.737: INFO: stdout: "e2e-test-crd-publish-openapi-4593-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jan 30 08:17:32.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 --namespace=crd-publish-openapi-5381 delete e2e-test-crd-publish-openapi-4593-crds test-cr'
Jan 30 08:17:32.787: INFO: stderr: ""
Jan 30 08:17:32.787: INFO: stdout: "e2e-test-crd-publish-openapi-4593-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 01/30/23 08:17:32.787
Jan 30 08:17:32.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 explain e2e-test-crd-publish-openapi-4593-crds'
Jan 30 08:17:32.892: INFO: stderr: ""
Jan 30 08:17:32.892: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4593-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:34.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-5381" for this suite. 01/30/23 08:17:34.175
------------------------------
â€¢ [3.255 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:30.924
    Jan 30 08:17:30.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 08:17:30.925
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:30.934
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:30.936
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields at the schema root [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:194
    Jan 30 08:17:30.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/30/23 08:17:32.198
    Jan 30 08:17:32.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 --namespace=crd-publish-openapi-5381 create -f -'
    Jan 30 08:17:32.570: INFO: stderr: ""
    Jan 30 08:17:32.570: INFO: stdout: "e2e-test-crd-publish-openapi-4593-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Jan 30 08:17:32.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 --namespace=crd-publish-openapi-5381 delete e2e-test-crd-publish-openapi-4593-crds test-cr'
    Jan 30 08:17:32.618: INFO: stderr: ""
    Jan 30 08:17:32.618: INFO: stdout: "e2e-test-crd-publish-openapi-4593-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    Jan 30 08:17:32.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 --namespace=crd-publish-openapi-5381 apply -f -'
    Jan 30 08:17:32.737: INFO: stderr: ""
    Jan 30 08:17:32.737: INFO: stdout: "e2e-test-crd-publish-openapi-4593-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Jan 30 08:17:32.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 --namespace=crd-publish-openapi-5381 delete e2e-test-crd-publish-openapi-4593-crds test-cr'
    Jan 30 08:17:32.787: INFO: stderr: ""
    Jan 30 08:17:32.787: INFO: stdout: "e2e-test-crd-publish-openapi-4593-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 01/30/23 08:17:32.787
    Jan 30 08:17:32.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-5381 explain e2e-test-crd-publish-openapi-4593-crds'
    Jan 30 08:17:32.892: INFO: stderr: ""
    Jan 30 08:17:32.892: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4593-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:34.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-5381" for this suite. 01/30/23 08:17:34.175
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:34.179
Jan 30 08:17:34.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:17:34.18
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:34.188
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:34.189
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
STEP: Creating a pod to test downward API volume plugin 01/30/23 08:17:34.191
Jan 30 08:17:34.196: INFO: Waiting up to 5m0s for pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e" in namespace "projected-4614" to be "Succeeded or Failed"
Jan 30 08:17:34.198: INFO: Pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e": Phase="Pending", Reason="", readiness=false. Elapsed: 1.84893ms
Jan 30 08:17:36.202: INFO: Pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005082544s
Jan 30 08:17:38.201: INFO: Pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004150299s
STEP: Saw pod success 01/30/23 08:17:38.201
Jan 30 08:17:38.201: INFO: Pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e" satisfied condition "Succeeded or Failed"
Jan 30 08:17:38.203: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e container client-container: <nil>
STEP: delete the pod 01/30/23 08:17:38.206
Jan 30 08:17:38.225: INFO: Waiting for pod downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e to disappear
Jan 30 08:17:38.227: INFO: Pod downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:38.227: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4614" for this suite. 01/30/23 08:17:38.229
------------------------------
â€¢ [4.053 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:34.179
    Jan 30 08:17:34.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:17:34.18
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:34.188
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:34.189
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:235
    STEP: Creating a pod to test downward API volume plugin 01/30/23 08:17:34.191
    Jan 30 08:17:34.196: INFO: Waiting up to 5m0s for pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e" in namespace "projected-4614" to be "Succeeded or Failed"
    Jan 30 08:17:34.198: INFO: Pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e": Phase="Pending", Reason="", readiness=false. Elapsed: 1.84893ms
    Jan 30 08:17:36.202: INFO: Pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005082544s
    Jan 30 08:17:38.201: INFO: Pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004150299s
    STEP: Saw pod success 01/30/23 08:17:38.201
    Jan 30 08:17:38.201: INFO: Pod "downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e" satisfied condition "Succeeded or Failed"
    Jan 30 08:17:38.203: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e container client-container: <nil>
    STEP: delete the pod 01/30/23 08:17:38.206
    Jan 30 08:17:38.225: INFO: Waiting for pod downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e to disappear
    Jan 30 08:17:38.227: INFO: Pod downwardapi-volume-75ddbc45-dd57-4bcf-9fea-6c141a3b330e no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:38.227: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4614" for this suite. 01/30/23 08:17:38.229
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:38.233
Jan 30 08:17:38.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:17:38.234
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:38.243
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:38.245
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
STEP: Creating configMap with name configmap-test-volume-map-377244db-38fb-4d19-a106-78bed2b742d1 01/30/23 08:17:38.247
STEP: Creating a pod to test consume configMaps 01/30/23 08:17:38.251
Jan 30 08:17:38.258: INFO: Waiting up to 5m0s for pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3" in namespace "configmap-5579" to be "Succeeded or Failed"
Jan 30 08:17:38.260: INFO: Pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.270668ms
Jan 30 08:17:40.263: INFO: Pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3": Phase="Running", Reason="", readiness=false. Elapsed: 2.00535909s
Jan 30 08:17:42.262: INFO: Pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004522819s
STEP: Saw pod success 01/30/23 08:17:42.262
Jan 30 08:17:42.262: INFO: Pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3" satisfied condition "Succeeded or Failed"
Jan 30 08:17:42.264: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 08:17:42.267
Jan 30 08:17:42.276: INFO: Waiting for pod pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3 to disappear
Jan 30 08:17:42.278: INFO: Pod pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:42.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5579" for this suite. 01/30/23 08:17:42.28
------------------------------
â€¢ [4.052 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:38.233
    Jan 30 08:17:38.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:17:38.234
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:38.243
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:38.245
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:89
    STEP: Creating configMap with name configmap-test-volume-map-377244db-38fb-4d19-a106-78bed2b742d1 01/30/23 08:17:38.247
    STEP: Creating a pod to test consume configMaps 01/30/23 08:17:38.251
    Jan 30 08:17:38.258: INFO: Waiting up to 5m0s for pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3" in namespace "configmap-5579" to be "Succeeded or Failed"
    Jan 30 08:17:38.260: INFO: Pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.270668ms
    Jan 30 08:17:40.263: INFO: Pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3": Phase="Running", Reason="", readiness=false. Elapsed: 2.00535909s
    Jan 30 08:17:42.262: INFO: Pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004522819s
    STEP: Saw pod success 01/30/23 08:17:42.262
    Jan 30 08:17:42.262: INFO: Pod "pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3" satisfied condition "Succeeded or Failed"
    Jan 30 08:17:42.264: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 08:17:42.267
    Jan 30 08:17:42.276: INFO: Waiting for pod pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3 to disappear
    Jan 30 08:17:42.278: INFO: Pod pod-configmaps-0c376cc1-fcdd-40a5-8e35-dc6739e2a3a3 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:42.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5579" for this suite. 01/30/23 08:17:42.28
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:42.286
Jan 30 08:17:42.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:17:42.287
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:42.296
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:42.297
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
STEP: Creating a pod to test emptydir 0777 on node default medium 01/30/23 08:17:42.299
Jan 30 08:17:42.305: INFO: Waiting up to 5m0s for pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2" in namespace "emptydir-2155" to be "Succeeded or Failed"
Jan 30 08:17:42.307: INFO: Pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2": Phase="Pending", Reason="", readiness=false. Elapsed: 1.722589ms
Jan 30 08:17:44.309: INFO: Pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2": Phase="Running", Reason="", readiness=false. Elapsed: 2.004352534s
Jan 30 08:17:46.309: INFO: Pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004390761s
STEP: Saw pod success 01/30/23 08:17:46.309
Jan 30 08:17:46.309: INFO: Pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2" satisfied condition "Succeeded or Failed"
Jan 30 08:17:46.311: INFO: Trying to get logs from node tce-worker2 pod pod-e7ed9014-14d5-49e1-b747-099e53450cd2 container test-container: <nil>
STEP: delete the pod 01/30/23 08:17:46.314
Jan 30 08:17:46.324: INFO: Waiting for pod pod-e7ed9014-14d5-49e1-b747-099e53450cd2 to disappear
Jan 30 08:17:46.325: INFO: Pod pod-e7ed9014-14d5-49e1-b747-099e53450cd2 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:46.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-2155" for this suite. 01/30/23 08:17:46.327
------------------------------
â€¢ [4.045 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:42.286
    Jan 30 08:17:42.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:17:42.287
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:42.296
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:42.297
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:217
    STEP: Creating a pod to test emptydir 0777 on node default medium 01/30/23 08:17:42.299
    Jan 30 08:17:42.305: INFO: Waiting up to 5m0s for pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2" in namespace "emptydir-2155" to be "Succeeded or Failed"
    Jan 30 08:17:42.307: INFO: Pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2": Phase="Pending", Reason="", readiness=false. Elapsed: 1.722589ms
    Jan 30 08:17:44.309: INFO: Pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2": Phase="Running", Reason="", readiness=false. Elapsed: 2.004352534s
    Jan 30 08:17:46.309: INFO: Pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004390761s
    STEP: Saw pod success 01/30/23 08:17:46.309
    Jan 30 08:17:46.309: INFO: Pod "pod-e7ed9014-14d5-49e1-b747-099e53450cd2" satisfied condition "Succeeded or Failed"
    Jan 30 08:17:46.311: INFO: Trying to get logs from node tce-worker2 pod pod-e7ed9014-14d5-49e1-b747-099e53450cd2 container test-container: <nil>
    STEP: delete the pod 01/30/23 08:17:46.314
    Jan 30 08:17:46.324: INFO: Waiting for pod pod-e7ed9014-14d5-49e1-b747-099e53450cd2 to disappear
    Jan 30 08:17:46.325: INFO: Pod pod-e7ed9014-14d5-49e1-b747-099e53450cd2 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:46.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-2155" for this suite. 01/30/23 08:17:46.327
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:46.332
Jan 30 08:17:46.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename runtimeclass 01/30/23 08:17:46.333
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:46.34
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:46.342
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 30 08:17:46.347: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-2169" for this suite. 01/30/23 08:17:46.349
------------------------------
â€¢ [0.021 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:46.332
    Jan 30 08:17:46.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename runtimeclass 01/30/23 08:17:46.333
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:46.34
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:46.342
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:55
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:17:46.347: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-2169" for this suite. 01/30/23 08:17:46.349
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:17:46.353
Jan 30 08:17:46.353: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename statefulset 01/30/23 08:17:46.354
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:46.367
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:46.369
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-9861 01/30/23 08:17:46.37
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
STEP: Looking for a node to schedule stateful set and pod 01/30/23 08:17:46.374
STEP: Creating pod with conflicting port in namespace statefulset-9861 01/30/23 08:17:46.376
STEP: Waiting until pod test-pod will start running in namespace statefulset-9861 01/30/23 08:17:46.382
Jan 30 08:17:46.383: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-9861" to be "running"
Jan 30 08:17:46.384: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.613958ms
Jan 30 08:17:48.387: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.004575648s
Jan 30 08:17:48.387: INFO: Pod "test-pod" satisfied condition "running"
STEP: Creating statefulset with conflicting port in namespace statefulset-9861 01/30/23 08:17:48.387
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9861 01/30/23 08:17:48.394
Jan 30 08:17:48.408: INFO: Observed stateful pod in namespace: statefulset-9861, name: ss-0, uid: ac93bb27-d2b8-4972-95d2-d862445f5ce9, status phase: Pending. Waiting for statefulset controller to delete.
Jan 30 08:17:48.417: INFO: Observed stateful pod in namespace: statefulset-9861, name: ss-0, uid: ac93bb27-d2b8-4972-95d2-d862445f5ce9, status phase: Failed. Waiting for statefulset controller to delete.
Jan 30 08:17:48.425: INFO: Observed stateful pod in namespace: statefulset-9861, name: ss-0, uid: ac93bb27-d2b8-4972-95d2-d862445f5ce9, status phase: Failed. Waiting for statefulset controller to delete.
Jan 30 08:17:48.428: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9861
STEP: Removing pod with conflicting port in namespace statefulset-9861 01/30/23 08:17:48.429
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9861 and will be in running state 01/30/23 08:17:48.441
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 30 08:17:50.446: INFO: Deleting all statefulset in ns statefulset-9861
Jan 30 08:17:50.449: INFO: Scaling statefulset ss to 0
Jan 30 08:18:00.470: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:18:00.472: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:00.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-9861" for this suite. 01/30/23 08:18:00.498
------------------------------
â€¢ [SLOW TEST] [14.149 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Should recreate evicted statefulset [Conformance]
    test/e2e/apps/statefulset.go:739

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:17:46.353
    Jan 30 08:17:46.353: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename statefulset 01/30/23 08:17:46.354
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:17:46.367
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:17:46.369
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-9861 01/30/23 08:17:46.37
    [It] Should recreate evicted statefulset [Conformance]
      test/e2e/apps/statefulset.go:739
    STEP: Looking for a node to schedule stateful set and pod 01/30/23 08:17:46.374
    STEP: Creating pod with conflicting port in namespace statefulset-9861 01/30/23 08:17:46.376
    STEP: Waiting until pod test-pod will start running in namespace statefulset-9861 01/30/23 08:17:46.382
    Jan 30 08:17:46.383: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-9861" to be "running"
    Jan 30 08:17:46.384: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.613958ms
    Jan 30 08:17:48.387: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.004575648s
    Jan 30 08:17:48.387: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Creating statefulset with conflicting port in namespace statefulset-9861 01/30/23 08:17:48.387
    STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9861 01/30/23 08:17:48.394
    Jan 30 08:17:48.408: INFO: Observed stateful pod in namespace: statefulset-9861, name: ss-0, uid: ac93bb27-d2b8-4972-95d2-d862445f5ce9, status phase: Pending. Waiting for statefulset controller to delete.
    Jan 30 08:17:48.417: INFO: Observed stateful pod in namespace: statefulset-9861, name: ss-0, uid: ac93bb27-d2b8-4972-95d2-d862445f5ce9, status phase: Failed. Waiting for statefulset controller to delete.
    Jan 30 08:17:48.425: INFO: Observed stateful pod in namespace: statefulset-9861, name: ss-0, uid: ac93bb27-d2b8-4972-95d2-d862445f5ce9, status phase: Failed. Waiting for statefulset controller to delete.
    Jan 30 08:17:48.428: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9861
    STEP: Removing pod with conflicting port in namespace statefulset-9861 01/30/23 08:17:48.429
    STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9861 and will be in running state 01/30/23 08:17:48.441
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 30 08:17:50.446: INFO: Deleting all statefulset in ns statefulset-9861
    Jan 30 08:17:50.449: INFO: Scaling statefulset ss to 0
    Jan 30 08:18:00.470: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 08:18:00.472: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:00.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-9861" for this suite. 01/30/23 08:18:00.498
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:00.502
Jan 30 08:18:00.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:18:00.503
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:00.514
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:00.516
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
STEP: Creating projection with secret that has name projected-secret-test-d6758454-e777-40ec-abc1-92b14eca5c40 01/30/23 08:18:00.517
STEP: Creating a pod to test consume secrets 01/30/23 08:18:00.521
Jan 30 08:18:00.527: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1" in namespace "projected-5750" to be "Succeeded or Failed"
Jan 30 08:18:00.529: INFO: Pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1": Phase="Pending", Reason="", readiness=false. Elapsed: 1.669653ms
Jan 30 08:18:02.531: INFO: Pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004363755s
Jan 30 08:18:04.532: INFO: Pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00492059s
STEP: Saw pod success 01/30/23 08:18:04.532
Jan 30 08:18:04.532: INFO: Pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1" satisfied condition "Succeeded or Failed"
Jan 30 08:18:04.534: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1 container projected-secret-volume-test: <nil>
STEP: delete the pod 01/30/23 08:18:04.538
Jan 30 08:18:04.550: INFO: Waiting for pod pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1 to disappear
Jan 30 08:18:04.552: INFO: Pod pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:04.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5750" for this suite. 01/30/23 08:18:04.554
------------------------------
â€¢ [4.056 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:00.502
    Jan 30 08:18:00.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:18:00.503
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:00.514
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:00.516
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:46
    STEP: Creating projection with secret that has name projected-secret-test-d6758454-e777-40ec-abc1-92b14eca5c40 01/30/23 08:18:00.517
    STEP: Creating a pod to test consume secrets 01/30/23 08:18:00.521
    Jan 30 08:18:00.527: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1" in namespace "projected-5750" to be "Succeeded or Failed"
    Jan 30 08:18:00.529: INFO: Pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1": Phase="Pending", Reason="", readiness=false. Elapsed: 1.669653ms
    Jan 30 08:18:02.531: INFO: Pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004363755s
    Jan 30 08:18:04.532: INFO: Pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00492059s
    STEP: Saw pod success 01/30/23 08:18:04.532
    Jan 30 08:18:04.532: INFO: Pod "pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1" satisfied condition "Succeeded or Failed"
    Jan 30 08:18:04.534: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1 container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:18:04.538
    Jan 30 08:18:04.550: INFO: Waiting for pod pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1 to disappear
    Jan 30 08:18:04.552: INFO: Pod pod-projected-secrets-c537005c-ac70-4a6e-8223-dbe725b33fa1 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:04.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5750" for this suite. 01/30/23 08:18:04.554
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:04.558
Jan 30 08:18:04.558: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:18:04.559
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:04.578
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:04.58
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
STEP: Creating a pod to test emptydir 0666 on tmpfs 01/30/23 08:18:04.582
Jan 30 08:18:04.587: INFO: Waiting up to 5m0s for pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b" in namespace "emptydir-3648" to be "Succeeded or Failed"
Jan 30 08:18:04.589: INFO: Pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b": Phase="Pending", Reason="", readiness=false. Elapsed: 1.833855ms
Jan 30 08:18:06.592: INFO: Pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005002371s
Jan 30 08:18:08.592: INFO: Pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004436041s
STEP: Saw pod success 01/30/23 08:18:08.592
Jan 30 08:18:08.592: INFO: Pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b" satisfied condition "Succeeded or Failed"
Jan 30 08:18:08.593: INFO: Trying to get logs from node tce-worker2 pod pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b container test-container: <nil>
STEP: delete the pod 01/30/23 08:18:08.597
Jan 30 08:18:08.615: INFO: Waiting for pod pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b to disappear
Jan 30 08:18:08.617: INFO: Pod pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:08.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3648" for this suite. 01/30/23 08:18:08.619
------------------------------
â€¢ [4.064 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:04.558
    Jan 30 08:18:04.558: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:18:04.559
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:04.578
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:04.58
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:137
    STEP: Creating a pod to test emptydir 0666 on tmpfs 01/30/23 08:18:04.582
    Jan 30 08:18:04.587: INFO: Waiting up to 5m0s for pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b" in namespace "emptydir-3648" to be "Succeeded or Failed"
    Jan 30 08:18:04.589: INFO: Pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b": Phase="Pending", Reason="", readiness=false. Elapsed: 1.833855ms
    Jan 30 08:18:06.592: INFO: Pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005002371s
    Jan 30 08:18:08.592: INFO: Pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004436041s
    STEP: Saw pod success 01/30/23 08:18:08.592
    Jan 30 08:18:08.592: INFO: Pod "pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b" satisfied condition "Succeeded or Failed"
    Jan 30 08:18:08.593: INFO: Trying to get logs from node tce-worker2 pod pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b container test-container: <nil>
    STEP: delete the pod 01/30/23 08:18:08.597
    Jan 30 08:18:08.615: INFO: Waiting for pod pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b to disappear
    Jan 30 08:18:08.617: INFO: Pod pod-1bb39b4b-c8bf-4106-9f2c-a0720444013b no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:08.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3648" for this suite. 01/30/23 08:18:08.619
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:08.623
Jan 30 08:18:08.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 08:18:08.624
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:08.633
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:08.635
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
STEP: creating pod 01/30/23 08:18:08.636
Jan 30 08:18:08.641: INFO: Waiting up to 5m0s for pod "pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91" in namespace "pods-346" to be "running and ready"
Jan 30 08:18:08.643: INFO: Pod "pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91": Phase="Pending", Reason="", readiness=false. Elapsed: 1.781609ms
Jan 30 08:18:08.643: INFO: The phase of Pod pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:18:10.646: INFO: Pod "pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91": Phase="Running", Reason="", readiness=true. Elapsed: 2.004940508s
Jan 30 08:18:10.646: INFO: The phase of Pod pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91 is Running (Ready = true)
Jan 30 08:18:10.646: INFO: Pod "pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91" satisfied condition "running and ready"
Jan 30 08:18:10.649: INFO: Pod pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91 has hostIP: 172.20.0.4
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:10.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-346" for this suite. 01/30/23 08:18:10.651
------------------------------
â€¢ [2.042 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:08.623
    Jan 30 08:18:08.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 08:18:08.624
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:08.633
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:08.635
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should get a host IP [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:204
    STEP: creating pod 01/30/23 08:18:08.636
    Jan 30 08:18:08.641: INFO: Waiting up to 5m0s for pod "pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91" in namespace "pods-346" to be "running and ready"
    Jan 30 08:18:08.643: INFO: Pod "pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91": Phase="Pending", Reason="", readiness=false. Elapsed: 1.781609ms
    Jan 30 08:18:08.643: INFO: The phase of Pod pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:18:10.646: INFO: Pod "pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91": Phase="Running", Reason="", readiness=true. Elapsed: 2.004940508s
    Jan 30 08:18:10.646: INFO: The phase of Pod pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91 is Running (Ready = true)
    Jan 30 08:18:10.646: INFO: Pod "pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91" satisfied condition "running and ready"
    Jan 30 08:18:10.649: INFO: Pod pod-hostip-f9a2adc5-7437-4032-98f7-7dc4ce68ef91 has hostIP: 172.20.0.4
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:10.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-346" for this suite. 01/30/23 08:18:10.651
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:10.665
Jan 30 08:18:10.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename disruption 01/30/23 08:18:10.666
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:10.674
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:10.675
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
STEP: creating the pdb 01/30/23 08:18:10.677
STEP: Waiting for the pdb to be processed 01/30/23 08:18:10.681
STEP: updating the pdb 01/30/23 08:18:12.685
STEP: Waiting for the pdb to be processed 01/30/23 08:18:12.69
STEP: patching the pdb 01/30/23 08:18:14.694
STEP: Waiting for the pdb to be processed 01/30/23 08:18:14.712
STEP: Waiting for the pdb to be deleted 01/30/23 08:18:16.73
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:16.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-1954" for this suite. 01/30/23 08:18:16.734
------------------------------
â€¢ [SLOW TEST] [6.072 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:10.665
    Jan 30 08:18:10.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename disruption 01/30/23 08:18:10.666
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:10.674
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:10.675
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should create a PodDisruptionBudget [Conformance]
      test/e2e/apps/disruption.go:108
    STEP: creating the pdb 01/30/23 08:18:10.677
    STEP: Waiting for the pdb to be processed 01/30/23 08:18:10.681
    STEP: updating the pdb 01/30/23 08:18:12.685
    STEP: Waiting for the pdb to be processed 01/30/23 08:18:12.69
    STEP: patching the pdb 01/30/23 08:18:14.694
    STEP: Waiting for the pdb to be processed 01/30/23 08:18:14.712
    STEP: Waiting for the pdb to be deleted 01/30/23 08:18:16.73
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:16.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-1954" for this suite. 01/30/23 08:18:16.734
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Secrets
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:16.738
Jan 30 08:18:16.738: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:18:16.738
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:16.752
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:16.758
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
STEP: creating secret secrets-3676/secret-test-523cc2ff-183c-4df1-b4ac-2a3d9914ff14 01/30/23 08:18:16.76
STEP: Creating a pod to test consume secrets 01/30/23 08:18:16.763
Jan 30 08:18:16.770: INFO: Waiting up to 5m0s for pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2" in namespace "secrets-3676" to be "Succeeded or Failed"
Jan 30 08:18:16.773: INFO: Pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.875938ms
Jan 30 08:18:18.775: INFO: Pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005222138s
Jan 30 08:18:20.776: INFO: Pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006336548s
STEP: Saw pod success 01/30/23 08:18:20.776
Jan 30 08:18:20.776: INFO: Pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2" satisfied condition "Succeeded or Failed"
Jan 30 08:18:20.778: INFO: Trying to get logs from node tce-worker pod pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2 container env-test: <nil>
STEP: delete the pod 01/30/23 08:18:20.787
Jan 30 08:18:20.800: INFO: Waiting for pod pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2 to disappear
Jan 30 08:18:20.801: INFO: Pod pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:20.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-3676" for this suite. 01/30/23 08:18:20.803
------------------------------
â€¢ [4.069 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:16.738
    Jan 30 08:18:16.738: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:18:16.738
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:16.752
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:16.758
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:95
    STEP: creating secret secrets-3676/secret-test-523cc2ff-183c-4df1-b4ac-2a3d9914ff14 01/30/23 08:18:16.76
    STEP: Creating a pod to test consume secrets 01/30/23 08:18:16.763
    Jan 30 08:18:16.770: INFO: Waiting up to 5m0s for pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2" in namespace "secrets-3676" to be "Succeeded or Failed"
    Jan 30 08:18:16.773: INFO: Pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.875938ms
    Jan 30 08:18:18.775: INFO: Pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005222138s
    Jan 30 08:18:20.776: INFO: Pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006336548s
    STEP: Saw pod success 01/30/23 08:18:20.776
    Jan 30 08:18:20.776: INFO: Pod "pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2" satisfied condition "Succeeded or Failed"
    Jan 30 08:18:20.778: INFO: Trying to get logs from node tce-worker pod pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2 container env-test: <nil>
    STEP: delete the pod 01/30/23 08:18:20.787
    Jan 30 08:18:20.800: INFO: Waiting for pod pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2 to disappear
    Jan 30 08:18:20.801: INFO: Pod pod-configmaps-bbd061a3-c8e3-4d24-b184-0195fb4892f2 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:20.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-3676" for this suite. 01/30/23 08:18:20.803
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:20.807
Jan 30 08:18:20.808: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:18:20.808
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:20.818
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:20.82
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
STEP: Creating projection with secret that has name projected-secret-test-04735b15-ca94-4acb-81b7-f6e0454665b7 01/30/23 08:18:20.822
STEP: Creating a pod to test consume secrets 01/30/23 08:18:20.825
Jan 30 08:18:20.830: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016" in namespace "projected-311" to be "Succeeded or Failed"
Jan 30 08:18:20.831: INFO: Pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016": Phase="Pending", Reason="", readiness=false. Elapsed: 1.467553ms
Jan 30 08:18:22.834: INFO: Pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004297645s
Jan 30 08:18:24.833: INFO: Pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.003679944s
STEP: Saw pod success 01/30/23 08:18:24.833
Jan 30 08:18:24.834: INFO: Pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016" satisfied condition "Succeeded or Failed"
Jan 30 08:18:24.835: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016 container projected-secret-volume-test: <nil>
STEP: delete the pod 01/30/23 08:18:24.838
Jan 30 08:18:24.850: INFO: Waiting for pod pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016 to disappear
Jan 30 08:18:24.851: INFO: Pod pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:24.851: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-311" for this suite. 01/30/23 08:18:24.853
------------------------------
â€¢ [4.049 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:20.807
    Jan 30 08:18:20.808: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:18:20.808
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:20.818
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:20.82
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:56
    STEP: Creating projection with secret that has name projected-secret-test-04735b15-ca94-4acb-81b7-f6e0454665b7 01/30/23 08:18:20.822
    STEP: Creating a pod to test consume secrets 01/30/23 08:18:20.825
    Jan 30 08:18:20.830: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016" in namespace "projected-311" to be "Succeeded or Failed"
    Jan 30 08:18:20.831: INFO: Pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016": Phase="Pending", Reason="", readiness=false. Elapsed: 1.467553ms
    Jan 30 08:18:22.834: INFO: Pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004297645s
    Jan 30 08:18:24.833: INFO: Pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.003679944s
    STEP: Saw pod success 01/30/23 08:18:24.833
    Jan 30 08:18:24.834: INFO: Pod "pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016" satisfied condition "Succeeded or Failed"
    Jan 30 08:18:24.835: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016 container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:18:24.838
    Jan 30 08:18:24.850: INFO: Waiting for pod pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016 to disappear
    Jan 30 08:18:24.851: INFO: Pod pod-projected-secrets-77312179-3194-4208-a66d-0a196aa51016 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:24.851: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-311" for this suite. 01/30/23 08:18:24.853
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:24.857
Jan 30 08:18:24.857: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename deployment 01/30/23 08:18:24.858
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:24.867
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:24.869
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
STEP: creating a Deployment 01/30/23 08:18:24.872
STEP: waiting for Deployment to be created 01/30/23 08:18:24.876
STEP: waiting for all Replicas to be Ready 01/30/23 08:18:24.878
Jan 30 08:18:24.879: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 08:18:24.879: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 08:18:24.886: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 08:18:24.886: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 08:18:24.894: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 08:18:24.894: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 08:18:24.910: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 08:18:24.910: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jan 30 08:18:25.970: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 30 08:18:25.970: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jan 30 08:18:26.018: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment 01/30/23 08:18:26.018
W0130 08:18:26.026294      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Jan 30 08:18:26.027: INFO: observed event type ADDED
STEP: waiting for Replicas to scale 01/30/23 08:18:26.027
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:26.036: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:26.036: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:26.048: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:26.048: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:26.061: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:26.061: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:26.070: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:26.070: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:27.035: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:27.035: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:27.050: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
STEP: listing Deployments 01/30/23 08:18:27.05
Jan 30 08:18:27.052: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment 01/30/23 08:18:27.052
Jan 30 08:18:27.059: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
STEP: fetching the DeploymentStatus 01/30/23 08:18:27.059
Jan 30 08:18:27.063: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:27.073: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:27.109: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:27.124: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:27.128: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:27.985: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:28.039: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:28.063: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:28.074: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jan 30 08:18:28.995: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus 01/30/23 08:18:29.013
STEP: fetching the DeploymentStatus 01/30/23 08:18:29.02
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 3
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 3
STEP: deleting the Deployment 01/30/23 08:18:29.024
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
Jan 30 08:18:29.030: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:18:29.032: INFO: Log out all the ReplicaSets if there is no deployment created
Jan 30 08:18:29.034: INFO: ReplicaSet "test-deployment-7b7876f9d6":
&ReplicaSet{ObjectMeta:{test-deployment-7b7876f9d6  deployment-9933  fa4bc530-d033-400e-b0ec-ce5f792864c7 3890 2 2023-01-30 08:18:27 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 50b1703d-61c2-445c-942b-7cdc6cc36ecf 0xc000c9e3f7 0xc000c9e3f8}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50b1703d-61c2-445c-942b-7cdc6cc36ecf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7b7876f9d6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000c9e5a0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Jan 30 08:18:29.036: INFO: pod: "test-deployment-7b7876f9d6-f57nw":
&Pod{ObjectMeta:{test-deployment-7b7876f9d6-f57nw test-deployment-7b7876f9d6- deployment-9933  7da21f9d-e2a3-43b5-8860-5533216485fe 3865 0 2023-01-30 08:18:27 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 fa4bc530-d033-400e-b0ec-ce5f792864c7 0xc0016d95d7 0xc0016d95d8}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fa4bc530-d033-400e-b0ec-ce5f792864c7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wcz57,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wcz57,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.76,StartTime:2023-01-30 08:18:27 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:27 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://361ea6c1327ebd8d933c4afbe46e59dbf565f88c0b301b1f402f11b2ca32cf61,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.76,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 30 08:18:29.036: INFO: pod: "test-deployment-7b7876f9d6-jpgqm":
&Pod{ObjectMeta:{test-deployment-7b7876f9d6-jpgqm test-deployment-7b7876f9d6- deployment-9933  e8d462e2-ddec-4399-bb62-8c3c8a257ec1 3889 0 2023-01-30 08:18:28 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 fa4bc530-d033-400e-b0ec-ce5f792864c7 0xc0016d9cb7 0xc0016d9cb8}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fa4bc530-d033-400e-b0ec-ce5f792864c7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.52\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-km5hr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-km5hr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.52,StartTime:2023-01-30 08:18:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://2e4aafaf4d47518a853a8efc7dbf88b27266660dc12b29236d1a51c0ba168162,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.52,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 30 08:18:29.037: INFO: ReplicaSet "test-deployment-7df74c55ff":
&ReplicaSet{ObjectMeta:{test-deployment-7df74c55ff  deployment-9933  493ae2d7-3962-48a0-8931-5c6a98189b6d 3897 4 2023-01-30 08:18:26 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 50b1703d-61c2-445c-942b-7cdc6cc36ecf 0xc000c9e847 0xc000c9e848}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50b1703d-61c2-445c-942b-7cdc6cc36ecf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:18:29 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7df74c55ff,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/pause:3.9 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000c9e9d0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jan 30 08:18:29.039: INFO: pod: "test-deployment-7df74c55ff-sjm8n":
&Pod{ObjectMeta:{test-deployment-7df74c55ff-sjm8n test-deployment-7df74c55ff- deployment-9933  5f8f2db5-231f-4be4-8ba7-5af5c9b2fb2a 3893 0 2023-01-30 08:18:27 +0000 UTC 2023-01-30 08:18:29 +0000 UTC 0xc000c9f330 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 493ae2d7-3962-48a0-8931-5c6a98189b6d 0xc000c9f367 0xc000c9f368}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"493ae2d7-3962-48a0-8931-5c6a98189b6d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.51\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tjxfp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tjxfp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.51,StartTime:2023-01-30 08:18:27 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:27 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:docker.io/library/import-2023-01-30@sha256:c22930374586e8889f175371d1057a5e7b9a28c3876b1226aa8cdf9ef715633b,ContainerID:containerd://43d853fa07b58e7ccf68a0beef6547017f3e7b85185a126a863dae6a4b588c74,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.51,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 30 08:18:29.040: INFO: pod: "test-deployment-7df74c55ff-vlf7j":
&Pod{ObjectMeta:{test-deployment-7df74c55ff-vlf7j test-deployment-7df74c55ff- deployment-9933  2bf945c3-3f3b-4c3f-b5cc-8902af00390a 3869 0 2023-01-30 08:18:26 +0000 UTC 2023-01-30 08:18:29 +0000 UTC 0xc000c9f870 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 493ae2d7-3962-48a0-8931-5c6a98189b6d 0xc000c9f937 0xc000c9f938}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"493ae2d7-3962-48a0-8931-5c6a98189b6d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.75\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-n9wns,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n9wns,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.75,StartTime:2023-01-30 08:18:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:26 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:docker.io/library/import-2023-01-30@sha256:c22930374586e8889f175371d1057a5e7b9a28c3876b1226aa8cdf9ef715633b,ContainerID:containerd://1b25e555af865958fd5579e37798e6cd22ab09d725727a84bebbf6e0542b6276,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.75,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 30 08:18:29.040: INFO: ReplicaSet "test-deployment-f4dbc4647":
&ReplicaSet{ObjectMeta:{test-deployment-f4dbc4647  deployment-9933  4430a824-d2c5-43fa-bf6f-119ccf332333 3827 3 2023-01-30 08:18:24 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 50b1703d-61c2-445c-942b-7cdc6cc36ecf 0xc000c9eb07 0xc000c9eb08}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50b1703d-61c2-445c-942b-7cdc6cc36ecf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: f4dbc4647,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000c9ebd0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jan 30 08:18:29.051: INFO: pod: "test-deployment-f4dbc4647-7wfg4":
&Pod{ObjectMeta:{test-deployment-f4dbc4647-7wfg4 test-deployment-f4dbc4647- deployment-9933  631a918d-7734-44b5-9da7-a221ee1bc2e6 3798 0 2023-01-30 08:18:24 +0000 UTC 2023-01-30 08:18:27 +0000 UTC 0xc0016a5670 map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-f4dbc4647 4430a824-d2c5-43fa-bf6f-119ccf332333 0xc0016a56a7 0xc0016a56a8}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4430a824-d2c5-43fa-bf6f-119ccf332333\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9p72g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9p72g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.74,StartTime:2023-01-30 08:18:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a,ContainerID:containerd://9895bb842987528e19b175a9966ba390b2991d49c7181e3e7ff9a9083ed0e02b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.74,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jan 30 08:18:29.051: INFO: pod: "test-deployment-f4dbc4647-ztfj9":
&Pod{ObjectMeta:{test-deployment-f4dbc4647-ztfj9 test-deployment-f4dbc4647- deployment-9933  0a443ee3-abf6-43a5-893e-4299c13135c1 3823 0 2023-01-30 08:18:24 +0000 UTC 2023-01-30 08:18:28 +0000 UTC 0xc0016a5870 map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-f4dbc4647 4430a824-d2c5-43fa-bf6f-119ccf332333 0xc0016a58a7 0xc0016a58a8}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4430a824-d2c5-43fa-bf6f-119ccf332333\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.50\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rps2g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rps2g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.50,StartTime:2023-01-30 08:18:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a,ContainerID:containerd://40bd96090e1d2c04e57a115cce8083a2ed29d43ff9a13ff73369168ad6709542,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.50,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:29.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-9933" for this suite. 01/30/23 08:18:29.059
------------------------------
â€¢ [4.211 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:24.857
    Jan 30 08:18:24.857: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename deployment 01/30/23 08:18:24.858
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:24.867
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:24.869
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should run the lifecycle of a Deployment [Conformance]
      test/e2e/apps/deployment.go:185
    STEP: creating a Deployment 01/30/23 08:18:24.872
    STEP: waiting for Deployment to be created 01/30/23 08:18:24.876
    STEP: waiting for all Replicas to be Ready 01/30/23 08:18:24.878
    Jan 30 08:18:24.879: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 30 08:18:24.879: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 30 08:18:24.886: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 30 08:18:24.886: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 30 08:18:24.894: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 30 08:18:24.894: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 30 08:18:24.910: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 30 08:18:24.910: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Jan 30 08:18:25.970: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Jan 30 08:18:25.970: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Jan 30 08:18:26.018: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2 and labels map[test-deployment-static:true]
    STEP: patching the Deployment 01/30/23 08:18:26.018
    W0130 08:18:26.026294      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Jan 30 08:18:26.027: INFO: observed event type ADDED
    STEP: waiting for Replicas to scale 01/30/23 08:18:26.027
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 0
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:26.028: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:26.036: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:26.036: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:26.048: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:26.048: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:26.061: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:26.061: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:26.070: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:26.070: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:27.035: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:27.035: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:27.050: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    STEP: listing Deployments 01/30/23 08:18:27.05
    Jan 30 08:18:27.052: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
    STEP: updating the Deployment 01/30/23 08:18:27.052
    Jan 30 08:18:27.059: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    STEP: fetching the DeploymentStatus 01/30/23 08:18:27.059
    Jan 30 08:18:27.063: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:27.073: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:27.109: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:27.124: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:27.128: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:27.985: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:28.039: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:28.063: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:28.074: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Jan 30 08:18:28.995: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    STEP: patching the DeploymentStatus 01/30/23 08:18:29.013
    STEP: fetching the DeploymentStatus 01/30/23 08:18:29.02
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 1
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 3
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 2
    Jan 30 08:18:29.024: INFO: observed Deployment test-deployment in namespace deployment-9933 with ReadyReplicas 3
    STEP: deleting the Deployment 01/30/23 08:18:29.024
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    Jan 30 08:18:29.030: INFO: observed event type MODIFIED
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 30 08:18:29.032: INFO: Log out all the ReplicaSets if there is no deployment created
    Jan 30 08:18:29.034: INFO: ReplicaSet "test-deployment-7b7876f9d6":
    &ReplicaSet{ObjectMeta:{test-deployment-7b7876f9d6  deployment-9933  fa4bc530-d033-400e-b0ec-ce5f792864c7 3890 2 2023-01-30 08:18:27 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 50b1703d-61c2-445c-942b-7cdc6cc36ecf 0xc000c9e3f7 0xc000c9e3f8}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50b1703d-61c2-445c-942b-7cdc6cc36ecf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7b7876f9d6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000c9e5a0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

    Jan 30 08:18:29.036: INFO: pod: "test-deployment-7b7876f9d6-f57nw":
    &Pod{ObjectMeta:{test-deployment-7b7876f9d6-f57nw test-deployment-7b7876f9d6- deployment-9933  7da21f9d-e2a3-43b5-8860-5533216485fe 3865 0 2023-01-30 08:18:27 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 fa4bc530-d033-400e-b0ec-ce5f792864c7 0xc0016d95d7 0xc0016d95d8}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fa4bc530-d033-400e-b0ec-ce5f792864c7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wcz57,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wcz57,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.76,StartTime:2023-01-30 08:18:27 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:27 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://361ea6c1327ebd8d933c4afbe46e59dbf565f88c0b301b1f402f11b2ca32cf61,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.76,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Jan 30 08:18:29.036: INFO: pod: "test-deployment-7b7876f9d6-jpgqm":
    &Pod{ObjectMeta:{test-deployment-7b7876f9d6-jpgqm test-deployment-7b7876f9d6- deployment-9933  e8d462e2-ddec-4399-bb62-8c3c8a257ec1 3889 0 2023-01-30 08:18:28 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 fa4bc530-d033-400e-b0ec-ce5f792864c7 0xc0016d9cb7 0xc0016d9cb8}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fa4bc530-d033-400e-b0ec-ce5f792864c7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.52\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-km5hr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-km5hr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.52,StartTime:2023-01-30 08:18:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://2e4aafaf4d47518a853a8efc7dbf88b27266660dc12b29236d1a51c0ba168162,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.52,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Jan 30 08:18:29.037: INFO: ReplicaSet "test-deployment-7df74c55ff":
    &ReplicaSet{ObjectMeta:{test-deployment-7df74c55ff  deployment-9933  493ae2d7-3962-48a0-8931-5c6a98189b6d 3897 4 2023-01-30 08:18:26 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 50b1703d-61c2-445c-942b-7cdc6cc36ecf 0xc000c9e847 0xc000c9e848}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:18:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50b1703d-61c2-445c-942b-7cdc6cc36ecf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:18:29 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7df74c55ff,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/pause:3.9 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000c9e9d0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

    Jan 30 08:18:29.039: INFO: pod: "test-deployment-7df74c55ff-sjm8n":
    &Pod{ObjectMeta:{test-deployment-7df74c55ff-sjm8n test-deployment-7df74c55ff- deployment-9933  5f8f2db5-231f-4be4-8ba7-5af5c9b2fb2a 3893 0 2023-01-30 08:18:27 +0000 UTC 2023-01-30 08:18:29 +0000 UTC 0xc000c9f330 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 493ae2d7-3962-48a0-8931-5c6a98189b6d 0xc000c9f367 0xc000c9f368}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"493ae2d7-3962-48a0-8931-5c6a98189b6d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.51\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tjxfp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tjxfp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.51,StartTime:2023-01-30 08:18:27 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:27 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:docker.io/library/import-2023-01-30@sha256:c22930374586e8889f175371d1057a5e7b9a28c3876b1226aa8cdf9ef715633b,ContainerID:containerd://43d853fa07b58e7ccf68a0beef6547017f3e7b85185a126a863dae6a4b588c74,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.51,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Jan 30 08:18:29.040: INFO: pod: "test-deployment-7df74c55ff-vlf7j":
    &Pod{ObjectMeta:{test-deployment-7df74c55ff-vlf7j test-deployment-7df74c55ff- deployment-9933  2bf945c3-3f3b-4c3f-b5cc-8902af00390a 3869 0 2023-01-30 08:18:26 +0000 UTC 2023-01-30 08:18:29 +0000 UTC 0xc000c9f870 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 493ae2d7-3962-48a0-8931-5c6a98189b6d 0xc000c9f937 0xc000c9f938}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"493ae2d7-3962-48a0-8931-5c6a98189b6d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.75\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-n9wns,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n9wns,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.75,StartTime:2023-01-30 08:18:26 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:26 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:docker.io/library/import-2023-01-30@sha256:c22930374586e8889f175371d1057a5e7b9a28c3876b1226aa8cdf9ef715633b,ContainerID:containerd://1b25e555af865958fd5579e37798e6cd22ab09d725727a84bebbf6e0542b6276,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.75,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Jan 30 08:18:29.040: INFO: ReplicaSet "test-deployment-f4dbc4647":
    &ReplicaSet{ObjectMeta:{test-deployment-f4dbc4647  deployment-9933  4430a824-d2c5-43fa-bf6f-119ccf332333 3827 3 2023-01-30 08:18:24 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 50b1703d-61c2-445c-942b-7cdc6cc36ecf 0xc000c9eb07 0xc000c9eb08}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"50b1703d-61c2-445c-942b-7cdc6cc36ecf\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:18:27 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: f4dbc4647,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000c9ebd0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

    Jan 30 08:18:29.051: INFO: pod: "test-deployment-f4dbc4647-7wfg4":
    &Pod{ObjectMeta:{test-deployment-f4dbc4647-7wfg4 test-deployment-f4dbc4647- deployment-9933  631a918d-7734-44b5-9da7-a221ee1bc2e6 3798 0 2023-01-30 08:18:24 +0000 UTC 2023-01-30 08:18:27 +0000 UTC 0xc0016a5670 map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-f4dbc4647 4430a824-d2c5-43fa-bf6f-119ccf332333 0xc0016a56a7 0xc0016a56a8}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4430a824-d2c5-43fa-bf6f-119ccf332333\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9p72g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9p72g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.74,StartTime:2023-01-30 08:18:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a,ContainerID:containerd://9895bb842987528e19b175a9966ba390b2991d49c7181e3e7ff9a9083ed0e02b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.74,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Jan 30 08:18:29.051: INFO: pod: "test-deployment-f4dbc4647-ztfj9":
    &Pod{ObjectMeta:{test-deployment-f4dbc4647-ztfj9 test-deployment-f4dbc4647- deployment-9933  0a443ee3-abf6-43a5-893e-4299c13135c1 3823 0 2023-01-30 08:18:24 +0000 UTC 2023-01-30 08:18:28 +0000 UTC 0xc0016a5870 map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [{apps/v1 ReplicaSet test-deployment-f4dbc4647 4430a824-d2c5-43fa-bf6f-119ccf332333 0xc0016a58a7 0xc0016a58a8}] [] [{kube-controller-manager Update v1 2023-01-30 08:18:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4430a824-d2c5-43fa-bf6f-119ccf332333\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:18:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.50\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rps2g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rps2g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:18:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.50,StartTime:2023-01-30 08:18:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:18:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a,ContainerID:containerd://40bd96090e1d2c04e57a115cce8083a2ed29d43ff9a13ff73369168ad6709542,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.50,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:29.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-9933" for this suite. 01/30/23 08:18:29.059
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:29.068
Jan 30 08:18:29.068: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 08:18:29.069
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:29.08
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:29.082
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
STEP: Counting existing ResourceQuota 01/30/23 08:18:29.084
STEP: Creating a ResourceQuota 01/30/23 08:18:34.086
STEP: Ensuring resource quota status is calculated 01/30/23 08:18:34.091
STEP: Creating a Pod that fits quota 01/30/23 08:18:36.094
STEP: Ensuring ResourceQuota status captures the pod usage 01/30/23 08:18:36.104
STEP: Not allowing a pod to be created that exceeds remaining quota 01/30/23 08:18:38.106
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 01/30/23 08:18:38.108
STEP: Ensuring a pod cannot update its resource requirements 01/30/23 08:18:38.11
STEP: Ensuring attempts to update pod resource requirements did not change quota usage 01/30/23 08:18:38.119
STEP: Deleting the pod 01/30/23 08:18:40.122
STEP: Ensuring resource quota status released the pod usage 01/30/23 08:18:40.143
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:42.150: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-4199" for this suite. 01/30/23 08:18:42.153
------------------------------
â€¢ [SLOW TEST] [13.090 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:29.068
    Jan 30 08:18:29.068: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 08:18:29.069
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:29.08
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:29.082
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a pod. [Conformance]
      test/e2e/apimachinery/resource_quota.go:230
    STEP: Counting existing ResourceQuota 01/30/23 08:18:29.084
    STEP: Creating a ResourceQuota 01/30/23 08:18:34.086
    STEP: Ensuring resource quota status is calculated 01/30/23 08:18:34.091
    STEP: Creating a Pod that fits quota 01/30/23 08:18:36.094
    STEP: Ensuring ResourceQuota status captures the pod usage 01/30/23 08:18:36.104
    STEP: Not allowing a pod to be created that exceeds remaining quota 01/30/23 08:18:38.106
    STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 01/30/23 08:18:38.108
    STEP: Ensuring a pod cannot update its resource requirements 01/30/23 08:18:38.11
    STEP: Ensuring attempts to update pod resource requirements did not change quota usage 01/30/23 08:18:38.119
    STEP: Deleting the pod 01/30/23 08:18:40.122
    STEP: Ensuring resource quota status released the pod usage 01/30/23 08:18:40.143
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:42.150: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-4199" for this suite. 01/30/23 08:18:42.153
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases
  should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:42.158
Jan 30 08:18:42.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:18:42.159
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:42.17
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:42.172
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
STEP: Waiting for pod completion 01/30/23 08:18:42.179
Jan 30 08:18:42.179: INFO: Waiting up to 3m0s for pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c" in namespace "kubelet-test-9405" to be "completed"
Jan 30 08:18:42.181: INFO: Pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c": Phase="Pending", Reason="", readiness=false. Elapsed: 1.784235ms
Jan 30 08:18:44.184: INFO: Pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00488085s
Jan 30 08:18:46.183: INFO: Pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004097263s
Jan 30 08:18:46.183: INFO: Pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c" satisfied condition "completed"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:46.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-9405" for this suite. 01/30/23 08:18:46.189
------------------------------
â€¢ [4.035 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling an agnhost Pod with hostAliases
  test/e2e/common/node/kubelet.go:140
    should write entries to /etc/hosts [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:148

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:42.158
    Jan 30 08:18:42.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:18:42.159
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:42.17
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:42.172
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should write entries to /etc/hosts [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:148
    STEP: Waiting for pod completion 01/30/23 08:18:42.179
    Jan 30 08:18:42.179: INFO: Waiting up to 3m0s for pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c" in namespace "kubelet-test-9405" to be "completed"
    Jan 30 08:18:42.181: INFO: Pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c": Phase="Pending", Reason="", readiness=false. Elapsed: 1.784235ms
    Jan 30 08:18:44.184: INFO: Pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00488085s
    Jan 30 08:18:46.183: INFO: Pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004097263s
    Jan 30 08:18:46.183: INFO: Pod "agnhost-host-aliases0b0d0e6d-7488-4d67-8f2e-de7437b7949c" satisfied condition "completed"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:46.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-9405" for this suite. 01/30/23 08:18:46.189
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:46.193
Jan 30 08:18:46.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 08:18:46.194
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:46.204
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:46.207
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
Jan 30 08:18:46.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/30/23 08:18:47.453
Jan 30 08:18:47.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 --namespace=crd-publish-openapi-8691 create -f -'
Jan 30 08:18:49.835: INFO: stderr: ""
Jan 30 08:18:49.836: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 30 08:18:49.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 --namespace=crd-publish-openapi-8691 delete e2e-test-crd-publish-openapi-4303-crds test-cr'
Jan 30 08:18:49.897: INFO: stderr: ""
Jan 30 08:18:49.897: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Jan 30 08:18:49.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 --namespace=crd-publish-openapi-8691 apply -f -'
Jan 30 08:18:50.014: INFO: stderr: ""
Jan 30 08:18:50.014: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jan 30 08:18:50.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 --namespace=crd-publish-openapi-8691 delete e2e-test-crd-publish-openapi-4303-crds test-cr'
Jan 30 08:18:50.064: INFO: stderr: ""
Jan 30 08:18:50.064: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema 01/30/23 08:18:50.064
Jan 30 08:18:50.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 explain e2e-test-crd-publish-openapi-4303-crds'
Jan 30 08:18:50.172: INFO: stderr: ""
Jan 30 08:18:50.172: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4303-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:51.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-8691" for this suite. 01/30/23 08:18:51.444
------------------------------
â€¢ [SLOW TEST] [5.265 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:46.193
    Jan 30 08:18:46.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 08:18:46.194
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:46.204
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:46.207
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD without validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:153
    Jan 30 08:18:46.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/30/23 08:18:47.453
    Jan 30 08:18:47.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 --namespace=crd-publish-openapi-8691 create -f -'
    Jan 30 08:18:49.835: INFO: stderr: ""
    Jan 30 08:18:49.836: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Jan 30 08:18:49.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 --namespace=crd-publish-openapi-8691 delete e2e-test-crd-publish-openapi-4303-crds test-cr'
    Jan 30 08:18:49.897: INFO: stderr: ""
    Jan 30 08:18:49.897: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    Jan 30 08:18:49.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 --namespace=crd-publish-openapi-8691 apply -f -'
    Jan 30 08:18:50.014: INFO: stderr: ""
    Jan 30 08:18:50.014: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Jan 30 08:18:50.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 --namespace=crd-publish-openapi-8691 delete e2e-test-crd-publish-openapi-4303-crds test-cr'
    Jan 30 08:18:50.064: INFO: stderr: ""
    Jan 30 08:18:50.064: INFO: stdout: "e2e-test-crd-publish-openapi-4303-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR without validation schema 01/30/23 08:18:50.064
    Jan 30 08:18:50.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-8691 explain e2e-test-crd-publish-openapi-4303-crds'
    Jan 30 08:18:50.172: INFO: stderr: ""
    Jan 30 08:18:50.172: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4303-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:51.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-8691" for this suite. 01/30/23 08:18:51.444
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:51.459
Jan 30 08:18:51.460: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:18:51.46
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:51.47
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:51.472
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:18:51.481
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:18:51.763
STEP: Deploying the webhook pod 01/30/23 08:18:51.775
STEP: Wait for the deployment to be ready 01/30/23 08:18:51.784
Jan 30 08:18:51.790: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:18:53.797
STEP: Verifying the service has paired with the endpoint 01/30/23 08:18:53.815
Jan 30 08:18:54.815: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
STEP: Creating a validating webhook configuration 01/30/23 08:18:54.817
STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:18:54.831
STEP: Updating a validating webhook configuration's rules to not include the create operation 01/30/23 08:18:54.837
STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:18:54.843
STEP: Patching a validating webhook configuration's rules to include the create operation 01/30/23 08:18:54.851
STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:18:54.857
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:18:54.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1334" for this suite. 01/30/23 08:18:54.907
STEP: Destroying namespace "webhook-1334-markers" for this suite. 01/30/23 08:18:54.913
------------------------------
â€¢ [3.461 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:51.459
    Jan 30 08:18:51.460: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:18:51.46
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:51.47
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:51.472
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:18:51.481
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:18:51.763
    STEP: Deploying the webhook pod 01/30/23 08:18:51.775
    STEP: Wait for the deployment to be ready 01/30/23 08:18:51.784
    Jan 30 08:18:51.790: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:18:53.797
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:18:53.815
    Jan 30 08:18:54.815: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a validating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:413
    STEP: Creating a validating webhook configuration 01/30/23 08:18:54.817
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:18:54.831
    STEP: Updating a validating webhook configuration's rules to not include the create operation 01/30/23 08:18:54.837
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:18:54.843
    STEP: Patching a validating webhook configuration's rules to include the create operation 01/30/23 08:18:54.851
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:18:54.857
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:18:54.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1334" for this suite. 01/30/23 08:18:54.907
    STEP: Destroying namespace "webhook-1334-markers" for this suite. 01/30/23 08:18:54.913
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:18:54.922
Jan 30 08:18:54.922: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:18:54.924
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:54.933
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:54.935
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
STEP: Creating the pod 01/30/23 08:18:54.941
Jan 30 08:18:54.947: INFO: Waiting up to 5m0s for pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5" in namespace "projected-8236" to be "running and ready"
Jan 30 08:18:54.952: INFO: Pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.187256ms
Jan 30 08:18:54.952: INFO: The phase of Pod annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:18:56.954: INFO: Pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5": Phase="Running", Reason="", readiness=true. Elapsed: 2.006682675s
Jan 30 08:18:56.954: INFO: The phase of Pod annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5 is Running (Ready = true)
Jan 30 08:18:56.954: INFO: Pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5" satisfied condition "running and ready"
Jan 30 08:18:57.468: INFO: Successfully updated pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 08:19:01.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8236" for this suite. 01/30/23 08:19:01.482
------------------------------
â€¢ [SLOW TEST] [6.574 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:18:54.922
    Jan 30 08:18:54.922: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:18:54.924
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:18:54.933
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:18:54.935
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:162
    STEP: Creating the pod 01/30/23 08:18:54.941
    Jan 30 08:18:54.947: INFO: Waiting up to 5m0s for pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5" in namespace "projected-8236" to be "running and ready"
    Jan 30 08:18:54.952: INFO: Pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.187256ms
    Jan 30 08:18:54.952: INFO: The phase of Pod annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:18:56.954: INFO: Pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5": Phase="Running", Reason="", readiness=true. Elapsed: 2.006682675s
    Jan 30 08:18:56.954: INFO: The phase of Pod annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5 is Running (Ready = true)
    Jan 30 08:18:56.954: INFO: Pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5" satisfied condition "running and ready"
    Jan 30 08:18:57.468: INFO: Successfully updated pod "annotationupdate3f1dd2e8-ab8c-4760-8155-82405d80e4d5"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:19:01.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8236" for this suite. 01/30/23 08:19:01.482
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:19:01.496
Jan 30 08:19:01.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename cronjob 01/30/23 08:19:01.497
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:19:01.505
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:19:01.506
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
STEP: Creating a cronjob 01/30/23 08:19:01.508
STEP: Ensuring more than one job is running at a time 01/30/23 08:19:01.516
STEP: Ensuring at least two running jobs exists by listing jobs explicitly 01/30/23 08:21:01.519
STEP: Removing cronjob 01/30/23 08:21:01.521
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 30 08:21:01.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-1151" for this suite. 01/30/23 08:21:01.533
------------------------------
â€¢ [SLOW TEST] [120.042 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:19:01.496
    Jan 30 08:19:01.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename cronjob 01/30/23 08:19:01.497
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:19:01.505
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:19:01.506
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule multiple jobs concurrently [Conformance]
      test/e2e/apps/cronjob.go:69
    STEP: Creating a cronjob 01/30/23 08:19:01.508
    STEP: Ensuring more than one job is running at a time 01/30/23 08:19:01.516
    STEP: Ensuring at least two running jobs exists by listing jobs explicitly 01/30/23 08:21:01.519
    STEP: Removing cronjob 01/30/23 08:21:01.521
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:21:01.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-1151" for this suite. 01/30/23 08:21:01.533
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:21:01.54
Jan 30 08:21:01.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:21:01.541
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:21:01.555
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:21:01.557
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
STEP: Creating a pod to test downward API volume plugin 01/30/23 08:21:01.559
Jan 30 08:21:01.570: INFO: Waiting up to 5m0s for pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f" in namespace "projected-7947" to be "Succeeded or Failed"
Jan 30 08:21:01.572: INFO: Pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.141371ms
Jan 30 08:21:03.576: INFO: Pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005614188s
Jan 30 08:21:05.575: INFO: Pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004538276s
STEP: Saw pod success 01/30/23 08:21:05.575
Jan 30 08:21:05.575: INFO: Pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f" satisfied condition "Succeeded or Failed"
Jan 30 08:21:05.577: INFO: Trying to get logs from node tce-worker pod downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f container client-container: <nil>
STEP: delete the pod 01/30/23 08:21:05.583
Jan 30 08:21:05.602: INFO: Waiting for pod downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f to disappear
Jan 30 08:21:05.604: INFO: Pod downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 08:21:05.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7947" for this suite. 01/30/23 08:21:05.606
------------------------------
â€¢ [4.069 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:21:01.54
    Jan 30 08:21:01.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:21:01.541
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:21:01.555
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:21:01.557
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:249
    STEP: Creating a pod to test downward API volume plugin 01/30/23 08:21:01.559
    Jan 30 08:21:01.570: INFO: Waiting up to 5m0s for pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f" in namespace "projected-7947" to be "Succeeded or Failed"
    Jan 30 08:21:01.572: INFO: Pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.141371ms
    Jan 30 08:21:03.576: INFO: Pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005614188s
    Jan 30 08:21:05.575: INFO: Pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004538276s
    STEP: Saw pod success 01/30/23 08:21:05.575
    Jan 30 08:21:05.575: INFO: Pod "downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f" satisfied condition "Succeeded or Failed"
    Jan 30 08:21:05.577: INFO: Trying to get logs from node tce-worker pod downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f container client-container: <nil>
    STEP: delete the pod 01/30/23 08:21:05.583
    Jan 30 08:21:05.602: INFO: Waiting for pod downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f to disappear
    Jan 30 08:21:05.604: INFO: Pod downwardapi-volume-03c08b49-7c1a-4b1f-a70e-aabe4afe3a1f no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:21:05.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7947" for this suite. 01/30/23 08:21:05.606
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:21:05.612
Jan 30 08:21:05.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-pred 01/30/23 08:21:05.612
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:21:05.62
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:21:05.622
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Jan 30 08:21:05.624: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 30 08:21:05.628: INFO: Waiting for terminating namespaces to be deleted...
Jan 30 08:21:05.629: INFO: 
Logging pods the apiserver thinks is on node tce-worker before test
Jan 30 08:21:05.632: INFO: kube-flannel-ds-f9fvr from kube-flannel started at 2023-01-30 08:08:06 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.632: INFO: 	Container kube-flannel ready: true, restart count 0
Jan 30 08:21:05.632: INFO: kube-proxy-qskrv from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.632: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 30 08:21:05.632: INFO: sonobuoy from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.632: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 30 08:21:05.632: INFO: sonobuoy-e2e-job-bfd46d4d86374bf4 from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (2 container statuses recorded)
Jan 30 08:21:05.632: INFO: 	Container e2e ready: true, restart count 0
Jan 30 08:21:05.632: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:21:05.632: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
Jan 30 08:21:05.632: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:21:05.632: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 08:21:05.632: INFO: 
Logging pods the apiserver thinks is on node tce-worker2 before test
Jan 30 08:21:05.635: INFO: concurrent-27917780-t2fl9 from cronjob-1151 started at 2023-01-30 08:20:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.635: INFO: 	Container c ready: true, restart count 0
Jan 30 08:21:05.635: INFO: concurrent-27917781-86ff5 from cronjob-1151 started at 2023-01-30 08:21:00 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.635: INFO: 	Container c ready: true, restart count 0
Jan 30 08:21:05.635: INFO: kube-flannel-ds-8h4ls from kube-flannel started at 2023-01-30 08:08:06 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.635: INFO: 	Container kube-flannel ready: true, restart count 0
Jan 30 08:21:05.635: INFO: coredns-787d4945fb-48bt4 from kube-system started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.635: INFO: 	Container coredns ready: true, restart count 0
Jan 30 08:21:05.635: INFO: coredns-787d4945fb-rhbnv from kube-system started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.635: INFO: 	Container coredns ready: true, restart count 0
Jan 30 08:21:05.635: INFO: kube-proxy-6h6xz from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.635: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 30 08:21:05.635: INFO: local-path-provisioner-c8855d4bb-9rgrk from local-path-storage started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
Jan 30 08:21:05.635: INFO: 	Container local-path-provisioner ready: true, restart count 0
Jan 30 08:21:05.635: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
Jan 30 08:21:05.635: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 08:21:05.635: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
STEP: Trying to launch a pod without a label to get a node which can launch it. 01/30/23 08:21:05.635
Jan 30 08:21:05.640: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-8771" to be "running"
Jan 30 08:21:05.642: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 1.734953ms
Jan 30 08:21:07.644: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.003957222s
Jan 30 08:21:07.644: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 01/30/23 08:21:07.646
STEP: Trying to apply a random label on the found node. 01/30/23 08:21:07.661
STEP: verifying the node has the label kubernetes.io/e2e-8fca1a88-e013-4c58-8823-1bb15498e06d 95 01/30/23 08:21:07.668
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 01/30/23 08:21:07.671
Jan 30 08:21:07.676: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-8771" to be "not pending"
Jan 30 08:21:07.678: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 1.898007ms
Jan 30 08:21:09.681: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.005097162s
Jan 30 08:21:09.681: INFO: Pod "pod4" satisfied condition "not pending"
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.20.0.2 on the node which pod4 resides and expect not scheduled 01/30/23 08:21:09.681
Jan 30 08:21:09.695: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-8771" to be "not pending"
Jan 30 08:21:09.697: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005153ms
Jan 30 08:21:11.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004539358s
Jan 30 08:21:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.004813192s
Jan 30 08:21:15.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.004336752s
Jan 30 08:21:17.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.00551107s
Jan 30 08:21:19.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.005762507s
Jan 30 08:21:21.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.006300561s
Jan 30 08:21:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.005641185s
Jan 30 08:21:25.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.005722719s
Jan 30 08:21:27.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.005693367s
Jan 30 08:21:29.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.004838452s
Jan 30 08:21:31.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.00459563s
Jan 30 08:21:33.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.004565823s
Jan 30 08:21:35.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.005884576s
Jan 30 08:21:37.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.006320466s
Jan 30 08:21:39.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.005617171s
Jan 30 08:21:41.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.005496627s
Jan 30 08:21:43.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.004602136s
Jan 30 08:21:45.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.005815468s
Jan 30 08:21:47.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.006219286s
Jan 30 08:21:49.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.005359397s
Jan 30 08:21:51.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.005226081s
Jan 30 08:21:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.005339978s
Jan 30 08:21:55.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.005486752s
Jan 30 08:21:57.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.004850672s
Jan 30 08:21:59.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.006002689s
Jan 30 08:22:01.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.005946847s
Jan 30 08:22:03.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.004989941s
Jan 30 08:22:05.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.005918442s
Jan 30 08:22:07.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.006060835s
Jan 30 08:22:09.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.004476262s
Jan 30 08:22:11.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.005046406s
Jan 30 08:22:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.005293327s
Jan 30 08:22:15.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.004720378s
Jan 30 08:22:17.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.004958162s
Jan 30 08:22:19.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.005272399s
Jan 30 08:22:21.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.004394083s
Jan 30 08:22:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.004941317s
Jan 30 08:22:25.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.005200168s
Jan 30 08:22:27.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.005859744s
Jan 30 08:22:29.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.004944896s
Jan 30 08:22:31.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.006388101s
Jan 30 08:22:33.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.005101365s
Jan 30 08:22:35.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.004470922s
Jan 30 08:22:37.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.004512686s
Jan 30 08:22:39.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.005615462s
Jan 30 08:22:41.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.00565028s
Jan 30 08:22:43.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.005034712s
Jan 30 08:22:45.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.00627178s
Jan 30 08:22:47.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.005108417s
Jan 30 08:22:49.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.005686297s
Jan 30 08:22:51.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.005303278s
Jan 30 08:22:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.00469807s
Jan 30 08:22:55.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.006036348s
Jan 30 08:22:57.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.006429313s
Jan 30 08:22:59.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.005573175s
Jan 30 08:23:01.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.004581971s
Jan 30 08:23:03.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.004949289s
Jan 30 08:23:05.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.006177278s
Jan 30 08:23:07.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.005032345s
Jan 30 08:23:09.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.005747157s
Jan 30 08:23:11.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.005444195s
Jan 30 08:23:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.004690584s
Jan 30 08:23:15.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.005279077s
Jan 30 08:23:17.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.005682282s
Jan 30 08:23:19.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.006129398s
Jan 30 08:23:21.702: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.006712191s
Jan 30 08:23:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.005173682s
Jan 30 08:23:25.702: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.006953697s
Jan 30 08:23:27.712: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.017491387s
Jan 30 08:23:29.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.004433913s
Jan 30 08:23:31.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.00574188s
Jan 30 08:23:33.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.004721043s
Jan 30 08:23:35.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.00507811s
Jan 30 08:23:37.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.00485966s
Jan 30 08:23:39.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.004628567s
Jan 30 08:23:41.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.005641895s
Jan 30 08:23:43.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.005209434s
Jan 30 08:23:45.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.004586104s
Jan 30 08:23:47.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.005367089s
Jan 30 08:23:49.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.005822258s
Jan 30 08:23:51.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.005782254s
Jan 30 08:23:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.004827002s
Jan 30 08:23:55.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.006087699s
Jan 30 08:23:57.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.006438611s
Jan 30 08:23:59.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.005641051s
Jan 30 08:24:01.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.00416971s
Jan 30 08:24:03.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.005100878s
Jan 30 08:24:05.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.006357742s
Jan 30 08:24:07.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.005002254s
Jan 30 08:24:09.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.00530237s
Jan 30 08:24:11.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.004745414s
Jan 30 08:24:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.004833529s
Jan 30 08:24:15.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.004709774s
Jan 30 08:24:17.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.004685024s
Jan 30 08:24:19.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.006138092s
Jan 30 08:24:21.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.005259034s
Jan 30 08:24:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.0047409s
Jan 30 08:24:25.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.005249438s
Jan 30 08:24:27.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.005500609s
Jan 30 08:24:29.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.005340947s
Jan 30 08:24:31.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.004654254s
Jan 30 08:24:33.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.005234427s
Jan 30 08:24:35.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.005157347s
Jan 30 08:24:37.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.005269869s
Jan 30 08:24:39.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.005655256s
Jan 30 08:24:41.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.006202953s
Jan 30 08:24:43.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.004720506s
Jan 30 08:24:45.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.005522526s
Jan 30 08:24:47.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.004907068s
Jan 30 08:24:49.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.005579755s
Jan 30 08:24:51.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.005750964s
Jan 30 08:24:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.005299921s
Jan 30 08:24:55.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.004981773s
Jan 30 08:24:57.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.006139485s
Jan 30 08:24:59.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.005331321s
Jan 30 08:25:01.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.005318588s
Jan 30 08:25:03.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.0045852s
Jan 30 08:25:05.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.004203057s
Jan 30 08:25:07.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.005388776s
Jan 30 08:25:09.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.005158005s
Jan 30 08:25:11.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.006110226s
Jan 30 08:25:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.004728829s
Jan 30 08:25:15.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.006010014s
Jan 30 08:25:17.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.006382511s
Jan 30 08:25:19.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.004914235s
Jan 30 08:25:21.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.005919279s
Jan 30 08:25:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.004859953s
Jan 30 08:25:25.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.004822187s
Jan 30 08:25:27.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.005822233s
Jan 30 08:25:29.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.005327224s
Jan 30 08:25:31.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.005453901s
Jan 30 08:25:33.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.005417171s
Jan 30 08:25:35.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.005134474s
Jan 30 08:25:37.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.00598707s
Jan 30 08:25:39.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.0047006s
Jan 30 08:25:41.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.005794856s
Jan 30 08:25:43.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.004459932s
Jan 30 08:25:45.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.005724727s
Jan 30 08:25:47.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.005110076s
Jan 30 08:25:49.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.005552845s
Jan 30 08:25:51.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.005630393s
Jan 30 08:25:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.004942521s
Jan 30 08:25:55.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.004534295s
Jan 30 08:25:57.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.005109934s
Jan 30 08:25:59.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.004822833s
Jan 30 08:26:01.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.005822434s
Jan 30 08:26:03.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.004375335s
Jan 30 08:26:05.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.005338067s
Jan 30 08:26:07.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.005696508s
Jan 30 08:26:09.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.004286655s
Jan 30 08:26:09.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.006257557s
STEP: removing the label kubernetes.io/e2e-8fca1a88-e013-4c58-8823-1bb15498e06d off the node tce-worker 01/30/23 08:26:09.701
STEP: verifying the node doesn't have the label kubernetes.io/e2e-8fca1a88-e013-4c58-8823-1bb15498e06d 01/30/23 08:26:09.71
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:26:09.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-8771" for this suite. 01/30/23 08:26:09.715
------------------------------
â€¢ [SLOW TEST] [304.108 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:21:05.612
    Jan 30 08:21:05.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-pred 01/30/23 08:21:05.612
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:21:05.62
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:21:05.622
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Jan 30 08:21:05.624: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Jan 30 08:21:05.628: INFO: Waiting for terminating namespaces to be deleted...
    Jan 30 08:21:05.629: INFO: 
    Logging pods the apiserver thinks is on node tce-worker before test
    Jan 30 08:21:05.632: INFO: kube-flannel-ds-f9fvr from kube-flannel started at 2023-01-30 08:08:06 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.632: INFO: 	Container kube-flannel ready: true, restart count 0
    Jan 30 08:21:05.632: INFO: kube-proxy-qskrv from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.632: INFO: 	Container kube-proxy ready: true, restart count 0
    Jan 30 08:21:05.632: INFO: sonobuoy from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.632: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Jan 30 08:21:05.632: INFO: sonobuoy-e2e-job-bfd46d4d86374bf4 from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (2 container statuses recorded)
    Jan 30 08:21:05.632: INFO: 	Container e2e ready: true, restart count 0
    Jan 30 08:21:05.632: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 08:21:05.632: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
    Jan 30 08:21:05.632: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 08:21:05.632: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 30 08:21:05.632: INFO: 
    Logging pods the apiserver thinks is on node tce-worker2 before test
    Jan 30 08:21:05.635: INFO: concurrent-27917780-t2fl9 from cronjob-1151 started at 2023-01-30 08:20:00 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.635: INFO: 	Container c ready: true, restart count 0
    Jan 30 08:21:05.635: INFO: concurrent-27917781-86ff5 from cronjob-1151 started at 2023-01-30 08:21:00 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.635: INFO: 	Container c ready: true, restart count 0
    Jan 30 08:21:05.635: INFO: kube-flannel-ds-8h4ls from kube-flannel started at 2023-01-30 08:08:06 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.635: INFO: 	Container kube-flannel ready: true, restart count 0
    Jan 30 08:21:05.635: INFO: coredns-787d4945fb-48bt4 from kube-system started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.635: INFO: 	Container coredns ready: true, restart count 0
    Jan 30 08:21:05.635: INFO: coredns-787d4945fb-rhbnv from kube-system started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.635: INFO: 	Container coredns ready: true, restart count 0
    Jan 30 08:21:05.635: INFO: kube-proxy-6h6xz from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.635: INFO: 	Container kube-proxy ready: true, restart count 0
    Jan 30 08:21:05.635: INFO: local-path-provisioner-c8855d4bb-9rgrk from local-path-storage started at 2023-01-30 08:08:13 +0000 UTC (1 container statuses recorded)
    Jan 30 08:21:05.635: INFO: 	Container local-path-provisioner ready: true, restart count 0
    Jan 30 08:21:05.635: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
    Jan 30 08:21:05.635: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 08:21:05.635: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
      test/e2e/scheduling/predicates.go:704
    STEP: Trying to launch a pod without a label to get a node which can launch it. 01/30/23 08:21:05.635
    Jan 30 08:21:05.640: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-8771" to be "running"
    Jan 30 08:21:05.642: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 1.734953ms
    Jan 30 08:21:07.644: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.003957222s
    Jan 30 08:21:07.644: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 01/30/23 08:21:07.646
    STEP: Trying to apply a random label on the found node. 01/30/23 08:21:07.661
    STEP: verifying the node has the label kubernetes.io/e2e-8fca1a88-e013-4c58-8823-1bb15498e06d 95 01/30/23 08:21:07.668
    STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 01/30/23 08:21:07.671
    Jan 30 08:21:07.676: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-8771" to be "not pending"
    Jan 30 08:21:07.678: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 1.898007ms
    Jan 30 08:21:09.681: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.005097162s
    Jan 30 08:21:09.681: INFO: Pod "pod4" satisfied condition "not pending"
    STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.20.0.2 on the node which pod4 resides and expect not scheduled 01/30/23 08:21:09.681
    Jan 30 08:21:09.695: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-8771" to be "not pending"
    Jan 30 08:21:09.697: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005153ms
    Jan 30 08:21:11.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004539358s
    Jan 30 08:21:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.004813192s
    Jan 30 08:21:15.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.004336752s
    Jan 30 08:21:17.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.00551107s
    Jan 30 08:21:19.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.005762507s
    Jan 30 08:21:21.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.006300561s
    Jan 30 08:21:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.005641185s
    Jan 30 08:21:25.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.005722719s
    Jan 30 08:21:27.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.005693367s
    Jan 30 08:21:29.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.004838452s
    Jan 30 08:21:31.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.00459563s
    Jan 30 08:21:33.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.004565823s
    Jan 30 08:21:35.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.005884576s
    Jan 30 08:21:37.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.006320466s
    Jan 30 08:21:39.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.005617171s
    Jan 30 08:21:41.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.005496627s
    Jan 30 08:21:43.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.004602136s
    Jan 30 08:21:45.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.005815468s
    Jan 30 08:21:47.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.006219286s
    Jan 30 08:21:49.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.005359397s
    Jan 30 08:21:51.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.005226081s
    Jan 30 08:21:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.005339978s
    Jan 30 08:21:55.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.005486752s
    Jan 30 08:21:57.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.004850672s
    Jan 30 08:21:59.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.006002689s
    Jan 30 08:22:01.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.005946847s
    Jan 30 08:22:03.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.004989941s
    Jan 30 08:22:05.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.005918442s
    Jan 30 08:22:07.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.006060835s
    Jan 30 08:22:09.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.004476262s
    Jan 30 08:22:11.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.005046406s
    Jan 30 08:22:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.005293327s
    Jan 30 08:22:15.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.004720378s
    Jan 30 08:22:17.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.004958162s
    Jan 30 08:22:19.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.005272399s
    Jan 30 08:22:21.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.004394083s
    Jan 30 08:22:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.004941317s
    Jan 30 08:22:25.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.005200168s
    Jan 30 08:22:27.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.005859744s
    Jan 30 08:22:29.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.004944896s
    Jan 30 08:22:31.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.006388101s
    Jan 30 08:22:33.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.005101365s
    Jan 30 08:22:35.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.004470922s
    Jan 30 08:22:37.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.004512686s
    Jan 30 08:22:39.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.005615462s
    Jan 30 08:22:41.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.00565028s
    Jan 30 08:22:43.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.005034712s
    Jan 30 08:22:45.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.00627178s
    Jan 30 08:22:47.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.005108417s
    Jan 30 08:22:49.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.005686297s
    Jan 30 08:22:51.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.005303278s
    Jan 30 08:22:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.00469807s
    Jan 30 08:22:55.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.006036348s
    Jan 30 08:22:57.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.006429313s
    Jan 30 08:22:59.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.005573175s
    Jan 30 08:23:01.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.004581971s
    Jan 30 08:23:03.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.004949289s
    Jan 30 08:23:05.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.006177278s
    Jan 30 08:23:07.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.005032345s
    Jan 30 08:23:09.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.005747157s
    Jan 30 08:23:11.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.005444195s
    Jan 30 08:23:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.004690584s
    Jan 30 08:23:15.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.005279077s
    Jan 30 08:23:17.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.005682282s
    Jan 30 08:23:19.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.006129398s
    Jan 30 08:23:21.702: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.006712191s
    Jan 30 08:23:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.005173682s
    Jan 30 08:23:25.702: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.006953697s
    Jan 30 08:23:27.712: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.017491387s
    Jan 30 08:23:29.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.004433913s
    Jan 30 08:23:31.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.00574188s
    Jan 30 08:23:33.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.004721043s
    Jan 30 08:23:35.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.00507811s
    Jan 30 08:23:37.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.00485966s
    Jan 30 08:23:39.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.004628567s
    Jan 30 08:23:41.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.005641895s
    Jan 30 08:23:43.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.005209434s
    Jan 30 08:23:45.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.004586104s
    Jan 30 08:23:47.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.005367089s
    Jan 30 08:23:49.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.005822258s
    Jan 30 08:23:51.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.005782254s
    Jan 30 08:23:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.004827002s
    Jan 30 08:23:55.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.006087699s
    Jan 30 08:23:57.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.006438611s
    Jan 30 08:23:59.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.005641051s
    Jan 30 08:24:01.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.00416971s
    Jan 30 08:24:03.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.005100878s
    Jan 30 08:24:05.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.006357742s
    Jan 30 08:24:07.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.005002254s
    Jan 30 08:24:09.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.00530237s
    Jan 30 08:24:11.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.004745414s
    Jan 30 08:24:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.004833529s
    Jan 30 08:24:15.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.004709774s
    Jan 30 08:24:17.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.004685024s
    Jan 30 08:24:19.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.006138092s
    Jan 30 08:24:21.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.005259034s
    Jan 30 08:24:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.0047409s
    Jan 30 08:24:25.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.005249438s
    Jan 30 08:24:27.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.005500609s
    Jan 30 08:24:29.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.005340947s
    Jan 30 08:24:31.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.004654254s
    Jan 30 08:24:33.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.005234427s
    Jan 30 08:24:35.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.005157347s
    Jan 30 08:24:37.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.005269869s
    Jan 30 08:24:39.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.005655256s
    Jan 30 08:24:41.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.006202953s
    Jan 30 08:24:43.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.004720506s
    Jan 30 08:24:45.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.005522526s
    Jan 30 08:24:47.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.004907068s
    Jan 30 08:24:49.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.005579755s
    Jan 30 08:24:51.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.005750964s
    Jan 30 08:24:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.005299921s
    Jan 30 08:24:55.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.004981773s
    Jan 30 08:24:57.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.006139485s
    Jan 30 08:24:59.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.005331321s
    Jan 30 08:25:01.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.005318588s
    Jan 30 08:25:03.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.0045852s
    Jan 30 08:25:05.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.004203057s
    Jan 30 08:25:07.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.005388776s
    Jan 30 08:25:09.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.005158005s
    Jan 30 08:25:11.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.006110226s
    Jan 30 08:25:13.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.004728829s
    Jan 30 08:25:15.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.006010014s
    Jan 30 08:25:17.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.006382511s
    Jan 30 08:25:19.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.004914235s
    Jan 30 08:25:21.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.005919279s
    Jan 30 08:25:23.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.004859953s
    Jan 30 08:25:25.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.004822187s
    Jan 30 08:25:27.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.005822233s
    Jan 30 08:25:29.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.005327224s
    Jan 30 08:25:31.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.005453901s
    Jan 30 08:25:33.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.005417171s
    Jan 30 08:25:35.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.005134474s
    Jan 30 08:25:37.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.00598707s
    Jan 30 08:25:39.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.0047006s
    Jan 30 08:25:41.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.005794856s
    Jan 30 08:25:43.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.004459932s
    Jan 30 08:25:45.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.005724727s
    Jan 30 08:25:47.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.005110076s
    Jan 30 08:25:49.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.005552845s
    Jan 30 08:25:51.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.005630393s
    Jan 30 08:25:53.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.004942521s
    Jan 30 08:25:55.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.004534295s
    Jan 30 08:25:57.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.005109934s
    Jan 30 08:25:59.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.004822833s
    Jan 30 08:26:01.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.005822434s
    Jan 30 08:26:03.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.004375335s
    Jan 30 08:26:05.700: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.005338067s
    Jan 30 08:26:07.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.005696508s
    Jan 30 08:26:09.699: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.004286655s
    Jan 30 08:26:09.701: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.006257557s
    STEP: removing the label kubernetes.io/e2e-8fca1a88-e013-4c58-8823-1bb15498e06d off the node tce-worker 01/30/23 08:26:09.701
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-8fca1a88-e013-4c58-8823-1bb15498e06d 01/30/23 08:26:09.71
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:26:09.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-8771" for this suite. 01/30/23 08:26:09.715
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:26:09.722
Jan 30 08:26:09.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 08:26:09.723
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:09.734
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:09.736
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 01/30/23 08:26:09.742
Jan 30 08:26:09.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:26:11.068: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:26:16.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-3" for this suite. 01/30/23 08:26:16.745
------------------------------
â€¢ [SLOW TEST] [7.029 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:26:09.722
    Jan 30 08:26:09.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 08:26:09.723
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:09.734
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:09.736
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of different groups [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:276
    STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 01/30/23 08:26:09.742
    Jan 30 08:26:09.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:26:11.068: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:26:16.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-3" for this suite. 01/30/23 08:26:16.745
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:26:16.752
Jan 30 08:26:16.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:26:16.753
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:16.762
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:16.764
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
Jan 30 08:26:16.772: INFO: Waiting up to 5m0s for pod "busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1" in namespace "kubelet-test-5157" to be "running and ready"
Jan 30 08:26:16.774: INFO: Pod "busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1": Phase="Pending", Reason="", readiness=false. Elapsed: 1.95417ms
Jan 30 08:26:16.774: INFO: The phase of Pod busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:26:18.777: INFO: Pod "busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1": Phase="Running", Reason="", readiness=true. Elapsed: 2.004606772s
Jan 30 08:26:18.777: INFO: The phase of Pod busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1 is Running (Ready = true)
Jan 30 08:26:18.777: INFO: Pod "busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:26:18.787: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-5157" for this suite. 01/30/23 08:26:18.789
------------------------------
â€¢ [2.042 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a read only busybox container
  test/e2e/common/node/kubelet.go:175
    should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:26:16.752
    Jan 30 08:26:16.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:26:16.753
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:16.762
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:16.764
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:184
    Jan 30 08:26:16.772: INFO: Waiting up to 5m0s for pod "busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1" in namespace "kubelet-test-5157" to be "running and ready"
    Jan 30 08:26:16.774: INFO: Pod "busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1": Phase="Pending", Reason="", readiness=false. Elapsed: 1.95417ms
    Jan 30 08:26:16.774: INFO: The phase of Pod busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:26:18.777: INFO: Pod "busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1": Phase="Running", Reason="", readiness=true. Elapsed: 2.004606772s
    Jan 30 08:26:18.777: INFO: The phase of Pod busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1 is Running (Ready = true)
    Jan 30 08:26:18.777: INFO: Pod "busybox-readonly-fs811edc1f-87a5-4417-b202-268b758d6da1" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:26:18.787: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-5157" for this suite. 01/30/23 08:26:18.789
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:26:18.795
Jan 30 08:26:18.795: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename endpointslice 01/30/23 08:26:18.795
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:18.804
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:18.806
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
STEP: referencing a single matching pod 01/30/23 08:26:23.862
STEP: referencing matching pods with named port 01/30/23 08:26:28.869
STEP: creating empty Endpoints and EndpointSlices for no matching Pods 01/30/23 08:26:33.874
STEP: recreating EndpointSlices after they've been deleted 01/30/23 08:26:38.879
Jan 30 08:26:38.904: INFO: EndpointSlice for Service endpointslice-2533/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Jan 30 08:26:48.909: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-2533" for this suite. 01/30/23 08:26:48.911
------------------------------
â€¢ [SLOW TEST] [30.131 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:26:18.795
    Jan 30 08:26:18.795: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename endpointslice 01/30/23 08:26:18.795
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:18.804
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:18.806
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
      test/e2e/network/endpointslice.go:205
    STEP: referencing a single matching pod 01/30/23 08:26:23.862
    STEP: referencing matching pods with named port 01/30/23 08:26:28.869
    STEP: creating empty Endpoints and EndpointSlices for no matching Pods 01/30/23 08:26:33.874
    STEP: recreating EndpointSlices after they've been deleted 01/30/23 08:26:38.879
    Jan 30 08:26:38.904: INFO: EndpointSlice for Service endpointslice-2533/example-named-port not found
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:26:48.909: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-2533" for this suite. 01/30/23 08:26:48.911
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:26:48.926
Jan 30 08:26:48.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:26:48.927
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:48.935
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:48.937
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:26:48.948
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:26:49.09
STEP: Deploying the webhook pod 01/30/23 08:26:49.103
STEP: Wait for the deployment to be ready 01/30/23 08:26:49.117
Jan 30 08:26:49.124: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:26:51.129
STEP: Verifying the service has paired with the endpoint 01/30/23 08:26:51.148
Jan 30 08:26:52.148: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
STEP: Listing all of the created validation webhooks 01/30/23 08:26:52.21
STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:26:52.235
STEP: Deleting the collection of validation webhooks 01/30/23 08:26:52.257
STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:26:52.283
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:26:52.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5779" for this suite. 01/30/23 08:26:52.327
STEP: Destroying namespace "webhook-5779-markers" for this suite. 01/30/23 08:26:52.333
------------------------------
â€¢ [3.414 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:26:48.926
    Jan 30 08:26:48.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:26:48.927
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:48.935
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:48.937
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:26:48.948
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:26:49.09
    STEP: Deploying the webhook pod 01/30/23 08:26:49.103
    STEP: Wait for the deployment to be ready 01/30/23 08:26:49.117
    Jan 30 08:26:49.124: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:26:51.129
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:26:51.148
    Jan 30 08:26:52.148: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing validating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:582
    STEP: Listing all of the created validation webhooks 01/30/23 08:26:52.21
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:26:52.235
    STEP: Deleting the collection of validation webhooks 01/30/23 08:26:52.257
    STEP: Creating a configMap that does not comply to the validation webhook rules 01/30/23 08:26:52.283
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:26:52.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5779" for this suite. 01/30/23 08:26:52.327
    STEP: Destroying namespace "webhook-5779-markers" for this suite. 01/30/23 08:26:52.333
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:26:52.34
Jan 30 08:26:52.340: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:26:52.341
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:52.35
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:52.352
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:26:52.367
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:26:52.494
STEP: Deploying the webhook pod 01/30/23 08:26:52.5
STEP: Wait for the deployment to be ready 01/30/23 08:26:52.508
Jan 30 08:26:52.514: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:26:54.52
STEP: Verifying the service has paired with the endpoint 01/30/23 08:26:54.539
Jan 30 08:26:55.539: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
STEP: Listing all of the created validation webhooks 01/30/23 08:26:55.59
STEP: Creating a configMap that should be mutated 01/30/23 08:26:55.599
STEP: Deleting the collection of validation webhooks 01/30/23 08:26:55.617
STEP: Creating a configMap that should not be mutated 01/30/23 08:26:55.643
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:26:55.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4608" for this suite. 01/30/23 08:26:55.678
STEP: Destroying namespace "webhook-4608-markers" for this suite. 01/30/23 08:26:55.684
------------------------------
â€¢ [3.351 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:26:52.34
    Jan 30 08:26:52.340: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:26:52.341
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:52.35
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:52.352
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:26:52.367
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:26:52.494
    STEP: Deploying the webhook pod 01/30/23 08:26:52.5
    STEP: Wait for the deployment to be ready 01/30/23 08:26:52.508
    Jan 30 08:26:52.514: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:26:54.52
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:26:54.539
    Jan 30 08:26:55.539: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing mutating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:656
    STEP: Listing all of the created validation webhooks 01/30/23 08:26:55.59
    STEP: Creating a configMap that should be mutated 01/30/23 08:26:55.599
    STEP: Deleting the collection of validation webhooks 01/30/23 08:26:55.617
    STEP: Creating a configMap that should not be mutated 01/30/23 08:26:55.643
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:26:55.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4608" for this suite. 01/30/23 08:26:55.678
    STEP: Destroying namespace "webhook-4608-markers" for this suite. 01/30/23 08:26:55.684
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server
  should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:26:55.691
Jan 30 08:26:55.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:26:55.692
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:55.702
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:55.704
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
STEP: starting the proxy server 01/30/23 08:26:55.707
Jan 30 08:26:55.707: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-1664 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output 01/30/23 08:26:55.753
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:26:55.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1664" for this suite. 01/30/23 08:26:55.763
------------------------------
â€¢ [0.079 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support proxy with --port 0  [Conformance]
    test/e2e/kubectl/kubectl.go:1787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:26:55.691
    Jan 30 08:26:55.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:26:55.692
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:55.702
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:55.704
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support proxy with --port 0  [Conformance]
      test/e2e/kubectl/kubectl.go:1787
    STEP: starting the proxy server 01/30/23 08:26:55.707
    Jan 30 08:26:55.707: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-1664 proxy -p 0 --disable-filter'
    STEP: curling proxy /api/ output 01/30/23 08:26:55.753
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:26:55.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1664" for this suite. 01/30/23 08:26:55.763
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:26:55.771
Jan 30 08:26:55.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename runtimeclass 01/30/23 08:26:55.772
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:55.781
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:55.783
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
STEP: getting /apis 01/30/23 08:26:55.786
STEP: getting /apis/node.k8s.io 01/30/23 08:26:55.787
STEP: getting /apis/node.k8s.io/v1 01/30/23 08:26:55.788
STEP: creating 01/30/23 08:26:55.789
STEP: watching 01/30/23 08:26:55.802
Jan 30 08:26:55.802: INFO: starting watch
STEP: getting 01/30/23 08:26:55.806
STEP: listing 01/30/23 08:26:55.808
STEP: patching 01/30/23 08:26:55.81
STEP: updating 01/30/23 08:26:55.814
Jan 30 08:26:55.818: INFO: waiting for watch events with expected annotations
STEP: deleting 01/30/23 08:26:55.819
STEP: deleting a collection 01/30/23 08:26:55.826
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 30 08:26:55.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-6190" for this suite. 01/30/23 08:26:55.837
------------------------------
â€¢ [0.071 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:26:55.771
    Jan 30 08:26:55.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename runtimeclass 01/30/23 08:26:55.772
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:55.781
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:55.783
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support RuntimeClasses API operations [Conformance]
      test/e2e/common/node/runtimeclass.go:189
    STEP: getting /apis 01/30/23 08:26:55.786
    STEP: getting /apis/node.k8s.io 01/30/23 08:26:55.787
    STEP: getting /apis/node.k8s.io/v1 01/30/23 08:26:55.788
    STEP: creating 01/30/23 08:26:55.789
    STEP: watching 01/30/23 08:26:55.802
    Jan 30 08:26:55.802: INFO: starting watch
    STEP: getting 01/30/23 08:26:55.806
    STEP: listing 01/30/23 08:26:55.808
    STEP: patching 01/30/23 08:26:55.81
    STEP: updating 01/30/23 08:26:55.814
    Jan 30 08:26:55.818: INFO: waiting for watch events with expected annotations
    STEP: deleting 01/30/23 08:26:55.819
    STEP: deleting a collection 01/30/23 08:26:55.826
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:26:55.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-6190" for this suite. 01/30/23 08:26:55.837
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:26:55.843
Jan 30 08:26:55.843: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:26:55.844
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:55.853
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:55.855
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:26:55.874
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:26:56.174
STEP: Deploying the webhook pod 01/30/23 08:26:56.193
STEP: Wait for the deployment to be ready 01/30/23 08:26:56.205
Jan 30 08:26:56.210: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:26:58.217
STEP: Verifying the service has paired with the endpoint 01/30/23 08:26:58.235
Jan 30 08:26:59.236: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
STEP: Registering the webhook via the AdmissionRegistration API 01/30/23 08:26:59.238
STEP: create a pod 01/30/23 08:26:59.259
Jan 30 08:26:59.262: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-9494" to be "running"
Jan 30 08:26:59.264: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.70541ms
Jan 30 08:27:01.267: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.0042917s
Jan 30 08:27:01.267: INFO: Pod "to-be-attached-pod" satisfied condition "running"
STEP: 'kubectl attach' the pod, should be denied by the webhook 01/30/23 08:27:01.267
Jan 30 08:27:01.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=webhook-9494 attach --namespace=webhook-9494 to-be-attached-pod -i -c=container1'
Jan 30 08:27:01.330: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:27:01.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9494" for this suite. 01/30/23 08:27:01.385
STEP: Destroying namespace "webhook-9494-markers" for this suite. 01/30/23 08:27:01.391
------------------------------
â€¢ [SLOW TEST] [5.557 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:26:55.843
    Jan 30 08:26:55.843: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:26:55.844
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:26:55.853
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:26:55.855
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:26:55.874
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:26:56.174
    STEP: Deploying the webhook pod 01/30/23 08:26:56.193
    STEP: Wait for the deployment to be ready 01/30/23 08:26:56.205
    Jan 30 08:26:56.210: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:26:58.217
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:26:58.235
    Jan 30 08:26:59.236: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny attaching pod [Conformance]
      test/e2e/apimachinery/webhook.go:209
    STEP: Registering the webhook via the AdmissionRegistration API 01/30/23 08:26:59.238
    STEP: create a pod 01/30/23 08:26:59.259
    Jan 30 08:26:59.262: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-9494" to be "running"
    Jan 30 08:26:59.264: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.70541ms
    Jan 30 08:27:01.267: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.0042917s
    Jan 30 08:27:01.267: INFO: Pod "to-be-attached-pod" satisfied condition "running"
    STEP: 'kubectl attach' the pod, should be denied by the webhook 01/30/23 08:27:01.267
    Jan 30 08:27:01.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=webhook-9494 attach --namespace=webhook-9494 to-be-attached-pod -i -c=container1'
    Jan 30 08:27:01.330: INFO: rc: 1
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:27:01.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9494" for this suite. 01/30/23 08:27:01.385
    STEP: Destroying namespace "webhook-9494-markers" for this suite. 01/30/23 08:27:01.391
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] DNS
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:27:01.4
Jan 30 08:27:01.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename dns 01/30/23 08:27:01.401
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:01.417
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:01.42
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
STEP: Creating a test headless service 01/30/23 08:27:01.425
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4621.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4621.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 23.50.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.50.23_udp@PTR;check="$$(dig +tcp +noall +answer +search 23.50.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.50.23_tcp@PTR;sleep 1; done
 01/30/23 08:27:01.462
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4621.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4621.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 23.50.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.50.23_udp@PTR;check="$$(dig +tcp +noall +answer +search 23.50.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.50.23_tcp@PTR;sleep 1; done
 01/30/23 08:27:01.462
STEP: creating a pod to probe DNS 01/30/23 08:27:01.462
STEP: submitting the pod to kubernetes 01/30/23 08:27:01.462
Jan 30 08:27:01.472: INFO: Waiting up to 15m0s for pod "dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc" in namespace "dns-4621" to be "running"
Jan 30 08:27:01.477: INFO: Pod "dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.71046ms
Jan 30 08:27:03.481: INFO: Pod "dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc": Phase="Running", Reason="", readiness=true. Elapsed: 2.008961488s
Jan 30 08:27:03.481: INFO: Pod "dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc" satisfied condition "running"
STEP: retrieving the pod 01/30/23 08:27:03.482
STEP: looking for the results for each expected name from probers 01/30/23 08:27:03.484
Jan 30 08:27:03.491: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:03.493: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:03.496: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:03.506: INFO: Unable to read jessie_udp@dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:03.507: INFO: Unable to read jessie_tcp@dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:03.509: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:03.511: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:03.517: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_tcp@dns-test-service.dns-4621.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@dns-test-service.dns-4621.svc.cluster.local jessie_tcp@dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

Jan 30 08:27:08.524: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:08.525: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:08.537: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:08.538: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:08.547: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

Jan 30 08:27:13.534: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:13.536: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:13.547: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:13.549: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:13.555: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

Jan 30 08:27:18.525: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:18.527: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:18.539: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:18.541: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:18.548: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

Jan 30 08:27:23.525: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:23.526: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:23.537: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:23.539: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:23.545: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

Jan 30 08:27:28.524: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:28.526: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:28.551: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:28.555: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
Jan 30 08:27:28.562: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

Jan 30 08:27:33.555: INFO: DNS probes using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc succeeded

STEP: deleting the pod 01/30/23 08:27:33.555
STEP: deleting the test service 01/30/23 08:27:33.576
STEP: deleting the test headless service 01/30/23 08:27:33.605
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 30 08:27:33.636: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-4621" for this suite. 01/30/23 08:27:33.642
------------------------------
â€¢ [SLOW TEST] [32.248 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:27:01.4
    Jan 30 08:27:01.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename dns 01/30/23 08:27:01.401
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:01.417
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:01.42
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for services  [Conformance]
      test/e2e/network/dns.go:137
    STEP: Creating a test headless service 01/30/23 08:27:01.425
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4621.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4621.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 23.50.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.50.23_udp@PTR;check="$$(dig +tcp +noall +answer +search 23.50.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.50.23_tcp@PTR;sleep 1; done
     01/30/23 08:27:01.462
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4621.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4621.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4621.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4621.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4621.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 23.50.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.50.23_udp@PTR;check="$$(dig +tcp +noall +answer +search 23.50.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.50.23_tcp@PTR;sleep 1; done
     01/30/23 08:27:01.462
    STEP: creating a pod to probe DNS 01/30/23 08:27:01.462
    STEP: submitting the pod to kubernetes 01/30/23 08:27:01.462
    Jan 30 08:27:01.472: INFO: Waiting up to 15m0s for pod "dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc" in namespace "dns-4621" to be "running"
    Jan 30 08:27:01.477: INFO: Pod "dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.71046ms
    Jan 30 08:27:03.481: INFO: Pod "dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc": Phase="Running", Reason="", readiness=true. Elapsed: 2.008961488s
    Jan 30 08:27:03.481: INFO: Pod "dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 08:27:03.482
    STEP: looking for the results for each expected name from probers 01/30/23 08:27:03.484
    Jan 30 08:27:03.491: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:03.493: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:03.496: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:03.506: INFO: Unable to read jessie_udp@dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:03.507: INFO: Unable to read jessie_tcp@dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:03.509: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:03.511: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:03.517: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_tcp@dns-test-service.dns-4621.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@dns-test-service.dns-4621.svc.cluster.local jessie_tcp@dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

    Jan 30 08:27:08.524: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:08.525: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:08.537: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:08.538: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:08.547: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

    Jan 30 08:27:13.534: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:13.536: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:13.547: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:13.549: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:13.555: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

    Jan 30 08:27:18.525: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:18.527: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:18.539: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:18.541: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:18.548: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

    Jan 30 08:27:23.525: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:23.526: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:23.537: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:23.539: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:23.545: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

    Jan 30 08:27:28.524: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:28.526: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:28.551: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:28.555: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local from pod dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc: the server could not find the requested resource (get pods dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc)
    Jan 30 08:27:28.562: INFO: Lookups using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4621.svc.cluster.local]

    Jan 30 08:27:33.555: INFO: DNS probes using dns-4621/dns-test-251d1170-6715-4fdb-a3bb-ae50495110fc succeeded

    STEP: deleting the pod 01/30/23 08:27:33.555
    STEP: deleting the test service 01/30/23 08:27:33.576
    STEP: deleting the test headless service 01/30/23 08:27:33.605
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:27:33.636: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-4621" for this suite. 01/30/23 08:27:33.642
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:27:33.649
Jan 30 08:27:33.649: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:27:33.65
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:33.663
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:33.666
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
STEP: Creating configMap with name configmap-test-volume-9d88917c-c89d-492a-8515-fce50f71f810 01/30/23 08:27:33.668
STEP: Creating a pod to test consume configMaps 01/30/23 08:27:33.671
Jan 30 08:27:33.679: INFO: Waiting up to 5m0s for pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b" in namespace "configmap-8092" to be "Succeeded or Failed"
Jan 30 08:27:33.682: INFO: Pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.019355ms
Jan 30 08:27:35.685: INFO: Pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00624706s
Jan 30 08:27:37.685: INFO: Pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006225553s
STEP: Saw pod success 01/30/23 08:27:37.685
Jan 30 08:27:37.685: INFO: Pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b" satisfied condition "Succeeded or Failed"
Jan 30 08:27:37.687: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b container agnhost-container: <nil>
STEP: delete the pod 01/30/23 08:27:37.69
Jan 30 08:27:37.699: INFO: Waiting for pod pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b to disappear
Jan 30 08:27:37.701: INFO: Pod pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:27:37.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8092" for this suite. 01/30/23 08:27:37.703
------------------------------
â€¢ [4.057 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:27:33.649
    Jan 30 08:27:33.649: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:27:33.65
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:33.663
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:33.666
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:57
    STEP: Creating configMap with name configmap-test-volume-9d88917c-c89d-492a-8515-fce50f71f810 01/30/23 08:27:33.668
    STEP: Creating a pod to test consume configMaps 01/30/23 08:27:33.671
    Jan 30 08:27:33.679: INFO: Waiting up to 5m0s for pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b" in namespace "configmap-8092" to be "Succeeded or Failed"
    Jan 30 08:27:33.682: INFO: Pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.019355ms
    Jan 30 08:27:35.685: INFO: Pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00624706s
    Jan 30 08:27:37.685: INFO: Pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006225553s
    STEP: Saw pod success 01/30/23 08:27:37.685
    Jan 30 08:27:37.685: INFO: Pod "pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b" satisfied condition "Succeeded or Failed"
    Jan 30 08:27:37.687: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 08:27:37.69
    Jan 30 08:27:37.699: INFO: Waiting for pod pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b to disappear
    Jan 30 08:27:37.701: INFO: Pod pod-configmaps-8615ddb3-5759-430b-bece-5103b6799a2b no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:27:37.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8092" for this suite. 01/30/23 08:27:37.703
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:27:37.707
Jan 30 08:27:37.707: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename events 01/30/23 08:27:37.708
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:37.717
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:37.719
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
STEP: Create set of events 01/30/23 08:27:37.721
STEP: get a list of Events with a label in the current namespace 01/30/23 08:27:37.732
STEP: delete a list of events 01/30/23 08:27:37.733
Jan 30 08:27:37.734: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 01/30/23 08:27:37.745
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Jan 30 08:27:37.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-3470" for this suite. 01/30/23 08:27:37.749
------------------------------
â€¢ [0.046 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:27:37.707
    Jan 30 08:27:37.707: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename events 01/30/23 08:27:37.708
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:37.717
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:37.719
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/events.go:207
    STEP: Create set of events 01/30/23 08:27:37.721
    STEP: get a list of Events with a label in the current namespace 01/30/23 08:27:37.732
    STEP: delete a list of events 01/30/23 08:27:37.733
    Jan 30 08:27:37.734: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 01/30/23 08:27:37.745
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:27:37.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-3470" for this suite. 01/30/23 08:27:37.749
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application
  should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:27:37.755
Jan 30 08:27:37.755: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:27:37.756
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:37.768
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:37.77
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
STEP: creating all guestbook components 01/30/23 08:27:37.773
Jan 30 08:27:37.773: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Jan 30 08:27:37.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
Jan 30 08:27:38.172: INFO: stderr: ""
Jan 30 08:27:38.172: INFO: stdout: "service/agnhost-replica created\n"
Jan 30 08:27:38.172: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Jan 30 08:27:38.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
Jan 30 08:27:38.338: INFO: stderr: ""
Jan 30 08:27:38.338: INFO: stdout: "service/agnhost-primary created\n"
Jan 30 08:27:38.339: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Jan 30 08:27:38.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
Jan 30 08:27:38.492: INFO: stderr: ""
Jan 30 08:27:38.492: INFO: stdout: "service/frontend created\n"
Jan 30 08:27:38.492: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Jan 30 08:27:38.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
Jan 30 08:27:38.634: INFO: stderr: ""
Jan 30 08:27:38.634: INFO: stdout: "deployment.apps/frontend created\n"
Jan 30 08:27:38.634: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 30 08:27:38.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
Jan 30 08:27:38.844: INFO: stderr: ""
Jan 30 08:27:38.844: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Jan 30 08:27:38.844: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jan 30 08:27:38.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
Jan 30 08:27:39.029: INFO: stderr: ""
Jan 30 08:27:39.029: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app 01/30/23 08:27:39.029
Jan 30 08:27:39.029: INFO: Waiting for all frontend pods to be Running.
Jan 30 08:27:44.082: INFO: Waiting for frontend to serve content.
Jan 30 08:27:44.089: INFO: Trying to add a new entry to the guestbook.
Jan 30 08:27:44.094: INFO: Verifying that added entry can be retrieved.
Jan 30 08:27:44.100: INFO: Failed to get response from guestbook. err: <nil>, response: {"data":""}
STEP: using delete to clean up resources 01/30/23 08:27:49.105
Jan 30 08:27:49.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
Jan 30 08:27:49.167: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:27:49.167: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources 01/30/23 08:27:49.167
Jan 30 08:27:49.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
Jan 30 08:27:49.242: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:27:49.242: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 01/30/23 08:27:49.242
Jan 30 08:27:49.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
Jan 30 08:27:49.307: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:27:49.307: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources 01/30/23 08:27:49.307
Jan 30 08:27:49.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
Jan 30 08:27:49.380: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:27:49.380: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources 01/30/23 08:27:49.38
Jan 30 08:27:49.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
Jan 30 08:27:49.473: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:27:49.473: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 01/30/23 08:27:49.473
Jan 30 08:27:49.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
Jan 30 08:27:49.548: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:27:49.548: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:27:49.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8345" for this suite. 01/30/23 08:27:49.551
------------------------------
â€¢ [SLOW TEST] [11.800 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:369
    should create and stop a working application  [Conformance]
    test/e2e/kubectl/kubectl.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:27:37.755
    Jan 30 08:27:37.755: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:27:37.756
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:37.768
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:37.77
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create and stop a working application  [Conformance]
      test/e2e/kubectl/kubectl.go:394
    STEP: creating all guestbook components 01/30/23 08:27:37.773
    Jan 30 08:27:37.773: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-replica
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      ports:
      - port: 6379
      selector:
        app: agnhost
        role: replica
        tier: backend

    Jan 30 08:27:37.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
    Jan 30 08:27:38.172: INFO: stderr: ""
    Jan 30 08:27:38.172: INFO: stdout: "service/agnhost-replica created\n"
    Jan 30 08:27:38.172: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-primary
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      ports:
      - port: 6379
        targetPort: 6379
      selector:
        app: agnhost
        role: primary
        tier: backend

    Jan 30 08:27:38.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
    Jan 30 08:27:38.338: INFO: stderr: ""
    Jan 30 08:27:38.338: INFO: stdout: "service/agnhost-primary created\n"
    Jan 30 08:27:38.339: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: frontend
      labels:
        app: guestbook
        tier: frontend
    spec:
      # if your cluster supports it, uncomment the following to automatically create
      # an external load-balanced IP for the frontend service.
      # type: LoadBalancer
      ports:
      - port: 80
      selector:
        app: guestbook
        tier: frontend

    Jan 30 08:27:38.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
    Jan 30 08:27:38.492: INFO: stderr: ""
    Jan 30 08:27:38.492: INFO: stdout: "service/frontend created\n"
    Jan 30 08:27:38.492: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: guestbook
          tier: frontend
      template:
        metadata:
          labels:
            app: guestbook
            tier: frontend
        spec:
          containers:
          - name: guestbook-frontend
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--backend-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 80

    Jan 30 08:27:38.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
    Jan 30 08:27:38.634: INFO: stderr: ""
    Jan 30 08:27:38.634: INFO: stdout: "deployment.apps/frontend created\n"
    Jan 30 08:27:38.634: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-primary
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: agnhost
          role: primary
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: primary
            tier: backend
        spec:
          containers:
          - name: primary
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Jan 30 08:27:38.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
    Jan 30 08:27:38.844: INFO: stderr: ""
    Jan 30 08:27:38.844: INFO: stdout: "deployment.apps/agnhost-primary created\n"
    Jan 30 08:27:38.844: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-replica
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: agnhost
          role: replica
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: replica
            tier: backend
        spec:
          containers:
          - name: replica
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Jan 30 08:27:38.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 create -f -'
    Jan 30 08:27:39.029: INFO: stderr: ""
    Jan 30 08:27:39.029: INFO: stdout: "deployment.apps/agnhost-replica created\n"
    STEP: validating guestbook app 01/30/23 08:27:39.029
    Jan 30 08:27:39.029: INFO: Waiting for all frontend pods to be Running.
    Jan 30 08:27:44.082: INFO: Waiting for frontend to serve content.
    Jan 30 08:27:44.089: INFO: Trying to add a new entry to the guestbook.
    Jan 30 08:27:44.094: INFO: Verifying that added entry can be retrieved.
    Jan 30 08:27:44.100: INFO: Failed to get response from guestbook. err: <nil>, response: {"data":""}
    STEP: using delete to clean up resources 01/30/23 08:27:49.105
    Jan 30 08:27:49.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
    Jan 30 08:27:49.167: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 08:27:49.167: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
    STEP: using delete to clean up resources 01/30/23 08:27:49.167
    Jan 30 08:27:49.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
    Jan 30 08:27:49.242: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 08:27:49.242: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 01/30/23 08:27:49.242
    Jan 30 08:27:49.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
    Jan 30 08:27:49.307: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 08:27:49.307: INFO: stdout: "service \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 01/30/23 08:27:49.307
    Jan 30 08:27:49.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
    Jan 30 08:27:49.380: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 08:27:49.380: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 01/30/23 08:27:49.38
    Jan 30 08:27:49.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
    Jan 30 08:27:49.473: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 08:27:49.473: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 01/30/23 08:27:49.473
    Jan 30 08:27:49.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8345 delete --grace-period=0 --force -f -'
    Jan 30 08:27:49.548: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 08:27:49.548: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:27:49.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8345" for this suite. 01/30/23 08:27:49.551
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:27:49.556
Jan 30 08:27:49.556: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 08:27:49.558
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:49.573
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:49.575
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
STEP: Creating the pod 01/30/23 08:27:49.577
Jan 30 08:27:49.584: INFO: Waiting up to 5m0s for pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d" in namespace "downward-api-4650" to be "running and ready"
Jan 30 08:27:49.588: INFO: Pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.323383ms
Jan 30 08:27:49.588: INFO: The phase of Pod annotationupdatecbc72b94-c017-4801-989b-e6d74325905d is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:27:51.591: INFO: Pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d": Phase="Running", Reason="", readiness=true. Elapsed: 2.006373778s
Jan 30 08:27:51.591: INFO: The phase of Pod annotationupdatecbc72b94-c017-4801-989b-e6d74325905d is Running (Ready = true)
Jan 30 08:27:51.591: INFO: Pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d" satisfied condition "running and ready"
Jan 30 08:27:52.107: INFO: Successfully updated pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 08:27:56.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-4650" for this suite. 01/30/23 08:27:56.124
------------------------------
â€¢ [SLOW TEST] [6.582 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:27:49.556
    Jan 30 08:27:49.556: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 08:27:49.558
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:49.573
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:49.575
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:162
    STEP: Creating the pod 01/30/23 08:27:49.577
    Jan 30 08:27:49.584: INFO: Waiting up to 5m0s for pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d" in namespace "downward-api-4650" to be "running and ready"
    Jan 30 08:27:49.588: INFO: Pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.323383ms
    Jan 30 08:27:49.588: INFO: The phase of Pod annotationupdatecbc72b94-c017-4801-989b-e6d74325905d is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:27:51.591: INFO: Pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d": Phase="Running", Reason="", readiness=true. Elapsed: 2.006373778s
    Jan 30 08:27:51.591: INFO: The phase of Pod annotationupdatecbc72b94-c017-4801-989b-e6d74325905d is Running (Ready = true)
    Jan 30 08:27:51.591: INFO: Pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d" satisfied condition "running and ready"
    Jan 30 08:27:52.107: INFO: Successfully updated pod "annotationupdatecbc72b94-c017-4801-989b-e6d74325905d"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:27:56.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-4650" for this suite. 01/30/23 08:27:56.124
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:27:56.138
Jan 30 08:27:56.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename watch 01/30/23 08:27:56.139
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:56.148
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:56.15
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
STEP: creating a watch on configmaps 01/30/23 08:27:56.152
STEP: creating a new configmap 01/30/23 08:27:56.153
STEP: modifying the configmap once 01/30/23 08:27:56.156
STEP: closing the watch once it receives two notifications 01/30/23 08:27:56.161
Jan 30 08:27:56.161: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3994  37777316-670f-4d39-8bc4-e2625ce2f99b 5862 0 2023-01-30 08:27:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-30 08:27:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:27:56.161: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3994  37777316-670f-4d39-8bc4-e2625ce2f99b 5863 0 2023-01-30 08:27:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-30 08:27:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed 01/30/23 08:27:56.161
STEP: creating a new watch on configmaps from the last resource version observed by the first watch 01/30/23 08:27:56.167
STEP: deleting the configmap 01/30/23 08:27:56.168
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 01/30/23 08:27:56.172
Jan 30 08:27:56.172: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3994  37777316-670f-4d39-8bc4-e2625ce2f99b 5864 0 2023-01-30 08:27:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-30 08:27:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:27:56.172: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3994  37777316-670f-4d39-8bc4-e2625ce2f99b 5865 0 2023-01-30 08:27:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-30 08:27:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 30 08:27:56.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-3994" for this suite. 01/30/23 08:27:56.174
------------------------------
â€¢ [0.040 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:27:56.138
    Jan 30 08:27:56.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename watch 01/30/23 08:27:56.139
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:56.148
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:56.15
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
      test/e2e/apimachinery/watch.go:191
    STEP: creating a watch on configmaps 01/30/23 08:27:56.152
    STEP: creating a new configmap 01/30/23 08:27:56.153
    STEP: modifying the configmap once 01/30/23 08:27:56.156
    STEP: closing the watch once it receives two notifications 01/30/23 08:27:56.161
    Jan 30 08:27:56.161: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3994  37777316-670f-4d39-8bc4-e2625ce2f99b 5862 0 2023-01-30 08:27:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-30 08:27:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:27:56.161: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3994  37777316-670f-4d39-8bc4-e2625ce2f99b 5863 0 2023-01-30 08:27:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-30 08:27:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time, while the watch is closed 01/30/23 08:27:56.161
    STEP: creating a new watch on configmaps from the last resource version observed by the first watch 01/30/23 08:27:56.167
    STEP: deleting the configmap 01/30/23 08:27:56.168
    STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 01/30/23 08:27:56.172
    Jan 30 08:27:56.172: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3994  37777316-670f-4d39-8bc4-e2625ce2f99b 5864 0 2023-01-30 08:27:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-30 08:27:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:27:56.172: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3994  37777316-670f-4d39-8bc4-e2625ce2f99b 5865 0 2023-01-30 08:27:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-01-30 08:27:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:27:56.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-3994" for this suite. 01/30/23 08:27:56.174
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:27:56.179
Jan 30 08:27:56.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename job 01/30/23 08:27:56.18
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:56.188
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:56.19
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
STEP: Creating a job 01/30/23 08:27:56.192
STEP: Ensuring active pods == parallelism 01/30/23 08:27:56.197
STEP: Orphaning one of the Job's Pods 01/30/23 08:27:58.2
Jan 30 08:27:58.721: INFO: Successfully updated pod "adopt-release-74xv6"
STEP: Checking that the Job readopts the Pod 01/30/23 08:27:58.721
Jan 30 08:27:58.721: INFO: Waiting up to 15m0s for pod "adopt-release-74xv6" in namespace "job-5145" to be "adopted"
Jan 30 08:27:58.725: INFO: Pod "adopt-release-74xv6": Phase="Running", Reason="", readiness=true. Elapsed: 3.608368ms
Jan 30 08:28:00.727: INFO: Pod "adopt-release-74xv6": Phase="Running", Reason="", readiness=true. Elapsed: 2.005892653s
Jan 30 08:28:00.727: INFO: Pod "adopt-release-74xv6" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod 01/30/23 08:28:00.727
Jan 30 08:28:01.247: INFO: Successfully updated pod "adopt-release-74xv6"
STEP: Checking that the Job releases the Pod 01/30/23 08:28:01.247
Jan 30 08:28:01.248: INFO: Waiting up to 15m0s for pod "adopt-release-74xv6" in namespace "job-5145" to be "released"
Jan 30 08:28:01.254: INFO: Pod "adopt-release-74xv6": Phase="Running", Reason="", readiness=true. Elapsed: 6.019351ms
Jan 30 08:28:03.257: INFO: Pod "adopt-release-74xv6": Phase="Running", Reason="", readiness=true. Elapsed: 2.009148046s
Jan 30 08:28:03.257: INFO: Pod "adopt-release-74xv6" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 30 08:28:03.257: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-5145" for this suite. 01/30/23 08:28:03.259
------------------------------
â€¢ [SLOW TEST] [7.084 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:27:56.179
    Jan 30 08:27:56.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename job 01/30/23 08:27:56.18
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:27:56.188
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:27:56.19
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching orphans and release non-matching pods [Conformance]
      test/e2e/apps/job.go:507
    STEP: Creating a job 01/30/23 08:27:56.192
    STEP: Ensuring active pods == parallelism 01/30/23 08:27:56.197
    STEP: Orphaning one of the Job's Pods 01/30/23 08:27:58.2
    Jan 30 08:27:58.721: INFO: Successfully updated pod "adopt-release-74xv6"
    STEP: Checking that the Job readopts the Pod 01/30/23 08:27:58.721
    Jan 30 08:27:58.721: INFO: Waiting up to 15m0s for pod "adopt-release-74xv6" in namespace "job-5145" to be "adopted"
    Jan 30 08:27:58.725: INFO: Pod "adopt-release-74xv6": Phase="Running", Reason="", readiness=true. Elapsed: 3.608368ms
    Jan 30 08:28:00.727: INFO: Pod "adopt-release-74xv6": Phase="Running", Reason="", readiness=true. Elapsed: 2.005892653s
    Jan 30 08:28:00.727: INFO: Pod "adopt-release-74xv6" satisfied condition "adopted"
    STEP: Removing the labels from the Job's Pod 01/30/23 08:28:00.727
    Jan 30 08:28:01.247: INFO: Successfully updated pod "adopt-release-74xv6"
    STEP: Checking that the Job releases the Pod 01/30/23 08:28:01.247
    Jan 30 08:28:01.248: INFO: Waiting up to 15m0s for pod "adopt-release-74xv6" in namespace "job-5145" to be "released"
    Jan 30 08:28:01.254: INFO: Pod "adopt-release-74xv6": Phase="Running", Reason="", readiness=true. Elapsed: 6.019351ms
    Jan 30 08:28:03.257: INFO: Pod "adopt-release-74xv6": Phase="Running", Reason="", readiness=true. Elapsed: 2.009148046s
    Jan 30 08:28:03.257: INFO: Pod "adopt-release-74xv6" satisfied condition "released"
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:28:03.257: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-5145" for this suite. 01/30/23 08:28:03.259
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:28:03.264
Jan 30 08:28:03.264: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-probe 01/30/23 08:28:03.264
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:28:03.278
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:28:03.28
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
STEP: Creating pod liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 in namespace container-probe-8020 01/30/23 08:28:03.282
Jan 30 08:28:03.288: INFO: Waiting up to 5m0s for pod "liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93" in namespace "container-probe-8020" to be "not pending"
Jan 30 08:28:03.290: INFO: Pod "liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93": Phase="Pending", Reason="", readiness=false. Elapsed: 1.965137ms
Jan 30 08:28:05.293: INFO: Pod "liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93": Phase="Running", Reason="", readiness=true. Elapsed: 2.005247418s
Jan 30 08:28:05.293: INFO: Pod "liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93" satisfied condition "not pending"
Jan 30 08:28:05.293: INFO: Started pod liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 in namespace container-probe-8020
STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 08:28:05.293
Jan 30 08:28:05.295: INFO: Initial restart count of pod liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is 0
Jan 30 08:28:25.324: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 1 (20.029750905s elapsed)
Jan 30 08:28:45.353: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 2 (40.058168045s elapsed)
Jan 30 08:29:05.391: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 3 (1m0.096375686s elapsed)
Jan 30 08:29:25.423: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 4 (1m20.128438769s elapsed)
Jan 30 08:30:35.532: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 5 (2m30.237597495s elapsed)
STEP: deleting the pod 01/30/23 08:30:35.532
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 30 08:30:35.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-8020" for this suite. 01/30/23 08:30:35.542
------------------------------
â€¢ [SLOW TEST] [152.282 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:28:03.264
    Jan 30 08:28:03.264: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-probe 01/30/23 08:28:03.264
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:28:03.278
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:28:03.28
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should have monotonically increasing restart count [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:199
    STEP: Creating pod liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 in namespace container-probe-8020 01/30/23 08:28:03.282
    Jan 30 08:28:03.288: INFO: Waiting up to 5m0s for pod "liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93" in namespace "container-probe-8020" to be "not pending"
    Jan 30 08:28:03.290: INFO: Pod "liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93": Phase="Pending", Reason="", readiness=false. Elapsed: 1.965137ms
    Jan 30 08:28:05.293: INFO: Pod "liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93": Phase="Running", Reason="", readiness=true. Elapsed: 2.005247418s
    Jan 30 08:28:05.293: INFO: Pod "liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93" satisfied condition "not pending"
    Jan 30 08:28:05.293: INFO: Started pod liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 in namespace container-probe-8020
    STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 08:28:05.293
    Jan 30 08:28:05.295: INFO: Initial restart count of pod liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is 0
    Jan 30 08:28:25.324: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 1 (20.029750905s elapsed)
    Jan 30 08:28:45.353: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 2 (40.058168045s elapsed)
    Jan 30 08:29:05.391: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 3 (1m0.096375686s elapsed)
    Jan 30 08:29:25.423: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 4 (1m20.128438769s elapsed)
    Jan 30 08:30:35.532: INFO: Restart count of pod container-probe-8020/liveness-3016908c-e57d-4a06-a3c9-3b306e58ea93 is now 5 (2m30.237597495s elapsed)
    STEP: deleting the pod 01/30/23 08:30:35.532
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:30:35.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-8020" for this suite. 01/30/23 08:30:35.542
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:30:35.546
Jan 30 08:30:35.546: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename job 01/30/23 08:30:35.547
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:35.556
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:35.558
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
STEP: Creating a job 01/30/23 08:30:35.56
STEP: Ensuring job reaches completions 01/30/23 08:30:35.564
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 30 08:30:45.567: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-8449" for this suite. 01/30/23 08:30:45.569
------------------------------
â€¢ [SLOW TEST] [10.036 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:30:35.546
    Jan 30 08:30:35.546: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename job 01/30/23 08:30:35.547
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:35.556
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:35.558
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
      test/e2e/apps/job.go:426
    STEP: Creating a job 01/30/23 08:30:35.56
    STEP: Ensuring job reaches completions 01/30/23 08:30:35.564
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:30:45.567: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-8449" for this suite. 01/30/23 08:30:45.569
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] Deployment
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:30:45.583
Jan 30 08:30:45.583: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename deployment 01/30/23 08:30:45.584
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:45.595
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:45.597
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
Jan 30 08:30:45.599: INFO: Creating deployment "test-recreate-deployment"
Jan 30 08:30:45.603: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Jan 30 08:30:45.608: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Jan 30 08:30:47.613: INFO: Waiting deployment "test-recreate-deployment" to complete
Jan 30 08:30:47.614: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Jan 30 08:30:47.630: INFO: Updating deployment test-recreate-deployment
Jan 30 08:30:47.630: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:30:47.686: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-5157  4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488 6393 2 2023-01-30 08:30:45 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0043d1788 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-30 08:30:47 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-01-30 08:30:47 +0000 UTC,LastTransitionTime:2023-01-30 08:30:45 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Jan 30 08:30:47.688: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-5157  d5855cb7-afe5-4eb6-9706-3600fdc3cecd 6390 1 2023-01-30 08:30:47 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488 0xc003d48530 0xc003d48531}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003d485c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:30:47.688: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Jan 30 08:30:47.688: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-5157  3bea4d10-ebfd-48ca-a815-26fe9696beca 6381 2 2023-01-30 08:30:45 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488 0xc003d48427 0xc003d48428}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003d484d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:30:47.690: INFO: Pod "test-recreate-deployment-cff6dc657-24dt4" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-24dt4 test-recreate-deployment-cff6dc657- deployment-5157  8956a9a0-9c64-4ae3-9d53-42355ec4404b 6392 0 2023-01-30 08:30:47 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 d5855cb7-afe5-4eb6-9706-3600fdc3cecd 0xc003d48a50 0xc003d48a51}] [] [{kube-controller-manager Update v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d5855cb7-afe5-4eb6-9706-3600fdc3cecd\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f2ps9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f2ps9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:30:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 30 08:30:47.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-5157" for this suite. 01/30/23 08:30:47.692
------------------------------
â€¢ [2.113 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:30:45.583
    Jan 30 08:30:45.583: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename deployment 01/30/23 08:30:45.584
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:45.595
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:45.597
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RecreateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:113
    Jan 30 08:30:45.599: INFO: Creating deployment "test-recreate-deployment"
    Jan 30 08:30:45.603: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
    Jan 30 08:30:45.608: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
    Jan 30 08:30:47.613: INFO: Waiting deployment "test-recreate-deployment" to complete
    Jan 30 08:30:47.614: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
    Jan 30 08:30:47.630: INFO: Updating deployment test-recreate-deployment
    Jan 30 08:30:47.630: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 30 08:30:47.686: INFO: Deployment "test-recreate-deployment":
    &Deployment{ObjectMeta:{test-recreate-deployment  deployment-5157  4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488 6393 2 2023-01-30 08:30:45 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0043d1788 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-30 08:30:47 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-01-30 08:30:47 +0000 UTC,LastTransitionTime:2023-01-30 08:30:45 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

    Jan 30 08:30:47.688: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
    &ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-5157  d5855cb7-afe5-4eb6-9706-3600fdc3cecd 6390 1 2023-01-30 08:30:47 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488 0xc003d48530 0xc003d48531}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003d485c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:30:47.688: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
    Jan 30 08:30:47.688: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-5157  3bea4d10-ebfd-48ca-a815-26fe9696beca 6381 2 2023-01-30 08:30:45 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488 0xc003d48427 0xc003d48428}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4e64d21f-e2d4-423d-b2cd-9b0cc7c6b488\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003d484d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:30:47.690: INFO: Pod "test-recreate-deployment-cff6dc657-24dt4" is not available:
    &Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-24dt4 test-recreate-deployment-cff6dc657- deployment-5157  8956a9a0-9c64-4ae3-9d53-42355ec4404b 6392 0 2023-01-30 08:30:47 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 d5855cb7-afe5-4eb6-9706-3600fdc3cecd 0xc003d48a50 0xc003d48a51}] [] [{kube-controller-manager Update v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d5855cb7-afe5-4eb6-9706-3600fdc3cecd\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:30:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f2ps9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f2ps9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:30:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:30:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:30:47.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-5157" for this suite. 01/30/23 08:30:47.692
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:30:47.698
Jan 30 08:30:47.698: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:30:47.699
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:47.708
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:47.71
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2263 01/30/23 08:30:47.714
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 01/30/23 08:30:47.721
STEP: creating service externalsvc in namespace services-2263 01/30/23 08:30:47.721
STEP: creating replication controller externalsvc in namespace services-2263 01/30/23 08:30:47.732
I0130 08:30:47.740248      24 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2263, replica count: 2
I0130 08:30:50.791197      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName 01/30/23 08:30:50.793
Jan 30 08:30:50.803: INFO: Creating new exec pod
Jan 30 08:30:50.811: INFO: Waiting up to 5m0s for pod "execpodbvz8g" in namespace "services-2263" to be "running"
Jan 30 08:30:50.813: INFO: Pod "execpodbvz8g": Phase="Pending", Reason="", readiness=false. Elapsed: 2.038266ms
Jan 30 08:30:52.816: INFO: Pod "execpodbvz8g": Phase="Running", Reason="", readiness=true. Elapsed: 2.004869725s
Jan 30 08:30:52.816: INFO: Pod "execpodbvz8g" satisfied condition "running"
Jan 30 08:30:52.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-2263 exec execpodbvz8g -- /bin/sh -x -c nslookup clusterip-service.services-2263.svc.cluster.local'
Jan 30 08:30:53.034: INFO: stderr: "+ nslookup clusterip-service.services-2263.svc.cluster.local\n"
Jan 30 08:30:53.034: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-2263.svc.cluster.local\tcanonical name = externalsvc.services-2263.svc.cluster.local.\nName:\texternalsvc.services-2263.svc.cluster.local\nAddress: 10.96.232.226\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-2263, will wait for the garbage collector to delete the pods 01/30/23 08:30:53.034
Jan 30 08:30:53.102: INFO: Deleting ReplicationController externalsvc took: 15.058106ms
Jan 30 08:30:53.203: INFO: Terminating ReplicationController externalsvc pods took: 100.135373ms
Jan 30 08:30:55.617: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:30:55.623: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2263" for this suite. 01/30/23 08:30:55.626
------------------------------
â€¢ [SLOW TEST] [7.934 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:30:47.698
    Jan 30 08:30:47.698: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:30:47.699
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:47.708
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:47.71
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ClusterIP to ExternalName [Conformance]
      test/e2e/network/service.go:1515
    STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2263 01/30/23 08:30:47.714
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 01/30/23 08:30:47.721
    STEP: creating service externalsvc in namespace services-2263 01/30/23 08:30:47.721
    STEP: creating replication controller externalsvc in namespace services-2263 01/30/23 08:30:47.732
    I0130 08:30:47.740248      24 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2263, replica count: 2
    I0130 08:30:50.791197      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the ClusterIP service to type=ExternalName 01/30/23 08:30:50.793
    Jan 30 08:30:50.803: INFO: Creating new exec pod
    Jan 30 08:30:50.811: INFO: Waiting up to 5m0s for pod "execpodbvz8g" in namespace "services-2263" to be "running"
    Jan 30 08:30:50.813: INFO: Pod "execpodbvz8g": Phase="Pending", Reason="", readiness=false. Elapsed: 2.038266ms
    Jan 30 08:30:52.816: INFO: Pod "execpodbvz8g": Phase="Running", Reason="", readiness=true. Elapsed: 2.004869725s
    Jan 30 08:30:52.816: INFO: Pod "execpodbvz8g" satisfied condition "running"
    Jan 30 08:30:52.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-2263 exec execpodbvz8g -- /bin/sh -x -c nslookup clusterip-service.services-2263.svc.cluster.local'
    Jan 30 08:30:53.034: INFO: stderr: "+ nslookup clusterip-service.services-2263.svc.cluster.local\n"
    Jan 30 08:30:53.034: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-2263.svc.cluster.local\tcanonical name = externalsvc.services-2263.svc.cluster.local.\nName:\texternalsvc.services-2263.svc.cluster.local\nAddress: 10.96.232.226\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-2263, will wait for the garbage collector to delete the pods 01/30/23 08:30:53.034
    Jan 30 08:30:53.102: INFO: Deleting ReplicationController externalsvc took: 15.058106ms
    Jan 30 08:30:53.203: INFO: Terminating ReplicationController externalsvc pods took: 100.135373ms
    Jan 30 08:30:55.617: INFO: Cleaning up the ClusterIP to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:30:55.623: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2263" for this suite. 01/30/23 08:30:55.626
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:30:55.632
Jan 30 08:30:55.632: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:30:55.633
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:55.641
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:55.643
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
STEP: Creating a pod to test emptydir volume type on node default medium 01/30/23 08:30:55.645
Jan 30 08:30:55.650: INFO: Waiting up to 5m0s for pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a" in namespace "emptydir-9189" to be "Succeeded or Failed"
Jan 30 08:30:55.653: INFO: Pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.294886ms
Jan 30 08:30:57.656: INFO: Pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005569098s
Jan 30 08:30:59.655: INFO: Pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004799518s
STEP: Saw pod success 01/30/23 08:30:59.655
Jan 30 08:30:59.655: INFO: Pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a" satisfied condition "Succeeded or Failed"
Jan 30 08:30:59.657: INFO: Trying to get logs from node tce-worker pod pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a container test-container: <nil>
STEP: delete the pod 01/30/23 08:30:59.667
Jan 30 08:30:59.686: INFO: Waiting for pod pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a to disappear
Jan 30 08:30:59.687: INFO: Pod pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:30:59.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9189" for this suite. 01/30/23 08:30:59.689
------------------------------
â€¢ [4.061 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:30:55.632
    Jan 30 08:30:55.632: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:30:55.633
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:55.641
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:55.643
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:157
    STEP: Creating a pod to test emptydir volume type on node default medium 01/30/23 08:30:55.645
    Jan 30 08:30:55.650: INFO: Waiting up to 5m0s for pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a" in namespace "emptydir-9189" to be "Succeeded or Failed"
    Jan 30 08:30:55.653: INFO: Pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.294886ms
    Jan 30 08:30:57.656: INFO: Pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005569098s
    Jan 30 08:30:59.655: INFO: Pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004799518s
    STEP: Saw pod success 01/30/23 08:30:59.655
    Jan 30 08:30:59.655: INFO: Pod "pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a" satisfied condition "Succeeded or Failed"
    Jan 30 08:30:59.657: INFO: Trying to get logs from node tce-worker pod pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a container test-container: <nil>
    STEP: delete the pod 01/30/23 08:30:59.667
    Jan 30 08:30:59.686: INFO: Waiting for pod pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a to disappear
    Jan 30 08:30:59.687: INFO: Pod pod-0ecf7660-c836-4f10-b2f2-4311b1c2827a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:30:59.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9189" for this suite. 01/30/23 08:30:59.689
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:30:59.694
Jan 30 08:30:59.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 08:30:59.695
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:59.704
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:59.706
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
Jan 30 08:30:59.708: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/30/23 08:31:01.012
Jan 30 08:31:01.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 --namespace=crd-publish-openapi-7786 create -f -'
Jan 30 08:31:01.470: INFO: stderr: ""
Jan 30 08:31:01.470: INFO: stdout: "e2e-test-crd-publish-openapi-981-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 30 08:31:01.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 --namespace=crd-publish-openapi-7786 delete e2e-test-crd-publish-openapi-981-crds test-cr'
Jan 30 08:31:01.533: INFO: stderr: ""
Jan 30 08:31:01.533: INFO: stdout: "e2e-test-crd-publish-openapi-981-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Jan 30 08:31:01.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 --namespace=crd-publish-openapi-7786 apply -f -'
Jan 30 08:31:01.677: INFO: stderr: ""
Jan 30 08:31:01.677: INFO: stdout: "e2e-test-crd-publish-openapi-981-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jan 30 08:31:01.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 --namespace=crd-publish-openapi-7786 delete e2e-test-crd-publish-openapi-981-crds test-cr'
Jan 30 08:31:01.735: INFO: stderr: ""
Jan 30 08:31:01.736: INFO: stdout: "e2e-test-crd-publish-openapi-981-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 01/30/23 08:31:01.736
Jan 30 08:31:01.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 explain e2e-test-crd-publish-openapi-981-crds'
Jan 30 08:31:01.872: INFO: stderr: ""
Jan 30 08:31:01.872: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-981-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:03.161: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-7786" for this suite. 01/30/23 08:31:03.168
------------------------------
â€¢ [3.492 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:30:59.694
    Jan 30 08:30:59.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 08:30:59.695
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:30:59.704
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:30:59.706
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields in an embedded object [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:236
    Jan 30 08:30:59.708: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 01/30/23 08:31:01.012
    Jan 30 08:31:01.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 --namespace=crd-publish-openapi-7786 create -f -'
    Jan 30 08:31:01.470: INFO: stderr: ""
    Jan 30 08:31:01.470: INFO: stdout: "e2e-test-crd-publish-openapi-981-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Jan 30 08:31:01.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 --namespace=crd-publish-openapi-7786 delete e2e-test-crd-publish-openapi-981-crds test-cr'
    Jan 30 08:31:01.533: INFO: stderr: ""
    Jan 30 08:31:01.533: INFO: stdout: "e2e-test-crd-publish-openapi-981-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    Jan 30 08:31:01.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 --namespace=crd-publish-openapi-7786 apply -f -'
    Jan 30 08:31:01.677: INFO: stderr: ""
    Jan 30 08:31:01.677: INFO: stdout: "e2e-test-crd-publish-openapi-981-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Jan 30 08:31:01.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 --namespace=crd-publish-openapi-7786 delete e2e-test-crd-publish-openapi-981-crds test-cr'
    Jan 30 08:31:01.735: INFO: stderr: ""
    Jan 30 08:31:01.736: INFO: stdout: "e2e-test-crd-publish-openapi-981-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 01/30/23 08:31:01.736
    Jan 30 08:31:01.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-7786 explain e2e-test-crd-publish-openapi-981-crds'
    Jan 30 08:31:01.872: INFO: stderr: ""
    Jan 30 08:31:01.872: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-981-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:03.161: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-7786" for this suite. 01/30/23 08:31:03.168
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:03.188
Jan 30 08:31:03.188: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:31:03.188
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:03.2
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:03.202
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:03.224: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-2204" for this suite. 01/30/23 08:31:03.227
------------------------------
â€¢ [0.044 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should be possible to delete [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:03.188
    Jan 30 08:31:03.188: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:31:03.188
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:03.2
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:03.202
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should be possible to delete [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:135
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:03.224: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-2204" for this suite. 01/30/23 08:31:03.227
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:03.232
Jan 30 08:31:03.232: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:31:03.233
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:03.241
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:03.244
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
STEP: Creating a pod to test emptydir 0666 on node default medium 01/30/23 08:31:03.246
Jan 30 08:31:03.251: INFO: Waiting up to 5m0s for pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af" in namespace "emptydir-8114" to be "Succeeded or Failed"
Jan 30 08:31:03.254: INFO: Pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.740908ms
Jan 30 08:31:05.256: INFO: Pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005308253s
Jan 30 08:31:07.257: INFO: Pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005739022s
STEP: Saw pod success 01/30/23 08:31:07.257
Jan 30 08:31:07.257: INFO: Pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af" satisfied condition "Succeeded or Failed"
Jan 30 08:31:07.259: INFO: Trying to get logs from node tce-worker2 pod pod-b6f96080-f0aa-4659-8f19-d1557bdd75af container test-container: <nil>
STEP: delete the pod 01/30/23 08:31:07.266
Jan 30 08:31:07.287: INFO: Waiting for pod pod-b6f96080-f0aa-4659-8f19-d1557bdd75af to disappear
Jan 30 08:31:07.289: INFO: Pod pod-b6f96080-f0aa-4659-8f19-d1557bdd75af no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:07.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8114" for this suite. 01/30/23 08:31:07.291
------------------------------
â€¢ [4.063 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:03.232
    Jan 30 08:31:03.232: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:31:03.233
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:03.241
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:03.244
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:177
    STEP: Creating a pod to test emptydir 0666 on node default medium 01/30/23 08:31:03.246
    Jan 30 08:31:03.251: INFO: Waiting up to 5m0s for pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af" in namespace "emptydir-8114" to be "Succeeded or Failed"
    Jan 30 08:31:03.254: INFO: Pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.740908ms
    Jan 30 08:31:05.256: INFO: Pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005308253s
    Jan 30 08:31:07.257: INFO: Pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005739022s
    STEP: Saw pod success 01/30/23 08:31:07.257
    Jan 30 08:31:07.257: INFO: Pod "pod-b6f96080-f0aa-4659-8f19-d1557bdd75af" satisfied condition "Succeeded or Failed"
    Jan 30 08:31:07.259: INFO: Trying to get logs from node tce-worker2 pod pod-b6f96080-f0aa-4659-8f19-d1557bdd75af container test-container: <nil>
    STEP: delete the pod 01/30/23 08:31:07.266
    Jan 30 08:31:07.287: INFO: Waiting for pod pod-b6f96080-f0aa-4659-8f19-d1557bdd75af to disappear
    Jan 30 08:31:07.289: INFO: Pod pod-b6f96080-f0aa-4659-8f19-d1557bdd75af no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:07.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8114" for this suite. 01/30/23 08:31:07.291
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version
  should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:07.295
Jan 30 08:31:07.295: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:31:07.296
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:07.307
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:07.309
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
Jan 30 08:31:07.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-3861 version'
Jan 30 08:31:07.358: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Jan 30 08:31:07.358: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-08T19:58:30Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-20T03:35:13Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:07.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3861" for this suite. 01/30/23 08:31:07.361
------------------------------
â€¢ [0.071 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl version
  test/e2e/kubectl/kubectl.go:1679
    should check is all data is printed  [Conformance]
    test/e2e/kubectl/kubectl.go:1685

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:07.295
    Jan 30 08:31:07.295: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:31:07.296
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:07.307
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:07.309
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check is all data is printed  [Conformance]
      test/e2e/kubectl/kubectl.go:1685
    Jan 30 08:31:07.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-3861 version'
    Jan 30 08:31:07.358: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
    Jan 30 08:31:07.358: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-08T19:58:30Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.0\", GitCommit:\"b46a3f887ca979b1a5d14fd39cb1af43e7e5d12d\", GitTreeState:\"clean\", BuildDate:\"2022-12-20T03:35:13Z\", GoVersion:\"go1.19.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:07.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3861" for this suite. 01/30/23 08:31:07.361
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:07.366
Jan 30 08:31:07.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-lifecycle-hook 01/30/23 08:31:07.367
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:07.376
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:07.378
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 01/30/23 08:31:07.383
Jan 30 08:31:07.390: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-5442" to be "running and ready"
Jan 30 08:31:07.392: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 1.913411ms
Jan 30 08:31:07.392: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:31:09.394: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.003952128s
Jan 30 08:31:09.394: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Jan 30 08:31:09.394: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
STEP: create the pod with lifecycle hook 01/30/23 08:31:09.396
Jan 30 08:31:09.401: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-5442" to be "running and ready"
Jan 30 08:31:09.402: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 1.672043ms
Jan 30 08:31:09.402: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:31:11.406: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.004809542s
Jan 30 08:31:11.406: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
Jan 30 08:31:11.406: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
STEP: check poststart hook 01/30/23 08:31:11.408
STEP: delete the pod with lifecycle hook 01/30/23 08:31:11.411
Jan 30 08:31:11.415: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 30 08:31:11.417: INFO: Pod pod-with-poststart-http-hook still exists
Jan 30 08:31:13.418: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 30 08:31:13.420: INFO: Pod pod-with-poststart-http-hook still exists
Jan 30 08:31:15.419: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jan 30 08:31:15.421: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:15.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-5442" for this suite. 01/30/23 08:31:15.424
------------------------------
â€¢ [SLOW TEST] [8.078 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:07.366
    Jan 30 08:31:07.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-lifecycle-hook 01/30/23 08:31:07.367
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:07.376
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:07.378
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 01/30/23 08:31:07.383
    Jan 30 08:31:07.390: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-5442" to be "running and ready"
    Jan 30 08:31:07.392: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 1.913411ms
    Jan 30 08:31:07.392: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:31:09.394: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.003952128s
    Jan 30 08:31:09.394: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Jan 30 08:31:09.394: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:167
    STEP: create the pod with lifecycle hook 01/30/23 08:31:09.396
    Jan 30 08:31:09.401: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-5442" to be "running and ready"
    Jan 30 08:31:09.402: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 1.672043ms
    Jan 30 08:31:09.402: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:31:11.406: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.004809542s
    Jan 30 08:31:11.406: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
    Jan 30 08:31:11.406: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
    STEP: check poststart hook 01/30/23 08:31:11.408
    STEP: delete the pod with lifecycle hook 01/30/23 08:31:11.411
    Jan 30 08:31:11.415: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Jan 30 08:31:11.417: INFO: Pod pod-with-poststart-http-hook still exists
    Jan 30 08:31:13.418: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Jan 30 08:31:13.420: INFO: Pod pod-with-poststart-http-hook still exists
    Jan 30 08:31:15.419: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Jan 30 08:31:15.421: INFO: Pod pod-with-poststart-http-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:15.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-5442" for this suite. 01/30/23 08:31:15.424
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:15.445
Jan 30 08:31:15.445: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:31:15.446
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:15.459
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:15.461
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
STEP: Creating configMap with name projected-configmap-test-volume-cc8147e0-9edc-4ca0-9b88-cc4c3b6d3fde 01/30/23 08:31:15.463
STEP: Creating a pod to test consume configMaps 01/30/23 08:31:15.467
Jan 30 08:31:15.473: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc" in namespace "projected-9918" to be "Succeeded or Failed"
Jan 30 08:31:15.478: INFO: Pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.35047ms
Jan 30 08:31:17.481: INFO: Pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007831846s
Jan 30 08:31:19.482: INFO: Pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008802214s
STEP: Saw pod success 01/30/23 08:31:19.482
Jan 30 08:31:19.482: INFO: Pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc" satisfied condition "Succeeded or Failed"
Jan 30 08:31:19.483: INFO: Trying to get logs from node tce-worker pod pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc container projected-configmap-volume-test: <nil>
STEP: delete the pod 01/30/23 08:31:19.487
Jan 30 08:31:19.495: INFO: Waiting for pod pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc to disappear
Jan 30 08:31:19.497: INFO: Pod pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:19.497: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9918" for this suite. 01/30/23 08:31:19.499
------------------------------
â€¢ [4.058 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:15.445
    Jan 30 08:31:15.445: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:31:15.446
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:15.459
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:15.461
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:375
    STEP: Creating configMap with name projected-configmap-test-volume-cc8147e0-9edc-4ca0-9b88-cc4c3b6d3fde 01/30/23 08:31:15.463
    STEP: Creating a pod to test consume configMaps 01/30/23 08:31:15.467
    Jan 30 08:31:15.473: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc" in namespace "projected-9918" to be "Succeeded or Failed"
    Jan 30 08:31:15.478: INFO: Pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.35047ms
    Jan 30 08:31:17.481: INFO: Pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007831846s
    Jan 30 08:31:19.482: INFO: Pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008802214s
    STEP: Saw pod success 01/30/23 08:31:19.482
    Jan 30 08:31:19.482: INFO: Pod "pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc" satisfied condition "Succeeded or Failed"
    Jan 30 08:31:19.483: INFO: Trying to get logs from node tce-worker pod pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc container projected-configmap-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:31:19.487
    Jan 30 08:31:19.495: INFO: Waiting for pod pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc to disappear
    Jan 30 08:31:19.497: INFO: Pod pod-projected-configmaps-e26c07f9-facb-4671-a6f6-f5cffe89d0cc no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:19.497: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9918" for this suite. 01/30/23 08:31:19.499
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:19.503
Jan 30 08:31:19.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:31:19.504
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:19.512
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:19.514
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:19.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-5147" for this suite. 01/30/23 08:31:19.554
------------------------------
â€¢ [0.055 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:19.503
    Jan 30 08:31:19.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:31:19.504
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:19.512
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:19.514
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/secrets_volume.go:386
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:19.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-5147" for this suite. 01/30/23 08:31:19.554
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] Services
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:19.558
Jan 30 08:31:19.559: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:31:19.559
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:19.569
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:19.571
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
STEP: creating a Service 01/30/23 08:31:19.575
STEP: watching for the Service to be added 01/30/23 08:31:19.583
Jan 30 08:31:19.584: INFO: Found Service test-service-z9rf5 in namespace services-480 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Jan 30 08:31:19.584: INFO: Service test-service-z9rf5 created
STEP: Getting /status 01/30/23 08:31:19.584
Jan 30 08:31:19.593: INFO: Service test-service-z9rf5 has LoadBalancer: {[]}
STEP: patching the ServiceStatus 01/30/23 08:31:19.593
STEP: watching for the Service to be patched 01/30/23 08:31:19.602
Jan 30 08:31:19.604: INFO: observed Service test-service-z9rf5 in namespace services-480 with annotations: map[] & LoadBalancer: {[]}
Jan 30 08:31:19.604: INFO: Found Service test-service-z9rf5 in namespace services-480 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Jan 30 08:31:19.604: INFO: Service test-service-z9rf5 has service status patched
STEP: updating the ServiceStatus 01/30/23 08:31:19.604
Jan 30 08:31:19.614: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated 01/30/23 08:31:19.614
Jan 30 08:31:19.616: INFO: Observed Service test-service-z9rf5 in namespace services-480 with annotations: map[] & Conditions: {[]}
Jan 30 08:31:19.617: INFO: Observed event: &Service{ObjectMeta:{test-service-z9rf5  services-480  b908a20f-7291-4d16-a649-1239872715be 6744 0 2023-01-30 08:31:19 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-01-30 08:31:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-01-30 08:31:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.96.61.168,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.96.61.168],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Jan 30 08:31:19.617: INFO: Found Service test-service-z9rf5 in namespace services-480 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 30 08:31:19.617: INFO: Service test-service-z9rf5 has service status updated
STEP: patching the service 01/30/23 08:31:19.617
STEP: watching for the Service to be patched 01/30/23 08:31:19.628
Jan 30 08:31:19.630: INFO: observed Service test-service-z9rf5 in namespace services-480 with labels: map[test-service-static:true]
Jan 30 08:31:19.630: INFO: observed Service test-service-z9rf5 in namespace services-480 with labels: map[test-service-static:true]
Jan 30 08:31:19.630: INFO: observed Service test-service-z9rf5 in namespace services-480 with labels: map[test-service-static:true]
Jan 30 08:31:19.630: INFO: Found Service test-service-z9rf5 in namespace services-480 with labels: map[test-service:patched test-service-static:true]
Jan 30 08:31:19.630: INFO: Service test-service-z9rf5 patched
STEP: deleting the service 01/30/23 08:31:19.63
STEP: watching for the Service to be deleted 01/30/23 08:31:19.645
Jan 30 08:31:19.647: INFO: Observed event: ADDED
Jan 30 08:31:19.649: INFO: Observed event: MODIFIED
Jan 30 08:31:19.649: INFO: Observed event: MODIFIED
Jan 30 08:31:19.649: INFO: Observed event: MODIFIED
Jan 30 08:31:19.649: INFO: Found Service test-service-z9rf5 in namespace services-480 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Jan 30 08:31:19.649: INFO: Service test-service-z9rf5 deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:19.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-480" for this suite. 01/30/23 08:31:19.653
------------------------------
â€¢ [0.101 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:19.558
    Jan 30 08:31:19.559: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:31:19.559
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:19.569
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:19.571
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should complete a service status lifecycle [Conformance]
      test/e2e/network/service.go:3428
    STEP: creating a Service 01/30/23 08:31:19.575
    STEP: watching for the Service to be added 01/30/23 08:31:19.583
    Jan 30 08:31:19.584: INFO: Found Service test-service-z9rf5 in namespace services-480 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
    Jan 30 08:31:19.584: INFO: Service test-service-z9rf5 created
    STEP: Getting /status 01/30/23 08:31:19.584
    Jan 30 08:31:19.593: INFO: Service test-service-z9rf5 has LoadBalancer: {[]}
    STEP: patching the ServiceStatus 01/30/23 08:31:19.593
    STEP: watching for the Service to be patched 01/30/23 08:31:19.602
    Jan 30 08:31:19.604: INFO: observed Service test-service-z9rf5 in namespace services-480 with annotations: map[] & LoadBalancer: {[]}
    Jan 30 08:31:19.604: INFO: Found Service test-service-z9rf5 in namespace services-480 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
    Jan 30 08:31:19.604: INFO: Service test-service-z9rf5 has service status patched
    STEP: updating the ServiceStatus 01/30/23 08:31:19.604
    Jan 30 08:31:19.614: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Service to be updated 01/30/23 08:31:19.614
    Jan 30 08:31:19.616: INFO: Observed Service test-service-z9rf5 in namespace services-480 with annotations: map[] & Conditions: {[]}
    Jan 30 08:31:19.617: INFO: Observed event: &Service{ObjectMeta:{test-service-z9rf5  services-480  b908a20f-7291-4d16-a649-1239872715be 6744 0 2023-01-30 08:31:19 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-01-30 08:31:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-01-30 08:31:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.96.61.168,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.96.61.168],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
    Jan 30 08:31:19.617: INFO: Found Service test-service-z9rf5 in namespace services-480 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Jan 30 08:31:19.617: INFO: Service test-service-z9rf5 has service status updated
    STEP: patching the service 01/30/23 08:31:19.617
    STEP: watching for the Service to be patched 01/30/23 08:31:19.628
    Jan 30 08:31:19.630: INFO: observed Service test-service-z9rf5 in namespace services-480 with labels: map[test-service-static:true]
    Jan 30 08:31:19.630: INFO: observed Service test-service-z9rf5 in namespace services-480 with labels: map[test-service-static:true]
    Jan 30 08:31:19.630: INFO: observed Service test-service-z9rf5 in namespace services-480 with labels: map[test-service-static:true]
    Jan 30 08:31:19.630: INFO: Found Service test-service-z9rf5 in namespace services-480 with labels: map[test-service:patched test-service-static:true]
    Jan 30 08:31:19.630: INFO: Service test-service-z9rf5 patched
    STEP: deleting the service 01/30/23 08:31:19.63
    STEP: watching for the Service to be deleted 01/30/23 08:31:19.645
    Jan 30 08:31:19.647: INFO: Observed event: ADDED
    Jan 30 08:31:19.649: INFO: Observed event: MODIFIED
    Jan 30 08:31:19.649: INFO: Observed event: MODIFIED
    Jan 30 08:31:19.649: INFO: Observed event: MODIFIED
    Jan 30 08:31:19.649: INFO: Found Service test-service-z9rf5 in namespace services-480 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
    Jan 30 08:31:19.649: INFO: Service test-service-z9rf5 deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:19.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-480" for this suite. 01/30/23 08:31:19.653
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:19.661
Jan 30 08:31:19.661: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:31:19.662
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:19.674
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:19.678
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
STEP: Creating secret with name secret-test-ab9fa16e-1271-46ac-809b-eaf079e512ed 01/30/23 08:31:19.68
STEP: Creating a pod to test consume secrets 01/30/23 08:31:19.684
Jan 30 08:31:19.691: INFO: Waiting up to 5m0s for pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e" in namespace "secrets-6178" to be "Succeeded or Failed"
Jan 30 08:31:19.694: INFO: Pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.488655ms
Jan 30 08:31:21.697: INFO: Pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005485595s
Jan 30 08:31:23.696: INFO: Pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0045419s
STEP: Saw pod success 01/30/23 08:31:23.696
Jan 30 08:31:23.696: INFO: Pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e" satisfied condition "Succeeded or Failed"
Jan 30 08:31:23.698: INFO: Trying to get logs from node tce-worker pod pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e container secret-volume-test: <nil>
STEP: delete the pod 01/30/23 08:31:23.706
Jan 30 08:31:23.714: INFO: Waiting for pod pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e to disappear
Jan 30 08:31:23.715: INFO: Pod pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:23.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-6178" for this suite. 01/30/23 08:31:23.718
------------------------------
â€¢ [4.060 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:19.661
    Jan 30 08:31:19.661: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:31:19.662
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:19.674
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:19.678
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:125
    STEP: Creating secret with name secret-test-ab9fa16e-1271-46ac-809b-eaf079e512ed 01/30/23 08:31:19.68
    STEP: Creating a pod to test consume secrets 01/30/23 08:31:19.684
    Jan 30 08:31:19.691: INFO: Waiting up to 5m0s for pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e" in namespace "secrets-6178" to be "Succeeded or Failed"
    Jan 30 08:31:19.694: INFO: Pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.488655ms
    Jan 30 08:31:21.697: INFO: Pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005485595s
    Jan 30 08:31:23.696: INFO: Pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0045419s
    STEP: Saw pod success 01/30/23 08:31:23.696
    Jan 30 08:31:23.696: INFO: Pod "pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e" satisfied condition "Succeeded or Failed"
    Jan 30 08:31:23.698: INFO: Trying to get logs from node tce-worker pod pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e container secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:31:23.706
    Jan 30 08:31:23.714: INFO: Waiting for pod pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e to disappear
    Jan 30 08:31:23.715: INFO: Pod pod-secrets-da2b6c73-02c0-4f82-8c02-5c538cf67e8e no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:23.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-6178" for this suite. 01/30/23 08:31:23.718
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:23.722
Jan 30 08:31:23.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:31:23.722
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:23.732
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:23.734
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
STEP: Creating secret with name secret-test-b889b9f2-8649-44a1-8752-19c89b311d6f 01/30/23 08:31:23.736
STEP: Creating a pod to test consume secrets 01/30/23 08:31:23.739
Jan 30 08:31:23.744: INFO: Waiting up to 5m0s for pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af" in namespace "secrets-8321" to be "Succeeded or Failed"
Jan 30 08:31:23.746: INFO: Pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af": Phase="Pending", Reason="", readiness=false. Elapsed: 1.757438ms
Jan 30 08:31:25.748: INFO: Pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004131359s
Jan 30 08:31:27.749: INFO: Pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004790758s
STEP: Saw pod success 01/30/23 08:31:27.749
Jan 30 08:31:27.749: INFO: Pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af" satisfied condition "Succeeded or Failed"
Jan 30 08:31:27.751: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af container secret-volume-test: <nil>
STEP: delete the pod 01/30/23 08:31:27.756
Jan 30 08:31:27.766: INFO: Waiting for pod pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af to disappear
Jan 30 08:31:27.768: INFO: Pod pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:27.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8321" for this suite. 01/30/23 08:31:27.77
------------------------------
â€¢ [4.054 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:23.722
    Jan 30 08:31:23.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:31:23.722
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:23.732
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:23.734
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:47
    STEP: Creating secret with name secret-test-b889b9f2-8649-44a1-8752-19c89b311d6f 01/30/23 08:31:23.736
    STEP: Creating a pod to test consume secrets 01/30/23 08:31:23.739
    Jan 30 08:31:23.744: INFO: Waiting up to 5m0s for pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af" in namespace "secrets-8321" to be "Succeeded or Failed"
    Jan 30 08:31:23.746: INFO: Pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af": Phase="Pending", Reason="", readiness=false. Elapsed: 1.757438ms
    Jan 30 08:31:25.748: INFO: Pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004131359s
    Jan 30 08:31:27.749: INFO: Pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004790758s
    STEP: Saw pod success 01/30/23 08:31:27.749
    Jan 30 08:31:27.749: INFO: Pod "pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af" satisfied condition "Succeeded or Failed"
    Jan 30 08:31:27.751: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af container secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:31:27.756
    Jan 30 08:31:27.766: INFO: Waiting for pod pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af to disappear
    Jan 30 08:31:27.768: INFO: Pod pod-secrets-c77c7435-b6d4-46dd-a81a-0f7ccfde22af no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:27.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8321" for this suite. 01/30/23 08:31:27.77
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:27.776
Jan 30 08:31:27.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:31:27.777
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:27.785
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:27.787
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
STEP: create deployment with httpd image 01/30/23 08:31:27.789
Jan 30 08:31:27.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8268 create -f -'
Jan 30 08:31:28.150: INFO: stderr: ""
Jan 30 08:31:28.150: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image 01/30/23 08:31:28.15
Jan 30 08:31:28.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8268 diff -f -'
Jan 30 08:31:28.324: INFO: rc: 1
Jan 30 08:31:28.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8268 delete -f -'
Jan 30 08:31:28.398: INFO: stderr: ""
Jan 30 08:31:28.398: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:28.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8268" for this suite. 01/30/23 08:31:28.401
------------------------------
â€¢ [0.629 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl diff
  test/e2e/kubectl/kubectl.go:925
    should check if kubectl diff finds a difference for Deployments [Conformance]
    test/e2e/kubectl/kubectl.go:931

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:27.776
    Jan 30 08:31:27.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:31:27.777
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:27.785
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:27.787
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl diff finds a difference for Deployments [Conformance]
      test/e2e/kubectl/kubectl.go:931
    STEP: create deployment with httpd image 01/30/23 08:31:27.789
    Jan 30 08:31:27.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8268 create -f -'
    Jan 30 08:31:28.150: INFO: stderr: ""
    Jan 30 08:31:28.150: INFO: stdout: "deployment.apps/httpd-deployment created\n"
    STEP: verify diff finds difference between live and declared image 01/30/23 08:31:28.15
    Jan 30 08:31:28.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8268 diff -f -'
    Jan 30 08:31:28.324: INFO: rc: 1
    Jan 30 08:31:28.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8268 delete -f -'
    Jan 30 08:31:28.398: INFO: stderr: ""
    Jan 30 08:31:28.398: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:28.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8268" for this suite. 01/30/23 08:31:28.401
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:28.406
Jan 30 08:31:28.406: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 08:31:28.407
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:28.425
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:28.427
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
STEP: creating the pod 01/30/23 08:31:28.429
STEP: submitting the pod to kubernetes 01/30/23 08:31:28.429
Jan 30 08:31:28.436: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5" in namespace "pods-8284" to be "running and ready"
Jan 30 08:31:28.438: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012605ms
Jan 30 08:31:28.438: INFO: The phase of Pod pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:31:30.441: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Running", Reason="", readiness=true. Elapsed: 2.005028257s
Jan 30 08:31:30.441: INFO: The phase of Pod pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5 is Running (Ready = true)
Jan 30 08:31:30.441: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 01/30/23 08:31:30.442
STEP: updating the pod 01/30/23 08:31:30.444
Jan 30 08:31:30.964: INFO: Successfully updated pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5"
Jan 30 08:31:30.964: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5" in namespace "pods-8284" to be "terminated with reason DeadlineExceeded"
Jan 30 08:31:30.966: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Running", Reason="", readiness=true. Elapsed: 1.896205ms
Jan 30 08:31:32.971: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Running", Reason="", readiness=true. Elapsed: 2.006530203s
Jan 30 08:31:34.968: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.004375875s
Jan 30 08:31:34.968: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5" satisfied condition "terminated with reason DeadlineExceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 08:31:34.969: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-8284" for this suite. 01/30/23 08:31:34.971
------------------------------
â€¢ [SLOW TEST] [6.571 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:28.406
    Jan 30 08:31:28.406: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 08:31:28.407
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:28.425
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:28.427
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:398
    STEP: creating the pod 01/30/23 08:31:28.429
    STEP: submitting the pod to kubernetes 01/30/23 08:31:28.429
    Jan 30 08:31:28.436: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5" in namespace "pods-8284" to be "running and ready"
    Jan 30 08:31:28.438: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012605ms
    Jan 30 08:31:28.438: INFO: The phase of Pod pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:31:30.441: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Running", Reason="", readiness=true. Elapsed: 2.005028257s
    Jan 30 08:31:30.441: INFO: The phase of Pod pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5 is Running (Ready = true)
    Jan 30 08:31:30.441: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 01/30/23 08:31:30.442
    STEP: updating the pod 01/30/23 08:31:30.444
    Jan 30 08:31:30.964: INFO: Successfully updated pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5"
    Jan 30 08:31:30.964: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5" in namespace "pods-8284" to be "terminated with reason DeadlineExceeded"
    Jan 30 08:31:30.966: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Running", Reason="", readiness=true. Elapsed: 1.896205ms
    Jan 30 08:31:32.971: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Running", Reason="", readiness=true. Elapsed: 2.006530203s
    Jan 30 08:31:34.968: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.004375875s
    Jan 30 08:31:34.968: INFO: Pod "pod-update-activedeadlineseconds-a8e6de40-305a-41fb-95f9-e58a53fa5cf5" satisfied condition "terminated with reason DeadlineExceeded"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:31:34.969: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-8284" for this suite. 01/30/23 08:31:34.971
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:31:34.977
Jan 30 08:31:34.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-runtime 01/30/23 08:31:34.978
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:34.986
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:34.988
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 01/30/23 08:31:34.996
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 01/30/23 08:31:54.048
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 01/30/23 08:31:54.049
STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 01/30/23 08:31:54.052
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 01/30/23 08:31:54.052
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 01/30/23 08:31:54.078
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 01/30/23 08:31:57.089
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 01/30/23 08:31:59.096
STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 01/30/23 08:31:59.099
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 01/30/23 08:31:59.099
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 01/30/23 08:31:59.126
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 01/30/23 08:32:00.13
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 01/30/23 08:32:03.14
STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 01/30/23 08:32:03.144
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 01/30/23 08:32:03.144
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:03.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-231" for this suite. 01/30/23 08:32:03.168
------------------------------
â€¢ [SLOW TEST] [28.194 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    when starting a container that exits
    test/e2e/common/node/runtime.go:45
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:31:34.977
    Jan 30 08:31:34.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-runtime 01/30/23 08:31:34.978
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:31:34.986
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:31:34.988
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52
    STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 01/30/23 08:31:34.996
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 01/30/23 08:31:54.048
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 01/30/23 08:31:54.049
    STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 01/30/23 08:31:54.052
    STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 01/30/23 08:31:54.052
    STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 01/30/23 08:31:54.078
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 01/30/23 08:31:57.089
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 01/30/23 08:31:59.096
    STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 01/30/23 08:31:59.099
    STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 01/30/23 08:31:59.099
    STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 01/30/23 08:31:59.126
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 01/30/23 08:32:00.13
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 01/30/23 08:32:03.14
    STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 01/30/23 08:32:03.144
    STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 01/30/23 08:32:03.144
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:03.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-231" for this suite. 01/30/23 08:32:03.168
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:03.171
Jan 30 08:32:03.172: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename csiinlinevolumes 01/30/23 08:32:03.172
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:03.184
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:03.186
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
STEP: creating 01/30/23 08:32:03.188
STEP: getting 01/30/23 08:32:03.203
STEP: listing 01/30/23 08:32:03.208
STEP: deleting 01/30/23 08:32:03.211
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:03.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-3053" for this suite. 01/30/23 08:32:03.228
------------------------------
â€¢ [0.061 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:03.171
    Jan 30 08:32:03.172: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename csiinlinevolumes 01/30/23 08:32:03.172
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:03.184
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:03.186
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
      test/e2e/storage/csi_inline.go:46
    STEP: creating 01/30/23 08:32:03.188
    STEP: getting 01/30/23 08:32:03.203
    STEP: listing 01/30/23 08:32:03.208
    STEP: deleting 01/30/23 08:32:03.211
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:03.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-3053" for this suite. 01/30/23 08:32:03.228
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:03.234
Jan 30 08:32:03.234: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:32:03.235
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:03.246
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:03.248
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
STEP: creating a secret 01/30/23 08:32:03.25
STEP: listing secrets in all namespaces to ensure that there are more than zero 01/30/23 08:32:03.253
STEP: patching the secret 01/30/23 08:32:03.255
STEP: deleting the secret using a LabelSelector 01/30/23 08:32:03.261
STEP: listing secrets in all namespaces, searching for label name and value in patch 01/30/23 08:32:03.266
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:03.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4436" for this suite. 01/30/23 08:32:03.27
------------------------------
â€¢ [0.039 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:03.234
    Jan 30 08:32:03.234: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:32:03.235
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:03.246
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:03.248
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a secret [Conformance]
      test/e2e/common/node/secrets.go:154
    STEP: creating a secret 01/30/23 08:32:03.25
    STEP: listing secrets in all namespaces to ensure that there are more than zero 01/30/23 08:32:03.253
    STEP: patching the secret 01/30/23 08:32:03.255
    STEP: deleting the secret using a LabelSelector 01/30/23 08:32:03.261
    STEP: listing secrets in all namespaces, searching for label name and value in patch 01/30/23 08:32:03.266
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:03.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4436" for this suite. 01/30/23 08:32:03.27
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] DNS
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:03.274
Jan 30 08:32:03.274: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename dns 01/30/23 08:32:03.275
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:03.284
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:03.286
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 01/30/23 08:32:03.288
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 01/30/23 08:32:03.288
STEP: creating a pod to probe DNS 01/30/23 08:32:03.288
STEP: submitting the pod to kubernetes 01/30/23 08:32:03.288
Jan 30 08:32:03.295: INFO: Waiting up to 15m0s for pod "dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3" in namespace "dns-2593" to be "running"
Jan 30 08:32:03.297: INFO: Pod "dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3": Phase="Pending", Reason="", readiness=false. Elapsed: 1.937729ms
Jan 30 08:32:05.300: INFO: Pod "dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3": Phase="Running", Reason="", readiness=true. Elapsed: 2.004316387s
Jan 30 08:32:05.300: INFO: Pod "dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3" satisfied condition "running"
STEP: retrieving the pod 01/30/23 08:32:05.3
STEP: looking for the results for each expected name from probers 01/30/23 08:32:05.302
Jan 30 08:32:05.325: INFO: DNS probes using dns-2593/dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3 succeeded

STEP: deleting the pod 01/30/23 08:32:05.325
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:05.336: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-2593" for this suite. 01/30/23 08:32:05.339
------------------------------
â€¢ [2.069 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:03.274
    Jan 30 08:32:03.274: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename dns 01/30/23 08:32:03.275
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:03.284
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:03.286
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for the cluster  [Conformance]
      test/e2e/network/dns.go:50
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     01/30/23 08:32:03.288
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     01/30/23 08:32:03.288
    STEP: creating a pod to probe DNS 01/30/23 08:32:03.288
    STEP: submitting the pod to kubernetes 01/30/23 08:32:03.288
    Jan 30 08:32:03.295: INFO: Waiting up to 15m0s for pod "dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3" in namespace "dns-2593" to be "running"
    Jan 30 08:32:03.297: INFO: Pod "dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3": Phase="Pending", Reason="", readiness=false. Elapsed: 1.937729ms
    Jan 30 08:32:05.300: INFO: Pod "dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3": Phase="Running", Reason="", readiness=true. Elapsed: 2.004316387s
    Jan 30 08:32:05.300: INFO: Pod "dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 08:32:05.3
    STEP: looking for the results for each expected name from probers 01/30/23 08:32:05.302
    Jan 30 08:32:05.325: INFO: DNS probes using dns-2593/dns-test-744d6af4-ed27-49c7-b406-da757dcc36e3 succeeded

    STEP: deleting the pod 01/30/23 08:32:05.325
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:05.336: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-2593" for this suite. 01/30/23 08:32:05.339
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:05.343
Jan 30 08:32:05.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:32:05.344
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:05.358
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:05.36
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
STEP: Creating configMap with name configmap-test-volume-map-12563645-328d-459d-b742-9b8be01c8561 01/30/23 08:32:05.362
STEP: Creating a pod to test consume configMaps 01/30/23 08:32:05.365
Jan 30 08:32:05.372: INFO: Waiting up to 5m0s for pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829" in namespace "configmap-8035" to be "Succeeded or Failed"
Jan 30 08:32:05.374: INFO: Pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829": Phase="Pending", Reason="", readiness=false. Elapsed: 2.03071ms
Jan 30 08:32:07.377: INFO: Pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004893124s
Jan 30 08:32:09.377: INFO: Pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005457385s
STEP: Saw pod success 01/30/23 08:32:09.378
Jan 30 08:32:09.378: INFO: Pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829" satisfied condition "Succeeded or Failed"
Jan 30 08:32:09.379: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 08:32:09.383
Jan 30 08:32:09.395: INFO: Waiting for pod pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829 to disappear
Jan 30 08:32:09.396: INFO: Pod pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:09.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8035" for this suite. 01/30/23 08:32:09.398
------------------------------
â€¢ [4.059 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:05.343
    Jan 30 08:32:05.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:32:05.344
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:05.358
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:05.36
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:99
    STEP: Creating configMap with name configmap-test-volume-map-12563645-328d-459d-b742-9b8be01c8561 01/30/23 08:32:05.362
    STEP: Creating a pod to test consume configMaps 01/30/23 08:32:05.365
    Jan 30 08:32:05.372: INFO: Waiting up to 5m0s for pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829" in namespace "configmap-8035" to be "Succeeded or Failed"
    Jan 30 08:32:05.374: INFO: Pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829": Phase="Pending", Reason="", readiness=false. Elapsed: 2.03071ms
    Jan 30 08:32:07.377: INFO: Pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004893124s
    Jan 30 08:32:09.377: INFO: Pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005457385s
    STEP: Saw pod success 01/30/23 08:32:09.378
    Jan 30 08:32:09.378: INFO: Pod "pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829" satisfied condition "Succeeded or Failed"
    Jan 30 08:32:09.379: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 08:32:09.383
    Jan 30 08:32:09.395: INFO: Waiting for pod pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829 to disappear
    Jan 30 08:32:09.396: INFO: Pod pod-configmaps-abc64a64-d88b-4712-8bdf-b8d62adf1829 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:09.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8035" for this suite. 01/30/23 08:32:09.398
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:09.403
Jan 30 08:32:09.403: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename daemonsets 01/30/23 08:32:09.403
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:09.413
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:09.414
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
STEP: Creating a simple DaemonSet "daemon-set" 01/30/23 08:32:09.424
STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 08:32:09.429
Jan 30 08:32:09.431: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:32:09.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:32:09.433: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:32:10.436: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:32:10.438: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:32:10.438: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:32:11.436: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:32:11.438: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 08:32:11.438: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 01/30/23 08:32:11.44
Jan 30 08:32:11.462: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:32:11.466: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:32:11.466: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:32:12.469: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:32:12.471: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:32:12.471: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:32:13.470: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:32:13.472: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 08:32:13.472: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted. 01/30/23 08:32:13.472
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/30/23 08:32:13.476
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4098, will wait for the garbage collector to delete the pods 01/30/23 08:32:13.476
Jan 30 08:32:13.533: INFO: Deleting DaemonSet.extensions daemon-set took: 4.543983ms
Jan 30 08:32:13.634: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.761992ms
Jan 30 08:32:15.737: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:32:15.737: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 08:32:15.738: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7193"},"items":null}

Jan 30 08:32:15.740: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7193"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:15.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4098" for this suite. 01/30/23 08:32:15.748
------------------------------
â€¢ [SLOW TEST] [6.358 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:09.403
    Jan 30 08:32:09.403: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename daemonsets 01/30/23 08:32:09.403
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:09.413
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:09.414
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should retry creating failed daemon pods [Conformance]
      test/e2e/apps/daemon_set.go:294
    STEP: Creating a simple DaemonSet "daemon-set" 01/30/23 08:32:09.424
    STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 08:32:09.429
    Jan 30 08:32:09.431: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:32:09.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:32:09.433: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:32:10.436: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:32:10.438: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:32:10.438: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:32:11.436: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:32:11.438: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 08:32:11.438: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 01/30/23 08:32:11.44
    Jan 30 08:32:11.462: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:32:11.466: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:32:11.466: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:32:12.469: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:32:12.471: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:32:12.471: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:32:13.470: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:32:13.472: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 08:32:13.472: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Wait for the failed daemon pod to be completely deleted. 01/30/23 08:32:13.472
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/30/23 08:32:13.476
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4098, will wait for the garbage collector to delete the pods 01/30/23 08:32:13.476
    Jan 30 08:32:13.533: INFO: Deleting DaemonSet.extensions daemon-set took: 4.543983ms
    Jan 30 08:32:13.634: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.761992ms
    Jan 30 08:32:15.737: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:32:15.737: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 30 08:32:15.738: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7193"},"items":null}

    Jan 30 08:32:15.740: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7193"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:15.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4098" for this suite. 01/30/23 08:32:15.748
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:15.761
Jan 30 08:32:15.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename svcaccounts 01/30/23 08:32:15.762
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:15.772
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:15.774
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
STEP: creating a ServiceAccount 01/30/23 08:32:15.776
STEP: watching for the ServiceAccount to be added 01/30/23 08:32:15.784
STEP: patching the ServiceAccount 01/30/23 08:32:15.785
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 01/30/23 08:32:15.793
STEP: deleting the ServiceAccount 01/30/23 08:32:15.796
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:15.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-2567" for this suite. 01/30/23 08:32:15.809
------------------------------
â€¢ [0.052 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:15.761
    Jan 30 08:32:15.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename svcaccounts 01/30/23 08:32:15.762
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:15.772
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:15.774
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through the lifecycle of a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:649
    STEP: creating a ServiceAccount 01/30/23 08:32:15.776
    STEP: watching for the ServiceAccount to be added 01/30/23 08:32:15.784
    STEP: patching the ServiceAccount 01/30/23 08:32:15.785
    STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 01/30/23 08:32:15.793
    STEP: deleting the ServiceAccount 01/30/23 08:32:15.796
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:15.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-2567" for this suite. 01/30/23 08:32:15.809
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:15.814
Jan 30 08:32:15.815: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:32:15.815
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:15.826
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:15.828
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
STEP: creating service in namespace services-4072 01/30/23 08:32:15.83
STEP: creating service affinity-clusterip in namespace services-4072 01/30/23 08:32:15.83
STEP: creating replication controller affinity-clusterip in namespace services-4072 01/30/23 08:32:15.838
I0130 08:32:15.845470      24 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4072, replica count: 3
I0130 08:32:18.898726      24 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:32:18.902: INFO: Creating new exec pod
Jan 30 08:32:18.916: INFO: Waiting up to 5m0s for pod "execpod-affinity6qhpw" in namespace "services-4072" to be "running"
Jan 30 08:32:18.918: INFO: Pod "execpod-affinity6qhpw": Phase="Pending", Reason="", readiness=false. Elapsed: 2.200696ms
Jan 30 08:32:20.921: INFO: Pod "execpod-affinity6qhpw": Phase="Running", Reason="", readiness=true. Elapsed: 2.005198808s
Jan 30 08:32:20.921: INFO: Pod "execpod-affinity6qhpw" satisfied condition "running"
Jan 30 08:32:21.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4072 exec execpod-affinity6qhpw -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
Jan 30 08:32:22.118: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Jan 30 08:32:22.118: INFO: stdout: ""
Jan 30 08:32:22.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4072 exec execpod-affinity6qhpw -- /bin/sh -x -c nc -v -z -w 2 10.96.241.163 80'
Jan 30 08:32:22.222: INFO: stderr: "+ nc -v -z -w 2 10.96.241.163 80\nConnection to 10.96.241.163 80 port [tcp/http] succeeded!\n"
Jan 30 08:32:22.222: INFO: stdout: ""
Jan 30 08:32:22.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4072 exec execpod-affinity6qhpw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.241.163:80/ ; done'
Jan 30 08:32:22.430: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n"
Jan 30 08:32:22.430: INFO: stdout: "\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq"
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
Jan 30 08:32:22.430: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-4072, will wait for the garbage collector to delete the pods 01/30/23 08:32:22.458
Jan 30 08:32:22.519: INFO: Deleting ReplicationController affinity-clusterip took: 7.418365ms
Jan 30 08:32:22.620: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.789162ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:25.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4072" for this suite. 01/30/23 08:32:25.834
------------------------------
â€¢ [SLOW TEST] [10.024 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:15.814
    Jan 30 08:32:15.815: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:32:15.815
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:15.826
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:15.828
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2191
    STEP: creating service in namespace services-4072 01/30/23 08:32:15.83
    STEP: creating service affinity-clusterip in namespace services-4072 01/30/23 08:32:15.83
    STEP: creating replication controller affinity-clusterip in namespace services-4072 01/30/23 08:32:15.838
    I0130 08:32:15.845470      24 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4072, replica count: 3
    I0130 08:32:18.898726      24 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 08:32:18.902: INFO: Creating new exec pod
    Jan 30 08:32:18.916: INFO: Waiting up to 5m0s for pod "execpod-affinity6qhpw" in namespace "services-4072" to be "running"
    Jan 30 08:32:18.918: INFO: Pod "execpod-affinity6qhpw": Phase="Pending", Reason="", readiness=false. Elapsed: 2.200696ms
    Jan 30 08:32:20.921: INFO: Pod "execpod-affinity6qhpw": Phase="Running", Reason="", readiness=true. Elapsed: 2.005198808s
    Jan 30 08:32:20.921: INFO: Pod "execpod-affinity6qhpw" satisfied condition "running"
    Jan 30 08:32:21.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4072 exec execpod-affinity6qhpw -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
    Jan 30 08:32:22.118: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
    Jan 30 08:32:22.118: INFO: stdout: ""
    Jan 30 08:32:22.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4072 exec execpod-affinity6qhpw -- /bin/sh -x -c nc -v -z -w 2 10.96.241.163 80'
    Jan 30 08:32:22.222: INFO: stderr: "+ nc -v -z -w 2 10.96.241.163 80\nConnection to 10.96.241.163 80 port [tcp/http] succeeded!\n"
    Jan 30 08:32:22.222: INFO: stdout: ""
    Jan 30 08:32:22.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4072 exec execpod-affinity6qhpw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.241.163:80/ ; done'
    Jan 30 08:32:22.430: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.241.163:80/\n"
    Jan 30 08:32:22.430: INFO: stdout: "\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq\naffinity-clusterip-mbjlq"
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Received response from host: affinity-clusterip-mbjlq
    Jan 30 08:32:22.430: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip in namespace services-4072, will wait for the garbage collector to delete the pods 01/30/23 08:32:22.458
    Jan 30 08:32:22.519: INFO: Deleting ReplicationController affinity-clusterip took: 7.418365ms
    Jan 30 08:32:22.620: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.789162ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:25.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4072" for this suite. 01/30/23 08:32:25.834
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:25.839
Jan 30 08:32:25.839: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename security-context-test 01/30/23 08:32:25.84
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:25.852
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:25.855
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
Jan 30 08:32:25.862: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0" in namespace "security-context-test-4804" to be "Succeeded or Failed"
Jan 30 08:32:25.864: INFO: Pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0": Phase="Pending", Reason="", readiness=false. Elapsed: 1.760943ms
Jan 30 08:32:27.867: INFO: Pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004821928s
Jan 30 08:32:29.866: INFO: Pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004026779s
Jan 30 08:32:29.866: INFO: Pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0" satisfied condition "Succeeded or Failed"
Jan 30 08:32:29.869: INFO: Got logs for pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:29.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-4804" for this suite. 01/30/23 08:32:29.871
------------------------------
â€¢ [4.046 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with privileged
  test/e2e/common/node/security_context.go:491
    should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:528

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:25.839
    Jan 30 08:32:25.839: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename security-context-test 01/30/23 08:32:25.84
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:25.852
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:25.855
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:528
    Jan 30 08:32:25.862: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0" in namespace "security-context-test-4804" to be "Succeeded or Failed"
    Jan 30 08:32:25.864: INFO: Pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0": Phase="Pending", Reason="", readiness=false. Elapsed: 1.760943ms
    Jan 30 08:32:27.867: INFO: Pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004821928s
    Jan 30 08:32:29.866: INFO: Pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004026779s
    Jan 30 08:32:29.866: INFO: Pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0" satisfied condition "Succeeded or Failed"
    Jan 30 08:32:29.869: INFO: Got logs for pod "busybox-privileged-false-46e52869-6ce6-4a69-b832-a52bd80983b0": "ip: RTNETLINK answers: Operation not permitted\n"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:29.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-4804" for this suite. 01/30/23 08:32:29.871
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:29.886
Jan 30 08:32:29.886: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 08:32:29.887
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:29.897
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:29.899
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
STEP: Creating a ResourceQuota with terminating scope 01/30/23 08:32:29.9
STEP: Ensuring ResourceQuota status is calculated 01/30/23 08:32:29.904
STEP: Creating a ResourceQuota with not terminating scope 01/30/23 08:32:31.907
STEP: Ensuring ResourceQuota status is calculated 01/30/23 08:32:31.911
STEP: Creating a long running pod 01/30/23 08:32:33.913
STEP: Ensuring resource quota with not terminating scope captures the pod usage 01/30/23 08:32:33.922
STEP: Ensuring resource quota with terminating scope ignored the pod usage 01/30/23 08:32:35.925
STEP: Deleting the pod 01/30/23 08:32:37.928
STEP: Ensuring resource quota status released the pod usage 01/30/23 08:32:37.938
STEP: Creating a terminating pod 01/30/23 08:32:39.941
STEP: Ensuring resource quota with terminating scope captures the pod usage 01/30/23 08:32:39.962
STEP: Ensuring resource quota with not terminating scope ignored the pod usage 01/30/23 08:32:41.966
STEP: Deleting the pod 01/30/23 08:32:43.969
STEP: Ensuring resource quota status released the pod usage 01/30/23 08:32:43.978
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:45.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8153" for this suite. 01/30/23 08:32:45.983
------------------------------
â€¢ [SLOW TEST] [16.101 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:29.886
    Jan 30 08:32:29.886: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 08:32:29.887
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:29.897
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:29.899
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with terminating scopes. [Conformance]
      test/e2e/apimachinery/resource_quota.go:690
    STEP: Creating a ResourceQuota with terminating scope 01/30/23 08:32:29.9
    STEP: Ensuring ResourceQuota status is calculated 01/30/23 08:32:29.904
    STEP: Creating a ResourceQuota with not terminating scope 01/30/23 08:32:31.907
    STEP: Ensuring ResourceQuota status is calculated 01/30/23 08:32:31.911
    STEP: Creating a long running pod 01/30/23 08:32:33.913
    STEP: Ensuring resource quota with not terminating scope captures the pod usage 01/30/23 08:32:33.922
    STEP: Ensuring resource quota with terminating scope ignored the pod usage 01/30/23 08:32:35.925
    STEP: Deleting the pod 01/30/23 08:32:37.928
    STEP: Ensuring resource quota status released the pod usage 01/30/23 08:32:37.938
    STEP: Creating a terminating pod 01/30/23 08:32:39.941
    STEP: Ensuring resource quota with terminating scope captures the pod usage 01/30/23 08:32:39.962
    STEP: Ensuring resource quota with not terminating scope ignored the pod usage 01/30/23 08:32:41.966
    STEP: Deleting the pod 01/30/23 08:32:43.969
    STEP: Ensuring resource quota status released the pod usage 01/30/23 08:32:43.978
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:45.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8153" for this suite. 01/30/23 08:32:45.983
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:45.988
Jan 30 08:32:45.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replicaset 01/30/23 08:32:45.988
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:45.998
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:46
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
Jan 30 08:32:46.001: INFO: Creating ReplicaSet my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75
Jan 30 08:32:46.007: INFO: Pod name my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75: Found 0 pods out of 1
Jan 30 08:32:51.012: INFO: Pod name my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75: Found 1 pods out of 1
Jan 30 08:32:51.012: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75" is running
Jan 30 08:32:51.012: INFO: Waiting up to 5m0s for pod "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk" in namespace "replicaset-8869" to be "running"
Jan 30 08:32:51.014: INFO: Pod "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk": Phase="Running", Reason="", readiness=true. Elapsed: 2.697752ms
Jan 30 08:32:51.014: INFO: Pod "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk" satisfied condition "running"
Jan 30 08:32:51.014: INFO: Pod "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:32:46 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:32:47 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:32:47 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:32:46 +0000 UTC Reason: Message:}])
Jan 30 08:32:51.015: INFO: Trying to dial the pod
Jan 30 08:32:56.023: INFO: Controller my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75: Got expected result from replica 1 [my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk]: "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:32:56.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-8869" for this suite. 01/30/23 08:32:56.026
------------------------------
â€¢ [SLOW TEST] [10.043 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:45.988
    Jan 30 08:32:45.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replicaset 01/30/23 08:32:45.988
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:45.998
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:46
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/replica_set.go:111
    Jan 30 08:32:46.001: INFO: Creating ReplicaSet my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75
    Jan 30 08:32:46.007: INFO: Pod name my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75: Found 0 pods out of 1
    Jan 30 08:32:51.012: INFO: Pod name my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75: Found 1 pods out of 1
    Jan 30 08:32:51.012: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75" is running
    Jan 30 08:32:51.012: INFO: Waiting up to 5m0s for pod "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk" in namespace "replicaset-8869" to be "running"
    Jan 30 08:32:51.014: INFO: Pod "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk": Phase="Running", Reason="", readiness=true. Elapsed: 2.697752ms
    Jan 30 08:32:51.014: INFO: Pod "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk" satisfied condition "running"
    Jan 30 08:32:51.014: INFO: Pod "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:32:46 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:32:47 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:32:47 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 08:32:46 +0000 UTC Reason: Message:}])
    Jan 30 08:32:51.015: INFO: Trying to dial the pod
    Jan 30 08:32:56.023: INFO: Controller my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75: Got expected result from replica 1 [my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk]: "my-hostname-basic-a7ca9865-d271-44e0-a132-a548e2bb8d75-dzdwk", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:32:56.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-8869" for this suite. 01/30/23 08:32:56.026
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:32:56.031
Jan 30 08:32:56.031: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:32:56.032
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:56.04
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:56.042
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
STEP: creating service in namespace services-7279 01/30/23 08:32:56.043
STEP: creating service affinity-nodeport-transition in namespace services-7279 01/30/23 08:32:56.044
STEP: creating replication controller affinity-nodeport-transition in namespace services-7279 01/30/23 08:32:56.053
I0130 08:32:56.061452      24 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7279, replica count: 3
I0130 08:32:59.112990      24 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:32:59.118: INFO: Creating new exec pod
Jan 30 08:32:59.122: INFO: Waiting up to 5m0s for pod "execpod-affinity9mgf6" in namespace "services-7279" to be "running"
Jan 30 08:32:59.124: INFO: Pod "execpod-affinity9mgf6": Phase="Pending", Reason="", readiness=false. Elapsed: 1.743142ms
Jan 30 08:33:01.127: INFO: Pod "execpod-affinity9mgf6": Phase="Running", Reason="", readiness=true. Elapsed: 2.004429307s
Jan 30 08:33:01.127: INFO: Pod "execpod-affinity9mgf6" satisfied condition "running"
Jan 30 08:33:02.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
Jan 30 08:33:02.224: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Jan 30 08:33:02.224: INFO: stdout: ""
Jan 30 08:33:02.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c nc -v -z -w 2 10.96.146.7 80'
Jan 30 08:33:02.315: INFO: stderr: "+ nc -v -z -w 2 10.96.146.7 80\nConnection to 10.96.146.7 80 port [tcp/http] succeeded!\n"
Jan 30 08:33:02.315: INFO: stdout: ""
Jan 30 08:33:02.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c nc -v -z -w 2 172.20.0.2 32498'
Jan 30 08:33:02.456: INFO: stderr: "+ nc -v -z -w 2 172.20.0.2 32498\nConnection to 172.20.0.2 32498 port [tcp/*] succeeded!\n"
Jan 30 08:33:02.456: INFO: stdout: ""
Jan 30 08:33:02.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c nc -v -z -w 2 172.20.0.4 32498'
Jan 30 08:33:02.548: INFO: stderr: "+ nc -v -z -w 2 172.20.0.4 32498\nConnection to 172.20.0.4 32498 port [tcp/*] succeeded!\n"
Jan 30 08:33:02.548: INFO: stdout: ""
Jan 30 08:33:02.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.2:32498/ ; done'
Jan 30 08:33:02.768: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n"
Jan 30 08:33:02.768: INFO: stdout: "\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-vqbjn\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-vqbjn\naffinity-nodeport-transition-vqbjn\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-vqbjn\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-znshm"
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-vqbjn
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-vqbjn
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-vqbjn
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-vqbjn
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
Jan 30 08:33:02.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.2:32498/ ; done'
Jan 30 08:33:03.000: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n"
Jan 30 08:33:03.000: INFO: stdout: "\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d"
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
Jan 30 08:33:03.000: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7279, will wait for the garbage collector to delete the pods 01/30/23 08:33:03.024
Jan 30 08:33:03.081: INFO: Deleting ReplicationController affinity-nodeport-transition took: 4.650805ms
Jan 30 08:33:03.182: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.591318ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:33:06.895: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7279" for this suite. 01/30/23 08:33:06.897
------------------------------
â€¢ [SLOW TEST] [10.870 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:32:56.031
    Jan 30 08:32:56.031: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:32:56.032
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:32:56.04
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:32:56.042
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2250
    STEP: creating service in namespace services-7279 01/30/23 08:32:56.043
    STEP: creating service affinity-nodeport-transition in namespace services-7279 01/30/23 08:32:56.044
    STEP: creating replication controller affinity-nodeport-transition in namespace services-7279 01/30/23 08:32:56.053
    I0130 08:32:56.061452      24 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7279, replica count: 3
    I0130 08:32:59.112990      24 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 08:32:59.118: INFO: Creating new exec pod
    Jan 30 08:32:59.122: INFO: Waiting up to 5m0s for pod "execpod-affinity9mgf6" in namespace "services-7279" to be "running"
    Jan 30 08:32:59.124: INFO: Pod "execpod-affinity9mgf6": Phase="Pending", Reason="", readiness=false. Elapsed: 1.743142ms
    Jan 30 08:33:01.127: INFO: Pod "execpod-affinity9mgf6": Phase="Running", Reason="", readiness=true. Elapsed: 2.004429307s
    Jan 30 08:33:01.127: INFO: Pod "execpod-affinity9mgf6" satisfied condition "running"
    Jan 30 08:33:02.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
    Jan 30 08:33:02.224: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
    Jan 30 08:33:02.224: INFO: stdout: ""
    Jan 30 08:33:02.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c nc -v -z -w 2 10.96.146.7 80'
    Jan 30 08:33:02.315: INFO: stderr: "+ nc -v -z -w 2 10.96.146.7 80\nConnection to 10.96.146.7 80 port [tcp/http] succeeded!\n"
    Jan 30 08:33:02.315: INFO: stdout: ""
    Jan 30 08:33:02.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c nc -v -z -w 2 172.20.0.2 32498'
    Jan 30 08:33:02.456: INFO: stderr: "+ nc -v -z -w 2 172.20.0.2 32498\nConnection to 172.20.0.2 32498 port [tcp/*] succeeded!\n"
    Jan 30 08:33:02.456: INFO: stdout: ""
    Jan 30 08:33:02.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c nc -v -z -w 2 172.20.0.4 32498'
    Jan 30 08:33:02.548: INFO: stderr: "+ nc -v -z -w 2 172.20.0.4 32498\nConnection to 172.20.0.4 32498 port [tcp/*] succeeded!\n"
    Jan 30 08:33:02.548: INFO: stdout: ""
    Jan 30 08:33:02.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.2:32498/ ; done'
    Jan 30 08:33:02.768: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n"
    Jan 30 08:33:02.768: INFO: stdout: "\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-vqbjn\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-znshm\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-vqbjn\naffinity-nodeport-transition-vqbjn\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-vqbjn\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-znshm"
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-vqbjn
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-vqbjn
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-vqbjn
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-vqbjn
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:02.768: INFO: Received response from host: affinity-nodeport-transition-znshm
    Jan 30 08:33:02.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7279 exec execpod-affinity9mgf6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.2:32498/ ; done'
    Jan 30 08:33:03.000: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:32498/\n"
    Jan 30 08:33:03.000: INFO: stdout: "\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d\naffinity-nodeport-transition-9gk5d"
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Received response from host: affinity-nodeport-transition-9gk5d
    Jan 30 08:33:03.000: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7279, will wait for the garbage collector to delete the pods 01/30/23 08:33:03.024
    Jan 30 08:33:03.081: INFO: Deleting ReplicationController affinity-nodeport-transition took: 4.650805ms
    Jan 30 08:33:03.182: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.591318ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:33:06.895: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7279" for this suite. 01/30/23 08:33:06.897
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] DNS
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:33:06.901
Jan 30 08:33:06.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename dns 01/30/23 08:33:06.902
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:06.915
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:06.917
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
STEP: Creating a test externalName service 01/30/23 08:33:06.919
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
 01/30/23 08:33:06.923
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
 01/30/23 08:33:06.923
STEP: creating a pod to probe DNS 01/30/23 08:33:06.923
STEP: submitting the pod to kubernetes 01/30/23 08:33:06.923
Jan 30 08:33:06.930: INFO: Waiting up to 15m0s for pod "dns-test-85fb324e-237b-48c5-aef6-a668abae8386" in namespace "dns-8527" to be "running"
Jan 30 08:33:06.932: INFO: Pod "dns-test-85fb324e-237b-48c5-aef6-a668abae8386": Phase="Pending", Reason="", readiness=false. Elapsed: 1.973639ms
Jan 30 08:33:08.934: INFO: Pod "dns-test-85fb324e-237b-48c5-aef6-a668abae8386": Phase="Running", Reason="", readiness=true. Elapsed: 2.004411719s
Jan 30 08:33:08.934: INFO: Pod "dns-test-85fb324e-237b-48c5-aef6-a668abae8386" satisfied condition "running"
STEP: retrieving the pod 01/30/23 08:33:08.934
STEP: looking for the results for each expected name from probers 01/30/23 08:33:08.936
Jan 30 08:33:08.940: INFO: DNS probes using dns-test-85fb324e-237b-48c5-aef6-a668abae8386 succeeded

STEP: deleting the pod 01/30/23 08:33:08.94
STEP: changing the externalName to bar.example.com 01/30/23 08:33:08.963
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
 01/30/23 08:33:08.968
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
 01/30/23 08:33:08.968
STEP: creating a second pod to probe DNS 01/30/23 08:33:08.968
STEP: submitting the pod to kubernetes 01/30/23 08:33:08.968
Jan 30 08:33:08.973: INFO: Waiting up to 15m0s for pod "dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31" in namespace "dns-8527" to be "running"
Jan 30 08:33:08.975: INFO: Pod "dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31": Phase="Pending", Reason="", readiness=false. Elapsed: 1.945211ms
Jan 30 08:33:10.979: INFO: Pod "dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31": Phase="Running", Reason="", readiness=true. Elapsed: 2.005984192s
Jan 30 08:33:10.979: INFO: Pod "dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31" satisfied condition "running"
STEP: retrieving the pod 01/30/23 08:33:10.979
STEP: looking for the results for each expected name from probers 01/30/23 08:33:10.982
Jan 30 08:33:10.984: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:10.987: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:10.987: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

Jan 30 08:33:15.992: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:15.995: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:15.995: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

Jan 30 08:33:20.992: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:20.994: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:20.994: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

Jan 30 08:33:25.992: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:25.994: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:25.994: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

Jan 30 08:33:30.990: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:30.992: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:30.992: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

Jan 30 08:33:35.999: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:36.001: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jan 30 08:33:36.001: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

Jan 30 08:33:40.993: INFO: DNS probes using dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 succeeded

STEP: deleting the pod 01/30/23 08:33:40.993
STEP: changing the service to type=ClusterIP 01/30/23 08:33:41.006
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
 01/30/23 08:33:41.024
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
 01/30/23 08:33:41.024
STEP: creating a third pod to probe DNS 01/30/23 08:33:41.025
STEP: submitting the pod to kubernetes 01/30/23 08:33:41.03
Jan 30 08:33:41.047: INFO: Waiting up to 15m0s for pod "dns-test-56077865-d96b-4033-9c83-d50fd59c9db2" in namespace "dns-8527" to be "running"
Jan 30 08:33:41.058: INFO: Pod "dns-test-56077865-d96b-4033-9c83-d50fd59c9db2": Phase="Pending", Reason="", readiness=false. Elapsed: 10.899009ms
Jan 30 08:33:43.061: INFO: Pod "dns-test-56077865-d96b-4033-9c83-d50fd59c9db2": Phase="Running", Reason="", readiness=true. Elapsed: 2.013958426s
Jan 30 08:33:43.061: INFO: Pod "dns-test-56077865-d96b-4033-9c83-d50fd59c9db2" satisfied condition "running"
STEP: retrieving the pod 01/30/23 08:33:43.061
STEP: looking for the results for each expected name from probers 01/30/23 08:33:43.063
Jan 30 08:33:43.068: INFO: DNS probes using dns-test-56077865-d96b-4033-9c83-d50fd59c9db2 succeeded

STEP: deleting the pod 01/30/23 08:33:43.068
STEP: deleting the test externalName service 01/30/23 08:33:43.078
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 30 08:33:43.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-8527" for this suite. 01/30/23 08:33:43.093
------------------------------
â€¢ [SLOW TEST] [36.199 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:33:06.901
    Jan 30 08:33:06.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename dns 01/30/23 08:33:06.902
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:06.915
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:06.917
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for ExternalName services [Conformance]
      test/e2e/network/dns.go:333
    STEP: Creating a test externalName service 01/30/23 08:33:06.919
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
     01/30/23 08:33:06.923
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
     01/30/23 08:33:06.923
    STEP: creating a pod to probe DNS 01/30/23 08:33:06.923
    STEP: submitting the pod to kubernetes 01/30/23 08:33:06.923
    Jan 30 08:33:06.930: INFO: Waiting up to 15m0s for pod "dns-test-85fb324e-237b-48c5-aef6-a668abae8386" in namespace "dns-8527" to be "running"
    Jan 30 08:33:06.932: INFO: Pod "dns-test-85fb324e-237b-48c5-aef6-a668abae8386": Phase="Pending", Reason="", readiness=false. Elapsed: 1.973639ms
    Jan 30 08:33:08.934: INFO: Pod "dns-test-85fb324e-237b-48c5-aef6-a668abae8386": Phase="Running", Reason="", readiness=true. Elapsed: 2.004411719s
    Jan 30 08:33:08.934: INFO: Pod "dns-test-85fb324e-237b-48c5-aef6-a668abae8386" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 08:33:08.934
    STEP: looking for the results for each expected name from probers 01/30/23 08:33:08.936
    Jan 30 08:33:08.940: INFO: DNS probes using dns-test-85fb324e-237b-48c5-aef6-a668abae8386 succeeded

    STEP: deleting the pod 01/30/23 08:33:08.94
    STEP: changing the externalName to bar.example.com 01/30/23 08:33:08.963
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
     01/30/23 08:33:08.968
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
     01/30/23 08:33:08.968
    STEP: creating a second pod to probe DNS 01/30/23 08:33:08.968
    STEP: submitting the pod to kubernetes 01/30/23 08:33:08.968
    Jan 30 08:33:08.973: INFO: Waiting up to 15m0s for pod "dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31" in namespace "dns-8527" to be "running"
    Jan 30 08:33:08.975: INFO: Pod "dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31": Phase="Pending", Reason="", readiness=false. Elapsed: 1.945211ms
    Jan 30 08:33:10.979: INFO: Pod "dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31": Phase="Running", Reason="", readiness=true. Elapsed: 2.005984192s
    Jan 30 08:33:10.979: INFO: Pod "dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 08:33:10.979
    STEP: looking for the results for each expected name from probers 01/30/23 08:33:10.982
    Jan 30 08:33:10.984: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:10.987: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:10.987: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

    Jan 30 08:33:15.992: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:15.995: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:15.995: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

    Jan 30 08:33:20.992: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:20.994: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:20.994: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

    Jan 30 08:33:25.992: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:25.994: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:25.994: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

    Jan 30 08:33:30.990: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:30.992: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:30.992: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

    Jan 30 08:33:35.999: INFO: File wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:36.001: INFO: File jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local from pod  dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Jan 30 08:33:36.001: INFO: Lookups using dns-8527/dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 failed for: [wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local]

    Jan 30 08:33:40.993: INFO: DNS probes using dns-test-ea41e732-47f9-41fa-b5d7-4d5e0abd3b31 succeeded

    STEP: deleting the pod 01/30/23 08:33:40.993
    STEP: changing the service to type=ClusterIP 01/30/23 08:33:41.006
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
     01/30/23 08:33:41.024
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8527.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8527.svc.cluster.local; sleep 1; done
     01/30/23 08:33:41.024
    STEP: creating a third pod to probe DNS 01/30/23 08:33:41.025
    STEP: submitting the pod to kubernetes 01/30/23 08:33:41.03
    Jan 30 08:33:41.047: INFO: Waiting up to 15m0s for pod "dns-test-56077865-d96b-4033-9c83-d50fd59c9db2" in namespace "dns-8527" to be "running"
    Jan 30 08:33:41.058: INFO: Pod "dns-test-56077865-d96b-4033-9c83-d50fd59c9db2": Phase="Pending", Reason="", readiness=false. Elapsed: 10.899009ms
    Jan 30 08:33:43.061: INFO: Pod "dns-test-56077865-d96b-4033-9c83-d50fd59c9db2": Phase="Running", Reason="", readiness=true. Elapsed: 2.013958426s
    Jan 30 08:33:43.061: INFO: Pod "dns-test-56077865-d96b-4033-9c83-d50fd59c9db2" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 08:33:43.061
    STEP: looking for the results for each expected name from probers 01/30/23 08:33:43.063
    Jan 30 08:33:43.068: INFO: DNS probes using dns-test-56077865-d96b-4033-9c83-d50fd59c9db2 succeeded

    STEP: deleting the pod 01/30/23 08:33:43.068
    STEP: deleting the test externalName service 01/30/23 08:33:43.078
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:33:43.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-8527" for this suite. 01/30/23 08:33:43.093
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:33:43.101
Jan 30 08:33:43.101: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 08:33:43.102
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:43.17
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:43.173
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
STEP: Creating a pod to test downward api env vars 01/30/23 08:33:43.176
Jan 30 08:33:43.183: INFO: Waiting up to 5m0s for pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb" in namespace "downward-api-298" to be "Succeeded or Failed"
Jan 30 08:33:43.186: INFO: Pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.784066ms
Jan 30 08:33:45.189: INFO: Pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005728293s
Jan 30 08:33:47.190: INFO: Pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006595347s
STEP: Saw pod success 01/30/23 08:33:47.19
Jan 30 08:33:47.190: INFO: Pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb" satisfied condition "Succeeded or Failed"
Jan 30 08:33:47.192: INFO: Trying to get logs from node tce-worker2 pod downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb container dapi-container: <nil>
STEP: delete the pod 01/30/23 08:33:47.202
Jan 30 08:33:47.215: INFO: Waiting for pod downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb to disappear
Jan 30 08:33:47.218: INFO: Pod downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 30 08:33:47.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-298" for this suite. 01/30/23 08:33:47.223
------------------------------
â€¢ [4.126 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:33:43.101
    Jan 30 08:33:43.101: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 08:33:43.102
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:43.17
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:43.173
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod UID as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:267
    STEP: Creating a pod to test downward api env vars 01/30/23 08:33:43.176
    Jan 30 08:33:43.183: INFO: Waiting up to 5m0s for pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb" in namespace "downward-api-298" to be "Succeeded or Failed"
    Jan 30 08:33:43.186: INFO: Pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.784066ms
    Jan 30 08:33:45.189: INFO: Pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005728293s
    Jan 30 08:33:47.190: INFO: Pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006595347s
    STEP: Saw pod success 01/30/23 08:33:47.19
    Jan 30 08:33:47.190: INFO: Pod "downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb" satisfied condition "Succeeded or Failed"
    Jan 30 08:33:47.192: INFO: Trying to get logs from node tce-worker2 pod downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb container dapi-container: <nil>
    STEP: delete the pod 01/30/23 08:33:47.202
    Jan 30 08:33:47.215: INFO: Waiting for pod downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb to disappear
    Jan 30 08:33:47.218: INFO: Pod downward-api-3b01a771-e060-45f8-a9f1-c91060c441bb no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:33:47.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-298" for this suite. 01/30/23 08:33:47.223
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] PodTemplates
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:33:47.228
Jan 30 08:33:47.228: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename podtemplate 01/30/23 08:33:47.229
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:47.24
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:47.243
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Jan 30 08:33:47.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-8341" for this suite. 01/30/23 08:33:47.271
------------------------------
â€¢ [0.048 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:33:47.228
    Jan 30 08:33:47.228: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename podtemplate 01/30/23 08:33:47.229
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:47.24
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:47.243
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should run the lifecycle of PodTemplates [Conformance]
      test/e2e/common/node/podtemplates.go:53
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:33:47.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-8341" for this suite. 01/30/23 08:33:47.271
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:33:47.276
Jan 30 08:33:47.277: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 08:33:47.277
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:47.287
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:47.29
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
STEP: Creating a pod to test downward api env vars 01/30/23 08:33:47.294
Jan 30 08:33:47.300: INFO: Waiting up to 5m0s for pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013" in namespace "downward-api-6858" to be "Succeeded or Failed"
Jan 30 08:33:47.305: INFO: Pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013": Phase="Pending", Reason="", readiness=false. Elapsed: 4.499449ms
Jan 30 08:33:49.307: INFO: Pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013": Phase="Running", Reason="", readiness=false. Elapsed: 2.006704818s
Jan 30 08:33:51.308: INFO: Pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008128495s
STEP: Saw pod success 01/30/23 08:33:51.309
Jan 30 08:33:51.309: INFO: Pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013" satisfied condition "Succeeded or Failed"
Jan 30 08:33:51.311: INFO: Trying to get logs from node tce-worker2 pod downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013 container dapi-container: <nil>
STEP: delete the pod 01/30/23 08:33:51.316
Jan 30 08:33:51.331: INFO: Waiting for pod downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013 to disappear
Jan 30 08:33:51.333: INFO: Pod downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 30 08:33:51.333: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6858" for this suite. 01/30/23 08:33:51.336
------------------------------
â€¢ [4.063 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:33:47.276
    Jan 30 08:33:47.277: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 08:33:47.277
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:47.287
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:47.29
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide host IP as an env var [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:90
    STEP: Creating a pod to test downward api env vars 01/30/23 08:33:47.294
    Jan 30 08:33:47.300: INFO: Waiting up to 5m0s for pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013" in namespace "downward-api-6858" to be "Succeeded or Failed"
    Jan 30 08:33:47.305: INFO: Pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013": Phase="Pending", Reason="", readiness=false. Elapsed: 4.499449ms
    Jan 30 08:33:49.307: INFO: Pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013": Phase="Running", Reason="", readiness=false. Elapsed: 2.006704818s
    Jan 30 08:33:51.308: INFO: Pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008128495s
    STEP: Saw pod success 01/30/23 08:33:51.309
    Jan 30 08:33:51.309: INFO: Pod "downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013" satisfied condition "Succeeded or Failed"
    Jan 30 08:33:51.311: INFO: Trying to get logs from node tce-worker2 pod downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013 container dapi-container: <nil>
    STEP: delete the pod 01/30/23 08:33:51.316
    Jan 30 08:33:51.331: INFO: Waiting for pod downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013 to disappear
    Jan 30 08:33:51.333: INFO: Pod downward-api-c7869c3f-7b35-4c36-9f43-ddeceb6f1013 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:33:51.333: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6858" for this suite. 01/30/23 08:33:51.336
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:33:51.34
Jan 30 08:33:51.341: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 08:33:51.341
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:51.354
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:51.356
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
STEP: Creating a ResourceQuota 01/30/23 08:33:51.359
STEP: Getting a ResourceQuota 01/30/23 08:33:51.363
STEP: Listing all ResourceQuotas with LabelSelector 01/30/23 08:33:51.365
STEP: Patching the ResourceQuota 01/30/23 08:33:51.368
STEP: Deleting a Collection of ResourceQuotas 01/30/23 08:33:51.373
STEP: Verifying the deleted ResourceQuota 01/30/23 08:33:51.383
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 08:33:51.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-3143" for this suite. 01/30/23 08:33:51.388
------------------------------
â€¢ [0.054 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:33:51.34
    Jan 30 08:33:51.341: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 08:33:51.341
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:51.354
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:51.356
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a ResourceQuota [Conformance]
      test/e2e/apimachinery/resource_quota.go:943
    STEP: Creating a ResourceQuota 01/30/23 08:33:51.359
    STEP: Getting a ResourceQuota 01/30/23 08:33:51.363
    STEP: Listing all ResourceQuotas with LabelSelector 01/30/23 08:33:51.365
    STEP: Patching the ResourceQuota 01/30/23 08:33:51.368
    STEP: Deleting a Collection of ResourceQuotas 01/30/23 08:33:51.373
    STEP: Verifying the deleted ResourceQuota 01/30/23 08:33:51.383
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:33:51.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-3143" for this suite. 01/30/23 08:33:51.388
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:33:51.396
Jan 30 08:33:51.396: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:33:51.396
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:51.411
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:51.414
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
STEP: Creating projection with secret that has name projected-secret-test-map-45d8e111-8f21-4d01-a08e-5d209bf21b88 01/30/23 08:33:51.416
STEP: Creating a pod to test consume secrets 01/30/23 08:33:51.421
Jan 30 08:33:51.429: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305" in namespace "projected-5371" to be "Succeeded or Failed"
Jan 30 08:33:51.432: INFO: Pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305": Phase="Pending", Reason="", readiness=false. Elapsed: 2.897919ms
Jan 30 08:33:53.435: INFO: Pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006453058s
Jan 30 08:33:55.435: INFO: Pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006087762s
STEP: Saw pod success 01/30/23 08:33:55.435
Jan 30 08:33:55.435: INFO: Pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305" satisfied condition "Succeeded or Failed"
Jan 30 08:33:55.437: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305 container projected-secret-volume-test: <nil>
STEP: delete the pod 01/30/23 08:33:55.441
Jan 30 08:33:55.450: INFO: Waiting for pod pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305 to disappear
Jan 30 08:33:55.452: INFO: Pod pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 30 08:33:55.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5371" for this suite. 01/30/23 08:33:55.454
------------------------------
â€¢ [4.066 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:33:51.396
    Jan 30 08:33:51.396: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:33:51.396
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:51.411
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:51.414
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:78
    STEP: Creating projection with secret that has name projected-secret-test-map-45d8e111-8f21-4d01-a08e-5d209bf21b88 01/30/23 08:33:51.416
    STEP: Creating a pod to test consume secrets 01/30/23 08:33:51.421
    Jan 30 08:33:51.429: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305" in namespace "projected-5371" to be "Succeeded or Failed"
    Jan 30 08:33:51.432: INFO: Pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305": Phase="Pending", Reason="", readiness=false. Elapsed: 2.897919ms
    Jan 30 08:33:53.435: INFO: Pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006453058s
    Jan 30 08:33:55.435: INFO: Pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006087762s
    STEP: Saw pod success 01/30/23 08:33:55.435
    Jan 30 08:33:55.435: INFO: Pod "pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305" satisfied condition "Succeeded or Failed"
    Jan 30 08:33:55.437: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305 container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:33:55.441
    Jan 30 08:33:55.450: INFO: Waiting for pod pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305 to disappear
    Jan 30 08:33:55.452: INFO: Pod pod-projected-secrets-2d01789b-8891-437e-a9fe-0c82b5679305 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:33:55.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5371" for this suite. 01/30/23 08:33:55.454
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:33:55.462
Jan 30 08:33:55.462: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:33:55.463
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:55.472
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:55.474
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
STEP: Creating configMap with name configmap-test-volume-b602f688-5eee-4816-8fad-031a7ca3c5d5 01/30/23 08:33:55.476
STEP: Creating a pod to test consume configMaps 01/30/23 08:33:55.479
Jan 30 08:33:55.488: INFO: Waiting up to 5m0s for pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe" in namespace "configmap-8287" to be "Succeeded or Failed"
Jan 30 08:33:55.490: INFO: Pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe": Phase="Pending", Reason="", readiness=false. Elapsed: 1.842776ms
Jan 30 08:33:57.494: INFO: Pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005271473s
Jan 30 08:33:59.494: INFO: Pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005464005s
STEP: Saw pod success 01/30/23 08:33:59.494
Jan 30 08:33:59.494: INFO: Pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe" satisfied condition "Succeeded or Failed"
Jan 30 08:33:59.495: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe container agnhost-container: <nil>
STEP: delete the pod 01/30/23 08:33:59.499
Jan 30 08:33:59.509: INFO: Waiting for pod pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe to disappear
Jan 30 08:33:59.512: INFO: Pod pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:33:59.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8287" for this suite. 01/30/23 08:33:59.515
------------------------------
â€¢ [4.058 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:33:55.462
    Jan 30 08:33:55.462: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:33:55.463
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:55.472
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:55.474
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:74
    STEP: Creating configMap with name configmap-test-volume-b602f688-5eee-4816-8fad-031a7ca3c5d5 01/30/23 08:33:55.476
    STEP: Creating a pod to test consume configMaps 01/30/23 08:33:55.479
    Jan 30 08:33:55.488: INFO: Waiting up to 5m0s for pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe" in namespace "configmap-8287" to be "Succeeded or Failed"
    Jan 30 08:33:55.490: INFO: Pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe": Phase="Pending", Reason="", readiness=false. Elapsed: 1.842776ms
    Jan 30 08:33:57.494: INFO: Pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005271473s
    Jan 30 08:33:59.494: INFO: Pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005464005s
    STEP: Saw pod success 01/30/23 08:33:59.494
    Jan 30 08:33:59.494: INFO: Pod "pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe" satisfied condition "Succeeded or Failed"
    Jan 30 08:33:59.495: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 08:33:59.499
    Jan 30 08:33:59.509: INFO: Waiting for pod pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe to disappear
    Jan 30 08:33:59.512: INFO: Pod pod-configmaps-f0f958e2-1e90-43e7-8a4c-035348daf1fe no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:33:59.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8287" for this suite. 01/30/23 08:33:59.515
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:33:59.52
Jan 30 08:33:59.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename var-expansion 01/30/23 08:33:59.52
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:59.531
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:59.533
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
STEP: Creating a pod to test env composition 01/30/23 08:33:59.536
Jan 30 08:33:59.543: INFO: Waiting up to 5m0s for pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4" in namespace "var-expansion-3969" to be "Succeeded or Failed"
Jan 30 08:33:59.545: INFO: Pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.340276ms
Jan 30 08:34:01.548: INFO: Pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005623823s
Jan 30 08:34:03.547: INFO: Pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004583258s
STEP: Saw pod success 01/30/23 08:34:03.547
Jan 30 08:34:03.547: INFO: Pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4" satisfied condition "Succeeded or Failed"
Jan 30 08:34:03.549: INFO: Trying to get logs from node tce-worker2 pod var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4 container dapi-container: <nil>
STEP: delete the pod 01/30/23 08:34:03.553
Jan 30 08:34:03.562: INFO: Waiting for pod var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4 to disappear
Jan 30 08:34:03.564: INFO: Pod var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 30 08:34:03.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-3969" for this suite. 01/30/23 08:34:03.566
------------------------------
â€¢ [4.053 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:33:59.52
    Jan 30 08:33:59.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename var-expansion 01/30/23 08:33:59.52
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:33:59.531
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:33:59.533
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:44
    STEP: Creating a pod to test env composition 01/30/23 08:33:59.536
    Jan 30 08:33:59.543: INFO: Waiting up to 5m0s for pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4" in namespace "var-expansion-3969" to be "Succeeded or Failed"
    Jan 30 08:33:59.545: INFO: Pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.340276ms
    Jan 30 08:34:01.548: INFO: Pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005623823s
    Jan 30 08:34:03.547: INFO: Pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004583258s
    STEP: Saw pod success 01/30/23 08:34:03.547
    Jan 30 08:34:03.547: INFO: Pod "var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4" satisfied condition "Succeeded or Failed"
    Jan 30 08:34:03.549: INFO: Trying to get logs from node tce-worker2 pod var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4 container dapi-container: <nil>
    STEP: delete the pod 01/30/23 08:34:03.553
    Jan 30 08:34:03.562: INFO: Waiting for pod var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4 to disappear
    Jan 30 08:34:03.564: INFO: Pod var-expansion-b0766cca-1d16-43cf-9325-87970fdda9b4 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:34:03.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-3969" for this suite. 01/30/23 08:34:03.566
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] PreStop
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
[BeforeEach] [sig-node] PreStop
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:34:03.573
Jan 30 08:34:03.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename prestop 01/30/23 08:34:03.573
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:03.583
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:03.586
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
STEP: Creating server pod server in namespace prestop-8548 01/30/23 08:34:03.588
STEP: Waiting for pods to come up. 01/30/23 08:34:03.595
Jan 30 08:34:03.595: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-8548" to be "running"
Jan 30 08:34:03.597: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 2.217515ms
Jan 30 08:34:05.600: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.00539008s
Jan 30 08:34:05.600: INFO: Pod "server" satisfied condition "running"
STEP: Creating tester pod tester in namespace prestop-8548 01/30/23 08:34:05.602
Jan 30 08:34:05.618: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-8548" to be "running"
Jan 30 08:34:05.620: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 2.262909ms
Jan 30 08:34:07.622: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 2.004922176s
Jan 30 08:34:07.623: INFO: Pod "tester" satisfied condition "running"
STEP: Deleting pre-stop pod 01/30/23 08:34:07.623
Jan 30 08:34:12.641: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod 01/30/23 08:34:12.641
[AfterEach] [sig-node] PreStop
  test/e2e/framework/node/init/init.go:32
Jan 30 08:34:12.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PreStop
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PreStop
  tear down framework | framework.go:193
STEP: Destroying namespace "prestop-8548" for this suite. 01/30/23 08:34:12.666
------------------------------
â€¢ [SLOW TEST] [9.099 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PreStop
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:34:03.573
    Jan 30 08:34:03.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename prestop 01/30/23 08:34:03.573
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:03.583
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:03.586
    [BeforeEach] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] PreStop
      test/e2e/node/pre_stop.go:159
    [It] should call prestop when killing a pod  [Conformance]
      test/e2e/node/pre_stop.go:168
    STEP: Creating server pod server in namespace prestop-8548 01/30/23 08:34:03.588
    STEP: Waiting for pods to come up. 01/30/23 08:34:03.595
    Jan 30 08:34:03.595: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-8548" to be "running"
    Jan 30 08:34:03.597: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 2.217515ms
    Jan 30 08:34:05.600: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.00539008s
    Jan 30 08:34:05.600: INFO: Pod "server" satisfied condition "running"
    STEP: Creating tester pod tester in namespace prestop-8548 01/30/23 08:34:05.602
    Jan 30 08:34:05.618: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-8548" to be "running"
    Jan 30 08:34:05.620: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 2.262909ms
    Jan 30 08:34:07.622: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 2.004922176s
    Jan 30 08:34:07.623: INFO: Pod "tester" satisfied condition "running"
    STEP: Deleting pre-stop pod 01/30/23 08:34:07.623
    Jan 30 08:34:12.641: INFO: Saw: {
    	"Hostname": "server",
    	"Sent": null,
    	"Received": {
    		"prestop": 1
    	},
    	"Errors": null,
    	"Log": [
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
    	],
    	"StillContactingPeers": true
    }
    STEP: Deleting the server pod 01/30/23 08:34:12.641
    [AfterEach] [sig-node] PreStop
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:34:12.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PreStop
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PreStop
      tear down framework | framework.go:193
    STEP: Destroying namespace "prestop-8548" for this suite. 01/30/23 08:34:12.666
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
[BeforeEach] [sig-network] HostPort
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:34:12.674
Jan 30 08:34:12.674: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename hostport 01/30/23 08:34:12.675
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:12.685
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:12.688
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 01/30/23 08:34:12.693
Jan 30 08:34:12.705: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-9440" to be "running and ready"
Jan 30 08:34:12.709: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.72369ms
Jan 30 08:34:12.709: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:34:14.712: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.007501738s
Jan 30 08:34:14.712: INFO: The phase of Pod pod1 is Running (Ready = true)
Jan 30 08:34:14.712: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.20.0.2 on the node which pod1 resides and expect scheduled 01/30/23 08:34:14.712
Jan 30 08:34:14.717: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-9440" to be "running and ready"
Jan 30 08:34:14.720: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.57985ms
Jan 30 08:34:14.720: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:34:16.723: INFO: Pod "pod2": Phase="Running", Reason="", readiness=false. Elapsed: 2.005725003s
Jan 30 08:34:16.723: INFO: The phase of Pod pod2 is Running (Ready = false)
Jan 30 08:34:18.723: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.005410796s
Jan 30 08:34:18.723: INFO: The phase of Pod pod2 is Running (Ready = true)
Jan 30 08:34:18.723: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.20.0.2 but use UDP protocol on the node which pod2 resides 01/30/23 08:34:18.723
Jan 30 08:34:18.728: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-9440" to be "running and ready"
Jan 30 08:34:18.731: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.488214ms
Jan 30 08:34:18.731: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:34:20.734: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.005726788s
Jan 30 08:34:20.734: INFO: The phase of Pod pod3 is Running (Ready = true)
Jan 30 08:34:20.734: INFO: Pod "pod3" satisfied condition "running and ready"
Jan 30 08:34:20.750: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-9440" to be "running and ready"
Jan 30 08:34:20.753: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 3.037246ms
Jan 30 08:34:20.753: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:34:22.758: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.00781006s
Jan 30 08:34:22.758: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
Jan 30 08:34:22.758: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 01/30/23 08:34:22.76
Jan 30 08:34:22.761: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.20.0.2 http://127.0.0.1:54323/hostname] Namespace:hostport-9440 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:34:22.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:34:22.761: INFO: ExecWithOptions: Clientset creation
Jan 30 08:34:22.761: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9440/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.20.0.2+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.0.2, port: 54323 01/30/23 08:34:22.879
Jan 30 08:34:22.879: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.20.0.2:54323/hostname] Namespace:hostport-9440 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:34:22.879: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:34:22.880: INFO: ExecWithOptions: Clientset creation
Jan 30 08:34:22.880: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9440/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.20.0.2%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.0.2, port: 54323 UDP 01/30/23 08:34:22.925
Jan 30 08:34:22.925: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.20.0.2 54323] Namespace:hostport-9440 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:34:22.925: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:34:22.926: INFO: ExecWithOptions: Clientset creation
Jan 30 08:34:22.926: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9440/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.20.0.2+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/node/init/init.go:32
Jan 30 08:34:27.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] HostPort
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] HostPort
  tear down framework | framework.go:193
STEP: Destroying namespace "hostport-9440" for this suite. 01/30/23 08:34:27.985
------------------------------
â€¢ [SLOW TEST] [15.331 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] HostPort
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:34:12.674
    Jan 30 08:34:12.674: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename hostport 01/30/23 08:34:12.675
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:12.685
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:12.688
    [BeforeEach] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] HostPort
      test/e2e/network/hostport.go:49
    [It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
      test/e2e/network/hostport.go:63
    STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 01/30/23 08:34:12.693
    Jan 30 08:34:12.705: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-9440" to be "running and ready"
    Jan 30 08:34:12.709: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.72369ms
    Jan 30 08:34:12.709: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:34:14.712: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.007501738s
    Jan 30 08:34:14.712: INFO: The phase of Pod pod1 is Running (Ready = true)
    Jan 30 08:34:14.712: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.20.0.2 on the node which pod1 resides and expect scheduled 01/30/23 08:34:14.712
    Jan 30 08:34:14.717: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-9440" to be "running and ready"
    Jan 30 08:34:14.720: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.57985ms
    Jan 30 08:34:14.720: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:34:16.723: INFO: Pod "pod2": Phase="Running", Reason="", readiness=false. Elapsed: 2.005725003s
    Jan 30 08:34:16.723: INFO: The phase of Pod pod2 is Running (Ready = false)
    Jan 30 08:34:18.723: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.005410796s
    Jan 30 08:34:18.723: INFO: The phase of Pod pod2 is Running (Ready = true)
    Jan 30 08:34:18.723: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.20.0.2 but use UDP protocol on the node which pod2 resides 01/30/23 08:34:18.723
    Jan 30 08:34:18.728: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-9440" to be "running and ready"
    Jan 30 08:34:18.731: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.488214ms
    Jan 30 08:34:18.731: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:34:20.734: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.005726788s
    Jan 30 08:34:20.734: INFO: The phase of Pod pod3 is Running (Ready = true)
    Jan 30 08:34:20.734: INFO: Pod "pod3" satisfied condition "running and ready"
    Jan 30 08:34:20.750: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-9440" to be "running and ready"
    Jan 30 08:34:20.753: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 3.037246ms
    Jan 30 08:34:20.753: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:34:22.758: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.00781006s
    Jan 30 08:34:22.758: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
    Jan 30 08:34:22.758: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 01/30/23 08:34:22.76
    Jan 30 08:34:22.761: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.20.0.2 http://127.0.0.1:54323/hostname] Namespace:hostport-9440 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:34:22.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:34:22.761: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:34:22.761: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9440/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.20.0.2+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.0.2, port: 54323 01/30/23 08:34:22.879
    Jan 30 08:34:22.879: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.20.0.2:54323/hostname] Namespace:hostport-9440 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:34:22.879: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:34:22.880: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:34:22.880: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9440/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.20.0.2%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.0.2, port: 54323 UDP 01/30/23 08:34:22.925
    Jan 30 08:34:22.925: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.20.0.2 54323] Namespace:hostport-9440 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:34:22.925: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:34:22.926: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:34:22.926: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9440/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.20.0.2+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    [AfterEach] [sig-network] HostPort
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:34:27.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] HostPort
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] HostPort
      tear down framework | framework.go:193
    STEP: Destroying namespace "hostport-9440" for this suite. 01/30/23 08:34:27.985
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:34:28.012
Jan 30 08:34:28.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename deployment 01/30/23 08:34:28.013
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:28.038
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:28.041
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
Jan 30 08:34:28.053: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Jan 30 08:34:33.057: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/30/23 08:34:33.057
Jan 30 08:34:33.057: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 01/30/23 08:34:33.065
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:34:33.076: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-445  11343592-4724-4486-b3b0-fc3f55866d28 8122 1 2023-01-30 08:34:33 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-01-30 08:34:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00607c748 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Jan 30 08:34:33.078: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
Jan 30 08:34:33.078: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Jan 30 08:34:33.079: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-445  111621ce-90aa-4b50-b0d3-e2901491c9d3 8125 1 2023-01-30 08:34:28 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 11343592-4724-4486-b3b0-fc3f55866d28 0xc00607ca7f 0xc00607ca90}] [] [{e2e.test Update apps/v1 2023-01-30 08:34:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:34:29 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-01-30 08:34:33 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"11343592-4724-4486-b3b0-fc3f55866d28\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00607cb48 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:34:33.083: INFO: Pod "test-cleanup-controller-j4nvp" is available:
&Pod{ObjectMeta:{test-cleanup-controller-j4nvp test-cleanup-controller- deployment-445  abf7abfb-a3ce-453e-87dd-82c62d1e4348 8109 0 2023-01-30 08:34:28 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 ReplicaSet test-cleanup-controller 111621ce-90aa-4b50-b0d3-e2901491c9d3 0xc00607ce0f 0xc00607ce20}] [] [{kube-controller-manager Update v1 2023-01-30 08:34:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"111621ce-90aa-4b50-b0d3-e2901491c9d3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:34:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.126\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8c4pm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8c4pm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:34:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:34:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:34:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:34:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.126,StartTime:2023-01-30 08:34:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:34:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://fa4f87c1b88ab877146b9025d404c02903f6f94e4140102a2e31e89985f813eb,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.126,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 30 08:34:33.083: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-445" for this suite. 01/30/23 08:34:33.092
------------------------------
â€¢ [SLOW TEST] [5.090 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:34:28.012
    Jan 30 08:34:28.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename deployment 01/30/23 08:34:28.013
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:28.038
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:28.041
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should delete old replica sets [Conformance]
      test/e2e/apps/deployment.go:122
    Jan 30 08:34:28.053: INFO: Pod name cleanup-pod: Found 0 pods out of 1
    Jan 30 08:34:33.057: INFO: Pod name cleanup-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/30/23 08:34:33.057
    Jan 30 08:34:33.057: INFO: Creating deployment test-cleanup-deployment
    STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 01/30/23 08:34:33.065
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 30 08:34:33.076: INFO: Deployment "test-cleanup-deployment":
    &Deployment{ObjectMeta:{test-cleanup-deployment  deployment-445  11343592-4724-4486-b3b0-fc3f55866d28 8122 1 2023-01-30 08:34:33 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-01-30 08:34:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00607c748 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

    Jan 30 08:34:33.078: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
    Jan 30 08:34:33.078: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
    Jan 30 08:34:33.079: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-445  111621ce-90aa-4b50-b0d3-e2901491c9d3 8125 1 2023-01-30 08:34:28 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 11343592-4724-4486-b3b0-fc3f55866d28 0xc00607ca7f 0xc00607ca90}] [] [{e2e.test Update apps/v1 2023-01-30 08:34:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:34:29 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-01-30 08:34:33 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"11343592-4724-4486-b3b0-fc3f55866d28\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00607cb48 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:34:33.083: INFO: Pod "test-cleanup-controller-j4nvp" is available:
    &Pod{ObjectMeta:{test-cleanup-controller-j4nvp test-cleanup-controller- deployment-445  abf7abfb-a3ce-453e-87dd-82c62d1e4348 8109 0 2023-01-30 08:34:28 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 ReplicaSet test-cleanup-controller 111621ce-90aa-4b50-b0d3-e2901491c9d3 0xc00607ce0f 0xc00607ce20}] [] [{kube-controller-manager Update v1 2023-01-30 08:34:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"111621ce-90aa-4b50-b0d3-e2901491c9d3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:34:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.126\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8c4pm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8c4pm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:34:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:34:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:34:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:34:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.126,StartTime:2023-01-30 08:34:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:34:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://fa4f87c1b88ab877146b9025d404c02903f6f94e4140102a2e31e89985f813eb,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.126,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:34:33.083: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-445" for this suite. 01/30/23 08:34:33.092
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:34:33.103
Jan 30 08:34:33.103: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 08:34:33.104
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:33.142
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:33.146
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
STEP: Counting existing ResourceQuota 01/30/23 08:34:33.149
STEP: Creating a ResourceQuota 01/30/23 08:34:38.152
STEP: Ensuring resource quota status is calculated 01/30/23 08:34:38.157
STEP: Creating a ReplicationController 01/30/23 08:34:40.161
STEP: Ensuring resource quota status captures replication controller creation 01/30/23 08:34:40.172
STEP: Deleting a ReplicationController 01/30/23 08:34:42.176
STEP: Ensuring resource quota status released usage 01/30/23 08:34:42.183
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 08:34:44.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6978" for this suite. 01/30/23 08:34:44.191
------------------------------
â€¢ [SLOW TEST] [11.095 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:34:33.103
    Jan 30 08:34:33.103: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 08:34:33.104
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:33.142
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:33.146
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
      test/e2e/apimachinery/resource_quota.go:392
    STEP: Counting existing ResourceQuota 01/30/23 08:34:33.149
    STEP: Creating a ResourceQuota 01/30/23 08:34:38.152
    STEP: Ensuring resource quota status is calculated 01/30/23 08:34:38.157
    STEP: Creating a ReplicationController 01/30/23 08:34:40.161
    STEP: Ensuring resource quota status captures replication controller creation 01/30/23 08:34:40.172
    STEP: Deleting a ReplicationController 01/30/23 08:34:42.176
    STEP: Ensuring resource quota status released usage 01/30/23 08:34:42.183
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:34:44.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6978" for this suite. 01/30/23 08:34:44.191
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:34:44.201
Jan 30 08:34:44.201: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 08:34:44.201
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:44.222
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:44.229
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
Jan 30 08:34:44.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:34:47.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-9522" for this suite. 01/30/23 08:34:47.348
------------------------------
â€¢ [3.164 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:34:44.201
    Jan 30 08:34:44.201: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 08:34:44.201
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:44.222
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:44.229
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] custom resource defaulting for requests and from storage works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:269
    Jan 30 08:34:44.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:34:47.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-9522" for this suite. 01/30/23 08:34:47.348
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Pods
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:34:47.364
Jan 30 08:34:47.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 08:34:47.365
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:47.399
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:47.403
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
STEP: creating the pod 01/30/23 08:34:47.406
STEP: setting up watch 01/30/23 08:34:47.406
STEP: submitting the pod to kubernetes 01/30/23 08:34:47.51
STEP: verifying the pod is in kubernetes 01/30/23 08:34:47.518
STEP: verifying pod creation was observed 01/30/23 08:34:47.522
Jan 30 08:34:47.522: INFO: Waiting up to 5m0s for pod "pod-submit-remove-ce7a6609-2f69-4516-941e-d9e7e6f87ac8" in namespace "pods-2712" to be "running"
Jan 30 08:34:47.527: INFO: Pod "pod-submit-remove-ce7a6609-2f69-4516-941e-d9e7e6f87ac8": Phase="Pending", Reason="", readiness=false. Elapsed: 5.208764ms
Jan 30 08:34:49.530: INFO: Pod "pod-submit-remove-ce7a6609-2f69-4516-941e-d9e7e6f87ac8": Phase="Running", Reason="", readiness=true. Elapsed: 2.008251249s
Jan 30 08:34:49.530: INFO: Pod "pod-submit-remove-ce7a6609-2f69-4516-941e-d9e7e6f87ac8" satisfied condition "running"
STEP: deleting the pod gracefully 01/30/23 08:34:49.532
STEP: verifying pod deletion was observed 01/30/23 08:34:49.548
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 08:34:52.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2712" for this suite. 01/30/23 08:34:52.14
------------------------------
â€¢ [4.779 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:34:47.364
    Jan 30 08:34:47.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 08:34:47.365
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:47.399
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:47.403
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be submitted and removed [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:226
    STEP: creating the pod 01/30/23 08:34:47.406
    STEP: setting up watch 01/30/23 08:34:47.406
    STEP: submitting the pod to kubernetes 01/30/23 08:34:47.51
    STEP: verifying the pod is in kubernetes 01/30/23 08:34:47.518
    STEP: verifying pod creation was observed 01/30/23 08:34:47.522
    Jan 30 08:34:47.522: INFO: Waiting up to 5m0s for pod "pod-submit-remove-ce7a6609-2f69-4516-941e-d9e7e6f87ac8" in namespace "pods-2712" to be "running"
    Jan 30 08:34:47.527: INFO: Pod "pod-submit-remove-ce7a6609-2f69-4516-941e-d9e7e6f87ac8": Phase="Pending", Reason="", readiness=false. Elapsed: 5.208764ms
    Jan 30 08:34:49.530: INFO: Pod "pod-submit-remove-ce7a6609-2f69-4516-941e-d9e7e6f87ac8": Phase="Running", Reason="", readiness=true. Elapsed: 2.008251249s
    Jan 30 08:34:49.530: INFO: Pod "pod-submit-remove-ce7a6609-2f69-4516-941e-d9e7e6f87ac8" satisfied condition "running"
    STEP: deleting the pod gracefully 01/30/23 08:34:49.532
    STEP: verifying pod deletion was observed 01/30/23 08:34:49.548
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:34:52.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2712" for this suite. 01/30/23 08:34:52.14
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:34:52.144
Jan 30 08:34:52.144: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 08:34:52.145
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:52.157
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:52.159
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
STEP: Creating resourceQuota "e2e-rq-status-t8n8t" 01/30/23 08:34:52.163
Jan 30 08:34:52.169: INFO: Resource quota "e2e-rq-status-t8n8t" reports spec: hard cpu limit of 500m
Jan 30 08:34:52.169: INFO: Resource quota "e2e-rq-status-t8n8t" reports spec: hard memory limit of 500Mi
STEP: Updating resourceQuota "e2e-rq-status-t8n8t" /status 01/30/23 08:34:52.169
STEP: Confirm /status for "e2e-rq-status-t8n8t" resourceQuota via watch 01/30/23 08:34:52.176
Jan 30 08:34:52.177: INFO: observed resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList(nil)
Jan 30 08:34:52.177: INFO: Found resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Jan 30 08:34:52.177: INFO: ResourceQuota "e2e-rq-status-t8n8t" /status was updated
STEP: Patching hard spec values for cpu & memory 01/30/23 08:34:52.179
Jan 30 08:34:52.186: INFO: Resource quota "e2e-rq-status-t8n8t" reports spec: hard cpu limit of 1
Jan 30 08:34:52.186: INFO: Resource quota "e2e-rq-status-t8n8t" reports spec: hard memory limit of 1Gi
STEP: Patching "e2e-rq-status-t8n8t" /status 01/30/23 08:34:52.186
STEP: Confirm /status for "e2e-rq-status-t8n8t" resourceQuota via watch 01/30/23 08:34:52.19
Jan 30 08:34:52.192: INFO: observed resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Jan 30 08:34:52.192: INFO: Found resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
Jan 30 08:34:52.192: INFO: ResourceQuota "e2e-rq-status-t8n8t" /status was patched
STEP: Get "e2e-rq-status-t8n8t" /status 01/30/23 08:34:52.192
Jan 30 08:34:52.197: INFO: Resourcequota "e2e-rq-status-t8n8t" reports status: hard cpu of 1
Jan 30 08:34:52.197: INFO: Resourcequota "e2e-rq-status-t8n8t" reports status: hard memory of 1Gi
STEP: Repatching "e2e-rq-status-t8n8t" /status before checking Spec is unchanged 01/30/23 08:34:52.2
Jan 30 08:34:52.217: INFO: Resourcequota "e2e-rq-status-t8n8t" reports status: hard cpu of 2
Jan 30 08:34:52.217: INFO: Resourcequota "e2e-rq-status-t8n8t" reports status: hard memory of 2Gi
Jan 30 08:34:52.219: INFO: observed resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
Jan 30 08:34:52.219: INFO: Found resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
Jan 30 08:38:02.224: INFO: ResourceQuota "e2e-rq-status-t8n8t" Spec was unchanged and /status reset
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 08:38:02.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-7852" for this suite. 01/30/23 08:38:02.227
------------------------------
â€¢ [SLOW TEST] [190.099 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:34:52.144
    Jan 30 08:34:52.144: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 08:34:52.145
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:34:52.157
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:34:52.159
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a resourcequota status [Conformance]
      test/e2e/apimachinery/resource_quota.go:1010
    STEP: Creating resourceQuota "e2e-rq-status-t8n8t" 01/30/23 08:34:52.163
    Jan 30 08:34:52.169: INFO: Resource quota "e2e-rq-status-t8n8t" reports spec: hard cpu limit of 500m
    Jan 30 08:34:52.169: INFO: Resource quota "e2e-rq-status-t8n8t" reports spec: hard memory limit of 500Mi
    STEP: Updating resourceQuota "e2e-rq-status-t8n8t" /status 01/30/23 08:34:52.169
    STEP: Confirm /status for "e2e-rq-status-t8n8t" resourceQuota via watch 01/30/23 08:34:52.176
    Jan 30 08:34:52.177: INFO: observed resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList(nil)
    Jan 30 08:34:52.177: INFO: Found resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Jan 30 08:34:52.177: INFO: ResourceQuota "e2e-rq-status-t8n8t" /status was updated
    STEP: Patching hard spec values for cpu & memory 01/30/23 08:34:52.179
    Jan 30 08:34:52.186: INFO: Resource quota "e2e-rq-status-t8n8t" reports spec: hard cpu limit of 1
    Jan 30 08:34:52.186: INFO: Resource quota "e2e-rq-status-t8n8t" reports spec: hard memory limit of 1Gi
    STEP: Patching "e2e-rq-status-t8n8t" /status 01/30/23 08:34:52.186
    STEP: Confirm /status for "e2e-rq-status-t8n8t" resourceQuota via watch 01/30/23 08:34:52.19
    Jan 30 08:34:52.192: INFO: observed resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Jan 30 08:34:52.192: INFO: Found resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
    Jan 30 08:34:52.192: INFO: ResourceQuota "e2e-rq-status-t8n8t" /status was patched
    STEP: Get "e2e-rq-status-t8n8t" /status 01/30/23 08:34:52.192
    Jan 30 08:34:52.197: INFO: Resourcequota "e2e-rq-status-t8n8t" reports status: hard cpu of 1
    Jan 30 08:34:52.197: INFO: Resourcequota "e2e-rq-status-t8n8t" reports status: hard memory of 1Gi
    STEP: Repatching "e2e-rq-status-t8n8t" /status before checking Spec is unchanged 01/30/23 08:34:52.2
    Jan 30 08:34:52.217: INFO: Resourcequota "e2e-rq-status-t8n8t" reports status: hard cpu of 2
    Jan 30 08:34:52.217: INFO: Resourcequota "e2e-rq-status-t8n8t" reports status: hard memory of 2Gi
    Jan 30 08:34:52.219: INFO: observed resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
    Jan 30 08:34:52.219: INFO: Found resourceQuota "e2e-rq-status-t8n8t" in namespace "resourcequota-7852" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
    Jan 30 08:38:02.224: INFO: ResourceQuota "e2e-rq-status-t8n8t" Spec was unchanged and /status reset
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:38:02.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-7852" for this suite. 01/30/23 08:38:02.227
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:38:02.243
Jan 30 08:38:02.243: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:38:02.243
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:38:02.253
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:38:02.256
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
STEP: Creating a pod to test emptydir 0666 on node default medium 01/30/23 08:38:02.258
Jan 30 08:38:02.264: INFO: Waiting up to 5m0s for pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328" in namespace "emptydir-9164" to be "Succeeded or Failed"
Jan 30 08:38:02.266: INFO: Pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328": Phase="Pending", Reason="", readiness=false. Elapsed: 2.473304ms
Jan 30 08:38:04.270: INFO: Pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006319637s
Jan 30 08:38:06.269: INFO: Pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00509287s
STEP: Saw pod success 01/30/23 08:38:06.269
Jan 30 08:38:06.269: INFO: Pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328" satisfied condition "Succeeded or Failed"
Jan 30 08:38:06.271: INFO: Trying to get logs from node tce-worker2 pod pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328 container test-container: <nil>
STEP: delete the pod 01/30/23 08:38:06.282
Jan 30 08:38:06.303: INFO: Waiting for pod pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328 to disappear
Jan 30 08:38:06.310: INFO: Pod pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:38:06.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9164" for this suite. 01/30/23 08:38:06.313
------------------------------
â€¢ [4.076 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:38:02.243
    Jan 30 08:38:02.243: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:38:02.243
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:38:02.253
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:38:02.256
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:207
    STEP: Creating a pod to test emptydir 0666 on node default medium 01/30/23 08:38:02.258
    Jan 30 08:38:02.264: INFO: Waiting up to 5m0s for pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328" in namespace "emptydir-9164" to be "Succeeded or Failed"
    Jan 30 08:38:02.266: INFO: Pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328": Phase="Pending", Reason="", readiness=false. Elapsed: 2.473304ms
    Jan 30 08:38:04.270: INFO: Pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006319637s
    Jan 30 08:38:06.269: INFO: Pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00509287s
    STEP: Saw pod success 01/30/23 08:38:06.269
    Jan 30 08:38:06.269: INFO: Pod "pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328" satisfied condition "Succeeded or Failed"
    Jan 30 08:38:06.271: INFO: Trying to get logs from node tce-worker2 pod pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328 container test-container: <nil>
    STEP: delete the pod 01/30/23 08:38:06.282
    Jan 30 08:38:06.303: INFO: Waiting for pod pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328 to disappear
    Jan 30 08:38:06.310: INFO: Pod pod-d21dcd2d-fcdf-49bd-b7ae-3785f0f0e328 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:38:06.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9164" for this suite. 01/30/23 08:38:06.313
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:38:06.319
Jan 30 08:38:06.319: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:38:06.32
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:38:06.337
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:38:06.341
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
STEP: Creating configMap with name configmap-test-volume-f2fd2333-9ef3-42ed-8884-4d2a749d0d41 01/30/23 08:38:06.343
STEP: Creating a pod to test consume configMaps 01/30/23 08:38:06.348
Jan 30 08:38:06.356: INFO: Waiting up to 5m0s for pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497" in namespace "configmap-9268" to be "Succeeded or Failed"
Jan 30 08:38:06.359: INFO: Pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497": Phase="Pending", Reason="", readiness=false. Elapsed: 3.24657ms
Jan 30 08:38:08.365: INFO: Pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009121394s
Jan 30 08:38:10.362: INFO: Pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005841446s
STEP: Saw pod success 01/30/23 08:38:10.362
Jan 30 08:38:10.362: INFO: Pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497" satisfied condition "Succeeded or Failed"
Jan 30 08:38:10.364: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 08:38:10.367
Jan 30 08:38:10.376: INFO: Waiting for pod pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497 to disappear
Jan 30 08:38:10.378: INFO: Pod pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:38:10.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9268" for this suite. 01/30/23 08:38:10.381
------------------------------
â€¢ [4.067 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:38:06.319
    Jan 30 08:38:06.319: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:38:06.32
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:38:06.337
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:38:06.341
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:47
    STEP: Creating configMap with name configmap-test-volume-f2fd2333-9ef3-42ed-8884-4d2a749d0d41 01/30/23 08:38:06.343
    STEP: Creating a pod to test consume configMaps 01/30/23 08:38:06.348
    Jan 30 08:38:06.356: INFO: Waiting up to 5m0s for pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497" in namespace "configmap-9268" to be "Succeeded or Failed"
    Jan 30 08:38:06.359: INFO: Pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497": Phase="Pending", Reason="", readiness=false. Elapsed: 3.24657ms
    Jan 30 08:38:08.365: INFO: Pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009121394s
    Jan 30 08:38:10.362: INFO: Pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005841446s
    STEP: Saw pod success 01/30/23 08:38:10.362
    Jan 30 08:38:10.362: INFO: Pod "pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497" satisfied condition "Succeeded or Failed"
    Jan 30 08:38:10.364: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 08:38:10.367
    Jan 30 08:38:10.376: INFO: Waiting for pod pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497 to disappear
    Jan 30 08:38:10.378: INFO: Pod pod-configmaps-08e863c9-29dc-4b30-9494-b16f05589497 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:38:10.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9268" for this suite. 01/30/23 08:38:10.381
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:38:10.386
Jan 30 08:38:10.386: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename statefulset 01/30/23 08:38:10.388
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:38:10.404
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:38:10.408
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-1115 01/30/23 08:38:10.411
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
STEP: Creating stateful set ss in namespace statefulset-1115 01/30/23 08:38:10.416
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1115 01/30/23 08:38:10.426
Jan 30 08:38:10.428: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:38:20.431: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 01/30/23 08:38:20.431
Jan 30 08:38:20.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:38:20.598: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:38:20.598: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:38:20.598: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:38:20.601: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 30 08:38:30.606: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:38:30.606: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:38:30.628: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
Jan 30 08:38:30.628: INFO: ss-0  tce-worker2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  }]
Jan 30 08:38:30.628: INFO: 
Jan 30 08:38:30.628: INFO: StatefulSet ss has not reached scale 3, at 1
Jan 30 08:38:31.631: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997551745s
Jan 30 08:38:32.634: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993358539s
Jan 30 08:38:33.638: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.990578338s
Jan 30 08:38:34.641: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.987412399s
Jan 30 08:38:35.645: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.983651122s
Jan 30 08:38:36.647: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.980515184s
Jan 30 08:38:37.650: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.97795073s
Jan 30 08:38:38.653: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.97465314s
Jan 30 08:38:39.656: INFO: Verifying statefulset ss doesn't scale past 3 for another 971.929752ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1115 01/30/23 08:38:40.657
Jan 30 08:38:40.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:38:40.816: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 08:38:40.816: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:38:40.816: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:38:40.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:38:40.957: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 30 08:38:40.957: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:38:40.957: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:38:40.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:38:41.146: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jan 30 08:38:41.146: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:38:41.146: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 08:38:41.149: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:38:41.149: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:38:41.149: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod 01/30/23 08:38:41.149
Jan 30 08:38:41.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:38:41.261: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:38:41.261: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:38:41.261: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:38:41.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:38:41.441: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:38:41.441: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:38:41.441: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:38:41.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:38:41.549: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:38:41.549: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:38:41.549: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:38:41.549: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:38:41.551: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Jan 30 08:38:51.561: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:38:51.561: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:38:51.561: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 08:38:51.581: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
Jan 30 08:38:51.581: INFO: ss-0  tce-worker2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  }]
Jan 30 08:38:51.581: INFO: ss-1  tce-worker   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
Jan 30 08:38:51.581: INFO: ss-2  tce-worker2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
Jan 30 08:38:51.581: INFO: 
Jan 30 08:38:51.581: INFO: StatefulSet ss has not reached scale 0, at 3
Jan 30 08:38:52.584: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
Jan 30 08:38:52.584: INFO: ss-0  tce-worker2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  }]
Jan 30 08:38:52.584: INFO: ss-1  tce-worker   Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
Jan 30 08:38:52.584: INFO: ss-2  tce-worker2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
Jan 30 08:38:52.584: INFO: 
Jan 30 08:38:52.584: INFO: StatefulSet ss has not reached scale 0, at 3
Jan 30 08:38:53.588: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
Jan 30 08:38:53.588: INFO: ss-1  tce-worker   Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
Jan 30 08:38:53.588: INFO: ss-2  tce-worker2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
Jan 30 08:38:53.588: INFO: 
Jan 30 08:38:53.588: INFO: StatefulSet ss has not reached scale 0, at 2
Jan 30 08:38:54.590: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.990015524s
Jan 30 08:38:55.605: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.987648484s
Jan 30 08:38:56.608: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.97323492s
Jan 30 08:38:57.612: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.969184181s
Jan 30 08:38:58.615: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.965954881s
Jan 30 08:38:59.618: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962877017s
Jan 30 08:39:00.623: INFO: Verifying statefulset ss doesn't scale past 0 for another 959.480889ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1115 01/30/23 08:39:01.623
Jan 30 08:39:01.627: INFO: Scaling statefulset ss to 0
Jan 30 08:39:01.634: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 30 08:39:01.636: INFO: Deleting all statefulset in ns statefulset-1115
Jan 30 08:39:01.638: INFO: Scaling statefulset ss to 0
Jan 30 08:39:01.645: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:39:01.648: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:39:01.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-1115" for this suite. 01/30/23 08:39:01.661
------------------------------
â€¢ [SLOW TEST] [51.283 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/apps/statefulset.go:697

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:38:10.386
    Jan 30 08:38:10.386: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename statefulset 01/30/23 08:38:10.388
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:38:10.404
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:38:10.408
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-1115 01/30/23 08:38:10.411
    [It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
      test/e2e/apps/statefulset.go:697
    STEP: Creating stateful set ss in namespace statefulset-1115 01/30/23 08:38:10.416
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1115 01/30/23 08:38:10.426
    Jan 30 08:38:10.428: INFO: Found 0 stateful pods, waiting for 1
    Jan 30 08:38:20.431: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 01/30/23 08:38:20.431
    Jan 30 08:38:20.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 08:38:20.598: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 08:38:20.598: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 08:38:20.598: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 08:38:20.601: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Jan 30 08:38:30.606: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Jan 30 08:38:30.606: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 08:38:30.628: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
    Jan 30 08:38:30.628: INFO: ss-0  tce-worker2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  }]
    Jan 30 08:38:30.628: INFO: 
    Jan 30 08:38:30.628: INFO: StatefulSet ss has not reached scale 3, at 1
    Jan 30 08:38:31.631: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997551745s
    Jan 30 08:38:32.634: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993358539s
    Jan 30 08:38:33.638: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.990578338s
    Jan 30 08:38:34.641: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.987412399s
    Jan 30 08:38:35.645: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.983651122s
    Jan 30 08:38:36.647: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.980515184s
    Jan 30 08:38:37.650: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.97795073s
    Jan 30 08:38:38.653: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.97465314s
    Jan 30 08:38:39.656: INFO: Verifying statefulset ss doesn't scale past 3 for another 971.929752ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1115 01/30/23 08:38:40.657
    Jan 30 08:38:40.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 08:38:40.816: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 30 08:38:40.816: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 08:38:40.816: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 30 08:38:40.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 08:38:40.957: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Jan 30 08:38:40.957: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 08:38:40.957: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 30 08:38:40.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 08:38:41.146: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Jan 30 08:38:41.146: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 08:38:41.146: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 30 08:38:41.149: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 08:38:41.149: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 08:38:41.149: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Scale down will not halt with unhealthy stateful pod 01/30/23 08:38:41.149
    Jan 30 08:38:41.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 08:38:41.261: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 08:38:41.261: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 08:38:41.261: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 08:38:41.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 08:38:41.441: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 08:38:41.441: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 08:38:41.441: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 08:38:41.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-1115 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 08:38:41.549: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 08:38:41.549: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 08:38:41.549: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 08:38:41.549: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 08:38:41.551: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
    Jan 30 08:38:51.561: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Jan 30 08:38:51.561: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Jan 30 08:38:51.561: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Jan 30 08:38:51.581: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
    Jan 30 08:38:51.581: INFO: ss-0  tce-worker2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  }]
    Jan 30 08:38:51.581: INFO: ss-1  tce-worker   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
    Jan 30 08:38:51.581: INFO: ss-2  tce-worker2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
    Jan 30 08:38:51.581: INFO: 
    Jan 30 08:38:51.581: INFO: StatefulSet ss has not reached scale 0, at 3
    Jan 30 08:38:52.584: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
    Jan 30 08:38:52.584: INFO: ss-0  tce-worker2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:10 +0000 UTC  }]
    Jan 30 08:38:52.584: INFO: ss-1  tce-worker   Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
    Jan 30 08:38:52.584: INFO: ss-2  tce-worker2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
    Jan 30 08:38:52.584: INFO: 
    Jan 30 08:38:52.584: INFO: StatefulSet ss has not reached scale 0, at 3
    Jan 30 08:38:53.588: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
    Jan 30 08:38:53.588: INFO: ss-1  tce-worker   Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
    Jan 30 08:38:53.588: INFO: ss-2  tce-worker2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:42 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:38:30 +0000 UTC  }]
    Jan 30 08:38:53.588: INFO: 
    Jan 30 08:38:53.588: INFO: StatefulSet ss has not reached scale 0, at 2
    Jan 30 08:38:54.590: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.990015524s
    Jan 30 08:38:55.605: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.987648484s
    Jan 30 08:38:56.608: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.97323492s
    Jan 30 08:38:57.612: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.969184181s
    Jan 30 08:38:58.615: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.965954881s
    Jan 30 08:38:59.618: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962877017s
    Jan 30 08:39:00.623: INFO: Verifying statefulset ss doesn't scale past 0 for another 959.480889ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1115 01/30/23 08:39:01.623
    Jan 30 08:39:01.627: INFO: Scaling statefulset ss to 0
    Jan 30 08:39:01.634: INFO: Waiting for statefulset status.replicas updated to 0
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 30 08:39:01.636: INFO: Deleting all statefulset in ns statefulset-1115
    Jan 30 08:39:01.638: INFO: Scaling statefulset ss to 0
    Jan 30 08:39:01.645: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 08:39:01.648: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:39:01.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-1115" for this suite. 01/30/23 08:39:01.661
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:39:01.67
Jan 30 08:39:01.670: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 08:39:01.671
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:01.691
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:01.695
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
STEP: Creating a pod to test downward API volume plugin 01/30/23 08:39:01.7
Jan 30 08:39:01.711: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0" in namespace "downward-api-6511" to be "Succeeded or Failed"
Jan 30 08:39:01.713: INFO: Pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.632161ms
Jan 30 08:39:03.716: INFO: Pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005794535s
Jan 30 08:39:05.717: INFO: Pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006601584s
STEP: Saw pod success 01/30/23 08:39:05.717
Jan 30 08:39:05.717: INFO: Pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0" satisfied condition "Succeeded or Failed"
Jan 30 08:39:05.719: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0 container client-container: <nil>
STEP: delete the pod 01/30/23 08:39:05.723
Jan 30 08:39:05.746: INFO: Waiting for pod downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0 to disappear
Jan 30 08:39:05.749: INFO: Pod downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 08:39:05.749: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6511" for this suite. 01/30/23 08:39:05.752
------------------------------
â€¢ [4.086 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:39:01.67
    Jan 30 08:39:01.670: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 08:39:01.671
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:01.691
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:01.695
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:84
    STEP: Creating a pod to test downward API volume plugin 01/30/23 08:39:01.7
    Jan 30 08:39:01.711: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0" in namespace "downward-api-6511" to be "Succeeded or Failed"
    Jan 30 08:39:01.713: INFO: Pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.632161ms
    Jan 30 08:39:03.716: INFO: Pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005794535s
    Jan 30 08:39:05.717: INFO: Pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006601584s
    STEP: Saw pod success 01/30/23 08:39:05.717
    Jan 30 08:39:05.717: INFO: Pod "downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0" satisfied condition "Succeeded or Failed"
    Jan 30 08:39:05.719: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0 container client-container: <nil>
    STEP: delete the pod 01/30/23 08:39:05.723
    Jan 30 08:39:05.746: INFO: Waiting for pod downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0 to disappear
    Jan 30 08:39:05.749: INFO: Pod downwardapi-volume-ee82371a-1fd6-4857-b035-605de3d7c8f0 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:39:05.749: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6511" for this suite. 01/30/23 08:39:05.752
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:39:05.756
Jan 30 08:39:05.757: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replication-controller 01/30/23 08:39:05.758
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:05.771
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:05.774
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
STEP: Given a Pod with a 'name' label pod-adoption is created 01/30/23 08:39:05.778
Jan 30 08:39:05.788: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-1199" to be "running and ready"
Jan 30 08:39:05.791: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 3.330939ms
Jan 30 08:39:05.791: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:39:07.793: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 2.005586391s
Jan 30 08:39:07.794: INFO: The phase of Pod pod-adoption is Running (Ready = true)
Jan 30 08:39:07.794: INFO: Pod "pod-adoption" satisfied condition "running and ready"
STEP: When a replication controller with a matching selector is created 01/30/23 08:39:07.796
STEP: Then the orphan pod is adopted 01/30/23 08:39:07.801
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 30 08:39:08.807: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-1199" for this suite. 01/30/23 08:39:08.81
------------------------------
â€¢ [3.074 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:39:05.756
    Jan 30 08:39:05.757: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replication-controller 01/30/23 08:39:05.758
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:05.771
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:05.774
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should adopt matching pods on creation [Conformance]
      test/e2e/apps/rc.go:92
    STEP: Given a Pod with a 'name' label pod-adoption is created 01/30/23 08:39:05.778
    Jan 30 08:39:05.788: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-1199" to be "running and ready"
    Jan 30 08:39:05.791: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 3.330939ms
    Jan 30 08:39:05.791: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:39:07.793: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 2.005586391s
    Jan 30 08:39:07.794: INFO: The phase of Pod pod-adoption is Running (Ready = true)
    Jan 30 08:39:07.794: INFO: Pod "pod-adoption" satisfied condition "running and ready"
    STEP: When a replication controller with a matching selector is created 01/30/23 08:39:07.796
    STEP: Then the orphan pod is adopted 01/30/23 08:39:07.801
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:39:08.807: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-1199" for this suite. 01/30/23 08:39:08.81
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:39:08.832
Jan 30 08:39:08.832: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:39:08.833
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:08.846
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:08.849
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:39:08.862
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:39:09.381
STEP: Deploying the webhook pod 01/30/23 08:39:09.394
STEP: Wait for the deployment to be ready 01/30/23 08:39:09.406
Jan 30 08:39:09.413: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:39:11.421
STEP: Verifying the service has paired with the endpoint 01/30/23 08:39:11.428
Jan 30 08:39:12.431: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 01/30/23 08:39:12.434
STEP: create a configmap that should be updated by the webhook 01/30/23 08:39:12.457
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:39:12.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1419" for this suite. 01/30/23 08:39:12.521
STEP: Destroying namespace "webhook-1419-markers" for this suite. 01/30/23 08:39:12.532
------------------------------
â€¢ [3.705 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:39:08.832
    Jan 30 08:39:08.832: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:39:08.833
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:08.846
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:08.849
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:39:08.862
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:39:09.381
    STEP: Deploying the webhook pod 01/30/23 08:39:09.394
    STEP: Wait for the deployment to be ready 01/30/23 08:39:09.406
    Jan 30 08:39:09.413: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:39:11.421
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:39:11.428
    Jan 30 08:39:12.431: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate configmap [Conformance]
      test/e2e/apimachinery/webhook.go:252
    STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 01/30/23 08:39:12.434
    STEP: create a configmap that should be updated by the webhook 01/30/23 08:39:12.457
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:39:12.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1419" for this suite. 01/30/23 08:39:12.521
    STEP: Destroying namespace "webhook-1419-markers" for this suite. 01/30/23 08:39:12.532
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:39:12.539
Jan 30 08:39:12.539: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:39:12.54
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:12.552
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:12.555
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:39:12.569
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:39:12.899
STEP: Deploying the webhook pod 01/30/23 08:39:12.912
STEP: Wait for the deployment to be ready 01/30/23 08:39:12.926
Jan 30 08:39:12.934: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:39:14.941
STEP: Verifying the service has paired with the endpoint 01/30/23 08:39:14.962
Jan 30 08:39:15.963: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
STEP: Registering the webhook via the AdmissionRegistration API 01/30/23 08:39:15.965
Jan 30 08:39:15.991: INFO: Waiting for webhook configuration to be ready...
STEP: create a pod that should be denied by the webhook 01/30/23 08:39:16.099
STEP: create a pod that causes the webhook to hang 01/30/23 08:39:16.106
STEP: create a configmap that should be denied by the webhook 01/30/23 08:39:26.112
STEP: create a configmap that should be admitted by the webhook 01/30/23 08:39:26.161
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 01/30/23 08:39:26.17
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 01/30/23 08:39:26.177
STEP: create a namespace that bypass the webhook 01/30/23 08:39:26.182
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 01/30/23 08:39:26.188
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:39:26.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-582" for this suite. 01/30/23 08:39:26.282
STEP: Destroying namespace "webhook-582-markers" for this suite. 01/30/23 08:39:26.293
------------------------------
â€¢ [SLOW TEST] [13.771 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:39:12.539
    Jan 30 08:39:12.539: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:39:12.54
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:12.552
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:12.555
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:39:12.569
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:39:12.899
    STEP: Deploying the webhook pod 01/30/23 08:39:12.912
    STEP: Wait for the deployment to be ready 01/30/23 08:39:12.926
    Jan 30 08:39:12.934: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:39:14.941
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:39:14.962
    Jan 30 08:39:15.963: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny pod and configmap creation [Conformance]
      test/e2e/apimachinery/webhook.go:197
    STEP: Registering the webhook via the AdmissionRegistration API 01/30/23 08:39:15.965
    Jan 30 08:39:15.991: INFO: Waiting for webhook configuration to be ready...
    STEP: create a pod that should be denied by the webhook 01/30/23 08:39:16.099
    STEP: create a pod that causes the webhook to hang 01/30/23 08:39:16.106
    STEP: create a configmap that should be denied by the webhook 01/30/23 08:39:26.112
    STEP: create a configmap that should be admitted by the webhook 01/30/23 08:39:26.161
    STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 01/30/23 08:39:26.17
    STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 01/30/23 08:39:26.177
    STEP: create a namespace that bypass the webhook 01/30/23 08:39:26.182
    STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 01/30/23 08:39:26.188
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:39:26.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-582" for this suite. 01/30/23 08:39:26.282
    STEP: Destroying namespace "webhook-582-markers" for this suite. 01/30/23 08:39:26.293
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:39:26.315
Jan 30 08:39:26.320: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replicaset 01/30/23 08:39:26.331
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:26.353
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:26.367
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
Jan 30 08:39:26.385: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 30 08:39:31.388: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/30/23 08:39:31.388
STEP: Scaling up "test-rs" replicaset  01/30/23 08:39:31.388
Jan 30 08:39:31.400: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet 01/30/23 08:39:31.4
W0130 08:39:31.406216      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Jan 30 08:39:31.408: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
Jan 30 08:39:31.424: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
Jan 30 08:39:31.450: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
Jan 30 08:39:31.462: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
Jan 30 08:39:32.356: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 2, AvailableReplicas 2
Jan 30 08:39:32.721: INFO: observed Replicaset test-rs in namespace replicaset-6214 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:39:32.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-6214" for this suite. 01/30/23 08:39:32.724
------------------------------
â€¢ [SLOW TEST] [6.414 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:39:26.315
    Jan 30 08:39:26.320: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replicaset 01/30/23 08:39:26.331
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:26.353
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:26.367
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replace and Patch tests [Conformance]
      test/e2e/apps/replica_set.go:154
    Jan 30 08:39:26.385: INFO: Pod name sample-pod: Found 0 pods out of 1
    Jan 30 08:39:31.388: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/30/23 08:39:31.388
    STEP: Scaling up "test-rs" replicaset  01/30/23 08:39:31.388
    Jan 30 08:39:31.400: INFO: Updating replica set "test-rs"
    STEP: patching the ReplicaSet 01/30/23 08:39:31.4
    W0130 08:39:31.406216      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Jan 30 08:39:31.408: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
    Jan 30 08:39:31.424: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
    Jan 30 08:39:31.450: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
    Jan 30 08:39:31.462: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
    Jan 30 08:39:32.356: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 2, AvailableReplicas 2
    Jan 30 08:39:32.721: INFO: observed Replicaset test-rs in namespace replicaset-6214 with ReadyReplicas 3 found true
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:39:32.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-6214" for this suite. 01/30/23 08:39:32.724
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:39:32.73
Jan 30 08:39:32.730: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:39:32.731
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:32.746
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:32.749
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
STEP: Creating a pod to test downward API volume plugin 01/30/23 08:39:32.751
Jan 30 08:39:32.759: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51" in namespace "projected-9812" to be "Succeeded or Failed"
Jan 30 08:39:32.763: INFO: Pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51": Phase="Pending", Reason="", readiness=false. Elapsed: 3.642475ms
Jan 30 08:39:34.767: INFO: Pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51": Phase="Running", Reason="", readiness=false. Elapsed: 2.007550196s
Jan 30 08:39:36.767: INFO: Pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00731107s
STEP: Saw pod success 01/30/23 08:39:36.767
Jan 30 08:39:36.767: INFO: Pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51" satisfied condition "Succeeded or Failed"
Jan 30 08:39:36.769: INFO: Trying to get logs from node tce-worker pod downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51 container client-container: <nil>
STEP: delete the pod 01/30/23 08:39:36.781
Jan 30 08:39:36.808: INFO: Waiting for pod downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51 to disappear
Jan 30 08:39:36.811: INFO: Pod downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 08:39:36.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9812" for this suite. 01/30/23 08:39:36.814
------------------------------
â€¢ [4.091 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:39:32.73
    Jan 30 08:39:32.730: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:39:32.731
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:32.746
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:32.749
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:68
    STEP: Creating a pod to test downward API volume plugin 01/30/23 08:39:32.751
    Jan 30 08:39:32.759: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51" in namespace "projected-9812" to be "Succeeded or Failed"
    Jan 30 08:39:32.763: INFO: Pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51": Phase="Pending", Reason="", readiness=false. Elapsed: 3.642475ms
    Jan 30 08:39:34.767: INFO: Pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51": Phase="Running", Reason="", readiness=false. Elapsed: 2.007550196s
    Jan 30 08:39:36.767: INFO: Pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00731107s
    STEP: Saw pod success 01/30/23 08:39:36.767
    Jan 30 08:39:36.767: INFO: Pod "downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51" satisfied condition "Succeeded or Failed"
    Jan 30 08:39:36.769: INFO: Trying to get logs from node tce-worker pod downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51 container client-container: <nil>
    STEP: delete the pod 01/30/23 08:39:36.781
    Jan 30 08:39:36.808: INFO: Waiting for pod downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51 to disappear
    Jan 30 08:39:36.811: INFO: Pod downwardapi-volume-ecc2cfeb-010d-4704-8025-7fe0a349ff51 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:39:36.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9812" for this suite. 01/30/23 08:39:36.814
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:39:36.822
Jan 30 08:39:36.822: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 08:39:36.823
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:36.834
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:36.836
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
STEP: Creating a pod to test downward API volume plugin 01/30/23 08:39:36.84
Jan 30 08:39:36.847: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005" in namespace "downward-api-5360" to be "Succeeded or Failed"
Jan 30 08:39:36.850: INFO: Pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005": Phase="Pending", Reason="", readiness=false. Elapsed: 2.532629ms
Jan 30 08:39:38.852: INFO: Pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005399731s
Jan 30 08:39:40.853: INFO: Pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005891781s
STEP: Saw pod success 01/30/23 08:39:40.853
Jan 30 08:39:40.853: INFO: Pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005" satisfied condition "Succeeded or Failed"
Jan 30 08:39:40.855: INFO: Trying to get logs from node tce-worker pod downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005 container client-container: <nil>
STEP: delete the pod 01/30/23 08:39:40.86
Jan 30 08:39:40.874: INFO: Waiting for pod downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005 to disappear
Jan 30 08:39:40.878: INFO: Pod downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 08:39:40.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5360" for this suite. 01/30/23 08:39:40.885
------------------------------
â€¢ [4.069 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:39:36.822
    Jan 30 08:39:36.822: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 08:39:36.823
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:36.834
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:36.836
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:193
    STEP: Creating a pod to test downward API volume plugin 01/30/23 08:39:36.84
    Jan 30 08:39:36.847: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005" in namespace "downward-api-5360" to be "Succeeded or Failed"
    Jan 30 08:39:36.850: INFO: Pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005": Phase="Pending", Reason="", readiness=false. Elapsed: 2.532629ms
    Jan 30 08:39:38.852: INFO: Pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005399731s
    Jan 30 08:39:40.853: INFO: Pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005891781s
    STEP: Saw pod success 01/30/23 08:39:40.853
    Jan 30 08:39:40.853: INFO: Pod "downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005" satisfied condition "Succeeded or Failed"
    Jan 30 08:39:40.855: INFO: Trying to get logs from node tce-worker pod downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005 container client-container: <nil>
    STEP: delete the pod 01/30/23 08:39:40.86
    Jan 30 08:39:40.874: INFO: Waiting for pod downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005 to disappear
    Jan 30 08:39:40.878: INFO: Pod downwardapi-volume-ac8dafc2-15b3-44e0-a120-2c4226925005 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:39:40.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5360" for this suite. 01/30/23 08:39:40.885
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:39:40.892
Jan 30 08:39:40.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename subpath 01/30/23 08:39:40.893
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:40.905
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:40.908
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/30/23 08:39:40.912
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
STEP: Creating pod pod-subpath-test-configmap-mv9t 01/30/23 08:39:40.92
STEP: Creating a pod to test atomic-volume-subpath 01/30/23 08:39:40.92
Jan 30 08:39:40.932: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-mv9t" in namespace "subpath-594" to be "Succeeded or Failed"
Jan 30 08:39:40.937: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Pending", Reason="", readiness=false. Elapsed: 4.308879ms
Jan 30 08:39:42.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 2.007927423s
Jan 30 08:39:44.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 4.007236298s
Jan 30 08:39:46.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 6.008138722s
Jan 30 08:39:48.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 8.008068106s
Jan 30 08:39:50.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 10.008114813s
Jan 30 08:39:52.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 12.007582122s
Jan 30 08:39:54.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 14.008088636s
Jan 30 08:39:56.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 16.007391627s
Jan 30 08:39:58.941: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 18.00907355s
Jan 30 08:40:00.941: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 20.008733648s
Jan 30 08:40:02.939: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=false. Elapsed: 22.006921837s
Jan 30 08:40:04.941: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.008478726s
STEP: Saw pod success 01/30/23 08:40:04.941
Jan 30 08:40:04.941: INFO: Pod "pod-subpath-test-configmap-mv9t" satisfied condition "Succeeded or Failed"
Jan 30 08:40:04.943: INFO: Trying to get logs from node tce-worker2 pod pod-subpath-test-configmap-mv9t container test-container-subpath-configmap-mv9t: <nil>
STEP: delete the pod 01/30/23 08:40:04.947
Jan 30 08:40:04.957: INFO: Waiting for pod pod-subpath-test-configmap-mv9t to disappear
Jan 30 08:40:04.961: INFO: Pod pod-subpath-test-configmap-mv9t no longer exists
STEP: Deleting pod pod-subpath-test-configmap-mv9t 01/30/23 08:40:04.961
Jan 30 08:40:04.961: INFO: Deleting pod "pod-subpath-test-configmap-mv9t" in namespace "subpath-594"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:04.963: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-594" for this suite. 01/30/23 08:40:04.966
------------------------------
â€¢ [SLOW TEST] [24.079 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/storage/subpath.go:70

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:39:40.892
    Jan 30 08:39:40.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename subpath 01/30/23 08:39:40.893
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:39:40.905
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:39:40.908
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/30/23 08:39:40.912
    [It] should support subpaths with configmap pod [Conformance]
      test/e2e/storage/subpath.go:70
    STEP: Creating pod pod-subpath-test-configmap-mv9t 01/30/23 08:39:40.92
    STEP: Creating a pod to test atomic-volume-subpath 01/30/23 08:39:40.92
    Jan 30 08:39:40.932: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-mv9t" in namespace "subpath-594" to be "Succeeded or Failed"
    Jan 30 08:39:40.937: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Pending", Reason="", readiness=false. Elapsed: 4.308879ms
    Jan 30 08:39:42.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 2.007927423s
    Jan 30 08:39:44.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 4.007236298s
    Jan 30 08:39:46.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 6.008138722s
    Jan 30 08:39:48.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 8.008068106s
    Jan 30 08:39:50.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 10.008114813s
    Jan 30 08:39:52.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 12.007582122s
    Jan 30 08:39:54.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 14.008088636s
    Jan 30 08:39:56.940: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 16.007391627s
    Jan 30 08:39:58.941: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 18.00907355s
    Jan 30 08:40:00.941: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=true. Elapsed: 20.008733648s
    Jan 30 08:40:02.939: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Running", Reason="", readiness=false. Elapsed: 22.006921837s
    Jan 30 08:40:04.941: INFO: Pod "pod-subpath-test-configmap-mv9t": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.008478726s
    STEP: Saw pod success 01/30/23 08:40:04.941
    Jan 30 08:40:04.941: INFO: Pod "pod-subpath-test-configmap-mv9t" satisfied condition "Succeeded or Failed"
    Jan 30 08:40:04.943: INFO: Trying to get logs from node tce-worker2 pod pod-subpath-test-configmap-mv9t container test-container-subpath-configmap-mv9t: <nil>
    STEP: delete the pod 01/30/23 08:40:04.947
    Jan 30 08:40:04.957: INFO: Waiting for pod pod-subpath-test-configmap-mv9t to disappear
    Jan 30 08:40:04.961: INFO: Pod pod-subpath-test-configmap-mv9t no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-mv9t 01/30/23 08:40:04.961
    Jan 30 08:40:04.961: INFO: Deleting pod "pod-subpath-test-configmap-mv9t" in namespace "subpath-594"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:04.963: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-594" for this suite. 01/30/23 08:40:04.966
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:04.971
Jan 30 08:40:04.972: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replication-controller 01/30/23 08:40:04.973
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:04.984
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:04.986
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
STEP: creating a ReplicationController 01/30/23 08:40:04.995
STEP: waiting for RC to be added 01/30/23 08:40:05.001
STEP: waiting for available Replicas 01/30/23 08:40:05.001
STEP: patching ReplicationController 01/30/23 08:40:05.813
STEP: waiting for RC to be modified 01/30/23 08:40:05.822
STEP: patching ReplicationController status 01/30/23 08:40:05.822
STEP: waiting for RC to be modified 01/30/23 08:40:05.828
STEP: waiting for available Replicas 01/30/23 08:40:05.828
STEP: fetching ReplicationController status 01/30/23 08:40:05.835
STEP: patching ReplicationController scale 01/30/23 08:40:05.838
STEP: waiting for RC to be modified 01/30/23 08:40:05.844
STEP: waiting for ReplicationController's scale to be the max amount 01/30/23 08:40:05.845
STEP: fetching ReplicationController; ensuring that it's patched 01/30/23 08:40:07.471
STEP: updating ReplicationController status 01/30/23 08:40:07.473
STEP: waiting for RC to be modified 01/30/23 08:40:07.478
STEP: listing all ReplicationControllers 01/30/23 08:40:07.478
STEP: checking that ReplicationController has expected values 01/30/23 08:40:07.481
STEP: deleting ReplicationControllers by collection 01/30/23 08:40:07.481
STEP: waiting for ReplicationController to have a DELETED watchEvent 01/30/23 08:40:07.488
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:07.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-6917" for this suite. 01/30/23 08:40:07.539
------------------------------
â€¢ [2.573 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:04.971
    Jan 30 08:40:04.972: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replication-controller 01/30/23 08:40:04.973
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:04.984
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:04.986
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should test the lifecycle of a ReplicationController [Conformance]
      test/e2e/apps/rc.go:110
    STEP: creating a ReplicationController 01/30/23 08:40:04.995
    STEP: waiting for RC to be added 01/30/23 08:40:05.001
    STEP: waiting for available Replicas 01/30/23 08:40:05.001
    STEP: patching ReplicationController 01/30/23 08:40:05.813
    STEP: waiting for RC to be modified 01/30/23 08:40:05.822
    STEP: patching ReplicationController status 01/30/23 08:40:05.822
    STEP: waiting for RC to be modified 01/30/23 08:40:05.828
    STEP: waiting for available Replicas 01/30/23 08:40:05.828
    STEP: fetching ReplicationController status 01/30/23 08:40:05.835
    STEP: patching ReplicationController scale 01/30/23 08:40:05.838
    STEP: waiting for RC to be modified 01/30/23 08:40:05.844
    STEP: waiting for ReplicationController's scale to be the max amount 01/30/23 08:40:05.845
    STEP: fetching ReplicationController; ensuring that it's patched 01/30/23 08:40:07.471
    STEP: updating ReplicationController status 01/30/23 08:40:07.473
    STEP: waiting for RC to be modified 01/30/23 08:40:07.478
    STEP: listing all ReplicationControllers 01/30/23 08:40:07.478
    STEP: checking that ReplicationController has expected values 01/30/23 08:40:07.481
    STEP: deleting ReplicationControllers by collection 01/30/23 08:40:07.481
    STEP: waiting for ReplicationController to have a DELETED watchEvent 01/30/23 08:40:07.488
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:07.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-6917" for this suite. 01/30/23 08:40:07.539
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:07.547
Jan 30 08:40:07.547: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:40:07.548
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:07.562
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:07.565
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
STEP: Creating secret with name secret-test-f15cf40f-ae1f-4a8f-9bd7-bc527dbf0f2e 01/30/23 08:40:07.568
STEP: Creating a pod to test consume secrets 01/30/23 08:40:07.575
Jan 30 08:40:07.583: INFO: Waiting up to 5m0s for pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964" in namespace "secrets-2216" to be "Succeeded or Failed"
Jan 30 08:40:07.585: INFO: Pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964": Phase="Pending", Reason="", readiness=false. Elapsed: 2.317559ms
Jan 30 08:40:09.588: INFO: Pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00521502s
Jan 30 08:40:11.588: INFO: Pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005270102s
STEP: Saw pod success 01/30/23 08:40:11.588
Jan 30 08:40:11.588: INFO: Pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964" satisfied condition "Succeeded or Failed"
Jan 30 08:40:11.590: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964 container secret-env-test: <nil>
STEP: delete the pod 01/30/23 08:40:11.593
Jan 30 08:40:11.605: INFO: Waiting for pod pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964 to disappear
Jan 30 08:40:11.607: INFO: Pod pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:11.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-2216" for this suite. 01/30/23 08:40:11.61
------------------------------
â€¢ [4.068 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:07.547
    Jan 30 08:40:07.547: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:40:07.548
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:07.562
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:07.565
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in env vars [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:46
    STEP: Creating secret with name secret-test-f15cf40f-ae1f-4a8f-9bd7-bc527dbf0f2e 01/30/23 08:40:07.568
    STEP: Creating a pod to test consume secrets 01/30/23 08:40:07.575
    Jan 30 08:40:07.583: INFO: Waiting up to 5m0s for pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964" in namespace "secrets-2216" to be "Succeeded or Failed"
    Jan 30 08:40:07.585: INFO: Pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964": Phase="Pending", Reason="", readiness=false. Elapsed: 2.317559ms
    Jan 30 08:40:09.588: INFO: Pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00521502s
    Jan 30 08:40:11.588: INFO: Pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005270102s
    STEP: Saw pod success 01/30/23 08:40:11.588
    Jan 30 08:40:11.588: INFO: Pod "pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964" satisfied condition "Succeeded or Failed"
    Jan 30 08:40:11.590: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964 container secret-env-test: <nil>
    STEP: delete the pod 01/30/23 08:40:11.593
    Jan 30 08:40:11.605: INFO: Waiting for pod pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964 to disappear
    Jan 30 08:40:11.607: INFO: Pod pod-secrets-12731bfd-69bf-48f8-8e16-174f88e26964 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:11.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-2216" for this suite. 01/30/23 08:40:11.61
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:11.617
Jan 30 08:40:11.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 08:40:11.62
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:11.63
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:11.632
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
STEP: Create a pod 01/30/23 08:40:11.635
Jan 30 08:40:11.641: INFO: Waiting up to 5m0s for pod "pod-rc6fm" in namespace "pods-2325" to be "running"
Jan 30 08:40:11.644: INFO: Pod "pod-rc6fm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.822569ms
Jan 30 08:40:13.648: INFO: Pod "pod-rc6fm": Phase="Running", Reason="", readiness=true. Elapsed: 2.006151857s
Jan 30 08:40:13.648: INFO: Pod "pod-rc6fm" satisfied condition "running"
STEP: patching /status 01/30/23 08:40:13.648
Jan 30 08:40:13.655: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:13.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2325" for this suite. 01/30/23 08:40:13.659
------------------------------
â€¢ [2.046 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:11.617
    Jan 30 08:40:11.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 08:40:11.62
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:11.63
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:11.632
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should patch a pod status [Conformance]
      test/e2e/common/node/pods.go:1083
    STEP: Create a pod 01/30/23 08:40:11.635
    Jan 30 08:40:11.641: INFO: Waiting up to 5m0s for pod "pod-rc6fm" in namespace "pods-2325" to be "running"
    Jan 30 08:40:11.644: INFO: Pod "pod-rc6fm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.822569ms
    Jan 30 08:40:13.648: INFO: Pod "pod-rc6fm": Phase="Running", Reason="", readiness=true. Elapsed: 2.006151857s
    Jan 30 08:40:13.648: INFO: Pod "pod-rc6fm" satisfied condition "running"
    STEP: patching /status 01/30/23 08:40:13.648
    Jan 30 08:40:13.655: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:13.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2325" for this suite. 01/30/23 08:40:13.659
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:13.663
Jan 30 08:40:13.664: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename statefulset 01/30/23 08:40:13.664
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:13.677
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:13.68
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-4992 01/30/23 08:40:13.682
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
STEP: Creating statefulset ss in namespace statefulset-4992 01/30/23 08:40:13.691
Jan 30 08:40:13.700: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:40:23.704: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label 01/30/23 08:40:23.707
STEP: Getting /status 01/30/23 08:40:23.718
Jan 30 08:40:23.721: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status 01/30/23 08:40:23.721
Jan 30 08:40:23.728: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated 01/30/23 08:40:23.728
Jan 30 08:40:23.730: INFO: Observed &StatefulSet event: ADDED
Jan 30 08:40:23.730: INFO: Found Statefulset ss in namespace statefulset-4992 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 30 08:40:23.730: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status 01/30/23 08:40:23.73
Jan 30 08:40:23.730: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 30 08:40:23.740: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched 01/30/23 08:40:23.74
Jan 30 08:40:23.742: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 30 08:40:23.742: INFO: Deleting all statefulset in ns statefulset-4992
Jan 30 08:40:23.745: INFO: Scaling statefulset ss to 0
Jan 30 08:40:33.759: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:40:33.761: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:33.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-4992" for this suite. 01/30/23 08:40:33.783
------------------------------
â€¢ [SLOW TEST] [20.129 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/apps/statefulset.go:977

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:13.663
    Jan 30 08:40:13.664: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename statefulset 01/30/23 08:40:13.664
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:13.677
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:13.68
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-4992 01/30/23 08:40:13.682
    [It] should validate Statefulset Status endpoints [Conformance]
      test/e2e/apps/statefulset.go:977
    STEP: Creating statefulset ss in namespace statefulset-4992 01/30/23 08:40:13.691
    Jan 30 08:40:13.700: INFO: Found 0 stateful pods, waiting for 1
    Jan 30 08:40:23.704: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Patch Statefulset to include a label 01/30/23 08:40:23.707
    STEP: Getting /status 01/30/23 08:40:23.718
    Jan 30 08:40:23.721: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
    STEP: updating the StatefulSet Status 01/30/23 08:40:23.721
    Jan 30 08:40:23.728: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the statefulset status to be updated 01/30/23 08:40:23.728
    Jan 30 08:40:23.730: INFO: Observed &StatefulSet event: ADDED
    Jan 30 08:40:23.730: INFO: Found Statefulset ss in namespace statefulset-4992 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 30 08:40:23.730: INFO: Statefulset ss has an updated status
    STEP: patching the Statefulset Status 01/30/23 08:40:23.73
    Jan 30 08:40:23.730: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Jan 30 08:40:23.740: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Statefulset status to be patched 01/30/23 08:40:23.74
    Jan 30 08:40:23.742: INFO: Observed &StatefulSet event: ADDED
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 30 08:40:23.742: INFO: Deleting all statefulset in ns statefulset-4992
    Jan 30 08:40:23.745: INFO: Scaling statefulset ss to 0
    Jan 30 08:40:33.759: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 08:40:33.761: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:33.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-4992" for this suite. 01/30/23 08:40:33.783
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:33.793
Jan 30 08:40:33.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:40:33.794
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:33.809
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:33.813
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/30/23 08:40:33.816
Jan 30 08:40:33.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-5982 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 30 08:40:33.892: INFO: stderr: ""
Jan 30 08:40:33.892: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run 01/30/23 08:40:33.892
Jan 30 08:40:33.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-5982 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
Jan 30 08:40:34.509: INFO: stderr: ""
Jan 30 08:40:34.509: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/30/23 08:40:34.509
Jan 30 08:40:34.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-5982 delete pods e2e-test-httpd-pod'
Jan 30 08:40:37.912: INFO: stderr: ""
Jan 30 08:40:37.912: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:37.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5982" for this suite. 01/30/23 08:40:37.915
------------------------------
â€¢ [4.128 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl server-side dry-run
  test/e2e/kubectl/kubectl.go:956
    should check if kubectl can dry-run update Pods [Conformance]
    test/e2e/kubectl/kubectl.go:962

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:33.793
    Jan 30 08:40:33.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:40:33.794
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:33.809
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:33.813
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl can dry-run update Pods [Conformance]
      test/e2e/kubectl/kubectl.go:962
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/30/23 08:40:33.816
    Jan 30 08:40:33.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-5982 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Jan 30 08:40:33.892: INFO: stderr: ""
    Jan 30 08:40:33.892: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: replace the image in the pod with server-side dry-run 01/30/23 08:40:33.892
    Jan 30 08:40:33.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-5982 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
    Jan 30 08:40:34.509: INFO: stderr: ""
    Jan 30 08:40:34.509: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/30/23 08:40:34.509
    Jan 30 08:40:34.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-5982 delete pods e2e-test-httpd-pod'
    Jan 30 08:40:37.912: INFO: stderr: ""
    Jan 30 08:40:37.912: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:37.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5982" for this suite. 01/30/23 08:40:37.915
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:37.922
Jan 30 08:40:37.922: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:40:37.923
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:37.944
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:37.948
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
STEP: Creating secret with name secret-test-b8147a53-26c1-4963-b128-1e5a97e4ce3c 01/30/23 08:40:37.95
STEP: Creating a pod to test consume secrets 01/30/23 08:40:37.957
Jan 30 08:40:37.980: INFO: Waiting up to 5m0s for pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944" in namespace "secrets-3542" to be "Succeeded or Failed"
Jan 30 08:40:37.987: INFO: Pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944": Phase="Pending", Reason="", readiness=false. Elapsed: 7.393843ms
Jan 30 08:40:39.991: INFO: Pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010932513s
Jan 30 08:40:41.991: INFO: Pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011200145s
STEP: Saw pod success 01/30/23 08:40:41.991
Jan 30 08:40:41.991: INFO: Pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944" satisfied condition "Succeeded or Failed"
Jan 30 08:40:41.994: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944 container secret-volume-test: <nil>
STEP: delete the pod 01/30/23 08:40:41.999
Jan 30 08:40:42.010: INFO: Waiting for pod pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944 to disappear
Jan 30 08:40:42.013: INFO: Pod pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:42.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-3542" for this suite. 01/30/23 08:40:42.016
------------------------------
â€¢ [4.102 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:37.922
    Jan 30 08:40:37.922: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:40:37.923
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:37.944
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:37.948
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:57
    STEP: Creating secret with name secret-test-b8147a53-26c1-4963-b128-1e5a97e4ce3c 01/30/23 08:40:37.95
    STEP: Creating a pod to test consume secrets 01/30/23 08:40:37.957
    Jan 30 08:40:37.980: INFO: Waiting up to 5m0s for pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944" in namespace "secrets-3542" to be "Succeeded or Failed"
    Jan 30 08:40:37.987: INFO: Pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944": Phase="Pending", Reason="", readiness=false. Elapsed: 7.393843ms
    Jan 30 08:40:39.991: INFO: Pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010932513s
    Jan 30 08:40:41.991: INFO: Pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011200145s
    STEP: Saw pod success 01/30/23 08:40:41.991
    Jan 30 08:40:41.991: INFO: Pod "pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944" satisfied condition "Succeeded or Failed"
    Jan 30 08:40:41.994: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944 container secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:40:41.999
    Jan 30 08:40:42.010: INFO: Waiting for pod pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944 to disappear
    Jan 30 08:40:42.013: INFO: Pod pod-secrets-150a0fbb-3957-4910-a2b2-52fb4bb9d944 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:42.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-3542" for this suite. 01/30/23 08:40:42.016
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:42.028
Jan 30 08:40:42.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:40:42.036
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:42.061
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:42.064
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
STEP: Creating configMap with name projected-configmap-test-volume-map-38c25fad-befe-463e-bffa-b327ebcb7a8f 01/30/23 08:40:42.068
STEP: Creating a pod to test consume configMaps 01/30/23 08:40:42.075
Jan 30 08:40:42.085: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553" in namespace "projected-6065" to be "Succeeded or Failed"
Jan 30 08:40:42.091: INFO: Pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553": Phase="Pending", Reason="", readiness=false. Elapsed: 5.53348ms
Jan 30 08:40:44.094: INFO: Pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008287373s
Jan 30 08:40:46.095: INFO: Pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009816309s
STEP: Saw pod success 01/30/23 08:40:46.095
Jan 30 08:40:46.095: INFO: Pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553" satisfied condition "Succeeded or Failed"
Jan 30 08:40:46.097: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 08:40:46.101
Jan 30 08:40:46.111: INFO: Waiting for pod pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553 to disappear
Jan 30 08:40:46.113: INFO: Pod pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:46.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6065" for this suite. 01/30/23 08:40:46.116
------------------------------
â€¢ [4.092 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:42.028
    Jan 30 08:40:42.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:40:42.036
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:42.061
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:42.064
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:109
    STEP: Creating configMap with name projected-configmap-test-volume-map-38c25fad-befe-463e-bffa-b327ebcb7a8f 01/30/23 08:40:42.068
    STEP: Creating a pod to test consume configMaps 01/30/23 08:40:42.075
    Jan 30 08:40:42.085: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553" in namespace "projected-6065" to be "Succeeded or Failed"
    Jan 30 08:40:42.091: INFO: Pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553": Phase="Pending", Reason="", readiness=false. Elapsed: 5.53348ms
    Jan 30 08:40:44.094: INFO: Pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008287373s
    Jan 30 08:40:46.095: INFO: Pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009816309s
    STEP: Saw pod success 01/30/23 08:40:46.095
    Jan 30 08:40:46.095: INFO: Pod "pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553" satisfied condition "Succeeded or Failed"
    Jan 30 08:40:46.097: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 08:40:46.101
    Jan 30 08:40:46.111: INFO: Waiting for pod pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553 to disappear
    Jan 30 08:40:46.113: INFO: Pod pod-projected-configmaps-eb485b4d-5b79-453b-952c-fdf318ec8553 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:46.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6065" for this suite. 01/30/23 08:40:46.116
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Ingress API
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
[BeforeEach] [sig-network] Ingress API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:46.121
Jan 30 08:40:46.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename ingress 01/30/23 08:40:46.122
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:46.135
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:46.138
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:31
[It] should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
STEP: getting /apis 01/30/23 08:40:46.141
STEP: getting /apis/networking.k8s.io 01/30/23 08:40:46.143
STEP: getting /apis/networking.k8s.iov1 01/30/23 08:40:46.144
STEP: creating 01/30/23 08:40:46.145
STEP: getting 01/30/23 08:40:46.158
STEP: listing 01/30/23 08:40:46.161
STEP: watching 01/30/23 08:40:46.164
Jan 30 08:40:46.164: INFO: starting watch
STEP: cluster-wide listing 01/30/23 08:40:46.165
STEP: cluster-wide watching 01/30/23 08:40:46.169
Jan 30 08:40:46.169: INFO: starting watch
STEP: patching 01/30/23 08:40:46.171
STEP: updating 01/30/23 08:40:46.178
Jan 30 08:40:46.187: INFO: waiting for watch events with expected annotations
Jan 30 08:40:46.187: INFO: saw patched and updated annotations
STEP: patching /status 01/30/23 08:40:46.187
STEP: updating /status 01/30/23 08:40:46.193
STEP: get /status 01/30/23 08:40:46.201
STEP: deleting 01/30/23 08:40:46.204
STEP: deleting a collection 01/30/23 08:40:46.214
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:46.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Ingress API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Ingress API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingress-5237" for this suite. 01/30/23 08:40:46.232
------------------------------
â€¢ [0.119 seconds]
[sig-network] Ingress API
test/e2e/network/common/framework.go:23
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Ingress API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:46.121
    Jan 30 08:40:46.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename ingress 01/30/23 08:40:46.122
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:46.135
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:46.138
    [BeforeEach] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:31
    [It] should support creating Ingress API operations [Conformance]
      test/e2e/network/ingress.go:552
    STEP: getting /apis 01/30/23 08:40:46.141
    STEP: getting /apis/networking.k8s.io 01/30/23 08:40:46.143
    STEP: getting /apis/networking.k8s.iov1 01/30/23 08:40:46.144
    STEP: creating 01/30/23 08:40:46.145
    STEP: getting 01/30/23 08:40:46.158
    STEP: listing 01/30/23 08:40:46.161
    STEP: watching 01/30/23 08:40:46.164
    Jan 30 08:40:46.164: INFO: starting watch
    STEP: cluster-wide listing 01/30/23 08:40:46.165
    STEP: cluster-wide watching 01/30/23 08:40:46.169
    Jan 30 08:40:46.169: INFO: starting watch
    STEP: patching 01/30/23 08:40:46.171
    STEP: updating 01/30/23 08:40:46.178
    Jan 30 08:40:46.187: INFO: waiting for watch events with expected annotations
    Jan 30 08:40:46.187: INFO: saw patched and updated annotations
    STEP: patching /status 01/30/23 08:40:46.187
    STEP: updating /status 01/30/23 08:40:46.193
    STEP: get /status 01/30/23 08:40:46.201
    STEP: deleting 01/30/23 08:40:46.204
    STEP: deleting a collection 01/30/23 08:40:46.214
    [AfterEach] [sig-network] Ingress API
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:46.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Ingress API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Ingress API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingress-5237" for this suite. 01/30/23 08:40:46.232
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:46.241
Jan 30 08:40:46.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:40:46.242
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:46.257
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:46.259
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
STEP: creating service in namespace services-7428 01/30/23 08:40:46.263
STEP: creating service affinity-clusterip-transition in namespace services-7428 01/30/23 08:40:46.263
STEP: creating replication controller affinity-clusterip-transition in namespace services-7428 01/30/23 08:40:46.28
I0130 08:40:46.297659      24 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7428, replica count: 3
I0130 08:40:49.349870      24 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:40:49.359: INFO: Creating new exec pod
Jan 30 08:40:49.364: INFO: Waiting up to 5m0s for pod "execpod-affinityk7tgr" in namespace "services-7428" to be "running"
Jan 30 08:40:49.366: INFO: Pod "execpod-affinityk7tgr": Phase="Pending", Reason="", readiness=false. Elapsed: 2.751385ms
Jan 30 08:40:51.369: INFO: Pod "execpod-affinityk7tgr": Phase="Running", Reason="", readiness=true. Elapsed: 2.005821909s
Jan 30 08:40:51.370: INFO: Pod "execpod-affinityk7tgr" satisfied condition "running"
Jan 30 08:40:52.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7428 exec execpod-affinityk7tgr -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
Jan 30 08:40:52.571: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Jan 30 08:40:52.571: INFO: stdout: ""
Jan 30 08:40:52.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7428 exec execpod-affinityk7tgr -- /bin/sh -x -c nc -v -z -w 2 10.96.181.153 80'
Jan 30 08:40:52.759: INFO: stderr: "+ nc -v -z -w 2 10.96.181.153 80\nConnection to 10.96.181.153 80 port [tcp/http] succeeded!\n"
Jan 30 08:40:52.759: INFO: stdout: ""
Jan 30 08:40:52.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7428 exec execpod-affinityk7tgr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.181.153:80/ ; done'
Jan 30 08:40:53.048: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n"
Jan 30 08:40:53.048: INFO: stdout: "\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-lwtms\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-lwtms\naffinity-clusterip-transition-lwtms\naffinity-clusterip-transition-lwtms\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-9n9xk"
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-lwtms
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-lwtms
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-lwtms
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-lwtms
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
Jan 30 08:40:53.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7428 exec execpod-affinityk7tgr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.181.153:80/ ; done'
Jan 30 08:40:53.341: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n"
Jan 30 08:40:53.342: INFO: stdout: "\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2"
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
Jan 30 08:40:53.342: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7428, will wait for the garbage collector to delete the pods 01/30/23 08:40:53.362
Jan 30 08:40:53.423: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.023565ms
Jan 30 08:40:53.524: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.513268ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:40:57.040: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7428" for this suite. 01/30/23 08:40:57.044
------------------------------
â€¢ [SLOW TEST] [10.809 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:46.241
    Jan 30 08:40:46.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:40:46.242
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:46.257
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:46.259
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2213
    STEP: creating service in namespace services-7428 01/30/23 08:40:46.263
    STEP: creating service affinity-clusterip-transition in namespace services-7428 01/30/23 08:40:46.263
    STEP: creating replication controller affinity-clusterip-transition in namespace services-7428 01/30/23 08:40:46.28
    I0130 08:40:46.297659      24 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7428, replica count: 3
    I0130 08:40:49.349870      24 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 08:40:49.359: INFO: Creating new exec pod
    Jan 30 08:40:49.364: INFO: Waiting up to 5m0s for pod "execpod-affinityk7tgr" in namespace "services-7428" to be "running"
    Jan 30 08:40:49.366: INFO: Pod "execpod-affinityk7tgr": Phase="Pending", Reason="", readiness=false. Elapsed: 2.751385ms
    Jan 30 08:40:51.369: INFO: Pod "execpod-affinityk7tgr": Phase="Running", Reason="", readiness=true. Elapsed: 2.005821909s
    Jan 30 08:40:51.370: INFO: Pod "execpod-affinityk7tgr" satisfied condition "running"
    Jan 30 08:40:52.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7428 exec execpod-affinityk7tgr -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
    Jan 30 08:40:52.571: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
    Jan 30 08:40:52.571: INFO: stdout: ""
    Jan 30 08:40:52.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7428 exec execpod-affinityk7tgr -- /bin/sh -x -c nc -v -z -w 2 10.96.181.153 80'
    Jan 30 08:40:52.759: INFO: stderr: "+ nc -v -z -w 2 10.96.181.153 80\nConnection to 10.96.181.153 80 port [tcp/http] succeeded!\n"
    Jan 30 08:40:52.759: INFO: stdout: ""
    Jan 30 08:40:52.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7428 exec execpod-affinityk7tgr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.181.153:80/ ; done'
    Jan 30 08:40:53.048: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n"
    Jan 30 08:40:53.048: INFO: stdout: "\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-lwtms\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-lwtms\naffinity-clusterip-transition-lwtms\naffinity-clusterip-transition-lwtms\naffinity-clusterip-transition-9n9xk\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-9n9xk"
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-lwtms
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-lwtms
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-lwtms
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-lwtms
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.048: INFO: Received response from host: affinity-clusterip-transition-9n9xk
    Jan 30 08:40:53.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-7428 exec execpod-affinityk7tgr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.181.153:80/ ; done'
    Jan 30 08:40:53.341: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.181.153:80/\n"
    Jan 30 08:40:53.342: INFO: stdout: "\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2\naffinity-clusterip-transition-d55r2"
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Received response from host: affinity-clusterip-transition-d55r2
    Jan 30 08:40:53.342: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7428, will wait for the garbage collector to delete the pods 01/30/23 08:40:53.362
    Jan 30 08:40:53.423: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.023565ms
    Jan 30 08:40:53.524: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.513268ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:40:57.040: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7428" for this suite. 01/30/23 08:40:57.044
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:40:57.052
Jan 30 08:40:57.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-runtime 01/30/23 08:40:57.053
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:57.071
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:57.074
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
STEP: create the container 01/30/23 08:40:57.077
STEP: wait for the container to reach Succeeded 01/30/23 08:40:57.085
STEP: get the container status 01/30/23 08:41:00.101
STEP: the container should be terminated 01/30/23 08:41:00.103
STEP: the termination message should be set 01/30/23 08:41:00.103
Jan 30 08:41:00.103: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container 01/30/23 08:41:00.103
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 30 08:41:00.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-7051" for this suite. 01/30/23 08:41:00.127
------------------------------
â€¢ [3.082 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:40:57.052
    Jan 30 08:40:57.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-runtime 01/30/23 08:40:57.053
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:40:57.071
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:40:57.074
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248
    STEP: create the container 01/30/23 08:40:57.077
    STEP: wait for the container to reach Succeeded 01/30/23 08:40:57.085
    STEP: get the container status 01/30/23 08:41:00.101
    STEP: the container should be terminated 01/30/23 08:41:00.103
    STEP: the termination message should be set 01/30/23 08:41:00.103
    Jan 30 08:41:00.103: INFO: Expected: &{OK} to match Container's Termination Message: OK --
    STEP: delete the container 01/30/23 08:41:00.103
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:41:00.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-7051" for this suite. 01/30/23 08:41:00.127
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:41:00.134
Jan 30 08:41:00.135: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename statefulset 01/30/23 08:41:00.135
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:00.146
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:00.149
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-5496 01/30/23 08:41:00.153
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
Jan 30 08:41:00.170: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:41:10.173: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet 01/30/23 08:41:10.177
W0130 08:41:10.183823      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Jan 30 08:41:10.191: INFO: Found 1 stateful pods, waiting for 2
Jan 30 08:41:20.196: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:41:20.196: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets 01/30/23 08:41:20.2
STEP: Delete all of the StatefulSets 01/30/23 08:41:20.203
STEP: Verify that StatefulSets have been deleted 01/30/23 08:41:20.209
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 30 08:41:20.213: INFO: Deleting all statefulset in ns statefulset-5496
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:41:20.219: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-5496" for this suite. 01/30/23 08:41:20.222
------------------------------
â€¢ [SLOW TEST] [20.103 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/apps/statefulset.go:908

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:41:00.134
    Jan 30 08:41:00.135: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename statefulset 01/30/23 08:41:00.135
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:00.146
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:00.149
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-5496 01/30/23 08:41:00.153
    [It] should list, patch and delete a collection of StatefulSets [Conformance]
      test/e2e/apps/statefulset.go:908
    Jan 30 08:41:00.170: INFO: Found 0 stateful pods, waiting for 1
    Jan 30 08:41:10.173: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: patching the StatefulSet 01/30/23 08:41:10.177
    W0130 08:41:10.183823      24 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Jan 30 08:41:10.191: INFO: Found 1 stateful pods, waiting for 2
    Jan 30 08:41:20.196: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 08:41:20.196: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Listing all StatefulSets 01/30/23 08:41:20.2
    STEP: Delete all of the StatefulSets 01/30/23 08:41:20.203
    STEP: Verify that StatefulSets have been deleted 01/30/23 08:41:20.209
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 30 08:41:20.213: INFO: Deleting all statefulset in ns statefulset-5496
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:41:20.219: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-5496" for this suite. 01/30/23 08:41:20.222
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:41:20.247
Jan 30 08:41:20.247: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:41:20.248
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:20.26
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:20.263
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
STEP: Creating configMap configmap-1526/configmap-test-2d747d73-f7f0-486e-840f-4d12f41858a1 01/30/23 08:41:20.266
STEP: Creating a pod to test consume configMaps 01/30/23 08:41:20.272
Jan 30 08:41:20.282: INFO: Waiting up to 5m0s for pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e" in namespace "configmap-1526" to be "Succeeded or Failed"
Jan 30 08:41:20.286: INFO: Pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.172285ms
Jan 30 08:41:22.289: INFO: Pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007703089s
Jan 30 08:41:24.289: INFO: Pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007663879s
STEP: Saw pod success 01/30/23 08:41:24.289
Jan 30 08:41:24.290: INFO: Pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e" satisfied condition "Succeeded or Failed"
Jan 30 08:41:24.292: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e container env-test: <nil>
STEP: delete the pod 01/30/23 08:41:24.296
Jan 30 08:41:24.307: INFO: Waiting for pod pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e to disappear
Jan 30 08:41:24.309: INFO: Pod pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:41:24.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-1526" for this suite. 01/30/23 08:41:24.313
------------------------------
â€¢ [4.074 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:41:20.247
    Jan 30 08:41:20.247: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:41:20.248
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:20.26
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:20.263
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:93
    STEP: Creating configMap configmap-1526/configmap-test-2d747d73-f7f0-486e-840f-4d12f41858a1 01/30/23 08:41:20.266
    STEP: Creating a pod to test consume configMaps 01/30/23 08:41:20.272
    Jan 30 08:41:20.282: INFO: Waiting up to 5m0s for pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e" in namespace "configmap-1526" to be "Succeeded or Failed"
    Jan 30 08:41:20.286: INFO: Pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.172285ms
    Jan 30 08:41:22.289: INFO: Pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007703089s
    Jan 30 08:41:24.289: INFO: Pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007663879s
    STEP: Saw pod success 01/30/23 08:41:24.289
    Jan 30 08:41:24.290: INFO: Pod "pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e" satisfied condition "Succeeded or Failed"
    Jan 30 08:41:24.292: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e container env-test: <nil>
    STEP: delete the pod 01/30/23 08:41:24.296
    Jan 30 08:41:24.307: INFO: Waiting for pod pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e to disappear
    Jan 30 08:41:24.309: INFO: Pod pod-configmaps-f26cbb62-eb11-48c4-8f53-121bf7fb9c4e no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:41:24.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-1526" for this suite. 01/30/23 08:41:24.313
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:41:24.322
Jan 30 08:41:24.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:41:24.323
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:24.336
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:24.339
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
STEP: Creating a pod to test emptydir 0777 on tmpfs 01/30/23 08:41:24.341
Jan 30 08:41:24.351: INFO: Waiting up to 5m0s for pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090" in namespace "emptydir-3194" to be "Succeeded or Failed"
Jan 30 08:41:24.354: INFO: Pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090": Phase="Pending", Reason="", readiness=false. Elapsed: 2.830007ms
Jan 30 08:41:26.361: INFO: Pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01011023s
Jan 30 08:41:28.363: INFO: Pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01221363s
STEP: Saw pod success 01/30/23 08:41:28.363
Jan 30 08:41:28.363: INFO: Pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090" satisfied condition "Succeeded or Failed"
Jan 30 08:41:28.367: INFO: Trying to get logs from node tce-worker2 pod pod-f03e4a6a-14b2-4dea-85ba-06979f17f090 container test-container: <nil>
STEP: delete the pod 01/30/23 08:41:28.377
Jan 30 08:41:28.395: INFO: Waiting for pod pod-f03e4a6a-14b2-4dea-85ba-06979f17f090 to disappear
Jan 30 08:41:28.398: INFO: Pod pod-f03e4a6a-14b2-4dea-85ba-06979f17f090 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:41:28.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3194" for this suite. 01/30/23 08:41:28.402
------------------------------
â€¢ [4.085 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:41:24.322
    Jan 30 08:41:24.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:41:24.323
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:24.336
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:24.339
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:117
    STEP: Creating a pod to test emptydir 0777 on tmpfs 01/30/23 08:41:24.341
    Jan 30 08:41:24.351: INFO: Waiting up to 5m0s for pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090" in namespace "emptydir-3194" to be "Succeeded or Failed"
    Jan 30 08:41:24.354: INFO: Pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090": Phase="Pending", Reason="", readiness=false. Elapsed: 2.830007ms
    Jan 30 08:41:26.361: INFO: Pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01011023s
    Jan 30 08:41:28.363: INFO: Pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01221363s
    STEP: Saw pod success 01/30/23 08:41:28.363
    Jan 30 08:41:28.363: INFO: Pod "pod-f03e4a6a-14b2-4dea-85ba-06979f17f090" satisfied condition "Succeeded or Failed"
    Jan 30 08:41:28.367: INFO: Trying to get logs from node tce-worker2 pod pod-f03e4a6a-14b2-4dea-85ba-06979f17f090 container test-container: <nil>
    STEP: delete the pod 01/30/23 08:41:28.377
    Jan 30 08:41:28.395: INFO: Waiting for pod pod-f03e4a6a-14b2-4dea-85ba-06979f17f090 to disappear
    Jan 30 08:41:28.398: INFO: Pod pod-f03e4a6a-14b2-4dea-85ba-06979f17f090 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:41:28.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3194" for this suite. 01/30/23 08:41:28.402
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:41:28.414
Jan 30 08:41:28.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:41:28.415
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:28.43
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:28.433
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
STEP: creating a replication controller 01/30/23 08:41:28.436
Jan 30 08:41:28.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 create -f -'
Jan 30 08:41:28.641: INFO: stderr: ""
Jan 30 08:41:28.641: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 01/30/23 08:41:28.641
Jan 30 08:41:28.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:41:28.739: INFO: stderr: ""
Jan 30 08:41:28.739: INFO: stdout: "update-demo-nautilus-54qsm update-demo-nautilus-wxbhs "
Jan 30 08:41:28.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-54qsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:41:28.831: INFO: stderr: ""
Jan 30 08:41:28.831: INFO: stdout: ""
Jan 30 08:41:28.831: INFO: update-demo-nautilus-54qsm is created but not running
Jan 30 08:41:33.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:41:33.891: INFO: stderr: ""
Jan 30 08:41:33.891: INFO: stdout: "update-demo-nautilus-54qsm update-demo-nautilus-wxbhs "
Jan 30 08:41:33.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-54qsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:41:33.959: INFO: stderr: ""
Jan 30 08:41:33.959: INFO: stdout: "true"
Jan 30 08:41:33.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-54qsm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:41:34.020: INFO: stderr: ""
Jan 30 08:41:34.020: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 30 08:41:34.020: INFO: validating pod update-demo-nautilus-54qsm
Jan 30 08:41:34.027: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:41:34.028: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:41:34.028: INFO: update-demo-nautilus-54qsm is verified up and running
Jan 30 08:41:34.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:41:34.091: INFO: stderr: ""
Jan 30 08:41:34.091: INFO: stdout: "true"
Jan 30 08:41:34.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:41:34.160: INFO: stderr: ""
Jan 30 08:41:34.160: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 30 08:41:34.160: INFO: validating pod update-demo-nautilus-wxbhs
Jan 30 08:41:34.186: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:41:34.186: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:41:34.186: INFO: update-demo-nautilus-wxbhs is verified up and running
STEP: scaling down the replication controller 01/30/23 08:41:34.186
Jan 30 08:41:34.187: INFO: scanned /root for discovery docs: <nil>
Jan 30 08:41:34.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Jan 30 08:41:35.273: INFO: stderr: ""
Jan 30 08:41:35.273: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 01/30/23 08:41:35.273
Jan 30 08:41:35.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:41:35.356: INFO: stderr: ""
Jan 30 08:41:35.356: INFO: stdout: "update-demo-nautilus-54qsm update-demo-nautilus-wxbhs "
STEP: Replicas for name=update-demo: expected=1 actual=2 01/30/23 08:41:35.356
Jan 30 08:41:40.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:41:40.413: INFO: stderr: ""
Jan 30 08:41:40.414: INFO: stdout: "update-demo-nautilus-wxbhs "
Jan 30 08:41:40.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:41:40.498: INFO: stderr: ""
Jan 30 08:41:40.498: INFO: stdout: "true"
Jan 30 08:41:40.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:41:40.561: INFO: stderr: ""
Jan 30 08:41:40.561: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 30 08:41:40.561: INFO: validating pod update-demo-nautilus-wxbhs
Jan 30 08:41:40.564: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:41:40.564: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:41:40.564: INFO: update-demo-nautilus-wxbhs is verified up and running
STEP: scaling up the replication controller 01/30/23 08:41:40.564
Jan 30 08:41:40.565: INFO: scanned /root for discovery docs: <nil>
Jan 30 08:41:40.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Jan 30 08:41:41.662: INFO: stderr: ""
Jan 30 08:41:41.662: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 01/30/23 08:41:41.662
Jan 30 08:41:41.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:41:41.739: INFO: stderr: ""
Jan 30 08:41:41.739: INFO: stdout: "update-demo-nautilus-grwsm update-demo-nautilus-wxbhs "
Jan 30 08:41:41.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-grwsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:41:41.807: INFO: stderr: ""
Jan 30 08:41:41.807: INFO: stdout: ""
Jan 30 08:41:41.807: INFO: update-demo-nautilus-grwsm is created but not running
Jan 30 08:41:46.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 08:41:46.867: INFO: stderr: ""
Jan 30 08:41:46.867: INFO: stdout: "update-demo-nautilus-grwsm update-demo-nautilus-wxbhs "
Jan 30 08:41:46.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-grwsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:41:46.936: INFO: stderr: ""
Jan 30 08:41:46.936: INFO: stdout: "true"
Jan 30 08:41:46.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-grwsm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:41:47.006: INFO: stderr: ""
Jan 30 08:41:47.006: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 30 08:41:47.006: INFO: validating pod update-demo-nautilus-grwsm
Jan 30 08:41:47.009: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:41:47.009: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:41:47.009: INFO: update-demo-nautilus-grwsm is verified up and running
Jan 30 08:41:47.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 08:41:47.078: INFO: stderr: ""
Jan 30 08:41:47.078: INFO: stdout: "true"
Jan 30 08:41:47.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 08:41:47.150: INFO: stderr: ""
Jan 30 08:41:47.150: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 30 08:41:47.150: INFO: validating pod update-demo-nautilus-wxbhs
Jan 30 08:41:47.154: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 08:41:47.154: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 08:41:47.154: INFO: update-demo-nautilus-wxbhs is verified up and running
STEP: using delete to clean up resources 01/30/23 08:41:47.154
Jan 30 08:41:47.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 delete --grace-period=0 --force -f -'
Jan 30 08:41:47.231: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 08:41:47.231: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 30 08:41:47.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get rc,svc -l name=update-demo --no-headers'
Jan 30 08:41:47.327: INFO: stderr: "No resources found in kubectl-9144 namespace.\n"
Jan 30 08:41:47.327: INFO: stdout: ""
Jan 30 08:41:47.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 30 08:41:47.399: INFO: stderr: ""
Jan 30 08:41:47.399: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:41:47.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9144" for this suite. 01/30/23 08:41:47.403
------------------------------
â€¢ [SLOW TEST] [18.994 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should scale a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:352

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:41:28.414
    Jan 30 08:41:28.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:41:28.415
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:28.43
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:28.433
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should scale a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:352
    STEP: creating a replication controller 01/30/23 08:41:28.436
    Jan 30 08:41:28.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 create -f -'
    Jan 30 08:41:28.641: INFO: stderr: ""
    Jan 30 08:41:28.641: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 01/30/23 08:41:28.641
    Jan 30 08:41:28.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 30 08:41:28.739: INFO: stderr: ""
    Jan 30 08:41:28.739: INFO: stdout: "update-demo-nautilus-54qsm update-demo-nautilus-wxbhs "
    Jan 30 08:41:28.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-54qsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 08:41:28.831: INFO: stderr: ""
    Jan 30 08:41:28.831: INFO: stdout: ""
    Jan 30 08:41:28.831: INFO: update-demo-nautilus-54qsm is created but not running
    Jan 30 08:41:33.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 30 08:41:33.891: INFO: stderr: ""
    Jan 30 08:41:33.891: INFO: stdout: "update-demo-nautilus-54qsm update-demo-nautilus-wxbhs "
    Jan 30 08:41:33.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-54qsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 08:41:33.959: INFO: stderr: ""
    Jan 30 08:41:33.959: INFO: stdout: "true"
    Jan 30 08:41:33.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-54qsm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 30 08:41:34.020: INFO: stderr: ""
    Jan 30 08:41:34.020: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 30 08:41:34.020: INFO: validating pod update-demo-nautilus-54qsm
    Jan 30 08:41:34.027: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 30 08:41:34.028: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 30 08:41:34.028: INFO: update-demo-nautilus-54qsm is verified up and running
    Jan 30 08:41:34.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 08:41:34.091: INFO: stderr: ""
    Jan 30 08:41:34.091: INFO: stdout: "true"
    Jan 30 08:41:34.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 30 08:41:34.160: INFO: stderr: ""
    Jan 30 08:41:34.160: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 30 08:41:34.160: INFO: validating pod update-demo-nautilus-wxbhs
    Jan 30 08:41:34.186: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 30 08:41:34.186: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 30 08:41:34.186: INFO: update-demo-nautilus-wxbhs is verified up and running
    STEP: scaling down the replication controller 01/30/23 08:41:34.186
    Jan 30 08:41:34.187: INFO: scanned /root for discovery docs: <nil>
    Jan 30 08:41:34.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
    Jan 30 08:41:35.273: INFO: stderr: ""
    Jan 30 08:41:35.273: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 01/30/23 08:41:35.273
    Jan 30 08:41:35.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 30 08:41:35.356: INFO: stderr: ""
    Jan 30 08:41:35.356: INFO: stdout: "update-demo-nautilus-54qsm update-demo-nautilus-wxbhs "
    STEP: Replicas for name=update-demo: expected=1 actual=2 01/30/23 08:41:35.356
    Jan 30 08:41:40.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 30 08:41:40.413: INFO: stderr: ""
    Jan 30 08:41:40.414: INFO: stdout: "update-demo-nautilus-wxbhs "
    Jan 30 08:41:40.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 08:41:40.498: INFO: stderr: ""
    Jan 30 08:41:40.498: INFO: stdout: "true"
    Jan 30 08:41:40.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 30 08:41:40.561: INFO: stderr: ""
    Jan 30 08:41:40.561: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 30 08:41:40.561: INFO: validating pod update-demo-nautilus-wxbhs
    Jan 30 08:41:40.564: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 30 08:41:40.564: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 30 08:41:40.564: INFO: update-demo-nautilus-wxbhs is verified up and running
    STEP: scaling up the replication controller 01/30/23 08:41:40.564
    Jan 30 08:41:40.565: INFO: scanned /root for discovery docs: <nil>
    Jan 30 08:41:40.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
    Jan 30 08:41:41.662: INFO: stderr: ""
    Jan 30 08:41:41.662: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 01/30/23 08:41:41.662
    Jan 30 08:41:41.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 30 08:41:41.739: INFO: stderr: ""
    Jan 30 08:41:41.739: INFO: stdout: "update-demo-nautilus-grwsm update-demo-nautilus-wxbhs "
    Jan 30 08:41:41.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-grwsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 08:41:41.807: INFO: stderr: ""
    Jan 30 08:41:41.807: INFO: stdout: ""
    Jan 30 08:41:41.807: INFO: update-demo-nautilus-grwsm is created but not running
    Jan 30 08:41:46.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 30 08:41:46.867: INFO: stderr: ""
    Jan 30 08:41:46.867: INFO: stdout: "update-demo-nautilus-grwsm update-demo-nautilus-wxbhs "
    Jan 30 08:41:46.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-grwsm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 08:41:46.936: INFO: stderr: ""
    Jan 30 08:41:46.936: INFO: stdout: "true"
    Jan 30 08:41:46.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-grwsm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 30 08:41:47.006: INFO: stderr: ""
    Jan 30 08:41:47.006: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 30 08:41:47.006: INFO: validating pod update-demo-nautilus-grwsm
    Jan 30 08:41:47.009: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 30 08:41:47.009: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 30 08:41:47.009: INFO: update-demo-nautilus-grwsm is verified up and running
    Jan 30 08:41:47.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 08:41:47.078: INFO: stderr: ""
    Jan 30 08:41:47.078: INFO: stdout: "true"
    Jan 30 08:41:47.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods update-demo-nautilus-wxbhs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 30 08:41:47.150: INFO: stderr: ""
    Jan 30 08:41:47.150: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 30 08:41:47.150: INFO: validating pod update-demo-nautilus-wxbhs
    Jan 30 08:41:47.154: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 30 08:41:47.154: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 30 08:41:47.154: INFO: update-demo-nautilus-wxbhs is verified up and running
    STEP: using delete to clean up resources 01/30/23 08:41:47.154
    Jan 30 08:41:47.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 delete --grace-period=0 --force -f -'
    Jan 30 08:41:47.231: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 08:41:47.231: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Jan 30 08:41:47.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get rc,svc -l name=update-demo --no-headers'
    Jan 30 08:41:47.327: INFO: stderr: "No resources found in kubectl-9144 namespace.\n"
    Jan 30 08:41:47.327: INFO: stdout: ""
    Jan 30 08:41:47.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9144 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Jan 30 08:41:47.399: INFO: stderr: ""
    Jan 30 08:41:47.399: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:41:47.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9144" for this suite. 01/30/23 08:41:47.403
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:41:47.408
Jan 30 08:41:47.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replicaset 01/30/23 08:41:47.409
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:47.423
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:47.426
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 01/30/23 08:41:47.428
Jan 30 08:41:47.435: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 30 08:41:52.438: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/30/23 08:41:52.438
STEP: getting scale subresource 01/30/23 08:41:52.438
STEP: updating a scale subresource 01/30/23 08:41:52.442
STEP: verifying the replicaset Spec.Replicas was modified 01/30/23 08:41:52.449
STEP: Patch a scale subresource 01/30/23 08:41:52.459
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:41:52.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-7759" for this suite. 01/30/23 08:41:52.494
------------------------------
â€¢ [SLOW TEST] [5.096 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:41:47.408
    Jan 30 08:41:47.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replicaset 01/30/23 08:41:47.409
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:47.423
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:47.426
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replicaset should have a working scale subresource [Conformance]
      test/e2e/apps/replica_set.go:143
    STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 01/30/23 08:41:47.428
    Jan 30 08:41:47.435: INFO: Pod name sample-pod: Found 0 pods out of 1
    Jan 30 08:41:52.438: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/30/23 08:41:52.438
    STEP: getting scale subresource 01/30/23 08:41:52.438
    STEP: updating a scale subresource 01/30/23 08:41:52.442
    STEP: verifying the replicaset Spec.Replicas was modified 01/30/23 08:41:52.449
    STEP: Patch a scale subresource 01/30/23 08:41:52.459
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:41:52.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-7759" for this suite. 01/30/23 08:41:52.494
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace
  should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:41:52.505
Jan 30 08:41:52.505: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:41:52.506
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:52.534
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:52.536
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1734
[It] should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/30/23 08:41:52.539
Jan 30 08:41:52.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-6944 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jan 30 08:41:52.641: INFO: stderr: ""
Jan 30 08:41:52.641: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running 01/30/23 08:41:52.641
STEP: verifying the pod e2e-test-httpd-pod was created 01/30/23 08:41:57.691
Jan 30 08:41:57.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-6944 get pod e2e-test-httpd-pod -o json'
Jan 30 08:41:57.761: INFO: stderr: ""
Jan 30 08:41:57.761: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-01-30T08:41:52Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6944\",\n        \"resourceVersion\": \"10212\",\n        \"uid\": \"93008611-e093-4906-a5ad-65eb6e5c0b00\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-scnzr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"tce-worker2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-scnzr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:41:52Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:41:54Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:41:54Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:41:52Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://fac584ce7d1d3f6f7f8fe73558335913c215d1f1472253af2ab35bc743c8c72a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-01-30T08:41:53Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.20.0.4\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.155\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.155\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-01-30T08:41:52Z\"\n    }\n}\n"
STEP: replace the image in the pod 01/30/23 08:41:57.761
Jan 30 08:41:57.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-6944 replace -f -'
Jan 30 08:41:57.958: INFO: stderr: ""
Jan 30 08:41:57.958: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 01/30/23 08:41:57.958
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1738
Jan 30 08:41:57.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-6944 delete pods e2e-test-httpd-pod'
Jan 30 08:42:00.166: INFO: stderr: ""
Jan 30 08:42:00.166: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:42:00.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-6944" for this suite. 01/30/23 08:42:00.171
------------------------------
â€¢ [SLOW TEST] [7.674 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1731
    should update a single-container pod's image  [Conformance]
    test/e2e/kubectl/kubectl.go:1747

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:41:52.505
    Jan 30 08:41:52.505: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:41:52.506
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:41:52.534
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:41:52.536
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1734
    [It] should update a single-container pod's image  [Conformance]
      test/e2e/kubectl/kubectl.go:1747
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 01/30/23 08:41:52.539
    Jan 30 08:41:52.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-6944 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Jan 30 08:41:52.641: INFO: stderr: ""
    Jan 30 08:41:52.641: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod is running 01/30/23 08:41:52.641
    STEP: verifying the pod e2e-test-httpd-pod was created 01/30/23 08:41:57.691
    Jan 30 08:41:57.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-6944 get pod e2e-test-httpd-pod -o json'
    Jan 30 08:41:57.761: INFO: stderr: ""
    Jan 30 08:41:57.761: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-01-30T08:41:52Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6944\",\n        \"resourceVersion\": \"10212\",\n        \"uid\": \"93008611-e093-4906-a5ad-65eb6e5c0b00\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-scnzr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"tce-worker2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-scnzr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:41:52Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:41:54Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:41:54Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-01-30T08:41:52Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://fac584ce7d1d3f6f7f8fe73558335913c215d1f1472253af2ab35bc743c8c72a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-01-30T08:41:53Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.20.0.4\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.155\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.155\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-01-30T08:41:52Z\"\n    }\n}\n"
    STEP: replace the image in the pod 01/30/23 08:41:57.761
    Jan 30 08:41:57.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-6944 replace -f -'
    Jan 30 08:41:57.958: INFO: stderr: ""
    Jan 30 08:41:57.958: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 01/30/23 08:41:57.958
    [AfterEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1738
    Jan 30 08:41:57.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-6944 delete pods e2e-test-httpd-pod'
    Jan 30 08:42:00.166: INFO: stderr: ""
    Jan 30 08:42:00.166: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:42:00.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-6944" for this suite. 01/30/23 08:42:00.171
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:42:00.18
Jan 30 08:42:00.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename proxy 01/30/23 08:42:00.181
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:00.192
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:00.196
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
Jan 30 08:42:00.201: INFO: Creating pod...
Jan 30 08:42:00.216: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-5227" to be "running"
Jan 30 08:42:00.219: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 2.935607ms
Jan 30 08:42:02.223: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.006450111s
Jan 30 08:42:02.223: INFO: Pod "agnhost" satisfied condition "running"
Jan 30 08:42:02.223: INFO: Creating service...
Jan 30 08:42:02.238: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=DELETE
Jan 30 08:42:02.255: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 30 08:42:02.256: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=OPTIONS
Jan 30 08:42:02.265: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 30 08:42:02.265: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=PATCH
Jan 30 08:42:02.269: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 30 08:42:02.269: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=POST
Jan 30 08:42:02.276: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 30 08:42:02.276: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=PUT
Jan 30 08:42:02.282: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 30 08:42:02.282: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=DELETE
Jan 30 08:42:02.286: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 30 08:42:02.286: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=OPTIONS
Jan 30 08:42:02.294: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 30 08:42:02.294: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=PATCH
Jan 30 08:42:02.299: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 30 08:42:02.299: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=POST
Jan 30 08:42:02.307: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 30 08:42:02.307: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=PUT
Jan 30 08:42:02.317: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 30 08:42:02.317: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=GET
Jan 30 08:42:02.322: INFO: http.Client request:GET StatusCode:301
Jan 30 08:42:02.322: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=GET
Jan 30 08:42:02.327: INFO: http.Client request:GET StatusCode:301
Jan 30 08:42:02.327: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=HEAD
Jan 30 08:42:02.331: INFO: http.Client request:HEAD StatusCode:301
Jan 30 08:42:02.331: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=HEAD
Jan 30 08:42:02.335: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Jan 30 08:42:02.335: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-5227" for this suite. 01/30/23 08:42:02.34
------------------------------
â€¢ [2.171 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service Proxy [Conformance]
    test/e2e/network/proxy.go:380

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:42:00.18
    Jan 30 08:42:00.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename proxy 01/30/23 08:42:00.181
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:00.192
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:00.196
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service Proxy [Conformance]
      test/e2e/network/proxy.go:380
    Jan 30 08:42:00.201: INFO: Creating pod...
    Jan 30 08:42:00.216: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-5227" to be "running"
    Jan 30 08:42:00.219: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 2.935607ms
    Jan 30 08:42:02.223: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.006450111s
    Jan 30 08:42:02.223: INFO: Pod "agnhost" satisfied condition "running"
    Jan 30 08:42:02.223: INFO: Creating service...
    Jan 30 08:42:02.238: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=DELETE
    Jan 30 08:42:02.255: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Jan 30 08:42:02.256: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=OPTIONS
    Jan 30 08:42:02.265: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Jan 30 08:42:02.265: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=PATCH
    Jan 30 08:42:02.269: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Jan 30 08:42:02.269: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=POST
    Jan 30 08:42:02.276: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Jan 30 08:42:02.276: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=PUT
    Jan 30 08:42:02.282: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Jan 30 08:42:02.282: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=DELETE
    Jan 30 08:42:02.286: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Jan 30 08:42:02.286: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=OPTIONS
    Jan 30 08:42:02.294: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Jan 30 08:42:02.294: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=PATCH
    Jan 30 08:42:02.299: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Jan 30 08:42:02.299: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=POST
    Jan 30 08:42:02.307: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Jan 30 08:42:02.307: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=PUT
    Jan 30 08:42:02.317: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Jan 30 08:42:02.317: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=GET
    Jan 30 08:42:02.322: INFO: http.Client request:GET StatusCode:301
    Jan 30 08:42:02.322: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=GET
    Jan 30 08:42:02.327: INFO: http.Client request:GET StatusCode:301
    Jan 30 08:42:02.327: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/pods/agnhost/proxy?method=HEAD
    Jan 30 08:42:02.331: INFO: http.Client request:HEAD StatusCode:301
    Jan 30 08:42:02.331: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5227/services/e2e-proxy-test-service/proxy?method=HEAD
    Jan 30 08:42:02.335: INFO: http.Client request:HEAD StatusCode:301
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:42:02.335: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-5227" for this suite. 01/30/23 08:42:02.34
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:42:02.352
Jan 30 08:42:02.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-probe 01/30/23 08:42:02.353
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:02.385
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:02.39
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
STEP: Creating pod liveness-293486c7-1b28-4307-9be9-994b942d12c0 in namespace container-probe-6699 01/30/23 08:42:02.396
Jan 30 08:42:02.405: INFO: Waiting up to 5m0s for pod "liveness-293486c7-1b28-4307-9be9-994b942d12c0" in namespace "container-probe-6699" to be "not pending"
Jan 30 08:42:02.411: INFO: Pod "liveness-293486c7-1b28-4307-9be9-994b942d12c0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.865639ms
Jan 30 08:42:04.415: INFO: Pod "liveness-293486c7-1b28-4307-9be9-994b942d12c0": Phase="Running", Reason="", readiness=true. Elapsed: 2.009505919s
Jan 30 08:42:04.415: INFO: Pod "liveness-293486c7-1b28-4307-9be9-994b942d12c0" satisfied condition "not pending"
Jan 30 08:42:04.415: INFO: Started pod liveness-293486c7-1b28-4307-9be9-994b942d12c0 in namespace container-probe-6699
STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 08:42:04.415
Jan 30 08:42:04.417: INFO: Initial restart count of pod liveness-293486c7-1b28-4307-9be9-994b942d12c0 is 0
Jan 30 08:42:24.452: INFO: Restart count of pod container-probe-6699/liveness-293486c7-1b28-4307-9be9-994b942d12c0 is now 1 (20.03473093s elapsed)
STEP: deleting the pod 01/30/23 08:42:24.452
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 30 08:42:24.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-6699" for this suite. 01/30/23 08:42:24.477
------------------------------
â€¢ [SLOW TEST] [22.131 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:42:02.352
    Jan 30 08:42:02.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-probe 01/30/23 08:42:02.353
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:02.385
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:02.39
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:169
    STEP: Creating pod liveness-293486c7-1b28-4307-9be9-994b942d12c0 in namespace container-probe-6699 01/30/23 08:42:02.396
    Jan 30 08:42:02.405: INFO: Waiting up to 5m0s for pod "liveness-293486c7-1b28-4307-9be9-994b942d12c0" in namespace "container-probe-6699" to be "not pending"
    Jan 30 08:42:02.411: INFO: Pod "liveness-293486c7-1b28-4307-9be9-994b942d12c0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.865639ms
    Jan 30 08:42:04.415: INFO: Pod "liveness-293486c7-1b28-4307-9be9-994b942d12c0": Phase="Running", Reason="", readiness=true. Elapsed: 2.009505919s
    Jan 30 08:42:04.415: INFO: Pod "liveness-293486c7-1b28-4307-9be9-994b942d12c0" satisfied condition "not pending"
    Jan 30 08:42:04.415: INFO: Started pod liveness-293486c7-1b28-4307-9be9-994b942d12c0 in namespace container-probe-6699
    STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 08:42:04.415
    Jan 30 08:42:04.417: INFO: Initial restart count of pod liveness-293486c7-1b28-4307-9be9-994b942d12c0 is 0
    Jan 30 08:42:24.452: INFO: Restart count of pod container-probe-6699/liveness-293486c7-1b28-4307-9be9-994b942d12c0 is now 1 (20.03473093s elapsed)
    STEP: deleting the pod 01/30/23 08:42:24.452
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:42:24.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-6699" for this suite. 01/30/23 08:42:24.477
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:42:24.483
Jan 30 08:42:24.483: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:42:24.484
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:24.497
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:24.5
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
STEP: Creating a pod to test downward API volume plugin 01/30/23 08:42:24.502
Jan 30 08:42:24.511: INFO: Waiting up to 5m0s for pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e" in namespace "projected-7843" to be "Succeeded or Failed"
Jan 30 08:42:24.517: INFO: Pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.000956ms
Jan 30 08:42:26.520: INFO: Pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009374235s
Jan 30 08:42:28.520: INFO: Pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009154123s
STEP: Saw pod success 01/30/23 08:42:28.52
Jan 30 08:42:28.520: INFO: Pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e" satisfied condition "Succeeded or Failed"
Jan 30 08:42:28.522: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e container client-container: <nil>
STEP: delete the pod 01/30/23 08:42:28.525
Jan 30 08:42:28.547: INFO: Waiting for pod downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e to disappear
Jan 30 08:42:28.549: INFO: Pod downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 08:42:28.549: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7843" for this suite. 01/30/23 08:42:28.552
------------------------------
â€¢ [4.076 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:42:24.483
    Jan 30 08:42:24.483: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:42:24.484
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:24.497
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:24.5
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:261
    STEP: Creating a pod to test downward API volume plugin 01/30/23 08:42:24.502
    Jan 30 08:42:24.511: INFO: Waiting up to 5m0s for pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e" in namespace "projected-7843" to be "Succeeded or Failed"
    Jan 30 08:42:24.517: INFO: Pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.000956ms
    Jan 30 08:42:26.520: INFO: Pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009374235s
    Jan 30 08:42:28.520: INFO: Pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009154123s
    STEP: Saw pod success 01/30/23 08:42:28.52
    Jan 30 08:42:28.520: INFO: Pod "downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e" satisfied condition "Succeeded or Failed"
    Jan 30 08:42:28.522: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e container client-container: <nil>
    STEP: delete the pod 01/30/23 08:42:28.525
    Jan 30 08:42:28.547: INFO: Waiting for pod downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e to disappear
    Jan 30 08:42:28.549: INFO: Pod downwardapi-volume-327f7900-848d-4ab9-83ed-198ff473e46e no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:42:28.549: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7843" for this suite. 01/30/23 08:42:28.552
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] KubeletManagedEtcHosts
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:42:28.559
Jan 30 08:42:28.559: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 01/30/23 08:42:28.56
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:28.571
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:28.575
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:31
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
STEP: Setting up the test 01/30/23 08:42:28.578
STEP: Creating hostNetwork=false pod 01/30/23 08:42:28.578
Jan 30 08:42:28.586: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-720" to be "running and ready"
Jan 30 08:42:28.591: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.30625ms
Jan 30 08:42:28.592: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:42:30.595: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008917997s
Jan 30 08:42:30.595: INFO: The phase of Pod test-pod is Running (Ready = true)
Jan 30 08:42:30.595: INFO: Pod "test-pod" satisfied condition "running and ready"
STEP: Creating hostNetwork=true pod 01/30/23 08:42:30.597
Jan 30 08:42:30.601: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-720" to be "running and ready"
Jan 30 08:42:30.604: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.374404ms
Jan 30 08:42:30.604: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:42:32.606: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.005002591s
Jan 30 08:42:32.606: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
Jan 30 08:42:32.606: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
STEP: Running the test 01/30/23 08:42:32.608
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 01/30/23 08:42:32.608
Jan 30 08:42:32.608: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.608: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.609: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.609: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 30 08:42:32.717: INFO: Exec stderr: ""
Jan 30 08:42:32.717: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.718: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.718: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 30 08:42:32.752: INFO: Exec stderr: ""
Jan 30 08:42:32.752: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.753: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.753: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 30 08:42:32.801: INFO: Exec stderr: ""
Jan 30 08:42:32.801: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.801: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.802: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.802: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 30 08:42:32.836: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 01/30/23 08:42:32.836
Jan 30 08:42:32.836: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.836: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.837: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.837: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 30 08:42:32.869: INFO: Exec stderr: ""
Jan 30 08:42:32.869: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.871: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.871: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jan 30 08:42:32.905: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 01/30/23 08:42:32.905
Jan 30 08:42:32.905: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.905: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.905: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.905: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 30 08:42:32.949: INFO: Exec stderr: ""
Jan 30 08:42:32.950: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.950: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.950: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.950: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jan 30 08:42:32.982: INFO: Exec stderr: ""
Jan 30 08:42:32.983: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:32.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:32.984: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:32.984: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 30 08:42:33.017: INFO: Exec stderr: ""
Jan 30 08:42:33.017: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:42:33.017: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:42:33.018: INFO: ExecWithOptions: Clientset creation
Jan 30 08:42:33.018: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jan 30 08:42:33.059: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/node/init/init.go:32
Jan 30 08:42:33.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  tear down framework | framework.go:193
STEP: Destroying namespace "e2e-kubelet-etc-hosts-720" for this suite. 01/30/23 08:42:33.063
------------------------------
â€¢ [4.508 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:42:28.559
    Jan 30 08:42:28.559: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 01/30/23 08:42:28.56
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:28.571
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:28.575
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:31
    [It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet_etc_hosts.go:63
    STEP: Setting up the test 01/30/23 08:42:28.578
    STEP: Creating hostNetwork=false pod 01/30/23 08:42:28.578
    Jan 30 08:42:28.586: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-720" to be "running and ready"
    Jan 30 08:42:28.591: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 5.30625ms
    Jan 30 08:42:28.592: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:42:30.595: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008917997s
    Jan 30 08:42:30.595: INFO: The phase of Pod test-pod is Running (Ready = true)
    Jan 30 08:42:30.595: INFO: Pod "test-pod" satisfied condition "running and ready"
    STEP: Creating hostNetwork=true pod 01/30/23 08:42:30.597
    Jan 30 08:42:30.601: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-720" to be "running and ready"
    Jan 30 08:42:30.604: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.374404ms
    Jan 30 08:42:30.604: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:42:32.606: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.005002591s
    Jan 30 08:42:32.606: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
    Jan 30 08:42:32.606: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
    STEP: Running the test 01/30/23 08:42:32.608
    STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 01/30/23 08:42:32.608
    Jan 30 08:42:32.608: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.608: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.609: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.609: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Jan 30 08:42:32.717: INFO: Exec stderr: ""
    Jan 30 08:42:32.717: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.718: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.718: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Jan 30 08:42:32.752: INFO: Exec stderr: ""
    Jan 30 08:42:32.752: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.753: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.753: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Jan 30 08:42:32.801: INFO: Exec stderr: ""
    Jan 30 08:42:32.801: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.801: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.802: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.802: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Jan 30 08:42:32.836: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 01/30/23 08:42:32.836
    Jan 30 08:42:32.836: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.836: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.837: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.837: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Jan 30 08:42:32.869: INFO: Exec stderr: ""
    Jan 30 08:42:32.869: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.871: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.871: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Jan 30 08:42:32.905: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 01/30/23 08:42:32.905
    Jan 30 08:42:32.905: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.905: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.905: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.905: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Jan 30 08:42:32.949: INFO: Exec stderr: ""
    Jan 30 08:42:32.950: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.950: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.950: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.950: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Jan 30 08:42:32.982: INFO: Exec stderr: ""
    Jan 30 08:42:32.983: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:32.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:32.984: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:32.984: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Jan 30 08:42:33.017: INFO: Exec stderr: ""
    Jan 30 08:42:33.017: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-720 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:42:33.017: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:42:33.018: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:42:33.018: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-720/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Jan 30 08:42:33.059: INFO: Exec stderr: ""
    [AfterEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:42:33.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      tear down framework | framework.go:193
    STEP: Destroying namespace "e2e-kubelet-etc-hosts-720" for this suite. 01/30/23 08:42:33.063
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:42:33.067
Jan 30 08:42:33.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:42:33.068
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:33.082
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:33.085
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
STEP: Creating a pod to test emptydir 0644 on tmpfs 01/30/23 08:42:33.088
Jan 30 08:42:33.094: INFO: Waiting up to 5m0s for pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09" in namespace "emptydir-6106" to be "Succeeded or Failed"
Jan 30 08:42:33.096: INFO: Pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.565828ms
Jan 30 08:42:35.098: INFO: Pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004928262s
Jan 30 08:42:37.099: INFO: Pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004975636s
STEP: Saw pod success 01/30/23 08:42:37.099
Jan 30 08:42:37.099: INFO: Pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09" satisfied condition "Succeeded or Failed"
Jan 30 08:42:37.101: INFO: Trying to get logs from node tce-worker2 pod pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09 container test-container: <nil>
STEP: delete the pod 01/30/23 08:42:37.104
Jan 30 08:42:37.129: INFO: Waiting for pod pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09 to disappear
Jan 30 08:42:37.132: INFO: Pod pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:42:37.132: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-6106" for this suite. 01/30/23 08:42:37.135
------------------------------
â€¢ [4.072 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:42:33.067
    Jan 30 08:42:33.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:42:33.068
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:33.082
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:33.085
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:97
    STEP: Creating a pod to test emptydir 0644 on tmpfs 01/30/23 08:42:33.088
    Jan 30 08:42:33.094: INFO: Waiting up to 5m0s for pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09" in namespace "emptydir-6106" to be "Succeeded or Failed"
    Jan 30 08:42:33.096: INFO: Pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.565828ms
    Jan 30 08:42:35.098: INFO: Pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004928262s
    Jan 30 08:42:37.099: INFO: Pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004975636s
    STEP: Saw pod success 01/30/23 08:42:37.099
    Jan 30 08:42:37.099: INFO: Pod "pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09" satisfied condition "Succeeded or Failed"
    Jan 30 08:42:37.101: INFO: Trying to get logs from node tce-worker2 pod pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09 container test-container: <nil>
    STEP: delete the pod 01/30/23 08:42:37.104
    Jan 30 08:42:37.129: INFO: Waiting for pod pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09 to disappear
    Jan 30 08:42:37.132: INFO: Pod pod-08bce924-e5c9-4b60-b27d-3d35af0ecd09 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:42:37.132: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-6106" for this suite. 01/30/23 08:42:37.135
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:42:37.14
Jan 30 08:42:37.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename var-expansion 01/30/23 08:42:37.142
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:37.154
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:37.157
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
STEP: Creating a pod to test substitution in volume subpath 01/30/23 08:42:37.159
Jan 30 08:42:37.169: INFO: Waiting up to 5m0s for pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812" in namespace "var-expansion-8234" to be "Succeeded or Failed"
Jan 30 08:42:37.171: INFO: Pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812": Phase="Pending", Reason="", readiness=false. Elapsed: 2.551119ms
Jan 30 08:42:39.175: INFO: Pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006053396s
Jan 30 08:42:41.175: INFO: Pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006445753s
STEP: Saw pod success 01/30/23 08:42:41.175
Jan 30 08:42:41.175: INFO: Pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812" satisfied condition "Succeeded or Failed"
Jan 30 08:42:41.177: INFO: Trying to get logs from node tce-worker2 pod var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812 container dapi-container: <nil>
STEP: delete the pod 01/30/23 08:42:41.182
Jan 30 08:42:41.207: INFO: Waiting for pod var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812 to disappear
Jan 30 08:42:41.209: INFO: Pod var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 30 08:42:41.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-8234" for this suite. 01/30/23 08:42:41.212
------------------------------
â€¢ [4.077 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:42:37.14
    Jan 30 08:42:37.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename var-expansion 01/30/23 08:42:37.142
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:37.154
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:37.157
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a volume subpath [Conformance]
      test/e2e/common/node/expansion.go:112
    STEP: Creating a pod to test substitution in volume subpath 01/30/23 08:42:37.159
    Jan 30 08:42:37.169: INFO: Waiting up to 5m0s for pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812" in namespace "var-expansion-8234" to be "Succeeded or Failed"
    Jan 30 08:42:37.171: INFO: Pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812": Phase="Pending", Reason="", readiness=false. Elapsed: 2.551119ms
    Jan 30 08:42:39.175: INFO: Pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006053396s
    Jan 30 08:42:41.175: INFO: Pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006445753s
    STEP: Saw pod success 01/30/23 08:42:41.175
    Jan 30 08:42:41.175: INFO: Pod "var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812" satisfied condition "Succeeded or Failed"
    Jan 30 08:42:41.177: INFO: Trying to get logs from node tce-worker2 pod var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812 container dapi-container: <nil>
    STEP: delete the pod 01/30/23 08:42:41.182
    Jan 30 08:42:41.207: INFO: Waiting for pod var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812 to disappear
    Jan 30 08:42:41.209: INFO: Pod var-expansion-3764b662-8b5a-45f2-83e5-87a87437c812 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:42:41.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-8234" for this suite. 01/30/23 08:42:41.212
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:42:41.218
Jan 30 08:42:41.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-probe 01/30/23 08:42:41.219
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:41.232
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:41.235
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
STEP: Creating pod liveness-39385992-982c-438f-9e9e-4cf14599cb1a in namespace container-probe-7796 01/30/23 08:42:41.239
Jan 30 08:42:41.249: INFO: Waiting up to 5m0s for pod "liveness-39385992-982c-438f-9e9e-4cf14599cb1a" in namespace "container-probe-7796" to be "not pending"
Jan 30 08:42:41.251: INFO: Pod "liveness-39385992-982c-438f-9e9e-4cf14599cb1a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.182123ms
Jan 30 08:42:43.253: INFO: Pod "liveness-39385992-982c-438f-9e9e-4cf14599cb1a": Phase="Running", Reason="", readiness=true. Elapsed: 2.004479355s
Jan 30 08:42:43.253: INFO: Pod "liveness-39385992-982c-438f-9e9e-4cf14599cb1a" satisfied condition "not pending"
Jan 30 08:42:43.253: INFO: Started pod liveness-39385992-982c-438f-9e9e-4cf14599cb1a in namespace container-probe-7796
STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 08:42:43.253
Jan 30 08:42:43.255: INFO: Initial restart count of pod liveness-39385992-982c-438f-9e9e-4cf14599cb1a is 0
STEP: deleting the pod 01/30/23 08:46:43.648
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 30 08:46:43.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-7796" for this suite. 01/30/23 08:46:43.679
------------------------------
â€¢ [SLOW TEST] [242.470 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:42:41.218
    Jan 30 08:42:41.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-probe 01/30/23 08:42:41.219
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:42:41.232
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:42:41.235
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:184
    STEP: Creating pod liveness-39385992-982c-438f-9e9e-4cf14599cb1a in namespace container-probe-7796 01/30/23 08:42:41.239
    Jan 30 08:42:41.249: INFO: Waiting up to 5m0s for pod "liveness-39385992-982c-438f-9e9e-4cf14599cb1a" in namespace "container-probe-7796" to be "not pending"
    Jan 30 08:42:41.251: INFO: Pod "liveness-39385992-982c-438f-9e9e-4cf14599cb1a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.182123ms
    Jan 30 08:42:43.253: INFO: Pod "liveness-39385992-982c-438f-9e9e-4cf14599cb1a": Phase="Running", Reason="", readiness=true. Elapsed: 2.004479355s
    Jan 30 08:42:43.253: INFO: Pod "liveness-39385992-982c-438f-9e9e-4cf14599cb1a" satisfied condition "not pending"
    Jan 30 08:42:43.253: INFO: Started pod liveness-39385992-982c-438f-9e9e-4cf14599cb1a in namespace container-probe-7796
    STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 08:42:43.253
    Jan 30 08:42:43.255: INFO: Initial restart count of pod liveness-39385992-982c-438f-9e9e-4cf14599cb1a is 0
    STEP: deleting the pod 01/30/23 08:46:43.648
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:46:43.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-7796" for this suite. 01/30/23 08:46:43.679
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected configMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:46:43.692
Jan 30 08:46:43.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:46:43.693
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:46:43.716
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:46:43.719
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
STEP: Creating projection with configMap that has name projected-configmap-test-upd-69562c92-1bf1-4738-998f-01ca5e016a47 01/30/23 08:46:43.726
STEP: Creating the pod 01/30/23 08:46:43.73
Jan 30 08:46:43.739: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f" in namespace "projected-5663" to be "running and ready"
Jan 30 08:46:43.742: INFO: Pod "pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.915193ms
Jan 30 08:46:43.742: INFO: The phase of Pod pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:46:45.745: INFO: Pod "pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f": Phase="Running", Reason="", readiness=true. Elapsed: 2.005468284s
Jan 30 08:46:45.745: INFO: The phase of Pod pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f is Running (Ready = true)
Jan 30 08:46:45.745: INFO: Pod "pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f" satisfied condition "running and ready"
STEP: Updating configmap projected-configmap-test-upd-69562c92-1bf1-4738-998f-01ca5e016a47 01/30/23 08:46:45.77
STEP: waiting to observe update in volume 01/30/23 08:46:45.774
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:46:47.782: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5663" for this suite. 01/30/23 08:46:47.784
------------------------------
â€¢ [4.098 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:46:43.692
    Jan 30 08:46:43.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:46:43.693
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:46:43.716
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:46:43.719
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:124
    STEP: Creating projection with configMap that has name projected-configmap-test-upd-69562c92-1bf1-4738-998f-01ca5e016a47 01/30/23 08:46:43.726
    STEP: Creating the pod 01/30/23 08:46:43.73
    Jan 30 08:46:43.739: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f" in namespace "projected-5663" to be "running and ready"
    Jan 30 08:46:43.742: INFO: Pod "pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.915193ms
    Jan 30 08:46:43.742: INFO: The phase of Pod pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:46:45.745: INFO: Pod "pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f": Phase="Running", Reason="", readiness=true. Elapsed: 2.005468284s
    Jan 30 08:46:45.745: INFO: The phase of Pod pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f is Running (Ready = true)
    Jan 30 08:46:45.745: INFO: Pod "pod-projected-configmaps-350e9842-bd99-4ae6-8c4b-35c36908d54f" satisfied condition "running and ready"
    STEP: Updating configmap projected-configmap-test-upd-69562c92-1bf1-4738-998f-01ca5e016a47 01/30/23 08:46:45.77
    STEP: waiting to observe update in volume 01/30/23 08:46:45.774
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:46:47.782: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5663" for this suite. 01/30/23 08:46:47.784
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:46:47.79
Jan 30 08:46:47.790: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:46:47.791
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:46:47.803
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:46:47.805
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
Jan 30 08:46:47.813: INFO: Waiting up to 5m0s for pod "busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3" in namespace "kubelet-test-542" to be "running and ready"
Jan 30 08:46:47.815: INFO: Pod "busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3": Phase="Pending", Reason="", readiness=false. Elapsed: 1.971422ms
Jan 30 08:46:47.815: INFO: The phase of Pod busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:46:49.818: INFO: Pod "busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3": Phase="Running", Reason="", readiness=true. Elapsed: 2.005367607s
Jan 30 08:46:49.818: INFO: The phase of Pod busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3 is Running (Ready = true)
Jan 30 08:46:49.818: INFO: Pod "busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:46:49.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-542" for this suite. 01/30/23 08:46:49.831
------------------------------
â€¢ [2.060 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command in a pod
  test/e2e/common/node/kubelet.go:44
    should print the output to logs [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:46:47.79
    Jan 30 08:46:47.790: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:46:47.791
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:46:47.803
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:46:47.805
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should print the output to logs [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:52
    Jan 30 08:46:47.813: INFO: Waiting up to 5m0s for pod "busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3" in namespace "kubelet-test-542" to be "running and ready"
    Jan 30 08:46:47.815: INFO: Pod "busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3": Phase="Pending", Reason="", readiness=false. Elapsed: 1.971422ms
    Jan 30 08:46:47.815: INFO: The phase of Pod busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:46:49.818: INFO: Pod "busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3": Phase="Running", Reason="", readiness=true. Elapsed: 2.005367607s
    Jan 30 08:46:49.818: INFO: The phase of Pod busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3 is Running (Ready = true)
    Jan 30 08:46:49.818: INFO: Pod "busybox-scheduling-35f8106a-7002-475b-aff4-a6ce14bea9b3" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:46:49.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-542" for this suite. 01/30/23 08:46:49.831
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:46:49.85
Jan 30 08:46:49.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:46:49.85
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:46:49.86
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:46:49.863
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:46:49.874
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:46:50.082
STEP: Deploying the webhook pod 01/30/23 08:46:50.095
STEP: Wait for the deployment to be ready 01/30/23 08:46:50.105
Jan 30 08:46:50.111: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 08:46:52.119: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 46, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 46, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/30/23 08:46:54.121
STEP: Verifying the service has paired with the endpoint 01/30/23 08:46:54.136
Jan 30 08:46:55.137: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
STEP: Registering the crd webhook via the AdmissionRegistration API 01/30/23 08:46:55.14
STEP: Creating a custom resource definition that should be denied by the webhook 01/30/23 08:46:55.166
Jan 30 08:46:55.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:46:55.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1267" for this suite. 01/30/23 08:46:55.245
STEP: Destroying namespace "webhook-1267-markers" for this suite. 01/30/23 08:46:55.254
------------------------------
â€¢ [SLOW TEST] [5.410 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:46:49.85
    Jan 30 08:46:49.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:46:49.85
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:46:49.86
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:46:49.863
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:46:49.874
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:46:50.082
    STEP: Deploying the webhook pod 01/30/23 08:46:50.095
    STEP: Wait for the deployment to be ready 01/30/23 08:46:50.105
    Jan 30 08:46:50.111: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 30 08:46:52.119: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 8, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 46, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 46, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/30/23 08:46:54.121
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:46:54.136
    Jan 30 08:46:55.137: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should deny crd creation [Conformance]
      test/e2e/apimachinery/webhook.go:308
    STEP: Registering the crd webhook via the AdmissionRegistration API 01/30/23 08:46:55.14
    STEP: Creating a custom resource definition that should be denied by the webhook 01/30/23 08:46:55.166
    Jan 30 08:46:55.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:46:55.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1267" for this suite. 01/30/23 08:46:55.245
    STEP: Destroying namespace "webhook-1267-markers" for this suite. 01/30/23 08:46:55.254
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:46:55.26
Jan 30 08:46:55.260: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 08:46:55.261
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:46:55.277
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:46:55.28
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
STEP: Create set of pods 01/30/23 08:46:55.283
Jan 30 08:46:55.291: INFO: created test-pod-1
Jan 30 08:46:55.299: INFO: created test-pod-2
Jan 30 08:46:55.307: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running 01/30/23 08:46:55.307
Jan 30 08:46:55.307: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-3959' to be running and ready
Jan 30 08:46:55.318: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:46:55.318: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:46:55.318: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jan 30 08:46:55.318: INFO: 0 / 3 pods in namespace 'pods-3959' are running and ready (0 seconds elapsed)
Jan 30 08:46:55.318: INFO: expected 0 pod replicas in namespace 'pods-3959', 0 are Running and Ready.
Jan 30 08:46:55.318: INFO: POD         NODE         PHASE    GRACE  CONDITIONS
Jan 30 08:46:55.318: INFO: test-pod-1  tce-worker2  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC  }]
Jan 30 08:46:55.318: INFO: test-pod-2  tce-worker2  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC  }]
Jan 30 08:46:55.318: INFO: test-pod-3  tce-worker   Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC  }]
Jan 30 08:46:55.318: INFO: 
Jan 30 08:46:57.324: INFO: 3 / 3 pods in namespace 'pods-3959' are running and ready (2 seconds elapsed)
Jan 30 08:46:57.324: INFO: expected 0 pod replicas in namespace 'pods-3959', 0 are Running and Ready.
STEP: waiting for all pods to be deleted 01/30/23 08:46:57.341
Jan 30 08:46:57.345: INFO: Pod quantity 3 is different from expected quantity 0
Jan 30 08:46:58.349: INFO: Pod quantity 3 is different from expected quantity 0
Jan 30 08:46:59.348: INFO: Pod quantity 2 is different from expected quantity 0
Jan 30 08:47:00.348: INFO: Pod quantity 1 is different from expected quantity 0
Jan 30 08:47:01.348: INFO: Pod quantity 1 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 08:47:02.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3959" for this suite. 01/30/23 08:47:02.35
------------------------------
â€¢ [SLOW TEST] [7.097 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:46:55.26
    Jan 30 08:46:55.260: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 08:46:55.261
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:46:55.277
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:46:55.28
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should delete a collection of pods [Conformance]
      test/e2e/common/node/pods.go:845
    STEP: Create set of pods 01/30/23 08:46:55.283
    Jan 30 08:46:55.291: INFO: created test-pod-1
    Jan 30 08:46:55.299: INFO: created test-pod-2
    Jan 30 08:46:55.307: INFO: created test-pod-3
    STEP: waiting for all 3 pods to be running 01/30/23 08:46:55.307
    Jan 30 08:46:55.307: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-3959' to be running and ready
    Jan 30 08:46:55.318: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 30 08:46:55.318: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 30 08:46:55.318: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Jan 30 08:46:55.318: INFO: 0 / 3 pods in namespace 'pods-3959' are running and ready (0 seconds elapsed)
    Jan 30 08:46:55.318: INFO: expected 0 pod replicas in namespace 'pods-3959', 0 are Running and Ready.
    Jan 30 08:46:55.318: INFO: POD         NODE         PHASE    GRACE  CONDITIONS
    Jan 30 08:46:55.318: INFO: test-pod-1  tce-worker2  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC  }]
    Jan 30 08:46:55.318: INFO: test-pod-2  tce-worker2  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC  }]
    Jan 30 08:46:55.318: INFO: test-pod-3  tce-worker   Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:46:55 +0000 UTC  }]
    Jan 30 08:46:55.318: INFO: 
    Jan 30 08:46:57.324: INFO: 3 / 3 pods in namespace 'pods-3959' are running and ready (2 seconds elapsed)
    Jan 30 08:46:57.324: INFO: expected 0 pod replicas in namespace 'pods-3959', 0 are Running and Ready.
    STEP: waiting for all pods to be deleted 01/30/23 08:46:57.341
    Jan 30 08:46:57.345: INFO: Pod quantity 3 is different from expected quantity 0
    Jan 30 08:46:58.349: INFO: Pod quantity 3 is different from expected quantity 0
    Jan 30 08:46:59.348: INFO: Pod quantity 2 is different from expected quantity 0
    Jan 30 08:47:00.348: INFO: Pod quantity 1 is different from expected quantity 0
    Jan 30 08:47:01.348: INFO: Pod quantity 1 is different from expected quantity 0
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:47:02.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3959" for this suite. 01/30/23 08:47:02.35
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:47:02.358
Jan 30 08:47:02.358: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:47:02.358
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:02.375
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:02.377
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:47:02.388
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:47:02.591
STEP: Deploying the webhook pod 01/30/23 08:47:02.604
STEP: Wait for the deployment to be ready 01/30/23 08:47:02.617
Jan 30 08:47:02.624: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:47:04.632
STEP: Verifying the service has paired with the endpoint 01/30/23 08:47:04.654
Jan 30 08:47:05.655: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
Jan 30 08:47:05.657: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3324-crds.webhook.example.com via the AdmissionRegistration API 01/30/23 08:47:06.179
STEP: Creating a custom resource while v1 is storage version 01/30/23 08:47:06.195
STEP: Patching Custom Resource Definition to set v2 as storage 01/30/23 08:47:08.243
STEP: Patching the custom resource while v2 is storage version 01/30/23 08:47:08.259
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:47:08.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2158" for this suite. 01/30/23 08:47:08.859
STEP: Destroying namespace "webhook-2158-markers" for this suite. 01/30/23 08:47:08.864
------------------------------
â€¢ [SLOW TEST] [6.517 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:47:02.358
    Jan 30 08:47:02.358: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:47:02.358
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:02.375
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:02.377
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:47:02.388
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:47:02.591
    STEP: Deploying the webhook pod 01/30/23 08:47:02.604
    STEP: Wait for the deployment to be ready 01/30/23 08:47:02.617
    Jan 30 08:47:02.624: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:47:04.632
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:47:04.654
    Jan 30 08:47:05.655: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with different stored version [Conformance]
      test/e2e/apimachinery/webhook.go:323
    Jan 30 08:47:05.657: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3324-crds.webhook.example.com via the AdmissionRegistration API 01/30/23 08:47:06.179
    STEP: Creating a custom resource while v1 is storage version 01/30/23 08:47:06.195
    STEP: Patching Custom Resource Definition to set v2 as storage 01/30/23 08:47:08.243
    STEP: Patching the custom resource while v2 is storage version 01/30/23 08:47:08.259
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:47:08.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2158" for this suite. 01/30/23 08:47:08.859
    STEP: Destroying namespace "webhook-2158-markers" for this suite. 01/30/23 08:47:08.864
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:47:08.875
Jan 30 08:47:08.875: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:47:08.876
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:08.904
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:08.912
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:47:08.935
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:47:09.456
STEP: Deploying the webhook pod 01/30/23 08:47:09.463
STEP: Wait for the deployment to be ready 01/30/23 08:47:09.473
Jan 30 08:47:09.479: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:47:11.486
STEP: Verifying the service has paired with the endpoint 01/30/23 08:47:11.509
Jan 30 08:47:12.510: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
STEP: Setting timeout (1s) shorter than webhook latency (5s) 01/30/23 08:47:12.512
STEP: Registering slow webhook via the AdmissionRegistration API 01/30/23 08:47:12.513
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 01/30/23 08:47:12.529
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 01/30/23 08:47:13.536
STEP: Registering slow webhook via the AdmissionRegistration API 01/30/23 08:47:13.536
STEP: Having no error when timeout is longer than webhook latency 01/30/23 08:47:14.562
STEP: Registering slow webhook via the AdmissionRegistration API 01/30/23 08:47:14.562
STEP: Having no error when timeout is empty (defaulted to 10s in v1) 01/30/23 08:47:19.602
STEP: Registering slow webhook via the AdmissionRegistration API 01/30/23 08:47:19.602
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:47:24.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9807" for this suite. 01/30/23 08:47:24.699
STEP: Destroying namespace "webhook-9807-markers" for this suite. 01/30/23 08:47:24.707
------------------------------
â€¢ [SLOW TEST] [15.850 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:47:08.875
    Jan 30 08:47:08.875: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:47:08.876
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:08.904
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:08.912
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:47:08.935
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:47:09.456
    STEP: Deploying the webhook pod 01/30/23 08:47:09.463
    STEP: Wait for the deployment to be ready 01/30/23 08:47:09.473
    Jan 30 08:47:09.479: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:47:11.486
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:47:11.509
    Jan 30 08:47:12.510: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should honor timeout [Conformance]
      test/e2e/apimachinery/webhook.go:381
    STEP: Setting timeout (1s) shorter than webhook latency (5s) 01/30/23 08:47:12.512
    STEP: Registering slow webhook via the AdmissionRegistration API 01/30/23 08:47:12.513
    STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 01/30/23 08:47:12.529
    STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 01/30/23 08:47:13.536
    STEP: Registering slow webhook via the AdmissionRegistration API 01/30/23 08:47:13.536
    STEP: Having no error when timeout is longer than webhook latency 01/30/23 08:47:14.562
    STEP: Registering slow webhook via the AdmissionRegistration API 01/30/23 08:47:14.562
    STEP: Having no error when timeout is empty (defaulted to 10s in v1) 01/30/23 08:47:19.602
    STEP: Registering slow webhook via the AdmissionRegistration API 01/30/23 08:47:19.602
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:47:24.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9807" for this suite. 01/30/23 08:47:24.699
    STEP: Destroying namespace "webhook-9807-markers" for this suite. 01/30/23 08:47:24.707
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial]
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:47:24.726
Jan 30 08:47:24.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename controllerrevisions 01/30/23 08:47:24.727
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:24.765
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:24.772
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:93
[It] should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
STEP: Creating DaemonSet "e2e-xh7g2-daemon-set" 01/30/23 08:47:24.803
STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 08:47:24.814
Jan 30 08:47:24.821: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:47:24.827: INFO: Number of nodes with available pods controlled by daemonset e2e-xh7g2-daemon-set: 0
Jan 30 08:47:24.827: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:47:25.832: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:47:25.835: INFO: Number of nodes with available pods controlled by daemonset e2e-xh7g2-daemon-set: 0
Jan 30 08:47:25.835: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:47:26.830: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:47:26.833: INFO: Number of nodes with available pods controlled by daemonset e2e-xh7g2-daemon-set: 2
Jan 30 08:47:26.833: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-xh7g2-daemon-set
STEP: Confirm DaemonSet "e2e-xh7g2-daemon-set" successfully created with "daemonset-name=e2e-xh7g2-daemon-set" label 01/30/23 08:47:26.836
STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-xh7g2-daemon-set" 01/30/23 08:47:26.841
Jan 30 08:47:26.844: INFO: Located ControllerRevision: "e2e-xh7g2-daemon-set-775668c77"
STEP: Patching ControllerRevision "e2e-xh7g2-daemon-set-775668c77" 01/30/23 08:47:26.846
Jan 30 08:47:26.855: INFO: e2e-xh7g2-daemon-set-775668c77 has been patched
STEP: Create a new ControllerRevision 01/30/23 08:47:26.855
Jan 30 08:47:26.862: INFO: Created ControllerRevision: e2e-xh7g2-daemon-set-fc69d5f9c
STEP: Confirm that there are two ControllerRevisions 01/30/23 08:47:26.862
Jan 30 08:47:26.862: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 30 08:47:26.865: INFO: Found 2 ControllerRevisions
STEP: Deleting ControllerRevision "e2e-xh7g2-daemon-set-775668c77" 01/30/23 08:47:26.865
STEP: Confirm that there is only one ControllerRevision 01/30/23 08:47:26.873
Jan 30 08:47:26.873: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 30 08:47:26.876: INFO: Found 1 ControllerRevisions
STEP: Updating ControllerRevision "e2e-xh7g2-daemon-set-fc69d5f9c" 01/30/23 08:47:26.884
Jan 30 08:47:26.893: INFO: e2e-xh7g2-daemon-set-fc69d5f9c has been updated
STEP: Generate another ControllerRevision by patching the Daemonset 01/30/23 08:47:26.893
W0130 08:47:26.902084      24 warnings.go:70] unknown field "updateStrategy"
STEP: Confirm that there are two ControllerRevisions 01/30/23 08:47:26.902
Jan 30 08:47:26.902: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 30 08:47:27.906: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 30 08:47:27.909: INFO: Found 2 ControllerRevisions
STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-xh7g2-daemon-set-fc69d5f9c=updated" 01/30/23 08:47:27.909
STEP: Confirm that there is only one ControllerRevision 01/30/23 08:47:27.916
Jan 30 08:47:27.916: INFO: Requesting list of ControllerRevisions to confirm quantity
Jan 30 08:47:27.918: INFO: Found 1 ControllerRevisions
Jan 30 08:47:27.920: INFO: ControllerRevision "e2e-xh7g2-daemon-set-5bb47bc488" has revision 3
[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:58
STEP: Deleting DaemonSet "e2e-xh7g2-daemon-set" 01/30/23 08:47:27.922
STEP: deleting DaemonSet.extensions e2e-xh7g2-daemon-set in namespace controllerrevisions-6199, will wait for the garbage collector to delete the pods 01/30/23 08:47:27.922
Jan 30 08:47:27.980: INFO: Deleting DaemonSet.extensions e2e-xh7g2-daemon-set took: 4.970174ms
Jan 30 08:47:28.081: INFO: Terminating DaemonSet.extensions e2e-xh7g2-daemon-set pods took: 100.66402ms
Jan 30 08:47:29.383: INFO: Number of nodes with available pods controlled by daemonset e2e-xh7g2-daemon-set: 0
Jan 30 08:47:29.383: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-xh7g2-daemon-set
Jan 30 08:47:29.384: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11337"},"items":null}

Jan 30 08:47:29.386: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11337"},"items":null}

[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:47:29.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "controllerrevisions-6199" for this suite. 01/30/23 08:47:29.394
------------------------------
â€¢ [4.673 seconds]
[sig-apps] ControllerRevision [Serial]
test/e2e/apps/framework.go:23
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:47:24.726
    Jan 30 08:47:24.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename controllerrevisions 01/30/23 08:47:24.727
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:24.765
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:24.772
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:93
    [It] should manage the lifecycle of a ControllerRevision [Conformance]
      test/e2e/apps/controller_revision.go:124
    STEP: Creating DaemonSet "e2e-xh7g2-daemon-set" 01/30/23 08:47:24.803
    STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 08:47:24.814
    Jan 30 08:47:24.821: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:47:24.827: INFO: Number of nodes with available pods controlled by daemonset e2e-xh7g2-daemon-set: 0
    Jan 30 08:47:24.827: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:47:25.832: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:47:25.835: INFO: Number of nodes with available pods controlled by daemonset e2e-xh7g2-daemon-set: 0
    Jan 30 08:47:25.835: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:47:26.830: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:47:26.833: INFO: Number of nodes with available pods controlled by daemonset e2e-xh7g2-daemon-set: 2
    Jan 30 08:47:26.833: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-xh7g2-daemon-set
    STEP: Confirm DaemonSet "e2e-xh7g2-daemon-set" successfully created with "daemonset-name=e2e-xh7g2-daemon-set" label 01/30/23 08:47:26.836
    STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-xh7g2-daemon-set" 01/30/23 08:47:26.841
    Jan 30 08:47:26.844: INFO: Located ControllerRevision: "e2e-xh7g2-daemon-set-775668c77"
    STEP: Patching ControllerRevision "e2e-xh7g2-daemon-set-775668c77" 01/30/23 08:47:26.846
    Jan 30 08:47:26.855: INFO: e2e-xh7g2-daemon-set-775668c77 has been patched
    STEP: Create a new ControllerRevision 01/30/23 08:47:26.855
    Jan 30 08:47:26.862: INFO: Created ControllerRevision: e2e-xh7g2-daemon-set-fc69d5f9c
    STEP: Confirm that there are two ControllerRevisions 01/30/23 08:47:26.862
    Jan 30 08:47:26.862: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 30 08:47:26.865: INFO: Found 2 ControllerRevisions
    STEP: Deleting ControllerRevision "e2e-xh7g2-daemon-set-775668c77" 01/30/23 08:47:26.865
    STEP: Confirm that there is only one ControllerRevision 01/30/23 08:47:26.873
    Jan 30 08:47:26.873: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 30 08:47:26.876: INFO: Found 1 ControllerRevisions
    STEP: Updating ControllerRevision "e2e-xh7g2-daemon-set-fc69d5f9c" 01/30/23 08:47:26.884
    Jan 30 08:47:26.893: INFO: e2e-xh7g2-daemon-set-fc69d5f9c has been updated
    STEP: Generate another ControllerRevision by patching the Daemonset 01/30/23 08:47:26.893
    W0130 08:47:26.902084      24 warnings.go:70] unknown field "updateStrategy"
    STEP: Confirm that there are two ControllerRevisions 01/30/23 08:47:26.902
    Jan 30 08:47:26.902: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 30 08:47:27.906: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 30 08:47:27.909: INFO: Found 2 ControllerRevisions
    STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-xh7g2-daemon-set-fc69d5f9c=updated" 01/30/23 08:47:27.909
    STEP: Confirm that there is only one ControllerRevision 01/30/23 08:47:27.916
    Jan 30 08:47:27.916: INFO: Requesting list of ControllerRevisions to confirm quantity
    Jan 30 08:47:27.918: INFO: Found 1 ControllerRevisions
    Jan 30 08:47:27.920: INFO: ControllerRevision "e2e-xh7g2-daemon-set-5bb47bc488" has revision 3
    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:58
    STEP: Deleting DaemonSet "e2e-xh7g2-daemon-set" 01/30/23 08:47:27.922
    STEP: deleting DaemonSet.extensions e2e-xh7g2-daemon-set in namespace controllerrevisions-6199, will wait for the garbage collector to delete the pods 01/30/23 08:47:27.922
    Jan 30 08:47:27.980: INFO: Deleting DaemonSet.extensions e2e-xh7g2-daemon-set took: 4.970174ms
    Jan 30 08:47:28.081: INFO: Terminating DaemonSet.extensions e2e-xh7g2-daemon-set pods took: 100.66402ms
    Jan 30 08:47:29.383: INFO: Number of nodes with available pods controlled by daemonset e2e-xh7g2-daemon-set: 0
    Jan 30 08:47:29.383: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-xh7g2-daemon-set
    Jan 30 08:47:29.384: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11337"},"items":null}

    Jan 30 08:47:29.386: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11337"},"items":null}

    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:47:29.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "controllerrevisions-6199" for this suite. 01/30/23 08:47:29.394
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:47:29.399
Jan 30 08:47:29.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename csiinlinevolumes 01/30/23 08:47:29.4
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:29.413
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:29.415
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
STEP: creating 01/30/23 08:47:29.418
STEP: getting 01/30/23 08:47:29.43
STEP: listing in namespace 01/30/23 08:47:29.438
STEP: patching 01/30/23 08:47:29.44
STEP: deleting 01/30/23 08:47:29.453
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:47:29.463: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-8293" for this suite. 01/30/23 08:47:29.467
------------------------------
â€¢ [0.073 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:47:29.399
    Jan 30 08:47:29.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename csiinlinevolumes 01/30/23 08:47:29.4
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:29.413
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:29.415
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSIVolumeSource in Pod API [Conformance]
      test/e2e/storage/csi_inline.go:131
    STEP: creating 01/30/23 08:47:29.418
    STEP: getting 01/30/23 08:47:29.43
    STEP: listing in namespace 01/30/23 08:47:29.438
    STEP: patching 01/30/23 08:47:29.44
    STEP: deleting 01/30/23 08:47:29.453
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:47:29.463: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-8293" for this suite. 01/30/23 08:47:29.467
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:47:29.473
Jan 30 08:47:29.474: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-probe 01/30/23 08:47:29.474
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:29.487
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:29.489
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 30 08:48:29.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-2651" for this suite. 01/30/23 08:48:29.509
------------------------------
â€¢ [SLOW TEST] [60.041 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:47:29.473
    Jan 30 08:47:29.474: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-probe 01/30/23 08:47:29.474
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:47:29.487
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:47:29.489
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:108
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:48:29.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-2651" for this suite. 01/30/23 08:48:29.509
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:48:29.515
Jan 30 08:48:29.515: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:48:29.516
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:29.526
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:29.529
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
STEP: Creating secret with name s-test-opt-del-0e03e62e-8447-482e-891a-1c61cbb8ca72 01/30/23 08:48:29.535
STEP: Creating secret with name s-test-opt-upd-7b843e54-7804-4b98-af4e-8fac0e40a8ad 01/30/23 08:48:29.539
STEP: Creating the pod 01/30/23 08:48:29.543
Jan 30 08:48:29.551: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca" in namespace "projected-4050" to be "running and ready"
Jan 30 08:48:29.553: INFO: Pod "pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.693082ms
Jan 30 08:48:29.553: INFO: The phase of Pod pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:48:31.558: INFO: Pod "pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca": Phase="Running", Reason="", readiness=true. Elapsed: 2.007639485s
Jan 30 08:48:31.558: INFO: The phase of Pod pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca is Running (Ready = true)
Jan 30 08:48:31.558: INFO: Pod "pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-0e03e62e-8447-482e-891a-1c61cbb8ca72 01/30/23 08:48:31.586
STEP: Updating secret s-test-opt-upd-7b843e54-7804-4b98-af4e-8fac0e40a8ad 01/30/23 08:48:31.621
STEP: Creating secret with name s-test-opt-create-2089279e-f9d0-4daa-85e0-fb78ac9e0153 01/30/23 08:48:31.629
STEP: waiting to observe update in volume 01/30/23 08:48:31.633
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 30 08:48:33.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4050" for this suite. 01/30/23 08:48:33.654
------------------------------
â€¢ [4.155 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:48:29.515
    Jan 30 08:48:29.515: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:48:29.516
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:29.526
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:29.529
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:215
    STEP: Creating secret with name s-test-opt-del-0e03e62e-8447-482e-891a-1c61cbb8ca72 01/30/23 08:48:29.535
    STEP: Creating secret with name s-test-opt-upd-7b843e54-7804-4b98-af4e-8fac0e40a8ad 01/30/23 08:48:29.539
    STEP: Creating the pod 01/30/23 08:48:29.543
    Jan 30 08:48:29.551: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca" in namespace "projected-4050" to be "running and ready"
    Jan 30 08:48:29.553: INFO: Pod "pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.693082ms
    Jan 30 08:48:29.553: INFO: The phase of Pod pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:48:31.558: INFO: Pod "pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca": Phase="Running", Reason="", readiness=true. Elapsed: 2.007639485s
    Jan 30 08:48:31.558: INFO: The phase of Pod pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca is Running (Ready = true)
    Jan 30 08:48:31.558: INFO: Pod "pod-projected-secrets-fbf6612a-f59f-485b-8bb9-c3eb3e61f6ca" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-0e03e62e-8447-482e-891a-1c61cbb8ca72 01/30/23 08:48:31.586
    STEP: Updating secret s-test-opt-upd-7b843e54-7804-4b98-af4e-8fac0e40a8ad 01/30/23 08:48:31.621
    STEP: Creating secret with name s-test-opt-create-2089279e-f9d0-4daa-85e0-fb78ac9e0153 01/30/23 08:48:31.629
    STEP: waiting to observe update in volume 01/30/23 08:48:31.633
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:48:33.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4050" for this suite. 01/30/23 08:48:33.654
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
[BeforeEach] [sig-network] EndpointSliceMirroring
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:48:33.671
Jan 30 08:48:33.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename endpointslicemirroring 01/30/23 08:48:33.672
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:33.688
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:33.691
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
STEP: mirroring a new custom Endpoint 01/30/23 08:48:33.703
Jan 30 08:48:33.716: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint 01/30/23 08:48:35.719
Jan 30 08:48:35.738: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint 01/30/23 08:48:37.741
Jan 30 08:48:37.749: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/node/init/init.go:32
Jan 30 08:48:39.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslicemirroring-802" for this suite. 01/30/23 08:48:39.757
------------------------------
â€¢ [SLOW TEST] [6.095 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSliceMirroring
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:48:33.671
    Jan 30 08:48:33.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename endpointslicemirroring 01/30/23 08:48:33.672
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:33.688
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:33.691
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/network/endpointslicemirroring.go:41
    [It] should mirror a custom Endpoints resource through create update and delete [Conformance]
      test/e2e/network/endpointslicemirroring.go:53
    STEP: mirroring a new custom Endpoint 01/30/23 08:48:33.703
    Jan 30 08:48:33.716: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
    STEP: mirroring an update to a custom Endpoint 01/30/23 08:48:35.719
    Jan 30 08:48:35.738: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
    STEP: mirroring deletion of a custom Endpoint 01/30/23 08:48:37.741
    Jan 30 08:48:37.749: INFO: Waiting for 0 EndpointSlices to exist, got 1
    [AfterEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:48:39.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslicemirroring-802" for this suite. 01/30/23 08:48:39.757
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:48:39.767
Jan 30 08:48:39.767: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 08:48:39.771
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:39.793
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:39.796
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
STEP: Creating a pod to test downward API volume plugin 01/30/23 08:48:39.8
Jan 30 08:48:39.810: INFO: Waiting up to 5m0s for pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8" in namespace "downward-api-3665" to be "Succeeded or Failed"
Jan 30 08:48:39.813: INFO: Pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.10942ms
Jan 30 08:48:41.816: INFO: Pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8": Phase="Running", Reason="", readiness=false. Elapsed: 2.006055947s
Jan 30 08:48:43.817: INFO: Pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006726115s
STEP: Saw pod success 01/30/23 08:48:43.817
Jan 30 08:48:43.817: INFO: Pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8" satisfied condition "Succeeded or Failed"
Jan 30 08:48:43.819: INFO: Trying to get logs from node tce-worker pod downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8 container client-container: <nil>
STEP: delete the pod 01/30/23 08:48:43.831
Jan 30 08:48:43.852: INFO: Waiting for pod downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8 to disappear
Jan 30 08:48:43.854: INFO: Pod downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 08:48:43.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3665" for this suite. 01/30/23 08:48:43.857
------------------------------
â€¢ [4.102 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:48:39.767
    Jan 30 08:48:39.767: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 08:48:39.771
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:39.793
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:39.796
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:207
    STEP: Creating a pod to test downward API volume plugin 01/30/23 08:48:39.8
    Jan 30 08:48:39.810: INFO: Waiting up to 5m0s for pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8" in namespace "downward-api-3665" to be "Succeeded or Failed"
    Jan 30 08:48:39.813: INFO: Pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.10942ms
    Jan 30 08:48:41.816: INFO: Pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8": Phase="Running", Reason="", readiness=false. Elapsed: 2.006055947s
    Jan 30 08:48:43.817: INFO: Pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006726115s
    STEP: Saw pod success 01/30/23 08:48:43.817
    Jan 30 08:48:43.817: INFO: Pod "downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8" satisfied condition "Succeeded or Failed"
    Jan 30 08:48:43.819: INFO: Trying to get logs from node tce-worker pod downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8 container client-container: <nil>
    STEP: delete the pod 01/30/23 08:48:43.831
    Jan 30 08:48:43.852: INFO: Waiting for pod downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8 to disappear
    Jan 30 08:48:43.854: INFO: Pod downwardapi-volume-47c7bf2d-4bab-43d5-bf7c-372bb50d73b8 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:48:43.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3665" for this suite. 01/30/23 08:48:43.857
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:48:43.87
Jan 30 08:48:43.870: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename containers 01/30/23 08:48:43.872
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:43.887
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:43.889
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
STEP: Creating a pod to test override arguments 01/30/23 08:48:43.892
Jan 30 08:48:43.900: INFO: Waiting up to 5m0s for pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6" in namespace "containers-9008" to be "Succeeded or Failed"
Jan 30 08:48:43.904: INFO: Pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.227187ms
Jan 30 08:48:45.907: INFO: Pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006229388s
Jan 30 08:48:47.907: INFO: Pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00692569s
STEP: Saw pod success 01/30/23 08:48:47.907
Jan 30 08:48:47.907: INFO: Pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6" satisfied condition "Succeeded or Failed"
Jan 30 08:48:47.910: INFO: Trying to get logs from node tce-worker2 pod client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 08:48:47.914
Jan 30 08:48:47.923: INFO: Waiting for pod client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6 to disappear
Jan 30 08:48:47.925: INFO: Pod client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Jan 30 08:48:47.925: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-9008" for this suite. 01/30/23 08:48:47.928
------------------------------
â€¢ [4.063 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:48:43.87
    Jan 30 08:48:43.870: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename containers 01/30/23 08:48:43.872
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:43.887
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:43.889
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:59
    STEP: Creating a pod to test override arguments 01/30/23 08:48:43.892
    Jan 30 08:48:43.900: INFO: Waiting up to 5m0s for pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6" in namespace "containers-9008" to be "Succeeded or Failed"
    Jan 30 08:48:43.904: INFO: Pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.227187ms
    Jan 30 08:48:45.907: INFO: Pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006229388s
    Jan 30 08:48:47.907: INFO: Pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00692569s
    STEP: Saw pod success 01/30/23 08:48:47.907
    Jan 30 08:48:47.907: INFO: Pod "client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6" satisfied condition "Succeeded or Failed"
    Jan 30 08:48:47.910: INFO: Trying to get logs from node tce-worker2 pod client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 08:48:47.914
    Jan 30 08:48:47.923: INFO: Waiting for pod client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6 to disappear
    Jan 30 08:48:47.925: INFO: Pod client-containers-621e02ef-4c63-4b72-b4e8-29dadfd720e6 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:48:47.925: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-9008" for this suite. 01/30/23 08:48:47.928
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:48:47.935
Jan 30 08:48:47.935: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename dns 01/30/23 08:48:47.936
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:47.95
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:47.953
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-14.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-14.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
 01/30/23 08:48:47.956
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-14.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-14.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
 01/30/23 08:48:47.957
STEP: creating a pod to probe /etc/hosts 01/30/23 08:48:47.957
STEP: submitting the pod to kubernetes 01/30/23 08:48:47.957
Jan 30 08:48:47.966: INFO: Waiting up to 15m0s for pod "dns-test-2e800493-0dec-43e2-b522-e292f27fa946" in namespace "dns-14" to be "running"
Jan 30 08:48:47.969: INFO: Pod "dns-test-2e800493-0dec-43e2-b522-e292f27fa946": Phase="Pending", Reason="", readiness=false. Elapsed: 2.885052ms
Jan 30 08:48:49.973: INFO: Pod "dns-test-2e800493-0dec-43e2-b522-e292f27fa946": Phase="Running", Reason="", readiness=true. Elapsed: 2.006834727s
Jan 30 08:48:49.973: INFO: Pod "dns-test-2e800493-0dec-43e2-b522-e292f27fa946" satisfied condition "running"
STEP: retrieving the pod 01/30/23 08:48:49.973
STEP: looking for the results for each expected name from probers 01/30/23 08:48:49.975
Jan 30 08:48:49.985: INFO: DNS probes using dns-14/dns-test-2e800493-0dec-43e2-b522-e292f27fa946 succeeded

STEP: deleting the pod 01/30/23 08:48:49.985
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 30 08:48:49.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-14" for this suite. 01/30/23 08:48:49.999
------------------------------
â€¢ [2.071 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:48:47.935
    Jan 30 08:48:47.935: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename dns 01/30/23 08:48:47.936
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:47.95
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:47.953
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide /etc/hosts entries for the cluster [Conformance]
      test/e2e/network/dns.go:117
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-14.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-14.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
     01/30/23 08:48:47.956
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-14.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-14.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
     01/30/23 08:48:47.957
    STEP: creating a pod to probe /etc/hosts 01/30/23 08:48:47.957
    STEP: submitting the pod to kubernetes 01/30/23 08:48:47.957
    Jan 30 08:48:47.966: INFO: Waiting up to 15m0s for pod "dns-test-2e800493-0dec-43e2-b522-e292f27fa946" in namespace "dns-14" to be "running"
    Jan 30 08:48:47.969: INFO: Pod "dns-test-2e800493-0dec-43e2-b522-e292f27fa946": Phase="Pending", Reason="", readiness=false. Elapsed: 2.885052ms
    Jan 30 08:48:49.973: INFO: Pod "dns-test-2e800493-0dec-43e2-b522-e292f27fa946": Phase="Running", Reason="", readiness=true. Elapsed: 2.006834727s
    Jan 30 08:48:49.973: INFO: Pod "dns-test-2e800493-0dec-43e2-b522-e292f27fa946" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 08:48:49.973
    STEP: looking for the results for each expected name from probers 01/30/23 08:48:49.975
    Jan 30 08:48:49.985: INFO: DNS probes using dns-14/dns-test-2e800493-0dec-43e2-b522-e292f27fa946 succeeded

    STEP: deleting the pod 01/30/23 08:48:49.985
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:48:49.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-14" for this suite. 01/30/23 08:48:49.999
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:48:50.007
Jan 30 08:48:50.007: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:48:50.008
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:50.024
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:50.028
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
STEP: Creating configMap with name configmap-test-upd-292c1a76-f172-4d89-ac4c-7f84afd15a47 01/30/23 08:48:50.034
STEP: Creating the pod 01/30/23 08:48:50.039
Jan 30 08:48:50.047: INFO: Waiting up to 5m0s for pod "pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332" in namespace "configmap-4768" to be "running and ready"
Jan 30 08:48:50.050: INFO: Pod "pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332": Phase="Pending", Reason="", readiness=false. Elapsed: 3.221693ms
Jan 30 08:48:50.051: INFO: The phase of Pod pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:48:52.056: INFO: Pod "pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332": Phase="Running", Reason="", readiness=true. Elapsed: 2.009014161s
Jan 30 08:48:52.056: INFO: The phase of Pod pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332 is Running (Ready = true)
Jan 30 08:48:52.056: INFO: Pod "pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332" satisfied condition "running and ready"
STEP: Updating configmap configmap-test-upd-292c1a76-f172-4d89-ac4c-7f84afd15a47 01/30/23 08:48:52.063
STEP: waiting to observe update in volume 01/30/23 08:48:52.07
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:48:54.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4768" for this suite. 01/30/23 08:48:54.09
------------------------------
â€¢ [4.097 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:48:50.007
    Jan 30 08:48:50.007: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:48:50.008
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:50.024
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:50.028
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:124
    STEP: Creating configMap with name configmap-test-upd-292c1a76-f172-4d89-ac4c-7f84afd15a47 01/30/23 08:48:50.034
    STEP: Creating the pod 01/30/23 08:48:50.039
    Jan 30 08:48:50.047: INFO: Waiting up to 5m0s for pod "pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332" in namespace "configmap-4768" to be "running and ready"
    Jan 30 08:48:50.050: INFO: Pod "pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332": Phase="Pending", Reason="", readiness=false. Elapsed: 3.221693ms
    Jan 30 08:48:50.051: INFO: The phase of Pod pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:48:52.056: INFO: Pod "pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332": Phase="Running", Reason="", readiness=true. Elapsed: 2.009014161s
    Jan 30 08:48:52.056: INFO: The phase of Pod pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332 is Running (Ready = true)
    Jan 30 08:48:52.056: INFO: Pod "pod-configmaps-39a0107f-b8e7-4ef9-a93e-04333dbb3332" satisfied condition "running and ready"
    STEP: Updating configmap configmap-test-upd-292c1a76-f172-4d89-ac4c-7f84afd15a47 01/30/23 08:48:52.063
    STEP: waiting to observe update in volume 01/30/23 08:48:52.07
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:48:54.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4768" for this suite. 01/30/23 08:48:54.09
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:48:54.105
Jan 30 08:48:54.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:48:54.106
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:54.142
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:54.148
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
STEP: Creating the pod 01/30/23 08:48:54.157
Jan 30 08:48:54.175: INFO: Waiting up to 5m0s for pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11" in namespace "projected-9621" to be "running and ready"
Jan 30 08:48:54.177: INFO: Pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.229656ms
Jan 30 08:48:54.177: INFO: The phase of Pod labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:48:56.182: INFO: Pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11": Phase="Running", Reason="", readiness=true. Elapsed: 2.006502446s
Jan 30 08:48:56.182: INFO: The phase of Pod labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11 is Running (Ready = true)
Jan 30 08:48:56.182: INFO: Pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11" satisfied condition "running and ready"
Jan 30 08:48:56.714: INFO: Successfully updated pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 08:49:00.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9621" for this suite. 01/30/23 08:49:00.732
------------------------------
â€¢ [SLOW TEST] [6.634 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:48:54.105
    Jan 30 08:48:54.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:48:54.106
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:48:54.142
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:48:54.148
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:130
    STEP: Creating the pod 01/30/23 08:48:54.157
    Jan 30 08:48:54.175: INFO: Waiting up to 5m0s for pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11" in namespace "projected-9621" to be "running and ready"
    Jan 30 08:48:54.177: INFO: Pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.229656ms
    Jan 30 08:48:54.177: INFO: The phase of Pod labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:48:56.182: INFO: Pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11": Phase="Running", Reason="", readiness=true. Elapsed: 2.006502446s
    Jan 30 08:48:56.182: INFO: The phase of Pod labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11 is Running (Ready = true)
    Jan 30 08:48:56.182: INFO: Pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11" satisfied condition "running and ready"
    Jan 30 08:48:56.714: INFO: Successfully updated pod "labelsupdate93025e14-dc7c-4b15-8beb-67e39dff7f11"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:49:00.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9621" for this suite. 01/30/23 08:49:00.732
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:49:00.74
Jan 30 08:49:00.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 08:49:00.741
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:00.754
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:00.756
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
STEP: Counting existing ResourceQuota 01/30/23 08:49:00.76
STEP: Creating a ResourceQuota 01/30/23 08:49:05.762
STEP: Ensuring resource quota status is calculated 01/30/23 08:49:05.78
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 08:49:07.783: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-258" for this suite. 01/30/23 08:49:07.786
------------------------------
â€¢ [SLOW TEST] [7.053 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:49:00.74
    Jan 30 08:49:00.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 08:49:00.741
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:00.754
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:00.756
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
      test/e2e/apimachinery/resource_quota.go:75
    STEP: Counting existing ResourceQuota 01/30/23 08:49:00.76
    STEP: Creating a ResourceQuota 01/30/23 08:49:05.762
    STEP: Ensuring resource quota status is calculated 01/30/23 08:49:05.78
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:49:07.783: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-258" for this suite. 01/30/23 08:49:07.786
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Lease
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[BeforeEach] [sig-node] Lease
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:49:07.794
Jan 30 08:49:07.794: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename lease-test 01/30/23 08:49:07.796
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:07.81
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:07.812
[BeforeEach] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:31
[It] lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[AfterEach] [sig-node] Lease
  test/e2e/framework/node/init/init.go:32
Jan 30 08:49:07.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Lease
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Lease
  tear down framework | framework.go:193
STEP: Destroying namespace "lease-test-8524" for this suite. 01/30/23 08:49:07.877
------------------------------
â€¢ [0.090 seconds]
[sig-node] Lease
test/e2e/common/node/framework.go:23
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Lease
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:49:07.794
    Jan 30 08:49:07.794: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename lease-test 01/30/23 08:49:07.796
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:07.81
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:07.812
    [BeforeEach] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:31
    [It] lease API should be available [Conformance]
      test/e2e/common/node/lease.go:72
    [AfterEach] [sig-node] Lease
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:49:07.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Lease
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Lease
      tear down framework | framework.go:193
    STEP: Destroying namespace "lease-test-8524" for this suite. 01/30/23 08:49:07.877
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:49:07.884
Jan 30 08:49:07.884: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:49:07.886
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:07.901
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:07.908
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
STEP: creating service endpoint-test2 in namespace services-6888 01/30/23 08:49:07.912
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[] 01/30/23 08:49:07.926
Jan 30 08:49:07.929: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Jan 30 08:49:08.935: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-6888 01/30/23 08:49:08.935
Jan 30 08:49:08.946: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-6888" to be "running and ready"
Jan 30 08:49:08.948: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.575801ms
Jan 30 08:49:08.948: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:49:10.954: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.008450588s
Jan 30 08:49:10.954: INFO: The phase of Pod pod1 is Running (Ready = true)
Jan 30 08:49:10.954: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[pod1:[80]] 01/30/23 08:49:10.957
Jan 30 08:49:10.966: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1 01/30/23 08:49:10.966
Jan 30 08:49:10.967: INFO: Creating new exec pod
Jan 30 08:49:10.974: INFO: Waiting up to 5m0s for pod "execpodm2xql" in namespace "services-6888" to be "running"
Jan 30 08:49:10.978: INFO: Pod "execpodm2xql": Phase="Pending", Reason="", readiness=false. Elapsed: 3.873559ms
Jan 30 08:49:12.982: INFO: Pod "execpodm2xql": Phase="Running", Reason="", readiness=true. Elapsed: 2.007268686s
Jan 30 08:49:12.982: INFO: Pod "execpodm2xql" satisfied condition "running"
Jan 30 08:49:13.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Jan 30 08:49:14.215: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 30 08:49:14.215: INFO: stdout: ""
Jan 30 08:49:14.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 10.96.152.154 80'
Jan 30 08:49:14.429: INFO: stderr: "+ nc -v -z -w 2 10.96.152.154 80\nConnection to 10.96.152.154 80 port [tcp/http] succeeded!\n"
Jan 30 08:49:14.429: INFO: stdout: ""
STEP: Creating pod pod2 in namespace services-6888 01/30/23 08:49:14.429
Jan 30 08:49:14.437: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-6888" to be "running and ready"
Jan 30 08:49:14.440: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.003223ms
Jan 30 08:49:14.440: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:49:16.445: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.008449882s
Jan 30 08:49:16.446: INFO: The phase of Pod pod2 is Running (Ready = true)
Jan 30 08:49:16.446: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[pod1:[80] pod2:[80]] 01/30/23 08:49:16.449
Jan 30 08:49:16.463: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2 01/30/23 08:49:16.463
Jan 30 08:49:17.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Jan 30 08:49:17.648: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 30 08:49:17.648: INFO: stdout: ""
Jan 30 08:49:17.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 10.96.152.154 80'
Jan 30 08:49:17.849: INFO: stderr: "+ nc -v -z -w 2 10.96.152.154 80\nConnection to 10.96.152.154 80 port [tcp/http] succeeded!\n"
Jan 30 08:49:17.849: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-6888 01/30/23 08:49:17.849
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[pod2:[80]] 01/30/23 08:49:17.877
Jan 30 08:49:17.893: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2 01/30/23 08:49:17.893
Jan 30 08:49:18.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Jan 30 08:49:19.028: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jan 30 08:49:19.028: INFO: stdout: ""
Jan 30 08:49:19.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 10.96.152.154 80'
Jan 30 08:49:19.136: INFO: stderr: "+ nc -v -z -w 2 10.96.152.154 80\nConnection to 10.96.152.154 80 port [tcp/http] succeeded!\n"
Jan 30 08:49:19.136: INFO: stdout: ""
STEP: Deleting pod pod2 in namespace services-6888 01/30/23 08:49:19.136
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[] 01/30/23 08:49:19.151
Jan 30 08:49:19.158: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:49:19.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6888" for this suite. 01/30/23 08:49:19.19
------------------------------
â€¢ [SLOW TEST] [11.322 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:49:07.884
    Jan 30 08:49:07.884: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:49:07.886
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:07.901
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:07.908
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve a basic endpoint from pods  [Conformance]
      test/e2e/network/service.go:787
    STEP: creating service endpoint-test2 in namespace services-6888 01/30/23 08:49:07.912
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[] 01/30/23 08:49:07.926
    Jan 30 08:49:07.929: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
    Jan 30 08:49:08.935: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-6888 01/30/23 08:49:08.935
    Jan 30 08:49:08.946: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-6888" to be "running and ready"
    Jan 30 08:49:08.948: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.575801ms
    Jan 30 08:49:08.948: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:49:10.954: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.008450588s
    Jan 30 08:49:10.954: INFO: The phase of Pod pod1 is Running (Ready = true)
    Jan 30 08:49:10.954: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[pod1:[80]] 01/30/23 08:49:10.957
    Jan 30 08:49:10.966: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[pod1:[80]]
    STEP: Checking if the Service forwards traffic to pod1 01/30/23 08:49:10.966
    Jan 30 08:49:10.967: INFO: Creating new exec pod
    Jan 30 08:49:10.974: INFO: Waiting up to 5m0s for pod "execpodm2xql" in namespace "services-6888" to be "running"
    Jan 30 08:49:10.978: INFO: Pod "execpodm2xql": Phase="Pending", Reason="", readiness=false. Elapsed: 3.873559ms
    Jan 30 08:49:12.982: INFO: Pod "execpodm2xql": Phase="Running", Reason="", readiness=true. Elapsed: 2.007268686s
    Jan 30 08:49:12.982: INFO: Pod "execpodm2xql" satisfied condition "running"
    Jan 30 08:49:13.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Jan 30 08:49:14.215: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Jan 30 08:49:14.215: INFO: stdout: ""
    Jan 30 08:49:14.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 10.96.152.154 80'
    Jan 30 08:49:14.429: INFO: stderr: "+ nc -v -z -w 2 10.96.152.154 80\nConnection to 10.96.152.154 80 port [tcp/http] succeeded!\n"
    Jan 30 08:49:14.429: INFO: stdout: ""
    STEP: Creating pod pod2 in namespace services-6888 01/30/23 08:49:14.429
    Jan 30 08:49:14.437: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-6888" to be "running and ready"
    Jan 30 08:49:14.440: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.003223ms
    Jan 30 08:49:14.440: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:49:16.445: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.008449882s
    Jan 30 08:49:16.446: INFO: The phase of Pod pod2 is Running (Ready = true)
    Jan 30 08:49:16.446: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[pod1:[80] pod2:[80]] 01/30/23 08:49:16.449
    Jan 30 08:49:16.463: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[pod1:[80] pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod1 and pod2 01/30/23 08:49:16.463
    Jan 30 08:49:17.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Jan 30 08:49:17.648: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Jan 30 08:49:17.648: INFO: stdout: ""
    Jan 30 08:49:17.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 10.96.152.154 80'
    Jan 30 08:49:17.849: INFO: stderr: "+ nc -v -z -w 2 10.96.152.154 80\nConnection to 10.96.152.154 80 port [tcp/http] succeeded!\n"
    Jan 30 08:49:17.849: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-6888 01/30/23 08:49:17.849
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[pod2:[80]] 01/30/23 08:49:17.877
    Jan 30 08:49:17.893: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod2 01/30/23 08:49:17.893
    Jan 30 08:49:18.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Jan 30 08:49:19.028: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Jan 30 08:49:19.028: INFO: stdout: ""
    Jan 30 08:49:19.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6888 exec execpodm2xql -- /bin/sh -x -c nc -v -z -w 2 10.96.152.154 80'
    Jan 30 08:49:19.136: INFO: stderr: "+ nc -v -z -w 2 10.96.152.154 80\nConnection to 10.96.152.154 80 port [tcp/http] succeeded!\n"
    Jan 30 08:49:19.136: INFO: stdout: ""
    STEP: Deleting pod pod2 in namespace services-6888 01/30/23 08:49:19.136
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6888 to expose endpoints map[] 01/30/23 08:49:19.151
    Jan 30 08:49:19.158: INFO: successfully validated that service endpoint-test2 in namespace services-6888 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:49:19.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6888" for this suite. 01/30/23 08:49:19.19
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:49:19.207
Jan 30 08:49:19.207: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 08:49:19.208
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:19.241
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:19.244
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
STEP: Creating a pod to test downward API volume plugin 01/30/23 08:49:19.247
Jan 30 08:49:19.257: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a" in namespace "downward-api-2676" to be "Succeeded or Failed"
Jan 30 08:49:19.259: INFO: Pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.499114ms
Jan 30 08:49:21.262: INFO: Pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005423338s
Jan 30 08:49:23.263: INFO: Pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006219329s
STEP: Saw pod success 01/30/23 08:49:23.263
Jan 30 08:49:23.263: INFO: Pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a" satisfied condition "Succeeded or Failed"
Jan 30 08:49:23.265: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a container client-container: <nil>
STEP: delete the pod 01/30/23 08:49:23.27
Jan 30 08:49:23.293: INFO: Waiting for pod downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a to disappear
Jan 30 08:49:23.296: INFO: Pod downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 08:49:23.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-2676" for this suite. 01/30/23 08:49:23.3
------------------------------
â€¢ [4.099 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:49:19.207
    Jan 30 08:49:19.207: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 08:49:19.208
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:19.241
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:19.244
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:249
    STEP: Creating a pod to test downward API volume plugin 01/30/23 08:49:19.247
    Jan 30 08:49:19.257: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a" in namespace "downward-api-2676" to be "Succeeded or Failed"
    Jan 30 08:49:19.259: INFO: Pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.499114ms
    Jan 30 08:49:21.262: INFO: Pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005423338s
    Jan 30 08:49:23.263: INFO: Pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006219329s
    STEP: Saw pod success 01/30/23 08:49:23.263
    Jan 30 08:49:23.263: INFO: Pod "downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a" satisfied condition "Succeeded or Failed"
    Jan 30 08:49:23.265: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a container client-container: <nil>
    STEP: delete the pod 01/30/23 08:49:23.27
    Jan 30 08:49:23.293: INFO: Waiting for pod downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a to disappear
    Jan 30 08:49:23.296: INFO: Pod downwardapi-volume-d35e5d3d-c429-46fa-bdb4-88e70fe13e9a no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:49:23.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-2676" for this suite. 01/30/23 08:49:23.3
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance]
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:49:23.308
Jan 30 08:49:23.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename ephemeral-containers-test 01/30/23 08:49:23.309
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:23.324
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:23.327
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/common/node/ephemeral_containers.go:38
[It] will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
STEP: creating a target pod 01/30/23 08:49:23.33
Jan 30 08:49:23.337: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-9104" to be "running and ready"
Jan 30 08:49:23.339: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.277337ms
Jan 30 08:49:23.339: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:49:25.344: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.006552239s
Jan 30 08:49:25.344: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
Jan 30 08:49:25.344: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
STEP: adding an ephemeral container 01/30/23 08:49:25.346
Jan 30 08:49:25.361: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-9104" to be "container debugger running"
Jan 30 08:49:25.364: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.962985ms
Jan 30 08:49:27.368: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.006740214s
Jan 30 08:49:27.368: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
STEP: checking pod container endpoints 01/30/23 08:49:27.368
Jan 30 08:49:27.368: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9104 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 08:49:27.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 08:49:27.369: INFO: ExecWithOptions: Clientset creation
Jan 30 08:49:27.369: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-9104/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
Jan 30 08:49:27.496: INFO: Exec stderr: ""
[AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:49:27.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "ephemeral-containers-test-9104" for this suite. 01/30/23 08:49:27.507
------------------------------
â€¢ [4.209 seconds]
[sig-node] Ephemeral Containers [NodeConformance]
test/e2e/common/node/framework.go:23
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:49:23.308
    Jan 30 08:49:23.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename ephemeral-containers-test 01/30/23 08:49:23.309
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:23.324
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:23.327
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/common/node/ephemeral_containers.go:38
    [It] will start an ephemeral container in an existing pod [Conformance]
      test/e2e/common/node/ephemeral_containers.go:45
    STEP: creating a target pod 01/30/23 08:49:23.33
    Jan 30 08:49:23.337: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-9104" to be "running and ready"
    Jan 30 08:49:23.339: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.277337ms
    Jan 30 08:49:23.339: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:49:25.344: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.006552239s
    Jan 30 08:49:25.344: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
    Jan 30 08:49:25.344: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
    STEP: adding an ephemeral container 01/30/23 08:49:25.346
    Jan 30 08:49:25.361: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-9104" to be "container debugger running"
    Jan 30 08:49:25.364: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.962985ms
    Jan 30 08:49:27.368: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.006740214s
    Jan 30 08:49:27.368: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
    STEP: checking pod container endpoints 01/30/23 08:49:27.368
    Jan 30 08:49:27.368: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9104 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 08:49:27.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 08:49:27.369: INFO: ExecWithOptions: Clientset creation
    Jan 30 08:49:27.369: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-9104/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
    Jan 30 08:49:27.496: INFO: Exec stderr: ""
    [AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:49:27.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "ephemeral-containers-test-9104" for this suite. 01/30/23 08:49:27.507
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:49:27.517
Jan 30 08:49:27.517: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename var-expansion 01/30/23 08:49:27.518
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:27.538
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:27.541
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
STEP: Creating a pod to test substitution in container's args 01/30/23 08:49:27.544
Jan 30 08:49:27.557: INFO: Waiting up to 5m0s for pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521" in namespace "var-expansion-2513" to be "Succeeded or Failed"
Jan 30 08:49:27.560: INFO: Pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521": Phase="Pending", Reason="", readiness=false. Elapsed: 3.292012ms
Jan 30 08:49:29.563: INFO: Pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006595117s
Jan 30 08:49:31.564: INFO: Pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007027038s
STEP: Saw pod success 01/30/23 08:49:31.564
Jan 30 08:49:31.564: INFO: Pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521" satisfied condition "Succeeded or Failed"
Jan 30 08:49:31.567: INFO: Trying to get logs from node tce-worker pod var-expansion-ee2098c3-d74a-4baf-8b69-666887731521 container dapi-container: <nil>
STEP: delete the pod 01/30/23 08:49:31.571
Jan 30 08:49:31.581: INFO: Waiting for pod var-expansion-ee2098c3-d74a-4baf-8b69-666887731521 to disappear
Jan 30 08:49:31.583: INFO: Pod var-expansion-ee2098c3-d74a-4baf-8b69-666887731521 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 30 08:49:31.583: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-2513" for this suite. 01/30/23 08:49:31.586
------------------------------
â€¢ [4.075 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:49:27.517
    Jan 30 08:49:27.517: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename var-expansion 01/30/23 08:49:27.518
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:27.538
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:27.541
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's args [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:92
    STEP: Creating a pod to test substitution in container's args 01/30/23 08:49:27.544
    Jan 30 08:49:27.557: INFO: Waiting up to 5m0s for pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521" in namespace "var-expansion-2513" to be "Succeeded or Failed"
    Jan 30 08:49:27.560: INFO: Pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521": Phase="Pending", Reason="", readiness=false. Elapsed: 3.292012ms
    Jan 30 08:49:29.563: INFO: Pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006595117s
    Jan 30 08:49:31.564: INFO: Pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007027038s
    STEP: Saw pod success 01/30/23 08:49:31.564
    Jan 30 08:49:31.564: INFO: Pod "var-expansion-ee2098c3-d74a-4baf-8b69-666887731521" satisfied condition "Succeeded or Failed"
    Jan 30 08:49:31.567: INFO: Trying to get logs from node tce-worker pod var-expansion-ee2098c3-d74a-4baf-8b69-666887731521 container dapi-container: <nil>
    STEP: delete the pod 01/30/23 08:49:31.571
    Jan 30 08:49:31.581: INFO: Waiting for pod var-expansion-ee2098c3-d74a-4baf-8b69-666887731521 to disappear
    Jan 30 08:49:31.583: INFO: Pod var-expansion-ee2098c3-d74a-4baf-8b69-666887731521 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:49:31.583: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-2513" for this suite. 01/30/23 08:49:31.586
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:49:31.594
Jan 30 08:49:31.594: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename init-container 01/30/23 08:49:31.595
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:31.608
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:31.612
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
STEP: creating the pod 01/30/23 08:49:31.614
Jan 30 08:49:31.615: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:49:35.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-3375" for this suite. 01/30/23 08:49:35.666
------------------------------
â€¢ [4.077 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:49:31.594
    Jan 30 08:49:31.594: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename init-container 01/30/23 08:49:31.595
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:31.608
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:31.612
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:458
    STEP: creating the pod 01/30/23 08:49:31.614
    Jan 30 08:49:31.615: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:49:35.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-3375" for this suite. 01/30/23 08:49:35.666
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:49:35.673
Jan 30 08:49:35.673: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename statefulset 01/30/23 08:49:35.674
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:35.684
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:35.687
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-5957 01/30/23 08:49:35.689
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
STEP: Creating a new StatefulSet 01/30/23 08:49:35.695
Jan 30 08:49:35.704: INFO: Found 0 stateful pods, waiting for 3
Jan 30 08:49:45.708: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:49:45.708: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:49:45.708: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 08:49:45.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-5957 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:49:45.874: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:49:45.874: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:49:45.874: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 01/30/23 08:49:55.886
Jan 30 08:49:55.907: INFO: Updating stateful set ss2
STEP: Creating a new revision 01/30/23 08:49:55.907
STEP: Updating Pods in reverse ordinal order 01/30/23 08:50:05.92
Jan 30 08:50:05.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-5957 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:50:06.068: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 08:50:06.068: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:50:06.068: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision 01/30/23 08:50:16.085
Jan 30 08:50:16.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-5957 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 08:50:16.274: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 08:50:16.275: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 08:50:16.275: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 08:50:26.318: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order 01/30/23 08:50:36.33
Jan 30 08:50:36.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-5957 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 08:50:36.464: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 08:50:36.464: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 08:50:36.464: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 30 08:50:46.478: INFO: Deleting all statefulset in ns statefulset-5957
Jan 30 08:50:46.480: INFO: Scaling statefulset ss2 to 0
Jan 30 08:50:56.493: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:50:56.495: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:50:56.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-5957" for this suite. 01/30/23 08:50:56.516
------------------------------
â€¢ [SLOW TEST] [80.848 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/apps/statefulset.go:306

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:49:35.673
    Jan 30 08:49:35.673: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename statefulset 01/30/23 08:49:35.674
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:49:35.684
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:49:35.687
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-5957 01/30/23 08:49:35.689
    [It] should perform rolling updates and roll backs of template modifications [Conformance]
      test/e2e/apps/statefulset.go:306
    STEP: Creating a new StatefulSet 01/30/23 08:49:35.695
    Jan 30 08:49:35.704: INFO: Found 0 stateful pods, waiting for 3
    Jan 30 08:49:45.708: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 08:49:45.708: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 08:49:45.708: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 08:49:45.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-5957 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 08:49:45.874: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 08:49:45.874: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 08:49:45.874: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 01/30/23 08:49:55.886
    Jan 30 08:49:55.907: INFO: Updating stateful set ss2
    STEP: Creating a new revision 01/30/23 08:49:55.907
    STEP: Updating Pods in reverse ordinal order 01/30/23 08:50:05.92
    Jan 30 08:50:05.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-5957 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 08:50:06.068: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 30 08:50:06.068: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 08:50:06.068: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    STEP: Rolling back to a previous revision 01/30/23 08:50:16.085
    Jan 30 08:50:16.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-5957 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 08:50:16.274: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 08:50:16.275: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 08:50:16.275: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 08:50:26.318: INFO: Updating stateful set ss2
    STEP: Rolling back update in reverse ordinal order 01/30/23 08:50:36.33
    Jan 30 08:50:36.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-5957 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 08:50:36.464: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 30 08:50:36.464: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 08:50:36.464: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 30 08:50:46.478: INFO: Deleting all statefulset in ns statefulset-5957
    Jan 30 08:50:46.480: INFO: Scaling statefulset ss2 to 0
    Jan 30 08:50:56.493: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 08:50:56.495: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:50:56.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-5957" for this suite. 01/30/23 08:50:56.516
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:50:56.522
Jan 30 08:50:56.522: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename statefulset 01/30/23 08:50:56.523
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:50:56.535
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:50:56.537
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-9680 01/30/23 08:50:56.539
[It] should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
STEP: Creating statefulset ss in namespace statefulset-9680 01/30/23 08:50:56.544
Jan 30 08:50:56.552: INFO: Found 0 stateful pods, waiting for 1
Jan 30 08:51:06.564: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource 01/30/23 08:51:06.568
STEP: updating a scale subresource 01/30/23 08:51:06.569
STEP: verifying the statefulset Spec.Replicas was modified 01/30/23 08:51:06.577
STEP: Patch a scale subresource 01/30/23 08:51:06.58
STEP: verifying the statefulset Spec.Replicas was modified 01/30/23 08:51:06.586
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 30 08:51:06.591: INFO: Deleting all statefulset in ns statefulset-9680
Jan 30 08:51:06.594: INFO: Scaling statefulset ss to 0
Jan 30 08:51:16.609: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 08:51:16.611: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:51:16.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-9680" for this suite. 01/30/23 08:51:16.623
------------------------------
â€¢ [SLOW TEST] [20.107 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should have a working scale subresource [Conformance]
    test/e2e/apps/statefulset.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:50:56.522
    Jan 30 08:50:56.522: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename statefulset 01/30/23 08:50:56.523
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:50:56.535
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:50:56.537
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-9680 01/30/23 08:50:56.539
    [It] should have a working scale subresource [Conformance]
      test/e2e/apps/statefulset.go:848
    STEP: Creating statefulset ss in namespace statefulset-9680 01/30/23 08:50:56.544
    Jan 30 08:50:56.552: INFO: Found 0 stateful pods, waiting for 1
    Jan 30 08:51:06.564: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: getting scale subresource 01/30/23 08:51:06.568
    STEP: updating a scale subresource 01/30/23 08:51:06.569
    STEP: verifying the statefulset Spec.Replicas was modified 01/30/23 08:51:06.577
    STEP: Patch a scale subresource 01/30/23 08:51:06.58
    STEP: verifying the statefulset Spec.Replicas was modified 01/30/23 08:51:06.586
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 30 08:51:06.591: INFO: Deleting all statefulset in ns statefulset-9680
    Jan 30 08:51:06.594: INFO: Scaling statefulset ss to 0
    Jan 30 08:51:16.609: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 08:51:16.611: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:51:16.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-9680" for this suite. 01/30/23 08:51:16.623
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Downward API
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:51:16.629
Jan 30 08:51:16.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 08:51:16.63
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:51:16.641
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:51:16.643
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
STEP: Creating a pod to test downward api env vars 01/30/23 08:51:16.645
Jan 30 08:51:16.652: INFO: Waiting up to 5m0s for pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af" in namespace "downward-api-7092" to be "Succeeded or Failed"
Jan 30 08:51:16.655: INFO: Pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.382538ms
Jan 30 08:51:18.657: INFO: Pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004802515s
Jan 30 08:51:20.659: INFO: Pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006419448s
STEP: Saw pod success 01/30/23 08:51:20.659
Jan 30 08:51:20.659: INFO: Pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af" satisfied condition "Succeeded or Failed"
Jan 30 08:51:20.661: INFO: Trying to get logs from node tce-worker2 pod downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af container dapi-container: <nil>
STEP: delete the pod 01/30/23 08:51:20.67
Jan 30 08:51:20.682: INFO: Waiting for pod downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af to disappear
Jan 30 08:51:20.684: INFO: Pod downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 30 08:51:20.684: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7092" for this suite. 01/30/23 08:51:20.687
------------------------------
â€¢ [4.063 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:51:16.629
    Jan 30 08:51:16.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 08:51:16.63
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:51:16.641
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:51:16.643
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:166
    STEP: Creating a pod to test downward api env vars 01/30/23 08:51:16.645
    Jan 30 08:51:16.652: INFO: Waiting up to 5m0s for pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af" in namespace "downward-api-7092" to be "Succeeded or Failed"
    Jan 30 08:51:16.655: INFO: Pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.382538ms
    Jan 30 08:51:18.657: INFO: Pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004802515s
    Jan 30 08:51:20.659: INFO: Pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006419448s
    STEP: Saw pod success 01/30/23 08:51:20.659
    Jan 30 08:51:20.659: INFO: Pod "downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af" satisfied condition "Succeeded or Failed"
    Jan 30 08:51:20.661: INFO: Trying to get logs from node tce-worker2 pod downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af container dapi-container: <nil>
    STEP: delete the pod 01/30/23 08:51:20.67
    Jan 30 08:51:20.682: INFO: Waiting for pod downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af to disappear
    Jan 30 08:51:20.684: INFO: Pod downward-api-48892ed1-e451-4562-9a58-4c9f07d3e3af no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:51:20.684: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7092" for this suite. 01/30/23 08:51:20.687
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:51:20.692
Jan 30 08:51:20.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:51:20.693
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:51:20.709
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:51:20.712
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:51:20.723
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:51:20.935
STEP: Deploying the webhook pod 01/30/23 08:51:20.948
STEP: Wait for the deployment to be ready 01/30/23 08:51:20.962
Jan 30 08:51:20.968: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 08:51:22.976
STEP: Verifying the service has paired with the endpoint 01/30/23 08:51:22.996
Jan 30 08:51:23.996: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
STEP: Registering the mutating pod webhook via the AdmissionRegistration API 01/30/23 08:51:23.999
STEP: create a pod that should be updated by the webhook 01/30/23 08:51:24.032
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:51:24.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7600" for this suite. 01/30/23 08:51:24.125
STEP: Destroying namespace "webhook-7600-markers" for this suite. 01/30/23 08:51:24.142
------------------------------
â€¢ [3.456 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:51:20.692
    Jan 30 08:51:20.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:51:20.693
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:51:20.709
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:51:20.712
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:51:20.723
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:51:20.935
    STEP: Deploying the webhook pod 01/30/23 08:51:20.948
    STEP: Wait for the deployment to be ready 01/30/23 08:51:20.962
    Jan 30 08:51:20.968: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 08:51:22.976
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:51:22.996
    Jan 30 08:51:23.996: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate pod and apply defaults after mutation [Conformance]
      test/e2e/apimachinery/webhook.go:264
    STEP: Registering the mutating pod webhook via the AdmissionRegistration API 01/30/23 08:51:23.999
    STEP: create a pod that should be updated by the webhook 01/30/23 08:51:24.032
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:51:24.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7600" for this suite. 01/30/23 08:51:24.125
    STEP: Destroying namespace "webhook-7600-markers" for this suite. 01/30/23 08:51:24.142
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:51:24.149
Jan 30 08:51:24.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir-wrapper 01/30/23 08:51:24.15
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:51:24.172
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:51:24.175
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
STEP: Creating 50 configmaps 01/30/23 08:51:24.178
STEP: Creating RC which spawns configmap-volume pods 01/30/23 08:51:24.404
Jan 30 08:51:24.532: INFO: Pod name wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2: Found 3 pods out of 5
Jan 30 08:51:29.538: INFO: Pod name wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2: Found 5 pods out of 5
STEP: Ensuring each pod is running 01/30/23 08:51:29.538
Jan 30 08:51:29.538: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:29.541: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.217027ms
Jan 30 08:51:31.545: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007178749s
Jan 30 08:51:33.545: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00705218s
Jan 30 08:51:35.544: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006648367s
Jan 30 08:51:37.544: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.006366325s
Jan 30 08:51:39.546: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Running", Reason="", readiness=true. Elapsed: 10.008133915s
Jan 30 08:51:39.546: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8" satisfied condition "running"
Jan 30 08:51:39.546: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-qgpd8" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:39.549: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-qgpd8": Phase="Running", Reason="", readiness=true. Elapsed: 3.272614ms
Jan 30 08:51:39.549: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-qgpd8" satisfied condition "running"
Jan 30 08:51:39.549: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-rv49x" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:39.552: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-rv49x": Phase="Running", Reason="", readiness=true. Elapsed: 2.860792ms
Jan 30 08:51:39.552: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-rv49x" satisfied condition "running"
Jan 30 08:51:39.552: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-sblln" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:39.555: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-sblln": Phase="Running", Reason="", readiness=true. Elapsed: 2.693626ms
Jan 30 08:51:39.555: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-sblln" satisfied condition "running"
Jan 30 08:51:39.555: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-zjdw7" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:39.563: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-zjdw7": Phase="Running", Reason="", readiness=true. Elapsed: 7.792972ms
Jan 30 08:51:39.563: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-zjdw7" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2 in namespace emptydir-wrapper-2318, will wait for the garbage collector to delete the pods 01/30/23 08:51:39.563
Jan 30 08:51:39.640: INFO: Deleting ReplicationController wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2 took: 22.814858ms
Jan 30 08:51:39.741: INFO: Terminating ReplicationController wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2 pods took: 100.96263ms
STEP: Creating RC which spawns configmap-volume pods 01/30/23 08:51:42.745
Jan 30 08:51:42.757: INFO: Pod name wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121: Found 0 pods out of 5
Jan 30 08:51:47.761: INFO: Pod name wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121: Found 5 pods out of 5
STEP: Ensuring each pod is running 01/30/23 08:51:47.761
Jan 30 08:51:47.761: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:47.774: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 12.603598ms
Jan 30 08:51:49.777: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015984407s
Jan 30 08:51:51.778: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01631835s
Jan 30 08:51:53.777: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 6.015253522s
Jan 30 08:51:55.779: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 8.017406314s
Jan 30 08:51:57.778: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Running", Reason="", readiness=true. Elapsed: 10.017050747s
Jan 30 08:51:57.778: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l" satisfied condition "running"
Jan 30 08:51:57.778: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-6zjjw" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:57.780: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-6zjjw": Phase="Running", Reason="", readiness=true. Elapsed: 2.061597ms
Jan 30 08:51:57.780: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-6zjjw" satisfied condition "running"
Jan 30 08:51:57.780: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-7f269" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:57.783: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-7f269": Phase="Running", Reason="", readiness=true. Elapsed: 2.256476ms
Jan 30 08:51:57.783: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-7f269" satisfied condition "running"
Jan 30 08:51:57.783: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-gqf7w" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:57.785: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-gqf7w": Phase="Running", Reason="", readiness=true. Elapsed: 2.36235ms
Jan 30 08:51:57.785: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-gqf7w" satisfied condition "running"
Jan 30 08:51:57.785: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-m8dn4" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:51:57.787: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-m8dn4": Phase="Running", Reason="", readiness=true. Elapsed: 2.296224ms
Jan 30 08:51:57.788: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-m8dn4" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121 in namespace emptydir-wrapper-2318, will wait for the garbage collector to delete the pods 01/30/23 08:51:57.788
Jan 30 08:51:57.845: INFO: Deleting ReplicationController wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121 took: 4.865481ms
Jan 30 08:51:57.946: INFO: Terminating ReplicationController wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121 pods took: 100.160745ms
STEP: Creating RC which spawns configmap-volume pods 01/30/23 08:52:01.249
Jan 30 08:52:01.263: INFO: Pod name wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230: Found 0 pods out of 5
Jan 30 08:52:06.271: INFO: Pod name wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230: Found 5 pods out of 5
STEP: Ensuring each pod is running 01/30/23 08:52:06.271
Jan 30 08:52:06.271: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:52:06.274: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.689855ms
Jan 30 08:52:08.277: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005686743s
Jan 30 08:52:10.277: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 4.006104049s
Jan 30 08:52:12.278: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006938543s
Jan 30 08:52:14.277: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 8.005708335s
Jan 30 08:52:16.279: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Running", Reason="", readiness=true. Elapsed: 10.008067676s
Jan 30 08:52:16.279: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm" satisfied condition "running"
Jan 30 08:52:16.279: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-btc5r" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:52:16.282: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-btc5r": Phase="Running", Reason="", readiness=true. Elapsed: 2.667457ms
Jan 30 08:52:16.282: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-btc5r" satisfied condition "running"
Jan 30 08:52:16.282: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-dwtvb" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:52:16.284: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-dwtvb": Phase="Running", Reason="", readiness=true. Elapsed: 2.392082ms
Jan 30 08:52:16.284: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-dwtvb" satisfied condition "running"
Jan 30 08:52:16.284: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-fdzks" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:52:16.287: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-fdzks": Phase="Running", Reason="", readiness=true. Elapsed: 2.837794ms
Jan 30 08:52:16.287: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-fdzks" satisfied condition "running"
Jan 30 08:52:16.287: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-qzn9p" in namespace "emptydir-wrapper-2318" to be "running"
Jan 30 08:52:16.290: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-qzn9p": Phase="Running", Reason="", readiness=true. Elapsed: 2.395946ms
Jan 30 08:52:16.290: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-qzn9p" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230 in namespace emptydir-wrapper-2318, will wait for the garbage collector to delete the pods 01/30/23 08:52:16.29
Jan 30 08:52:16.359: INFO: Deleting ReplicationController wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230 took: 15.201593ms
Jan 30 08:52:16.460: INFO: Terminating ReplicationController wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230 pods took: 100.98013ms
STEP: Cleaning up the configMaps 01/30/23 08:52:19.96
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:20.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-2318" for this suite. 01/30/23 08:52:20.175
------------------------------
â€¢ [SLOW TEST] [56.030 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:51:24.149
    Jan 30 08:51:24.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir-wrapper 01/30/23 08:51:24.15
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:51:24.172
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:51:24.175
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not cause race condition when used for configmaps [Serial] [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:189
    STEP: Creating 50 configmaps 01/30/23 08:51:24.178
    STEP: Creating RC which spawns configmap-volume pods 01/30/23 08:51:24.404
    Jan 30 08:51:24.532: INFO: Pod name wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2: Found 3 pods out of 5
    Jan 30 08:51:29.538: INFO: Pod name wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2: Found 5 pods out of 5
    STEP: Ensuring each pod is running 01/30/23 08:51:29.538
    Jan 30 08:51:29.538: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:29.541: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.217027ms
    Jan 30 08:51:31.545: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007178749s
    Jan 30 08:51:33.545: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00705218s
    Jan 30 08:51:35.544: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006648367s
    Jan 30 08:51:37.544: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.006366325s
    Jan 30 08:51:39.546: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8": Phase="Running", Reason="", readiness=true. Elapsed: 10.008133915s
    Jan 30 08:51:39.546: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-gqkk8" satisfied condition "running"
    Jan 30 08:51:39.546: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-qgpd8" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:39.549: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-qgpd8": Phase="Running", Reason="", readiness=true. Elapsed: 3.272614ms
    Jan 30 08:51:39.549: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-qgpd8" satisfied condition "running"
    Jan 30 08:51:39.549: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-rv49x" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:39.552: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-rv49x": Phase="Running", Reason="", readiness=true. Elapsed: 2.860792ms
    Jan 30 08:51:39.552: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-rv49x" satisfied condition "running"
    Jan 30 08:51:39.552: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-sblln" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:39.555: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-sblln": Phase="Running", Reason="", readiness=true. Elapsed: 2.693626ms
    Jan 30 08:51:39.555: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-sblln" satisfied condition "running"
    Jan 30 08:51:39.555: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-zjdw7" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:39.563: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-zjdw7": Phase="Running", Reason="", readiness=true. Elapsed: 7.792972ms
    Jan 30 08:51:39.563: INFO: Pod "wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2-zjdw7" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2 in namespace emptydir-wrapper-2318, will wait for the garbage collector to delete the pods 01/30/23 08:51:39.563
    Jan 30 08:51:39.640: INFO: Deleting ReplicationController wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2 took: 22.814858ms
    Jan 30 08:51:39.741: INFO: Terminating ReplicationController wrapped-volume-race-4d8b51f8-e5ee-4244-b4ca-7ec3bee16fa2 pods took: 100.96263ms
    STEP: Creating RC which spawns configmap-volume pods 01/30/23 08:51:42.745
    Jan 30 08:51:42.757: INFO: Pod name wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121: Found 0 pods out of 5
    Jan 30 08:51:47.761: INFO: Pod name wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121: Found 5 pods out of 5
    STEP: Ensuring each pod is running 01/30/23 08:51:47.761
    Jan 30 08:51:47.761: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:47.774: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 12.603598ms
    Jan 30 08:51:49.777: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015984407s
    Jan 30 08:51:51.778: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01631835s
    Jan 30 08:51:53.777: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 6.015253522s
    Jan 30 08:51:55.779: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Pending", Reason="", readiness=false. Elapsed: 8.017406314s
    Jan 30 08:51:57.778: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l": Phase="Running", Reason="", readiness=true. Elapsed: 10.017050747s
    Jan 30 08:51:57.778: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-4jb4l" satisfied condition "running"
    Jan 30 08:51:57.778: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-6zjjw" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:57.780: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-6zjjw": Phase="Running", Reason="", readiness=true. Elapsed: 2.061597ms
    Jan 30 08:51:57.780: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-6zjjw" satisfied condition "running"
    Jan 30 08:51:57.780: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-7f269" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:57.783: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-7f269": Phase="Running", Reason="", readiness=true. Elapsed: 2.256476ms
    Jan 30 08:51:57.783: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-7f269" satisfied condition "running"
    Jan 30 08:51:57.783: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-gqf7w" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:57.785: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-gqf7w": Phase="Running", Reason="", readiness=true. Elapsed: 2.36235ms
    Jan 30 08:51:57.785: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-gqf7w" satisfied condition "running"
    Jan 30 08:51:57.785: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-m8dn4" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:51:57.787: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-m8dn4": Phase="Running", Reason="", readiness=true. Elapsed: 2.296224ms
    Jan 30 08:51:57.788: INFO: Pod "wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121-m8dn4" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121 in namespace emptydir-wrapper-2318, will wait for the garbage collector to delete the pods 01/30/23 08:51:57.788
    Jan 30 08:51:57.845: INFO: Deleting ReplicationController wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121 took: 4.865481ms
    Jan 30 08:51:57.946: INFO: Terminating ReplicationController wrapped-volume-race-24994d51-1c44-4fb1-b7f2-6f245c50b121 pods took: 100.160745ms
    STEP: Creating RC which spawns configmap-volume pods 01/30/23 08:52:01.249
    Jan 30 08:52:01.263: INFO: Pod name wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230: Found 0 pods out of 5
    Jan 30 08:52:06.271: INFO: Pod name wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230: Found 5 pods out of 5
    STEP: Ensuring each pod is running 01/30/23 08:52:06.271
    Jan 30 08:52:06.271: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:52:06.274: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.689855ms
    Jan 30 08:52:08.277: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005686743s
    Jan 30 08:52:10.277: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 4.006104049s
    Jan 30 08:52:12.278: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006938543s
    Jan 30 08:52:14.277: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Pending", Reason="", readiness=false. Elapsed: 8.005708335s
    Jan 30 08:52:16.279: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm": Phase="Running", Reason="", readiness=true. Elapsed: 10.008067676s
    Jan 30 08:52:16.279: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-6c8zm" satisfied condition "running"
    Jan 30 08:52:16.279: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-btc5r" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:52:16.282: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-btc5r": Phase="Running", Reason="", readiness=true. Elapsed: 2.667457ms
    Jan 30 08:52:16.282: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-btc5r" satisfied condition "running"
    Jan 30 08:52:16.282: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-dwtvb" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:52:16.284: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-dwtvb": Phase="Running", Reason="", readiness=true. Elapsed: 2.392082ms
    Jan 30 08:52:16.284: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-dwtvb" satisfied condition "running"
    Jan 30 08:52:16.284: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-fdzks" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:52:16.287: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-fdzks": Phase="Running", Reason="", readiness=true. Elapsed: 2.837794ms
    Jan 30 08:52:16.287: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-fdzks" satisfied condition "running"
    Jan 30 08:52:16.287: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-qzn9p" in namespace "emptydir-wrapper-2318" to be "running"
    Jan 30 08:52:16.290: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-qzn9p": Phase="Running", Reason="", readiness=true. Elapsed: 2.395946ms
    Jan 30 08:52:16.290: INFO: Pod "wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230-qzn9p" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230 in namespace emptydir-wrapper-2318, will wait for the garbage collector to delete the pods 01/30/23 08:52:16.29
    Jan 30 08:52:16.359: INFO: Deleting ReplicationController wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230 took: 15.201593ms
    Jan 30 08:52:16.460: INFO: Terminating ReplicationController wrapped-volume-race-4faf983b-90d1-4dd8-8553-8adca0aee230 pods took: 100.98013ms
    STEP: Cleaning up the configMaps 01/30/23 08:52:19.96
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:20.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-2318" for this suite. 01/30/23 08:52:20.175
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:20.18
Jan 30 08:52:20.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename disruption 01/30/23 08:52:20.181
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:20.194
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:20.196
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:20.199
Jan 30 08:52:20.199: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename disruption-2 01/30/23 08:52:20.2
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:20.209
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:20.213
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
STEP: Waiting for the pdb to be processed 01/30/23 08:52:20.223
STEP: Waiting for the pdb to be processed 01/30/23 08:52:22.232
STEP: Waiting for the pdb to be processed 01/30/23 08:52:24.254
STEP: listing a collection of PDBs across all namespaces 01/30/23 08:52:26.261
STEP: listing a collection of PDBs in namespace disruption-8779 01/30/23 08:52:26.263
STEP: deleting a collection of PDBs 01/30/23 08:52:26.265
STEP: Waiting for the PDB collection to be deleted 01/30/23 08:52:26.275
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:26.277: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:26.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  dump namespaces | framework.go:196
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-2-1781" for this suite. 01/30/23 08:52:26.282
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-8779" for this suite. 01/30/23 08:52:26.286
------------------------------
â€¢ [SLOW TEST] [6.111 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:78
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/apps/disruption.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:20.18
    Jan 30 08:52:20.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename disruption 01/30/23 08:52:20.181
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:20.194
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:20.196
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:20.199
    Jan 30 08:52:20.199: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename disruption-2 01/30/23 08:52:20.2
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:20.209
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:20.213
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of PodDisruptionBudgets [Conformance]
      test/e2e/apps/disruption.go:87
    STEP: Waiting for the pdb to be processed 01/30/23 08:52:20.223
    STEP: Waiting for the pdb to be processed 01/30/23 08:52:22.232
    STEP: Waiting for the pdb to be processed 01/30/23 08:52:24.254
    STEP: listing a collection of PDBs across all namespaces 01/30/23 08:52:26.261
    STEP: listing a collection of PDBs in namespace disruption-8779 01/30/23 08:52:26.263
    STEP: deleting a collection of PDBs 01/30/23 08:52:26.265
    STEP: Waiting for the PDB collection to be deleted 01/30/23 08:52:26.275
    [AfterEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:26.277: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:26.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-2-1781" for this suite. 01/30/23 08:52:26.282
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-8779" for this suite. 01/30/23 08:52:26.286
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Services
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:26.291
Jan 30 08:52:26.291: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:52:26.292
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:26.305
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:26.308
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
STEP: creating service in namespace services-4449 01/30/23 08:52:26.31
STEP: creating service affinity-nodeport in namespace services-4449 01/30/23 08:52:26.31
STEP: creating replication controller affinity-nodeport in namespace services-4449 01/30/23 08:52:26.32
I0130 08:52:26.344008      24 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-4449, replica count: 3
I0130 08:52:29.396286      24 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 08:52:29.402: INFO: Creating new exec pod
Jan 30 08:52:29.415: INFO: Waiting up to 5m0s for pod "execpod-affinityrc8jv" in namespace "services-4449" to be "running"
Jan 30 08:52:29.417: INFO: Pod "execpod-affinityrc8jv": Phase="Pending", Reason="", readiness=false. Elapsed: 1.774741ms
Jan 30 08:52:31.420: INFO: Pod "execpod-affinityrc8jv": Phase="Running", Reason="", readiness=true. Elapsed: 2.004963245s
Jan 30 08:52:31.420: INFO: Pod "execpod-affinityrc8jv" satisfied condition "running"
Jan 30 08:52:32.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
Jan 30 08:52:32.572: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Jan 30 08:52:32.572: INFO: stdout: ""
Jan 30 08:52:32.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c nc -v -z -w 2 10.96.113.240 80'
Jan 30 08:52:32.707: INFO: stderr: "+ nc -v -z -w 2 10.96.113.240 80\nConnection to 10.96.113.240 80 port [tcp/http] succeeded!\n"
Jan 30 08:52:32.707: INFO: stdout: ""
Jan 30 08:52:32.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c nc -v -z -w 2 172.20.0.2 31309'
Jan 30 08:52:32.878: INFO: stderr: "+ nc -v -z -w 2 172.20.0.2 31309\nConnection to 172.20.0.2 31309 port [tcp/*] succeeded!\n"
Jan 30 08:52:32.878: INFO: stdout: ""
Jan 30 08:52:32.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c nc -v -z -w 2 172.20.0.4 31309'
Jan 30 08:52:32.991: INFO: stderr: "+ nc -v -z -w 2 172.20.0.4 31309\nConnection to 172.20.0.4 31309 port [tcp/*] succeeded!\n"
Jan 30 08:52:32.991: INFO: stdout: ""
Jan 30 08:52:32.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.2:31309/ ; done'
Jan 30 08:52:33.188: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n"
Jan 30 08:52:33.188: INFO: stdout: "\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5"
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
Jan 30 08:52:33.188: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-4449, will wait for the garbage collector to delete the pods 01/30/23 08:52:33.219
Jan 30 08:52:33.278: INFO: Deleting ReplicationController affinity-nodeport took: 6.021115ms
Jan 30 08:52:33.379: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.430884ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:36.795: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4449" for this suite. 01/30/23 08:52:36.798
------------------------------
â€¢ [SLOW TEST] [10.512 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:26.291
    Jan 30 08:52:26.291: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:52:26.292
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:26.305
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:26.308
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2228
    STEP: creating service in namespace services-4449 01/30/23 08:52:26.31
    STEP: creating service affinity-nodeport in namespace services-4449 01/30/23 08:52:26.31
    STEP: creating replication controller affinity-nodeport in namespace services-4449 01/30/23 08:52:26.32
    I0130 08:52:26.344008      24 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-4449, replica count: 3
    I0130 08:52:29.396286      24 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 08:52:29.402: INFO: Creating new exec pod
    Jan 30 08:52:29.415: INFO: Waiting up to 5m0s for pod "execpod-affinityrc8jv" in namespace "services-4449" to be "running"
    Jan 30 08:52:29.417: INFO: Pod "execpod-affinityrc8jv": Phase="Pending", Reason="", readiness=false. Elapsed: 1.774741ms
    Jan 30 08:52:31.420: INFO: Pod "execpod-affinityrc8jv": Phase="Running", Reason="", readiness=true. Elapsed: 2.004963245s
    Jan 30 08:52:31.420: INFO: Pod "execpod-affinityrc8jv" satisfied condition "running"
    Jan 30 08:52:32.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
    Jan 30 08:52:32.572: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
    Jan 30 08:52:32.572: INFO: stdout: ""
    Jan 30 08:52:32.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c nc -v -z -w 2 10.96.113.240 80'
    Jan 30 08:52:32.707: INFO: stderr: "+ nc -v -z -w 2 10.96.113.240 80\nConnection to 10.96.113.240 80 port [tcp/http] succeeded!\n"
    Jan 30 08:52:32.707: INFO: stdout: ""
    Jan 30 08:52:32.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c nc -v -z -w 2 172.20.0.2 31309'
    Jan 30 08:52:32.878: INFO: stderr: "+ nc -v -z -w 2 172.20.0.2 31309\nConnection to 172.20.0.2 31309 port [tcp/*] succeeded!\n"
    Jan 30 08:52:32.878: INFO: stdout: ""
    Jan 30 08:52:32.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c nc -v -z -w 2 172.20.0.4 31309'
    Jan 30 08:52:32.991: INFO: stderr: "+ nc -v -z -w 2 172.20.0.4 31309\nConnection to 172.20.0.4 31309 port [tcp/*] succeeded!\n"
    Jan 30 08:52:32.991: INFO: stdout: ""
    Jan 30 08:52:32.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4449 exec execpod-affinityrc8jv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.0.2:31309/ ; done'
    Jan 30 08:52:33.188: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.0.2:31309/\n"
    Jan 30 08:52:33.188: INFO: stdout: "\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5\naffinity-nodeport-m45m5"
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Received response from host: affinity-nodeport-m45m5
    Jan 30 08:52:33.188: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport in namespace services-4449, will wait for the garbage collector to delete the pods 01/30/23 08:52:33.219
    Jan 30 08:52:33.278: INFO: Deleting ReplicationController affinity-nodeport took: 6.021115ms
    Jan 30 08:52:33.379: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.430884ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:36.795: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4449" for this suite. 01/30/23 08:52:36.798
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] Deployment
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:36.804
Jan 30 08:52:36.804: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename deployment 01/30/23 08:52:36.804
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:36.818
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:36.821
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
STEP: creating a Deployment 01/30/23 08:52:36.826
Jan 30 08:52:36.826: INFO: Creating simple deployment test-deployment-952h6
Jan 30 08:52:36.839: INFO: deployment "test-deployment-952h6" doesn't have the required revision set
STEP: Getting /status 01/30/23 08:52:38.847
Jan 30 08:52:38.849: INFO: Deployment test-deployment-952h6 has Conditions: [{Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}]
STEP: updating Deployment Status 01/30/23 08:52:38.849
Jan 30 08:52:38.867: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 52, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 52, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 52, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 52, 36, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-952h6-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated 01/30/23 08:52:38.867
Jan 30 08:52:38.869: INFO: Observed &Deployment event: ADDED
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-952h6-54bc444df"}
Jan 30 08:52:38.869: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-952h6-54bc444df"}
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 30 08:52:38.869: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-952h6-54bc444df" is progressing.}
Jan 30 08:52:38.869: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}
Jan 30 08:52:38.869: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}
Jan 30 08:52:38.869: INFO: Found Deployment test-deployment-952h6 in namespace deployment-6771 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 30 08:52:38.869: INFO: Deployment test-deployment-952h6 has an updated status
STEP: patching the Statefulset Status 01/30/23 08:52:38.869
Jan 30 08:52:38.869: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 30 08:52:38.874: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched 01/30/23 08:52:38.874
Jan 30 08:52:38.876: INFO: Observed &Deployment event: ADDED
Jan 30 08:52:38.876: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-952h6-54bc444df"}
Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-952h6-54bc444df"}
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-952h6-54bc444df" is progressing.}
Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}
Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}
Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
Jan 30 08:52:38.877: INFO: Found deployment test-deployment-952h6 in namespace deployment-6771 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Jan 30 08:52:38.878: INFO: Deployment test-deployment-952h6 has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:52:38.884: INFO: Deployment "test-deployment-952h6":
&Deployment{ObjectMeta:{test-deployment-952h6  deployment-6771  b2ee9604-a9d6-4b38-a0fc-45fbc25a38ea 13882 1 2023-01-30 08:52:36 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-01-30 08:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-01-30 08:52:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-01-30 08:52:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0016a4d38 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-952h6-54bc444df",LastUpdateTime:2023-01-30 08:52:38 +0000 UTC,LastTransitionTime:2023-01-30 08:52:38 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 08:52:38.887: INFO: New ReplicaSet "test-deployment-952h6-54bc444df" of Deployment "test-deployment-952h6":
&ReplicaSet{ObjectMeta:{test-deployment-952h6-54bc444df  deployment-6771  d60b6f1f-f038-4a95-a068-c5640d934944 13876 1 2023-01-30 08:52:36 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-952h6 b2ee9604-a9d6-4b38-a0fc-45fbc25a38ea 0xc003daa1a0 0xc003daa1a1}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b2ee9604-a9d6-4b38-a0fc-45fbc25a38ea\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:52:37 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003daa248 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:52:38.893: INFO: Pod "test-deployment-952h6-54bc444df-cjst2" is available:
&Pod{ObjectMeta:{test-deployment-952h6-54bc444df-cjst2 test-deployment-952h6-54bc444df- deployment-6771  673b16c0-f0eb-4022-ad4b-96435afbef1d 13875 0 2023-01-30 08:52:36 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [{apps/v1 ReplicaSet test-deployment-952h6-54bc444df d60b6f1f-f038-4a95-a068-c5640d934944 0xc005a5efe0 0xc005a5efe1}] [] [{kube-controller-manager Update v1 2023-01-30 08:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d60b6f1f-f038-4a95-a068-c5640d934944\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:52:37 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.200\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ztlzx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ztlzx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.200,StartTime:2023-01-30 08:52:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:52:37 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://c3e26feecd1b8bfbef796d812c3abf01dde20455b1dd94a1e30f4271050b8084,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.200,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:38.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-6771" for this suite. 01/30/23 08:52:38.897
------------------------------
â€¢ [2.099 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:36.804
    Jan 30 08:52:36.804: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename deployment 01/30/23 08:52:36.804
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:36.818
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:36.821
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should validate Deployment Status endpoints [Conformance]
      test/e2e/apps/deployment.go:479
    STEP: creating a Deployment 01/30/23 08:52:36.826
    Jan 30 08:52:36.826: INFO: Creating simple deployment test-deployment-952h6
    Jan 30 08:52:36.839: INFO: deployment "test-deployment-952h6" doesn't have the required revision set
    STEP: Getting /status 01/30/23 08:52:38.847
    Jan 30 08:52:38.849: INFO: Deployment test-deployment-952h6 has Conditions: [{Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}]
    STEP: updating Deployment Status 01/30/23 08:52:38.849
    Jan 30 08:52:38.867: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 52, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 52, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 8, 52, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 8, 52, 36, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-952h6-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Deployment status to be updated 01/30/23 08:52:38.867
    Jan 30 08:52:38.869: INFO: Observed &Deployment event: ADDED
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-952h6-54bc444df"}
    Jan 30 08:52:38.869: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-952h6-54bc444df"}
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Jan 30 08:52:38.869: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-952h6-54bc444df" is progressing.}
    Jan 30 08:52:38.869: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}
    Jan 30 08:52:38.869: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Jan 30 08:52:38.869: INFO: Observed Deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}
    Jan 30 08:52:38.869: INFO: Found Deployment test-deployment-952h6 in namespace deployment-6771 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 30 08:52:38.869: INFO: Deployment test-deployment-952h6 has an updated status
    STEP: patching the Statefulset Status 01/30/23 08:52:38.869
    Jan 30 08:52:38.869: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Jan 30 08:52:38.874: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Deployment status to be patched 01/30/23 08:52:38.874
    Jan 30 08:52:38.876: INFO: Observed &Deployment event: ADDED
    Jan 30 08:52:38.876: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-952h6-54bc444df"}
    Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-952h6-54bc444df"}
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:36 +0000 UTC 2023-01-30 08:52:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-952h6-54bc444df" is progressing.}
    Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}
    Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-01-30 08:52:37 +0000 UTC 2023-01-30 08:52:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-952h6-54bc444df" has successfully progressed.}
    Jan 30 08:52:38.877: INFO: Observed deployment test-deployment-952h6 in namespace deployment-6771 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 30 08:52:38.877: INFO: Observed &Deployment event: MODIFIED
    Jan 30 08:52:38.877: INFO: Found deployment test-deployment-952h6 in namespace deployment-6771 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
    Jan 30 08:52:38.878: INFO: Deployment test-deployment-952h6 has a patched status
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 30 08:52:38.884: INFO: Deployment "test-deployment-952h6":
    &Deployment{ObjectMeta:{test-deployment-952h6  deployment-6771  b2ee9604-a9d6-4b38-a0fc-45fbc25a38ea 13882 1 2023-01-30 08:52:36 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-01-30 08:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-01-30 08:52:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-01-30 08:52:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0016a4d38 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-952h6-54bc444df",LastUpdateTime:2023-01-30 08:52:38 +0000 UTC,LastTransitionTime:2023-01-30 08:52:38 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Jan 30 08:52:38.887: INFO: New ReplicaSet "test-deployment-952h6-54bc444df" of Deployment "test-deployment-952h6":
    &ReplicaSet{ObjectMeta:{test-deployment-952h6-54bc444df  deployment-6771  d60b6f1f-f038-4a95-a068-c5640d934944 13876 1 2023-01-30 08:52:36 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-952h6 b2ee9604-a9d6-4b38-a0fc-45fbc25a38ea 0xc003daa1a0 0xc003daa1a1}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b2ee9604-a9d6-4b38-a0fc-45fbc25a38ea\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:52:37 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003daa248 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:52:38.893: INFO: Pod "test-deployment-952h6-54bc444df-cjst2" is available:
    &Pod{ObjectMeta:{test-deployment-952h6-54bc444df-cjst2 test-deployment-952h6-54bc444df- deployment-6771  673b16c0-f0eb-4022-ad4b-96435afbef1d 13875 0 2023-01-30 08:52:36 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [{apps/v1 ReplicaSet test-deployment-952h6-54bc444df d60b6f1f-f038-4a95-a068-c5640d934944 0xc005a5efe0 0xc005a5efe1}] [] [{kube-controller-manager Update v1 2023-01-30 08:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d60b6f1f-f038-4a95-a068-c5640d934944\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:52:37 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.200\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ztlzx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ztlzx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.200,StartTime:2023-01-30 08:52:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:52:37 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://c3e26feecd1b8bfbef796d812c3abf01dde20455b1dd94a1e30f4271050b8084,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.200,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:38.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-6771" for this suite. 01/30/23 08:52:38.897
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:38.903
Jan 30 08:52:38.903: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename disruption 01/30/23 08:52:38.904
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:38.914
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:38.917
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
STEP: Creating a pdb that targets all three pods in a test replica set 01/30/23 08:52:38.919
STEP: Waiting for the pdb to be processed 01/30/23 08:52:38.923
STEP: First trying to evict a pod which shouldn't be evictable 01/30/23 08:52:40.952
STEP: Waiting for all pods to be running 01/30/23 08:52:40.952
Jan 30 08:52:40.954: INFO: pods: 0 < 3
STEP: locating a running pod 01/30/23 08:52:42.958
STEP: Updating the pdb to allow a pod to be evicted 01/30/23 08:52:42.963
STEP: Waiting for the pdb to be processed 01/30/23 08:52:42.979
STEP: Trying to evict the same pod we tried earlier which should now be evictable 01/30/23 08:52:44.983
STEP: Waiting for all pods to be running 01/30/23 08:52:44.984
STEP: Waiting for the pdb to observed all healthy pods 01/30/23 08:52:44.986
STEP: Patching the pdb to disallow a pod to be evicted 01/30/23 08:52:45.016
STEP: Waiting for the pdb to be processed 01/30/23 08:52:45.035
STEP: Waiting for all pods to be running 01/30/23 08:52:47.041
STEP: locating a running pod 01/30/23 08:52:47.043
STEP: Deleting the pdb to allow a pod to be evicted 01/30/23 08:52:47.048
STEP: Waiting for the pdb to be deleted 01/30/23 08:52:47.06
STEP: Trying to evict the same pod we tried earlier which should now be evictable 01/30/23 08:52:47.062
STEP: Waiting for all pods to be running 01/30/23 08:52:47.062
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:47.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-7758" for this suite. 01/30/23 08:52:47.084
------------------------------
â€¢ [SLOW TEST] [8.190 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:38.903
    Jan 30 08:52:38.903: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename disruption 01/30/23 08:52:38.904
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:38.914
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:38.917
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should block an eviction until the PDB is updated to allow it [Conformance]
      test/e2e/apps/disruption.go:347
    STEP: Creating a pdb that targets all three pods in a test replica set 01/30/23 08:52:38.919
    STEP: Waiting for the pdb to be processed 01/30/23 08:52:38.923
    STEP: First trying to evict a pod which shouldn't be evictable 01/30/23 08:52:40.952
    STEP: Waiting for all pods to be running 01/30/23 08:52:40.952
    Jan 30 08:52:40.954: INFO: pods: 0 < 3
    STEP: locating a running pod 01/30/23 08:52:42.958
    STEP: Updating the pdb to allow a pod to be evicted 01/30/23 08:52:42.963
    STEP: Waiting for the pdb to be processed 01/30/23 08:52:42.979
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 01/30/23 08:52:44.983
    STEP: Waiting for all pods to be running 01/30/23 08:52:44.984
    STEP: Waiting for the pdb to observed all healthy pods 01/30/23 08:52:44.986
    STEP: Patching the pdb to disallow a pod to be evicted 01/30/23 08:52:45.016
    STEP: Waiting for the pdb to be processed 01/30/23 08:52:45.035
    STEP: Waiting for all pods to be running 01/30/23 08:52:47.041
    STEP: locating a running pod 01/30/23 08:52:47.043
    STEP: Deleting the pdb to allow a pod to be evicted 01/30/23 08:52:47.048
    STEP: Waiting for the pdb to be deleted 01/30/23 08:52:47.06
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 01/30/23 08:52:47.062
    STEP: Waiting for all pods to be running 01/30/23 08:52:47.062
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:47.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-7758" for this suite. 01/30/23 08:52:47.084
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:47.094
Jan 30 08:52:47.094: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename cronjob 01/30/23 08:52:47.094
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:47.11
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:47.112
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
STEP: Creating a cronjob 01/30/23 08:52:47.114
STEP: creating 01/30/23 08:52:47.114
STEP: getting 01/30/23 08:52:47.12
STEP: listing 01/30/23 08:52:47.123
STEP: watching 01/30/23 08:52:47.125
Jan 30 08:52:47.125: INFO: starting watch
STEP: cluster-wide listing 01/30/23 08:52:47.126
STEP: cluster-wide watching 01/30/23 08:52:47.128
Jan 30 08:52:47.128: INFO: starting watch
STEP: patching 01/30/23 08:52:47.129
STEP: updating 01/30/23 08:52:47.135
Jan 30 08:52:47.142: INFO: waiting for watch events with expected annotations
Jan 30 08:52:47.142: INFO: saw patched and updated annotations
STEP: patching /status 01/30/23 08:52:47.142
STEP: updating /status 01/30/23 08:52:47.15
STEP: get /status 01/30/23 08:52:47.158
STEP: deleting 01/30/23 08:52:47.16
STEP: deleting a collection 01/30/23 08:52:47.169
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:47.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-7272" for this suite. 01/30/23 08:52:47.18
------------------------------
â€¢ [0.093 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:47.094
    Jan 30 08:52:47.094: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename cronjob 01/30/23 08:52:47.094
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:47.11
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:47.112
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CronJob API operations [Conformance]
      test/e2e/apps/cronjob.go:319
    STEP: Creating a cronjob 01/30/23 08:52:47.114
    STEP: creating 01/30/23 08:52:47.114
    STEP: getting 01/30/23 08:52:47.12
    STEP: listing 01/30/23 08:52:47.123
    STEP: watching 01/30/23 08:52:47.125
    Jan 30 08:52:47.125: INFO: starting watch
    STEP: cluster-wide listing 01/30/23 08:52:47.126
    STEP: cluster-wide watching 01/30/23 08:52:47.128
    Jan 30 08:52:47.128: INFO: starting watch
    STEP: patching 01/30/23 08:52:47.129
    STEP: updating 01/30/23 08:52:47.135
    Jan 30 08:52:47.142: INFO: waiting for watch events with expected annotations
    Jan 30 08:52:47.142: INFO: saw patched and updated annotations
    STEP: patching /status 01/30/23 08:52:47.142
    STEP: updating /status 01/30/23 08:52:47.15
    STEP: get /status 01/30/23 08:52:47.158
    STEP: deleting 01/30/23 08:52:47.16
    STEP: deleting a collection 01/30/23 08:52:47.169
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:47.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-7272" for this suite. 01/30/23 08:52:47.18
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:47.188
Jan 30 08:52:47.188: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:52:47.189
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:47.202
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:47.205
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:51.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-3334" for this suite. 01/30/23 08:52:51.223
------------------------------
â€¢ [4.053 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should have an terminated reason [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:47.188
    Jan 30 08:52:47.188: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubelet-test 01/30/23 08:52:47.189
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:47.202
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:47.205
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should have an terminated reason [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:110
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:51.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-3334" for this suite. 01/30/23 08:52:51.223
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch
  should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:51.241
Jan 30 08:52:51.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 08:52:51.242
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:51.261
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:51.263
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
STEP: creating Agnhost RC 01/30/23 08:52:51.266
Jan 30 08:52:51.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-1071 create -f -'
Jan 30 08:52:51.848: INFO: stderr: ""
Jan 30 08:52:51.848: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 01/30/23 08:52:51.848
Jan 30 08:52:52.851: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:52:52.852: INFO: Found 1 / 1
Jan 30 08:52:52.852: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods 01/30/23 08:52:52.852
Jan 30 08:52:52.854: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:52:52.854: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 30 08:52:52.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-1071 patch pod agnhost-primary-f9k29 -p {"metadata":{"annotations":{"x":"y"}}}'
Jan 30 08:52:52.938: INFO: stderr: ""
Jan 30 08:52:52.938: INFO: stdout: "pod/agnhost-primary-f9k29 patched\n"
STEP: checking annotations 01/30/23 08:52:52.938
Jan 30 08:52:52.941: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 08:52:52.941: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:52.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1071" for this suite. 01/30/23 08:52:52.945
------------------------------
â€¢ [1.711 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl patch
  test/e2e/kubectl/kubectl.go:1646
    should add annotations for pods in rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1652

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:51.241
    Jan 30 08:52:51.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 08:52:51.242
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:51.261
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:51.263
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should add annotations for pods in rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1652
    STEP: creating Agnhost RC 01/30/23 08:52:51.266
    Jan 30 08:52:51.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-1071 create -f -'
    Jan 30 08:52:51.848: INFO: stderr: ""
    Jan 30 08:52:51.848: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 01/30/23 08:52:51.848
    Jan 30 08:52:52.851: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 30 08:52:52.852: INFO: Found 1 / 1
    Jan 30 08:52:52.852: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    STEP: patching all pods 01/30/23 08:52:52.852
    Jan 30 08:52:52.854: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 30 08:52:52.854: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Jan 30 08:52:52.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-1071 patch pod agnhost-primary-f9k29 -p {"metadata":{"annotations":{"x":"y"}}}'
    Jan 30 08:52:52.938: INFO: stderr: ""
    Jan 30 08:52:52.938: INFO: stdout: "pod/agnhost-primary-f9k29 patched\n"
    STEP: checking annotations 01/30/23 08:52:52.938
    Jan 30 08:52:52.941: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 30 08:52:52.941: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:52.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1071" for this suite. 01/30/23 08:52:52.945
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:52.954
Jan 30 08:52:52.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename deployment 01/30/23 08:52:52.955
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:52.979
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:52.983
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
Jan 30 08:52:52.986: INFO: Creating simple deployment test-new-deployment
Jan 30 08:52:52.999: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource 01/30/23 08:52:55.009
STEP: updating a scale subresource 01/30/23 08:52:55.012
STEP: verifying the deployment Spec.Replicas was modified 01/30/23 08:52:55.022
STEP: Patch a scale subresource 01/30/23 08:52:55.025
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:52:55.049: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-820  9bd1f9d8-f5f9-4960-9129-784d21e648c9 14147 3 2023-01-30 08:52:52 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-01-30 08:52:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:52:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000df0518 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 08:52:53 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-01-30 08:52:53 +0000 UTC,LastTransitionTime:2023-01-30 08:52:52 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 08:52:55.054: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-820  7ec16555-27a0-4b3d-8883-940141ca2c53 14152 2 2023-01-30 08:52:52 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 9bd1f9d8-f5f9-4960-9129-784d21e648c9 0xc00462ad07 0xc00462ad08}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:52:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9bd1f9d8-f5f9-4960-9129-784d21e648c9\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:52:55 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00462ad98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:52:55.058: INFO: Pod "test-new-deployment-7f5969cbc7-fprg6" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-fprg6 test-new-deployment-7f5969cbc7- deployment-820  86bdf489-62ca-4d5d-a528-ffb2cfc95d55 14150 0 2023-01-30 08:52:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 7ec16555-27a0-4b3d-8883-940141ca2c53 0xc000df0e97 0xc000df0e98}] [] [{kube-controller-manager Update v1 2023-01-30 08:52:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7ec16555-27a0-4b3d-8883-940141ca2c53\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vqdlc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vqdlc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:52:55.059: INFO: Pod "test-new-deployment-7f5969cbc7-hzjq5" is available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-hzjq5 test-new-deployment-7f5969cbc7- deployment-820  2b0a83c3-2a08-4ccf-9d50-f31a7ba635e5 14135 0 2023-01-30 08:52:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 7ec16555-27a0-4b3d-8883-940141ca2c53 0xc000df1010 0xc000df1011}] [] [{kube-controller-manager Update v1 2023-01-30 08:52:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7ec16555-27a0-4b3d-8883-940141ca2c53\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:52:53 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.205\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pvcfh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pvcfh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.205,StartTime:2023-01-30 08:52:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:52:53 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://1f3ec8869395c2579ff2325e39d8c44cdd72a5d4ca5d1115afc0f61aafb544b0,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.205,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:55.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-820" for this suite. 01/30/23 08:52:55.073
------------------------------
â€¢ [2.132 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:52.954
    Jan 30 08:52:52.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename deployment 01/30/23 08:52:52.955
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:52.979
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:52.983
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] Deployment should have a working scale subresource [Conformance]
      test/e2e/apps/deployment.go:150
    Jan 30 08:52:52.986: INFO: Creating simple deployment test-new-deployment
    Jan 30 08:52:52.999: INFO: deployment "test-new-deployment" doesn't have the required revision set
    STEP: getting scale subresource 01/30/23 08:52:55.009
    STEP: updating a scale subresource 01/30/23 08:52:55.012
    STEP: verifying the deployment Spec.Replicas was modified 01/30/23 08:52:55.022
    STEP: Patch a scale subresource 01/30/23 08:52:55.025
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 30 08:52:55.049: INFO: Deployment "test-new-deployment":
    &Deployment{ObjectMeta:{test-new-deployment  deployment-820  9bd1f9d8-f5f9-4960-9129-784d21e648c9 14147 3 2023-01-30 08:52:52 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-01-30 08:52:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:52:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000df0518 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 08:52:53 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-01-30 08:52:53 +0000 UTC,LastTransitionTime:2023-01-30 08:52:52 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Jan 30 08:52:55.054: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
    &ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-820  7ec16555-27a0-4b3d-8883-940141ca2c53 14152 2 2023-01-30 08:52:52 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 9bd1f9d8-f5f9-4960-9129-784d21e648c9 0xc00462ad07 0xc00462ad08}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:52:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9bd1f9d8-f5f9-4960-9129-784d21e648c9\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:52:55 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00462ad98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:52:55.058: INFO: Pod "test-new-deployment-7f5969cbc7-fprg6" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-fprg6 test-new-deployment-7f5969cbc7- deployment-820  86bdf489-62ca-4d5d-a528-ffb2cfc95d55 14150 0 2023-01-30 08:52:55 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 7ec16555-27a0-4b3d-8883-940141ca2c53 0xc000df0e97 0xc000df0e98}] [] [{kube-controller-manager Update v1 2023-01-30 08:52:55 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7ec16555-27a0-4b3d-8883-940141ca2c53\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vqdlc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vqdlc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:55 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:52:55.059: INFO: Pod "test-new-deployment-7f5969cbc7-hzjq5" is available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-hzjq5 test-new-deployment-7f5969cbc7- deployment-820  2b0a83c3-2a08-4ccf-9d50-f31a7ba635e5 14135 0 2023-01-30 08:52:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 7ec16555-27a0-4b3d-8883-940141ca2c53 0xc000df1010 0xc000df1011}] [] [{kube-controller-manager Update v1 2023-01-30 08:52:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7ec16555-27a0-4b3d-8883-940141ca2c53\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:52:53 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.205\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pvcfh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pvcfh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:52:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.205,StartTime:2023-01-30 08:52:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:52:53 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://1f3ec8869395c2579ff2325e39d8c44cdd72a5d4ca5d1115afc0f61aafb544b0,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.205,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:55.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-820" for this suite. 01/30/23 08:52:55.073
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:55.087
Jan 30 08:52:55.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir-wrapper 01/30/23 08:52:55.088
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:55.108
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:55.111
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
Jan 30 08:52:55.137: INFO: Waiting up to 5m0s for pod "pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9" in namespace "emptydir-wrapper-5840" to be "running and ready"
Jan 30 08:52:55.140: INFO: Pod "pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.405372ms
Jan 30 08:52:55.140: INFO: The phase of Pod pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:52:57.144: INFO: Pod "pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9": Phase="Running", Reason="", readiness=true. Elapsed: 2.006709659s
Jan 30 08:52:57.144: INFO: The phase of Pod pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9 is Running (Ready = true)
Jan 30 08:52:57.144: INFO: Pod "pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9" satisfied condition "running and ready"
STEP: Cleaning up the secret 01/30/23 08:52:57.147
STEP: Cleaning up the configmap 01/30/23 08:52:57.163
STEP: Cleaning up the pod 01/30/23 08:52:57.169
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:52:57.180: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-5840" for this suite. 01/30/23 08:52:57.184
------------------------------
â€¢ [2.102 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:55.087
    Jan 30 08:52:55.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir-wrapper 01/30/23 08:52:55.088
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:55.108
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:55.111
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not conflict [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:67
    Jan 30 08:52:55.137: INFO: Waiting up to 5m0s for pod "pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9" in namespace "emptydir-wrapper-5840" to be "running and ready"
    Jan 30 08:52:55.140: INFO: Pod "pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.405372ms
    Jan 30 08:52:55.140: INFO: The phase of Pod pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:52:57.144: INFO: Pod "pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9": Phase="Running", Reason="", readiness=true. Elapsed: 2.006709659s
    Jan 30 08:52:57.144: INFO: The phase of Pod pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9 is Running (Ready = true)
    Jan 30 08:52:57.144: INFO: Pod "pod-secrets-a4c25d21-272d-4a75-aa4e-6392dfa1f3a9" satisfied condition "running and ready"
    STEP: Cleaning up the secret 01/30/23 08:52:57.147
    STEP: Cleaning up the configmap 01/30/23 08:52:57.163
    STEP: Cleaning up the pod 01/30/23 08:52:57.169
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:52:57.180: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-5840" for this suite. 01/30/23 08:52:57.184
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:52:57.193
Jan 30 08:52:57.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sysctl 01/30/23 08:52:57.194
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:57.208
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:57.211
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 01/30/23 08:52:57.214
STEP: Watching for error events or started pod 01/30/23 08:52:57.221
STEP: Waiting for pod completion 01/30/23 08:52:59.226
Jan 30 08:52:59.226: INFO: Waiting up to 3m0s for pod "sysctl-ee08e506-9ac2-43df-b738-530135be042d" in namespace "sysctl-1953" to be "completed"
Jan 30 08:52:59.229: INFO: Pod "sysctl-ee08e506-9ac2-43df-b738-530135be042d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.818255ms
Jan 30 08:53:01.234: INFO: Pod "sysctl-ee08e506-9ac2-43df-b738-530135be042d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.007889504s
Jan 30 08:53:01.234: INFO: Pod "sysctl-ee08e506-9ac2-43df-b738-530135be042d" satisfied condition "completed"
STEP: Checking that the pod succeeded 01/30/23 08:53:01.237
STEP: Getting logs from the pod 01/30/23 08:53:01.238
STEP: Checking that the sysctl is actually updated 01/30/23 08:53:01.258
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:53:01.259: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-1953" for this suite. 01/30/23 08:53:01.266
------------------------------
â€¢ [4.099 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:52:57.193
    Jan 30 08:52:57.193: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sysctl 01/30/23 08:52:57.194
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:52:57.208
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:52:57.211
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:77
    STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 01/30/23 08:52:57.214
    STEP: Watching for error events or started pod 01/30/23 08:52:57.221
    STEP: Waiting for pod completion 01/30/23 08:52:59.226
    Jan 30 08:52:59.226: INFO: Waiting up to 3m0s for pod "sysctl-ee08e506-9ac2-43df-b738-530135be042d" in namespace "sysctl-1953" to be "completed"
    Jan 30 08:52:59.229: INFO: Pod "sysctl-ee08e506-9ac2-43df-b738-530135be042d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.818255ms
    Jan 30 08:53:01.234: INFO: Pod "sysctl-ee08e506-9ac2-43df-b738-530135be042d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.007889504s
    Jan 30 08:53:01.234: INFO: Pod "sysctl-ee08e506-9ac2-43df-b738-530135be042d" satisfied condition "completed"
    STEP: Checking that the pod succeeded 01/30/23 08:53:01.237
    STEP: Getting logs from the pod 01/30/23 08:53:01.238
    STEP: Checking that the sysctl is actually updated 01/30/23 08:53:01.258
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:53:01.259: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-1953" for this suite. 01/30/23 08:53:01.266
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:53:01.295
Jan 30 08:53:01.295: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename daemonsets 01/30/23 08:53:01.296
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:53:01.318
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:53:01.321
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
Jan 30 08:53:01.344: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes. 01/30/23 08:53:01.35
Jan 30 08:53:01.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:53:01.353: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched. 01/30/23 08:53:01.353
Jan 30 08:53:01.375: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:53:01.375: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:53:02.380: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:53:02.380: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled 01/30/23 08:53:02.383
Jan 30 08:53:02.402: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:53:02.405: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Jan 30 08:53:03.411: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:53:03.411: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 01/30/23 08:53:03.411
Jan 30 08:53:03.429: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:53:03.430: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:53:04.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:53:04.433: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:53:05.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:53:05.433: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:53:06.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:53:06.433: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:53:07.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:53:07.433: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/30/23 08:53:07.439
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4037, will wait for the garbage collector to delete the pods 01/30/23 08:53:07.44
Jan 30 08:53:07.499: INFO: Deleting DaemonSet.extensions daemon-set took: 5.991011ms
Jan 30 08:53:07.600: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.416295ms
Jan 30 08:53:11.303: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:53:11.303: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 08:53:11.304: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14337"},"items":null}

Jan 30 08:53:11.306: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14337"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:53:11.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4037" for this suite. 01/30/23 08:53:11.332
------------------------------
â€¢ [SLOW TEST] [10.042 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:53:01.295
    Jan 30 08:53:01.295: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename daemonsets 01/30/23 08:53:01.296
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:53:01.318
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:53:01.321
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop complex daemon [Conformance]
      test/e2e/apps/daemon_set.go:194
    Jan 30 08:53:01.344: INFO: Creating daemon "daemon-set" with a node selector
    STEP: Initially, daemon pods should not be running on any nodes. 01/30/23 08:53:01.35
    Jan 30 08:53:01.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:53:01.353: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Change node label to blue, check that daemon pod is launched. 01/30/23 08:53:01.353
    Jan 30 08:53:01.375: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:53:01.375: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:53:02.380: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:53:02.380: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    STEP: Update the node label to green, and wait for daemons to be unscheduled 01/30/23 08:53:02.383
    Jan 30 08:53:02.402: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:53:02.405: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
    Jan 30 08:53:03.411: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:53:03.411: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 01/30/23 08:53:03.411
    Jan 30 08:53:03.429: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:53:03.430: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:53:04.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:53:04.433: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:53:05.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:53:05.433: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:53:06.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:53:06.433: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:53:07.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:53:07.433: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/30/23 08:53:07.439
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4037, will wait for the garbage collector to delete the pods 01/30/23 08:53:07.44
    Jan 30 08:53:07.499: INFO: Deleting DaemonSet.extensions daemon-set took: 5.991011ms
    Jan 30 08:53:07.600: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.416295ms
    Jan 30 08:53:11.303: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:53:11.303: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 30 08:53:11.304: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14337"},"items":null}

    Jan 30 08:53:11.306: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14337"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:53:11.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4037" for this suite. 01/30/23 08:53:11.332
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:53:11.338
Jan 30 08:53:11.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 08:53:11.339
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:53:11.35
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:53:11.352
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
STEP: Creating configMap with name cm-test-opt-del-8588731a-de07-4528-bf51-32d44805234c 01/30/23 08:53:11.356
STEP: Creating configMap with name cm-test-opt-upd-0f9704d9-98c5-4800-80f5-e30294b6d099 01/30/23 08:53:11.362
STEP: Creating the pod 01/30/23 08:53:11.366
Jan 30 08:53:11.374: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c" in namespace "projected-8581" to be "running and ready"
Jan 30 08:53:11.376: INFO: Pod "pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.047238ms
Jan 30 08:53:11.376: INFO: The phase of Pod pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:53:13.378: INFO: Pod "pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c": Phase="Running", Reason="", readiness=true. Elapsed: 2.00463231s
Jan 30 08:53:13.378: INFO: The phase of Pod pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c is Running (Ready = true)
Jan 30 08:53:13.378: INFO: Pod "pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-8588731a-de07-4528-bf51-32d44805234c 01/30/23 08:53:13.39
STEP: Updating configmap cm-test-opt-upd-0f9704d9-98c5-4800-80f5-e30294b6d099 01/30/23 08:53:13.395
STEP: Creating configMap with name cm-test-opt-create-bf0b2d80-7b16-4a82-be8b-989449a9d5a4 01/30/23 08:53:13.399
STEP: waiting to observe update in volume 01/30/23 08:53:13.402
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:53:15.418: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8581" for this suite. 01/30/23 08:53:15.421
------------------------------
â€¢ [4.092 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:53:11.338
    Jan 30 08:53:11.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 08:53:11.339
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:53:11.35
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:53:11.352
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:174
    STEP: Creating configMap with name cm-test-opt-del-8588731a-de07-4528-bf51-32d44805234c 01/30/23 08:53:11.356
    STEP: Creating configMap with name cm-test-opt-upd-0f9704d9-98c5-4800-80f5-e30294b6d099 01/30/23 08:53:11.362
    STEP: Creating the pod 01/30/23 08:53:11.366
    Jan 30 08:53:11.374: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c" in namespace "projected-8581" to be "running and ready"
    Jan 30 08:53:11.376: INFO: Pod "pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.047238ms
    Jan 30 08:53:11.376: INFO: The phase of Pod pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:53:13.378: INFO: Pod "pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c": Phase="Running", Reason="", readiness=true. Elapsed: 2.00463231s
    Jan 30 08:53:13.378: INFO: The phase of Pod pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c is Running (Ready = true)
    Jan 30 08:53:13.378: INFO: Pod "pod-projected-configmaps-05ac492f-7362-4ec9-91d0-d62319d13e8c" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-8588731a-de07-4528-bf51-32d44805234c 01/30/23 08:53:13.39
    STEP: Updating configmap cm-test-opt-upd-0f9704d9-98c5-4800-80f5-e30294b6d099 01/30/23 08:53:13.395
    STEP: Creating configMap with name cm-test-opt-create-bf0b2d80-7b16-4a82-be8b-989449a9d5a4 01/30/23 08:53:13.399
    STEP: waiting to observe update in volume 01/30/23 08:53:13.402
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:53:15.418: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8581" for this suite. 01/30/23 08:53:15.421
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial]
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:53:15.431
Jan 30 08:53:15.431: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename taint-single-pod 01/30/23 08:53:15.432
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:53:15.442
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:53:15.445
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:170
Jan 30 08:53:15.447: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 08:54:15.459: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
Jan 30 08:54:15.461: INFO: Starting informer...
STEP: Starting pod... 01/30/23 08:54:15.461
Jan 30 08:54:15.675: INFO: Pod is running on tce-worker. Tainting Node
STEP: Trying to apply a taint on the Node 01/30/23 08:54:15.675
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 01/30/23 08:54:15.684
STEP: Waiting short time to make sure Pod is queued for deletion 01/30/23 08:54:15.687
Jan 30 08:54:15.687: INFO: Pod wasn't evicted. Proceeding
Jan 30 08:54:15.687: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 01/30/23 08:54:15.7
STEP: Waiting some time to make sure that toleration time passed. 01/30/23 08:54:15.709
Jan 30 08:55:30.710: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:55:30.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-single-pod-4569" for this suite. 01/30/23 08:55:30.714
------------------------------
â€¢ [SLOW TEST] [135.289 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:53:15.431
    Jan 30 08:53:15.431: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename taint-single-pod 01/30/23 08:53:15.432
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:53:15.442
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:53:15.445
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/node/taints.go:170
    Jan 30 08:53:15.447: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 30 08:54:15.459: INFO: Waiting for terminating namespaces to be deleted...
    [It] removing taint cancels eviction [Disruptive] [Conformance]
      test/e2e/node/taints.go:293
    Jan 30 08:54:15.461: INFO: Starting informer...
    STEP: Starting pod... 01/30/23 08:54:15.461
    Jan 30 08:54:15.675: INFO: Pod is running on tce-worker. Tainting Node
    STEP: Trying to apply a taint on the Node 01/30/23 08:54:15.675
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 01/30/23 08:54:15.684
    STEP: Waiting short time to make sure Pod is queued for deletion 01/30/23 08:54:15.687
    Jan 30 08:54:15.687: INFO: Pod wasn't evicted. Proceeding
    Jan 30 08:54:15.687: INFO: Removing taint from Node
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 01/30/23 08:54:15.7
    STEP: Waiting some time to make sure that toleration time passed. 01/30/23 08:54:15.709
    Jan 30 08:55:30.710: INFO: Pod wasn't evicted. Test successful
    [AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:55:30.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-single-pod-4569" for this suite. 01/30/23 08:55:30.714
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:55:30.72
Jan 30 08:55:30.720: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename namespaces 01/30/23 08:55:30.721
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:30.734
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:55:30.737
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
STEP: Creating a test namespace 01/30/23 08:55:30.74
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:30.75
STEP: Creating a pod in the namespace 01/30/23 08:55:30.753
STEP: Waiting for the pod to have running status 01/30/23 08:55:30.76
Jan 30 08:55:30.760: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-5015" to be "running"
Jan 30 08:55:30.762: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.065795ms
Jan 30 08:55:32.782: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.021749595s
Jan 30 08:55:32.782: INFO: Pod "test-pod" satisfied condition "running"
STEP: Deleting the namespace 01/30/23 08:55:32.782
STEP: Waiting for the namespace to be removed. 01/30/23 08:55:32.789
STEP: Recreating the namespace 01/30/23 08:55:43.792
STEP: Verifying there are no pods in the namespace 01/30/23 08:55:43.816
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:55:43.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-8214" for this suite. 01/30/23 08:55:43.821
STEP: Destroying namespace "nsdeletetest-5015" for this suite. 01/30/23 08:55:43.825
Jan 30 08:55:43.828: INFO: Namespace nsdeletetest-5015 was already deleted
STEP: Destroying namespace "nsdeletetest-5942" for this suite. 01/30/23 08:55:43.828
------------------------------
â€¢ [SLOW TEST] [13.113 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:55:30.72
    Jan 30 08:55:30.720: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename namespaces 01/30/23 08:55:30.721
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:30.734
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:55:30.737
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all pods are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:243
    STEP: Creating a test namespace 01/30/23 08:55:30.74
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:30.75
    STEP: Creating a pod in the namespace 01/30/23 08:55:30.753
    STEP: Waiting for the pod to have running status 01/30/23 08:55:30.76
    Jan 30 08:55:30.760: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-5015" to be "running"
    Jan 30 08:55:30.762: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.065795ms
    Jan 30 08:55:32.782: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.021749595s
    Jan 30 08:55:32.782: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Deleting the namespace 01/30/23 08:55:32.782
    STEP: Waiting for the namespace to be removed. 01/30/23 08:55:32.789
    STEP: Recreating the namespace 01/30/23 08:55:43.792
    STEP: Verifying there are no pods in the namespace 01/30/23 08:55:43.816
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:55:43.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-8214" for this suite. 01/30/23 08:55:43.821
    STEP: Destroying namespace "nsdeletetest-5015" for this suite. 01/30/23 08:55:43.825
    Jan 30 08:55:43.828: INFO: Namespace nsdeletetest-5015 was already deleted
    STEP: Destroying namespace "nsdeletetest-5942" for this suite. 01/30/23 08:55:43.828
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:55:43.833
Jan 30 08:55:43.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replicaset 01/30/23 08:55:43.834
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:43.846
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:55:43.849
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
STEP: Given a Pod with a 'name' label pod-adoption-release is created 01/30/23 08:55:43.852
Jan 30 08:55:43.858: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-9396" to be "running and ready"
Jan 30 08:55:43.860: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 2.241776ms
Jan 30 08:55:43.860: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:55:45.863: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.00491009s
Jan 30 08:55:45.863: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
Jan 30 08:55:45.863: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
STEP: When a replicaset with a matching selector is created 01/30/23 08:55:45.865
STEP: Then the orphan pod is adopted 01/30/23 08:55:45.881
STEP: When the matched label of one of its pods change 01/30/23 08:55:46.887
Jan 30 08:55:46.889: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released 01/30/23 08:55:46.908
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 30 08:55:47.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-9396" for this suite. 01/30/23 08:55:47.915
------------------------------
â€¢ [4.088 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:55:43.833
    Jan 30 08:55:43.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replicaset 01/30/23 08:55:43.834
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:43.846
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:55:43.849
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching pods on creation and release no longer matching pods [Conformance]
      test/e2e/apps/replica_set.go:131
    STEP: Given a Pod with a 'name' label pod-adoption-release is created 01/30/23 08:55:43.852
    Jan 30 08:55:43.858: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-9396" to be "running and ready"
    Jan 30 08:55:43.860: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 2.241776ms
    Jan 30 08:55:43.860: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:55:45.863: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.00491009s
    Jan 30 08:55:45.863: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
    Jan 30 08:55:45.863: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
    STEP: When a replicaset with a matching selector is created 01/30/23 08:55:45.865
    STEP: Then the orphan pod is adopted 01/30/23 08:55:45.881
    STEP: When the matched label of one of its pods change 01/30/23 08:55:46.887
    Jan 30 08:55:46.889: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
    STEP: Then the pod is released 01/30/23 08:55:46.908
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:55:47.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-9396" for this suite. 01/30/23 08:55:47.915
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:55:47.921
Jan 30 08:55:47.921: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename podtemplate 01/30/23 08:55:47.923
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:47.937
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:55:47.94
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
STEP: Create a pod template 01/30/23 08:55:47.942
STEP: Replace a pod template 01/30/23 08:55:47.946
Jan 30 08:55:47.953: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Jan 30 08:55:47.953: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-4520" for this suite. 01/30/23 08:55:47.956
------------------------------
â€¢ [0.039 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:55:47.921
    Jan 30 08:55:47.921: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename podtemplate 01/30/23 08:55:47.923
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:47.937
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:55:47.94
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace a pod template [Conformance]
      test/e2e/common/node/podtemplates.go:176
    STEP: Create a pod template 01/30/23 08:55:47.942
    STEP: Replace a pod template 01/30/23 08:55:47.946
    Jan 30 08:55:47.953: INFO: Found updated podtemplate annotation: "true"

    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:55:47.953: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-4520" for this suite. 01/30/23 08:55:47.956
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:55:47.961
Jan 30 08:55:47.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename subpath 01/30/23 08:55:47.962
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:47.973
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:55:47.976
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/30/23 08:55:47.978
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
STEP: Creating pod pod-subpath-test-configmap-kprr 01/30/23 08:55:47.985
STEP: Creating a pod to test atomic-volume-subpath 01/30/23 08:55:47.985
Jan 30 08:55:47.994: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-kprr" in namespace "subpath-7666" to be "Succeeded or Failed"
Jan 30 08:55:47.996: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Pending", Reason="", readiness=false. Elapsed: 2.169165ms
Jan 30 08:55:50.001: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 2.006782419s
Jan 30 08:55:52.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 4.005805854s
Jan 30 08:55:54.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 6.005772973s
Jan 30 08:55:56.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 8.005968853s
Jan 30 08:55:57.999: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 10.004611088s
Jan 30 08:56:00.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 12.00586117s
Jan 30 08:56:01.999: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 14.004758197s
Jan 30 08:56:03.999: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 16.005028398s
Jan 30 08:56:06.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 18.006256489s
Jan 30 08:56:08.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 20.005685074s
Jan 30 08:56:10.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=false. Elapsed: 22.006059152s
Jan 30 08:56:11.999: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.004944199s
STEP: Saw pod success 01/30/23 08:56:11.999
Jan 30 08:56:11.999: INFO: Pod "pod-subpath-test-configmap-kprr" satisfied condition "Succeeded or Failed"
Jan 30 08:56:12.004: INFO: Trying to get logs from node tce-worker2 pod pod-subpath-test-configmap-kprr container test-container-subpath-configmap-kprr: <nil>
STEP: delete the pod 01/30/23 08:56:12.012
Jan 30 08:56:12.019: INFO: Waiting for pod pod-subpath-test-configmap-kprr to disappear
Jan 30 08:56:12.022: INFO: Pod pod-subpath-test-configmap-kprr no longer exists
STEP: Deleting pod pod-subpath-test-configmap-kprr 01/30/23 08:56:12.022
Jan 30 08:56:12.022: INFO: Deleting pod "pod-subpath-test-configmap-kprr" in namespace "subpath-7666"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 30 08:56:12.024: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-7666" for this suite. 01/30/23 08:56:12.026
------------------------------
â€¢ [SLOW TEST] [24.071 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/storage/subpath.go:80

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:55:47.961
    Jan 30 08:55:47.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename subpath 01/30/23 08:55:47.962
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:55:47.973
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:55:47.976
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/30/23 08:55:47.978
    [It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
      test/e2e/storage/subpath.go:80
    STEP: Creating pod pod-subpath-test-configmap-kprr 01/30/23 08:55:47.985
    STEP: Creating a pod to test atomic-volume-subpath 01/30/23 08:55:47.985
    Jan 30 08:55:47.994: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-kprr" in namespace "subpath-7666" to be "Succeeded or Failed"
    Jan 30 08:55:47.996: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Pending", Reason="", readiness=false. Elapsed: 2.169165ms
    Jan 30 08:55:50.001: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 2.006782419s
    Jan 30 08:55:52.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 4.005805854s
    Jan 30 08:55:54.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 6.005772973s
    Jan 30 08:55:56.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 8.005968853s
    Jan 30 08:55:57.999: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 10.004611088s
    Jan 30 08:56:00.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 12.00586117s
    Jan 30 08:56:01.999: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 14.004758197s
    Jan 30 08:56:03.999: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 16.005028398s
    Jan 30 08:56:06.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 18.006256489s
    Jan 30 08:56:08.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=true. Elapsed: 20.005685074s
    Jan 30 08:56:10.000: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Running", Reason="", readiness=false. Elapsed: 22.006059152s
    Jan 30 08:56:11.999: INFO: Pod "pod-subpath-test-configmap-kprr": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.004944199s
    STEP: Saw pod success 01/30/23 08:56:11.999
    Jan 30 08:56:11.999: INFO: Pod "pod-subpath-test-configmap-kprr" satisfied condition "Succeeded or Failed"
    Jan 30 08:56:12.004: INFO: Trying to get logs from node tce-worker2 pod pod-subpath-test-configmap-kprr container test-container-subpath-configmap-kprr: <nil>
    STEP: delete the pod 01/30/23 08:56:12.012
    Jan 30 08:56:12.019: INFO: Waiting for pod pod-subpath-test-configmap-kprr to disappear
    Jan 30 08:56:12.022: INFO: Pod pod-subpath-test-configmap-kprr no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-kprr 01/30/23 08:56:12.022
    Jan 30 08:56:12.022: INFO: Deleting pod "pod-subpath-test-configmap-kprr" in namespace "subpath-7666"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:56:12.024: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-7666" for this suite. 01/30/23 08:56:12.026
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:56:12.038
Jan 30 08:56:12.038: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 08:56:12.039
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:12.054
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:12.057
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
Jan 30 08:56:12.059: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: creating the pod 01/30/23 08:56:12.059
STEP: submitting the pod to kubernetes 01/30/23 08:56:12.06
Jan 30 08:56:12.067: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d" in namespace "pods-2379" to be "running and ready"
Jan 30 08:56:12.070: INFO: Pod "pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.396728ms
Jan 30 08:56:12.070: INFO: The phase of Pod pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:56:14.073: INFO: Pod "pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d": Phase="Running", Reason="", readiness=true. Elapsed: 2.004962489s
Jan 30 08:56:14.073: INFO: The phase of Pod pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d is Running (Ready = true)
Jan 30 08:56:14.073: INFO: Pod "pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 08:56:14.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2379" for this suite. 01/30/23 08:56:14.085
------------------------------
â€¢ [2.065 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:56:12.038
    Jan 30 08:56:12.038: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 08:56:12.039
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:12.054
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:12.057
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:618
    Jan 30 08:56:12.059: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: creating the pod 01/30/23 08:56:12.059
    STEP: submitting the pod to kubernetes 01/30/23 08:56:12.06
    Jan 30 08:56:12.067: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d" in namespace "pods-2379" to be "running and ready"
    Jan 30 08:56:12.070: INFO: Pod "pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.396728ms
    Jan 30 08:56:12.070: INFO: The phase of Pod pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:56:14.073: INFO: Pod "pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d": Phase="Running", Reason="", readiness=true. Elapsed: 2.004962489s
    Jan 30 08:56:14.073: INFO: The phase of Pod pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d is Running (Ready = true)
    Jan 30 08:56:14.073: INFO: Pod "pod-logs-websocket-d348aa6b-5db3-4f0b-a095-3156c3501c9d" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:56:14.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2379" for this suite. 01/30/23 08:56:14.085
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:56:14.103
Jan 30 08:56:14.104: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename watch 01/30/23 08:56:14.104
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:14.115
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:14.118
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
STEP: creating a watch on configmaps with a certain label 01/30/23 08:56:14.12
STEP: creating a new configmap 01/30/23 08:56:14.121
STEP: modifying the configmap once 01/30/23 08:56:14.125
STEP: changing the label value of the configmap 01/30/23 08:56:14.134
STEP: Expecting to observe a delete notification for the watched object 01/30/23 08:56:14.14
Jan 30 08:56:14.140: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14885 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:14.141: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14886 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:14.141: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14887 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time 01/30/23 08:56:14.141
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 01/30/23 08:56:14.147
STEP: changing the label value of the configmap back 01/30/23 08:56:24.147
STEP: modifying the configmap a third time 01/30/23 08:56:24.155
STEP: deleting the configmap 01/30/23 08:56:24.161
STEP: Expecting to observe an add notification for the watched object when the label value was restored 01/30/23 08:56:24.165
Jan 30 08:56:24.165: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14923 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:24.165: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14924 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:24.165: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14925 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 30 08:56:24.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-5089" for this suite. 01/30/23 08:56:24.169
------------------------------
â€¢ [SLOW TEST] [10.070 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:56:14.103
    Jan 30 08:56:14.104: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename watch 01/30/23 08:56:14.104
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:14.115
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:14.118
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
      test/e2e/apimachinery/watch.go:257
    STEP: creating a watch on configmaps with a certain label 01/30/23 08:56:14.12
    STEP: creating a new configmap 01/30/23 08:56:14.121
    STEP: modifying the configmap once 01/30/23 08:56:14.125
    STEP: changing the label value of the configmap 01/30/23 08:56:14.134
    STEP: Expecting to observe a delete notification for the watched object 01/30/23 08:56:14.14
    Jan 30 08:56:14.140: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14885 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:14.141: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14886 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:14.141: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14887 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time 01/30/23 08:56:14.141
    STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 01/30/23 08:56:14.147
    STEP: changing the label value of the configmap back 01/30/23 08:56:24.147
    STEP: modifying the configmap a third time 01/30/23 08:56:24.155
    STEP: deleting the configmap 01/30/23 08:56:24.161
    STEP: Expecting to observe an add notification for the watched object when the label value was restored 01/30/23 08:56:24.165
    Jan 30 08:56:24.165: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14923 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:24.165: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14924 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:24.165: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5089  48613ef9-2746-4fbd-9a13-89550a925708 14925 0 2023-01-30 08:56:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:56:24.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-5089" for this suite. 01/30/23 08:56:24.169
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:56:24.174
Jan 30 08:56:24.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 08:56:24.175
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:24.188
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:24.191
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 08:56:24.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4012" for this suite. 01/30/23 08:56:24.232
------------------------------
â€¢ [0.063 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:56:24.174
    Jan 30 08:56:24.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 08:56:24.175
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:24.188
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:24.191
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/configmap_volume.go:504
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:56:24.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4012" for this suite. 01/30/23 08:56:24.232
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:56:24.238
Jan 30 08:56:24.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 08:56:24.239
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:24.254
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:24.256
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 08:56:24.261: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2830" for this suite. 01/30/23 08:56:24.264
------------------------------
â€¢ [0.032 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:56:24.238
    Jan 30 08:56:24.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 08:56:24.239
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:24.254
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:24.256
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should provide secure master service  [Conformance]
      test/e2e/network/service.go:777
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:56:24.261: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2830" for this suite. 01/30/23 08:56:24.264
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:56:24.272
Jan 30 08:56:24.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename watch 01/30/23 08:56:24.273
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:24.298
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:24.301
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
STEP: creating a watch on configmaps with label A 01/30/23 08:56:24.304
STEP: creating a watch on configmaps with label B 01/30/23 08:56:24.305
STEP: creating a watch on configmaps with label A or B 01/30/23 08:56:24.307
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 01/30/23 08:56:24.308
Jan 30 08:56:24.316: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14943 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:24.316: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14943 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification 01/30/23 08:56:24.316
Jan 30 08:56:24.324: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14944 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:24.324: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14944 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification 01/30/23 08:56:24.324
Jan 30 08:56:24.332: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14945 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:24.332: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14945 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification 01/30/23 08:56:24.332
Jan 30 08:56:24.337: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14946 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:24.338: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14946 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 01/30/23 08:56:24.338
Jan 30 08:56:24.342: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8144  d7b1b176-0c23-412c-803c-5d0e59c8e9cb 14947 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:24.343: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8144  d7b1b176-0c23-412c-803c-5d0e59c8e9cb 14947 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification 01/30/23 08:56:34.343
Jan 30 08:56:34.350: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8144  d7b1b176-0c23-412c-803c-5d0e59c8e9cb 14976 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jan 30 08:56:34.350: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8144  d7b1b176-0c23-412c-803c-5d0e59c8e9cb 14976 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 30 08:56:44.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-8144" for this suite. 01/30/23 08:56:44.355
------------------------------
â€¢ [SLOW TEST] [20.091 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:56:24.272
    Jan 30 08:56:24.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename watch 01/30/23 08:56:24.273
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:24.298
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:24.301
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe add, update, and delete watch notifications on configmaps [Conformance]
      test/e2e/apimachinery/watch.go:60
    STEP: creating a watch on configmaps with label A 01/30/23 08:56:24.304
    STEP: creating a watch on configmaps with label B 01/30/23 08:56:24.305
    STEP: creating a watch on configmaps with label A or B 01/30/23 08:56:24.307
    STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 01/30/23 08:56:24.308
    Jan 30 08:56:24.316: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14943 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:24.316: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14943 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A and ensuring the correct watchers observe the notification 01/30/23 08:56:24.316
    Jan 30 08:56:24.324: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14944 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:24.324: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14944 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A again and ensuring the correct watchers observe the notification 01/30/23 08:56:24.324
    Jan 30 08:56:24.332: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14945 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:24.332: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14945 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap A and ensuring the correct watchers observe the notification 01/30/23 08:56:24.332
    Jan 30 08:56:24.337: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14946 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:24.338: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8144  cc03971d-d8ed-4898-841c-e75d44e16e63 14946 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 01/30/23 08:56:24.338
    Jan 30 08:56:24.342: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8144  d7b1b176-0c23-412c-803c-5d0e59c8e9cb 14947 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:24.343: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8144  d7b1b176-0c23-412c-803c-5d0e59c8e9cb 14947 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap B and ensuring the correct watchers observe the notification 01/30/23 08:56:34.343
    Jan 30 08:56:34.350: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8144  d7b1b176-0c23-412c-803c-5d0e59c8e9cb 14976 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Jan 30 08:56:34.350: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8144  d7b1b176-0c23-412c-803c-5d0e59c8e9cb 14976 0 2023-01-30 08:56:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-01-30 08:56:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:56:44.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-8144" for this suite. 01/30/23 08:56:44.355
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Secrets
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:56:44.364
Jan 30 08:56:44.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:56:44.365
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:44.385
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:44.389
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
STEP: Creating secret with name s-test-opt-del-7c086bfc-49df-4689-959c-75ccdd93abe5 01/30/23 08:56:44.396
STEP: Creating secret with name s-test-opt-upd-913c2494-b92a-4c4f-8afd-20930b2d4193 01/30/23 08:56:44.404
STEP: Creating the pod 01/30/23 08:56:44.409
Jan 30 08:56:44.417: INFO: Waiting up to 5m0s for pod "pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a" in namespace "secrets-4651" to be "running and ready"
Jan 30 08:56:44.420: INFO: Pod "pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.692987ms
Jan 30 08:56:44.420: INFO: The phase of Pod pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a is Pending, waiting for it to be Running (with Ready = true)
Jan 30 08:56:46.423: INFO: Pod "pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a": Phase="Running", Reason="", readiness=true. Elapsed: 2.005593394s
Jan 30 08:56:46.423: INFO: The phase of Pod pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a is Running (Ready = true)
Jan 30 08:56:46.423: INFO: Pod "pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-7c086bfc-49df-4689-959c-75ccdd93abe5 01/30/23 08:56:46.439
STEP: Updating secret s-test-opt-upd-913c2494-b92a-4c4f-8afd-20930b2d4193 01/30/23 08:56:46.444
STEP: Creating secret with name s-test-opt-create-758aff70-3611-464a-a224-d3637f78ee82 01/30/23 08:56:46.449
STEP: waiting to observe update in volume 01/30/23 08:56:46.454
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:56:48.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4651" for this suite. 01/30/23 08:56:48.472
------------------------------
â€¢ [4.113 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:56:44.364
    Jan 30 08:56:44.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:56:44.365
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:44.385
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:44.389
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:205
    STEP: Creating secret with name s-test-opt-del-7c086bfc-49df-4689-959c-75ccdd93abe5 01/30/23 08:56:44.396
    STEP: Creating secret with name s-test-opt-upd-913c2494-b92a-4c4f-8afd-20930b2d4193 01/30/23 08:56:44.404
    STEP: Creating the pod 01/30/23 08:56:44.409
    Jan 30 08:56:44.417: INFO: Waiting up to 5m0s for pod "pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a" in namespace "secrets-4651" to be "running and ready"
    Jan 30 08:56:44.420: INFO: Pod "pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.692987ms
    Jan 30 08:56:44.420: INFO: The phase of Pod pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 08:56:46.423: INFO: Pod "pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a": Phase="Running", Reason="", readiness=true. Elapsed: 2.005593394s
    Jan 30 08:56:46.423: INFO: The phase of Pod pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a is Running (Ready = true)
    Jan 30 08:56:46.423: INFO: Pod "pod-secrets-16916da4-d858-4231-b5f9-69746c8cea3a" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-7c086bfc-49df-4689-959c-75ccdd93abe5 01/30/23 08:56:46.439
    STEP: Updating secret s-test-opt-upd-913c2494-b92a-4c4f-8afd-20930b2d4193 01/30/23 08:56:46.444
    STEP: Creating secret with name s-test-opt-create-758aff70-3611-464a-a224-d3637f78ee82 01/30/23 08:56:46.449
    STEP: waiting to observe update in volume 01/30/23 08:56:46.454
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:56:48.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4651" for this suite. 01/30/23 08:56:48.472
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:56:48.478
Jan 30 08:56:48.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 08:56:48.478
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:48.49
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:48.494
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
STEP: Creating a ResourceQuota 01/30/23 08:56:48.498
STEP: Getting a ResourceQuota 01/30/23 08:56:48.505
STEP: Updating a ResourceQuota 01/30/23 08:56:48.509
STEP: Verifying a ResourceQuota was modified 01/30/23 08:56:48.517
STEP: Deleting a ResourceQuota 01/30/23 08:56:48.523
STEP: Verifying the deleted ResourceQuota 01/30/23 08:56:48.528
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 08:56:48.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-38" for this suite. 01/30/23 08:56:48.534
------------------------------
â€¢ [0.062 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:56:48.478
    Jan 30 08:56:48.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 08:56:48.478
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:48.49
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:48.494
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to update and delete ResourceQuota. [Conformance]
      test/e2e/apimachinery/resource_quota.go:884
    STEP: Creating a ResourceQuota 01/30/23 08:56:48.498
    STEP: Getting a ResourceQuota 01/30/23 08:56:48.505
    STEP: Updating a ResourceQuota 01/30/23 08:56:48.509
    STEP: Verifying a ResourceQuota was modified 01/30/23 08:56:48.517
    STEP: Deleting a ResourceQuota 01/30/23 08:56:48.523
    STEP: Verifying the deleted ResourceQuota 01/30/23 08:56:48.528
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:56:48.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-38" for this suite. 01/30/23 08:56:48.534
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:56:48.542
Jan 30 08:56:48.542: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename cronjob 01/30/23 08:56:48.543
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:48.562
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:48.564
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
STEP: Creating a ReplaceConcurrent cronjob 01/30/23 08:56:48.568
STEP: Ensuring a job is scheduled 01/30/23 08:56:48.574
STEP: Ensuring exactly one is scheduled 01/30/23 08:57:00.578
STEP: Ensuring exactly one running job exists by listing jobs explicitly 01/30/23 08:57:00.583
STEP: Ensuring the job is replaced with a new one 01/30/23 08:57:00.586
STEP: Removing cronjob 01/30/23 08:58:00.589
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:00.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-8773" for this suite. 01/30/23 08:58:00.6
------------------------------
â€¢ [SLOW TEST] [72.065 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:56:48.542
    Jan 30 08:56:48.542: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename cronjob 01/30/23 08:56:48.543
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:56:48.562
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:56:48.564
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace jobs when ReplaceConcurrent [Conformance]
      test/e2e/apps/cronjob.go:160
    STEP: Creating a ReplaceConcurrent cronjob 01/30/23 08:56:48.568
    STEP: Ensuring a job is scheduled 01/30/23 08:56:48.574
    STEP: Ensuring exactly one is scheduled 01/30/23 08:57:00.578
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 01/30/23 08:57:00.583
    STEP: Ensuring the job is replaced with a new one 01/30/23 08:57:00.586
    STEP: Removing cronjob 01/30/23 08:58:00.589
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:00.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-8773" for this suite. 01/30/23 08:58:00.6
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:00.611
Jan 30 08:58:00.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename security-context-test 01/30/23 08:58:00.612
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:00.634
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:00.637
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
Jan 30 08:58:00.656: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec" in namespace "security-context-test-4961" to be "Succeeded or Failed"
Jan 30 08:58:00.659: INFO: Pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.357404ms
Jan 30 08:58:02.662: INFO: Pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005725873s
Jan 30 08:58:04.661: INFO: Pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005157271s
Jan 30 08:58:04.661: INFO: Pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:04.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-4961" for this suite. 01/30/23 08:58:04.675
------------------------------
â€¢ [4.069 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:555
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:609

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:00.611
    Jan 30 08:58:00.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename security-context-test 01/30/23 08:58:00.612
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:00.634
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:00.637
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:609
    Jan 30 08:58:00.656: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec" in namespace "security-context-test-4961" to be "Succeeded or Failed"
    Jan 30 08:58:00.659: INFO: Pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.357404ms
    Jan 30 08:58:02.662: INFO: Pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005725873s
    Jan 30 08:58:04.661: INFO: Pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005157271s
    Jan 30 08:58:04.661: INFO: Pod "alpine-nnp-false-74320cd9-d408-436b-bdfa-bc9cef14fdec" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:04.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-4961" for this suite. 01/30/23 08:58:04.675
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:04.681
Jan 30 08:58:04.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename runtimeclass 01/30/23 08:58:04.682
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:04.694
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:04.697
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
STEP: Deleting RuntimeClass runtimeclass-5945-delete-me 01/30/23 08:58:04.704
STEP: Waiting for the RuntimeClass to disappear 01/30/23 08:58:04.708
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:04.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-5945" for this suite. 01/30/23 08:58:04.719
------------------------------
â€¢ [0.043 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:04.681
    Jan 30 08:58:04.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename runtimeclass 01/30/23 08:58:04.682
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:04.694
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:04.697
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:156
    STEP: Deleting RuntimeClass runtimeclass-5945-delete-me 01/30/23 08:58:04.704
    STEP: Waiting for the RuntimeClass to disappear 01/30/23 08:58:04.708
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:04.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-5945" for this suite. 01/30/23 08:58:04.719
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:04.725
Jan 30 08:58:04.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 08:58:04.727
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:04.742
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:04.746
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
STEP: creating a Pod with a static label 01/30/23 08:58:04.753
STEP: watching for Pod to be ready 01/30/23 08:58:04.76
Jan 30 08:58:04.762: INFO: observed Pod pod-test in namespace pods-6898 in phase Pending with labels: map[test-pod-static:true] & conditions []
Jan 30 08:58:04.769: INFO: observed Pod pod-test in namespace pods-6898 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  }]
Jan 30 08:58:04.781: INFO: observed Pod pod-test in namespace pods-6898 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  }]
Jan 30 08:58:05.794: INFO: Found Pod pod-test in namespace pods-6898 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:05 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:05 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data 01/30/23 08:58:05.797
STEP: getting the Pod and ensuring that it's patched 01/30/23 08:58:05.807
STEP: replacing the Pod's status Ready condition to False 01/30/23 08:58:05.81
STEP: check the Pod again to ensure its Ready conditions are False 01/30/23 08:58:05.82
STEP: deleting the Pod via a Collection with a LabelSelector 01/30/23 08:58:05.82
STEP: watching for the Pod to be deleted 01/30/23 08:58:05.83
Jan 30 08:58:05.832: INFO: observed event type MODIFIED
Jan 30 08:58:07.808: INFO: observed event type MODIFIED
Jan 30 08:58:10.820: INFO: observed event type MODIFIED
Jan 30 08:58:10.827: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:10.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-6898" for this suite. 01/30/23 08:58:10.836
------------------------------
â€¢ [SLOW TEST] [6.116 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:04.725
    Jan 30 08:58:04.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 08:58:04.727
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:04.742
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:04.746
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should run through the lifecycle of Pods and PodStatus [Conformance]
      test/e2e/common/node/pods.go:896
    STEP: creating a Pod with a static label 01/30/23 08:58:04.753
    STEP: watching for Pod to be ready 01/30/23 08:58:04.76
    Jan 30 08:58:04.762: INFO: observed Pod pod-test in namespace pods-6898 in phase Pending with labels: map[test-pod-static:true] & conditions []
    Jan 30 08:58:04.769: INFO: observed Pod pod-test in namespace pods-6898 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  }]
    Jan 30 08:58:04.781: INFO: observed Pod pod-test in namespace pods-6898 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  }]
    Jan 30 08:58:05.794: INFO: Found Pod pod-test in namespace pods-6898 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:05 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:05 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-01-30 08:58:04 +0000 UTC  }]
    STEP: patching the Pod with a new Label and updated data 01/30/23 08:58:05.797
    STEP: getting the Pod and ensuring that it's patched 01/30/23 08:58:05.807
    STEP: replacing the Pod's status Ready condition to False 01/30/23 08:58:05.81
    STEP: check the Pod again to ensure its Ready conditions are False 01/30/23 08:58:05.82
    STEP: deleting the Pod via a Collection with a LabelSelector 01/30/23 08:58:05.82
    STEP: watching for the Pod to be deleted 01/30/23 08:58:05.83
    Jan 30 08:58:05.832: INFO: observed event type MODIFIED
    Jan 30 08:58:07.808: INFO: observed event type MODIFIED
    Jan 30 08:58:10.820: INFO: observed event type MODIFIED
    Jan 30 08:58:10.827: INFO: observed event type MODIFIED
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:10.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-6898" for this suite. 01/30/23 08:58:10.836
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:10.844
Jan 30 08:58:10.844: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename daemonsets 01/30/23 08:58:10.847
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:10.861
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:10.865
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
STEP: Creating simple DaemonSet "daemon-set" 01/30/23 08:58:10.881
STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 08:58:10.89
Jan 30 08:58:10.896: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:10.900: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:58:10.900: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:58:11.903: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:11.906: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:58:11.906: INFO: Node tce-worker2 is running 0 daemon pod, expected 1
Jan 30 08:58:12.904: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:12.906: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 08:58:12.906: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived. 01/30/23 08:58:12.908
Jan 30 08:58:12.920: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:12.922: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:58:12.922: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:58:13.925: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:13.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:58:13.928: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:58:14.926: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:14.929: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:58:14.929: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:58:15.925: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:15.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:58:15.928: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:58:16.932: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:16.935: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 08:58:16.935: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 08:58:17.925: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 08:58:17.927: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 08:58:17.927: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/30/23 08:58:17.929
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7184, will wait for the garbage collector to delete the pods 01/30/23 08:58:17.929
Jan 30 08:58:17.999: INFO: Deleting DaemonSet.extensions daemon-set took: 17.018075ms
Jan 30 08:58:18.100: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.033804ms
Jan 30 08:58:20.903: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 08:58:20.903: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 08:58:20.904: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15376"},"items":null}

Jan 30 08:58:20.906: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15376"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:20.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-7184" for this suite. 01/30/23 08:58:20.913
------------------------------
â€¢ [SLOW TEST] [10.091 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:10.844
    Jan 30 08:58:10.844: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename daemonsets 01/30/23 08:58:10.847
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:10.861
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:10.865
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop simple daemon [Conformance]
      test/e2e/apps/daemon_set.go:166
    STEP: Creating simple DaemonSet "daemon-set" 01/30/23 08:58:10.881
    STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 08:58:10.89
    Jan 30 08:58:10.896: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:10.900: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:58:10.900: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:58:11.903: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:11.906: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:58:11.906: INFO: Node tce-worker2 is running 0 daemon pod, expected 1
    Jan 30 08:58:12.904: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:12.906: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 08:58:12.906: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Stop a daemon pod, check that the daemon pod is revived. 01/30/23 08:58:12.908
    Jan 30 08:58:12.920: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:12.922: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:58:12.922: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:58:13.925: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:13.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:58:13.928: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:58:14.926: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:14.929: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:58:14.929: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:58:15.925: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:15.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:58:15.928: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:58:16.932: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:16.935: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 08:58:16.935: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 08:58:17.925: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 08:58:17.927: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 08:58:17.927: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/30/23 08:58:17.929
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7184, will wait for the garbage collector to delete the pods 01/30/23 08:58:17.929
    Jan 30 08:58:17.999: INFO: Deleting DaemonSet.extensions daemon-set took: 17.018075ms
    Jan 30 08:58:18.100: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.033804ms
    Jan 30 08:58:20.903: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 08:58:20.903: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 30 08:58:20.904: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15376"},"items":null}

    Jan 30 08:58:20.906: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15376"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:20.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-7184" for this suite. 01/30/23 08:58:20.913
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:20.935
Jan 30 08:58:20.935: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 08:58:20.936
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:20.946
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:20.949
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
STEP: Creating secret with name secret-test-map-3352e89c-468d-4a78-95bd-aedbf01a81bd 01/30/23 08:58:20.951
STEP: Creating a pod to test consume secrets 01/30/23 08:58:20.955
Jan 30 08:58:20.962: INFO: Waiting up to 5m0s for pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab" in namespace "secrets-4651" to be "Succeeded or Failed"
Jan 30 08:58:20.966: INFO: Pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab": Phase="Pending", Reason="", readiness=false. Elapsed: 3.324876ms
Jan 30 08:58:22.969: INFO: Pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00682995s
Jan 30 08:58:24.970: INFO: Pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007823692s
STEP: Saw pod success 01/30/23 08:58:24.97
Jan 30 08:58:24.971: INFO: Pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab" satisfied condition "Succeeded or Failed"
Jan 30 08:58:24.973: INFO: Trying to get logs from node tce-worker pod pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab container secret-volume-test: <nil>
STEP: delete the pod 01/30/23 08:58:24.977
Jan 30 08:58:24.996: INFO: Waiting for pod pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab to disappear
Jan 30 08:58:24.998: INFO: Pod pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:24.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4651" for this suite. 01/30/23 08:58:25.001
------------------------------
â€¢ [4.070 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:20.935
    Jan 30 08:58:20.935: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 08:58:20.936
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:20.946
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:20.949
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:89
    STEP: Creating secret with name secret-test-map-3352e89c-468d-4a78-95bd-aedbf01a81bd 01/30/23 08:58:20.951
    STEP: Creating a pod to test consume secrets 01/30/23 08:58:20.955
    Jan 30 08:58:20.962: INFO: Waiting up to 5m0s for pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab" in namespace "secrets-4651" to be "Succeeded or Failed"
    Jan 30 08:58:20.966: INFO: Pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab": Phase="Pending", Reason="", readiness=false. Elapsed: 3.324876ms
    Jan 30 08:58:22.969: INFO: Pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00682995s
    Jan 30 08:58:24.970: INFO: Pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007823692s
    STEP: Saw pod success 01/30/23 08:58:24.97
    Jan 30 08:58:24.971: INFO: Pod "pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab" satisfied condition "Succeeded or Failed"
    Jan 30 08:58:24.973: INFO: Trying to get logs from node tce-worker pod pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab container secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 08:58:24.977
    Jan 30 08:58:24.996: INFO: Waiting for pod pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab to disappear
    Jan 30 08:58:24.998: INFO: Pod pod-secrets-2db87c23-d761-4300-95c1-6787aab7f3ab no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:24.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4651" for this suite. 01/30/23 08:58:25.001
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:25.006
Jan 30 08:58:25.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename containers 01/30/23 08:58:25.007
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:25.02
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:25.022
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
Jan 30 08:58:25.030: INFO: Waiting up to 5m0s for pod "client-containers-4d13058f-b740-4604-a1b8-84800989b763" in namespace "containers-1033" to be "running"
Jan 30 08:58:25.032: INFO: Pod "client-containers-4d13058f-b740-4604-a1b8-84800989b763": Phase="Pending", Reason="", readiness=false. Elapsed: 2.220403ms
Jan 30 08:58:27.035: INFO: Pod "client-containers-4d13058f-b740-4604-a1b8-84800989b763": Phase="Running", Reason="", readiness=true. Elapsed: 2.005154193s
Jan 30 08:58:27.035: INFO: Pod "client-containers-4d13058f-b740-4604-a1b8-84800989b763" satisfied condition "running"
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:27.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-1033" for this suite. 01/30/23 08:58:27.042
------------------------------
â€¢ [2.052 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:25.006
    Jan 30 08:58:25.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename containers 01/30/23 08:58:25.007
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:25.02
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:25.022
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:39
    Jan 30 08:58:25.030: INFO: Waiting up to 5m0s for pod "client-containers-4d13058f-b740-4604-a1b8-84800989b763" in namespace "containers-1033" to be "running"
    Jan 30 08:58:25.032: INFO: Pod "client-containers-4d13058f-b740-4604-a1b8-84800989b763": Phase="Pending", Reason="", readiness=false. Elapsed: 2.220403ms
    Jan 30 08:58:27.035: INFO: Pod "client-containers-4d13058f-b740-4604-a1b8-84800989b763": Phase="Running", Reason="", readiness=true. Elapsed: 2.005154193s
    Jan 30 08:58:27.035: INFO: Pod "client-containers-4d13058f-b740-4604-a1b8-84800989b763" satisfied condition "running"
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:27.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-1033" for this suite. 01/30/23 08:58:27.042
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:27.058
Jan 30 08:58:27.058: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename subpath 01/30/23 08:58:27.06
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:27.07
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:27.072
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/30/23 08:58:27.075
[It] should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
STEP: Creating pod pod-subpath-test-secret-46t2 01/30/23 08:58:27.084
STEP: Creating a pod to test atomic-volume-subpath 01/30/23 08:58:27.085
Jan 30 08:58:27.092: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-46t2" in namespace "subpath-4665" to be "Succeeded or Failed"
Jan 30 08:58:27.094: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.412044ms
Jan 30 08:58:29.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 2.005771086s
Jan 30 08:58:31.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 4.006473445s
Jan 30 08:58:33.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 6.005555495s
Jan 30 08:58:35.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 8.005111203s
Jan 30 08:58:37.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 10.005638892s
Jan 30 08:58:39.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 12.006114824s
Jan 30 08:58:41.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 14.006302039s
Jan 30 08:58:43.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 16.004892716s
Jan 30 08:58:45.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 18.005598093s
Jan 30 08:58:47.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 20.004702651s
Jan 30 08:58:49.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=false. Elapsed: 22.005342715s
Jan 30 08:58:51.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.006186945s
STEP: Saw pod success 01/30/23 08:58:51.098
Jan 30 08:58:51.098: INFO: Pod "pod-subpath-test-secret-46t2" satisfied condition "Succeeded or Failed"
Jan 30 08:58:51.100: INFO: Trying to get logs from node tce-worker pod pod-subpath-test-secret-46t2 container test-container-subpath-secret-46t2: <nil>
STEP: delete the pod 01/30/23 08:58:51.103
Jan 30 08:58:51.115: INFO: Waiting for pod pod-subpath-test-secret-46t2 to disappear
Jan 30 08:58:51.116: INFO: Pod pod-subpath-test-secret-46t2 no longer exists
STEP: Deleting pod pod-subpath-test-secret-46t2 01/30/23 08:58:51.116
Jan 30 08:58:51.116: INFO: Deleting pod "pod-subpath-test-secret-46t2" in namespace "subpath-4665"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:51.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-4665" for this suite. 01/30/23 08:58:51.121
------------------------------
â€¢ [SLOW TEST] [24.067 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/storage/subpath.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:27.058
    Jan 30 08:58:27.058: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename subpath 01/30/23 08:58:27.06
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:27.07
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:27.072
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/30/23 08:58:27.075
    [It] should support subpaths with secret pod [Conformance]
      test/e2e/storage/subpath.go:60
    STEP: Creating pod pod-subpath-test-secret-46t2 01/30/23 08:58:27.084
    STEP: Creating a pod to test atomic-volume-subpath 01/30/23 08:58:27.085
    Jan 30 08:58:27.092: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-46t2" in namespace "subpath-4665" to be "Succeeded or Failed"
    Jan 30 08:58:27.094: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.412044ms
    Jan 30 08:58:29.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 2.005771086s
    Jan 30 08:58:31.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 4.006473445s
    Jan 30 08:58:33.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 6.005555495s
    Jan 30 08:58:35.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 8.005111203s
    Jan 30 08:58:37.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 10.005638892s
    Jan 30 08:58:39.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 12.006114824s
    Jan 30 08:58:41.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 14.006302039s
    Jan 30 08:58:43.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 16.004892716s
    Jan 30 08:58:45.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 18.005598093s
    Jan 30 08:58:47.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=true. Elapsed: 20.004702651s
    Jan 30 08:58:49.097: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Running", Reason="", readiness=false. Elapsed: 22.005342715s
    Jan 30 08:58:51.098: INFO: Pod "pod-subpath-test-secret-46t2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.006186945s
    STEP: Saw pod success 01/30/23 08:58:51.098
    Jan 30 08:58:51.098: INFO: Pod "pod-subpath-test-secret-46t2" satisfied condition "Succeeded or Failed"
    Jan 30 08:58:51.100: INFO: Trying to get logs from node tce-worker pod pod-subpath-test-secret-46t2 container test-container-subpath-secret-46t2: <nil>
    STEP: delete the pod 01/30/23 08:58:51.103
    Jan 30 08:58:51.115: INFO: Waiting for pod pod-subpath-test-secret-46t2 to disappear
    Jan 30 08:58:51.116: INFO: Pod pod-subpath-test-secret-46t2 no longer exists
    STEP: Deleting pod pod-subpath-test-secret-46t2 01/30/23 08:58:51.116
    Jan 30 08:58:51.116: INFO: Deleting pod "pod-subpath-test-secret-46t2" in namespace "subpath-4665"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:51.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-4665" for this suite. 01/30/23 08:58:51.121
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:51.126
Jan 30 08:58:51.126: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 08:58:51.126
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:51.141
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:51.143
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 08:58:51.154
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:58:51.701
STEP: Deploying the webhook pod 01/30/23 08:58:51.707
STEP: Wait for the deployment to be ready 01/30/23 08:58:51.718
Jan 30 08:58:51.723: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service 01/30/23 08:58:53.731
STEP: Verifying the service has paired with the endpoint 01/30/23 08:58:53.739
Jan 30 08:58:54.739: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
Jan 30 08:58:54.743: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7175-crds.webhook.example.com via the AdmissionRegistration API 01/30/23 08:58:55.253
STEP: Creating a custom resource that should be mutated by the webhook 01/30/23 08:58:55.266
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 08:58:57.828: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7070" for this suite. 01/30/23 08:58:57.882
STEP: Destroying namespace "webhook-7070-markers" for this suite. 01/30/23 08:58:57.898
------------------------------
â€¢ [SLOW TEST] [6.780 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:51.126
    Jan 30 08:58:51.126: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 08:58:51.126
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:51.141
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:51.143
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 08:58:51.154
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 08:58:51.701
    STEP: Deploying the webhook pod 01/30/23 08:58:51.707
    STEP: Wait for the deployment to be ready 01/30/23 08:58:51.718
    Jan 30 08:58:51.723: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
    STEP: Deploying the webhook service 01/30/23 08:58:53.731
    STEP: Verifying the service has paired with the endpoint 01/30/23 08:58:53.739
    Jan 30 08:58:54.739: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with pruning [Conformance]
      test/e2e/apimachinery/webhook.go:341
    Jan 30 08:58:54.743: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7175-crds.webhook.example.com via the AdmissionRegistration API 01/30/23 08:58:55.253
    STEP: Creating a custom resource that should be mutated by the webhook 01/30/23 08:58:55.266
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:58:57.828: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7070" for this suite. 01/30/23 08:58:57.882
    STEP: Destroying namespace "webhook-7070-markers" for this suite. 01/30/23 08:58:57.898
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:58:57.906
Jan 30 08:58:57.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 08:58:57.907
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:57.943
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:57.948
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
STEP: Creating a pod to test emptydir 0777 on tmpfs 01/30/23 08:58:57.954
Jan 30 08:58:57.969: INFO: Waiting up to 5m0s for pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658" in namespace "emptydir-9989" to be "Succeeded or Failed"
Jan 30 08:58:57.974: INFO: Pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658": Phase="Pending", Reason="", readiness=false. Elapsed: 3.783161ms
Jan 30 08:58:59.978: INFO: Pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658": Phase="Running", Reason="", readiness=false. Elapsed: 2.007853523s
Jan 30 08:59:01.977: INFO: Pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006964257s
STEP: Saw pod success 01/30/23 08:59:01.977
Jan 30 08:59:01.977: INFO: Pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658" satisfied condition "Succeeded or Failed"
Jan 30 08:59:01.979: INFO: Trying to get logs from node tce-worker2 pod pod-a3580be5-ce6f-43b2-b858-1ac7b709c658 container test-container: <nil>
STEP: delete the pod 01/30/23 08:59:01.99
Jan 30 08:59:02.000: INFO: Waiting for pod pod-a3580be5-ce6f-43b2-b858-1ac7b709c658 to disappear
Jan 30 08:59:02.002: INFO: Pod pod-a3580be5-ce6f-43b2-b858-1ac7b709c658 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 08:59:02.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9989" for this suite. 01/30/23 08:59:02.005
------------------------------
â€¢ [4.104 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:58:57.906
    Jan 30 08:58:57.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 08:58:57.907
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:58:57.943
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:58:57.948
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:147
    STEP: Creating a pod to test emptydir 0777 on tmpfs 01/30/23 08:58:57.954
    Jan 30 08:58:57.969: INFO: Waiting up to 5m0s for pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658" in namespace "emptydir-9989" to be "Succeeded or Failed"
    Jan 30 08:58:57.974: INFO: Pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658": Phase="Pending", Reason="", readiness=false. Elapsed: 3.783161ms
    Jan 30 08:58:59.978: INFO: Pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658": Phase="Running", Reason="", readiness=false. Elapsed: 2.007853523s
    Jan 30 08:59:01.977: INFO: Pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006964257s
    STEP: Saw pod success 01/30/23 08:59:01.977
    Jan 30 08:59:01.977: INFO: Pod "pod-a3580be5-ce6f-43b2-b858-1ac7b709c658" satisfied condition "Succeeded or Failed"
    Jan 30 08:59:01.979: INFO: Trying to get logs from node tce-worker2 pod pod-a3580be5-ce6f-43b2-b858-1ac7b709c658 container test-container: <nil>
    STEP: delete the pod 01/30/23 08:59:01.99
    Jan 30 08:59:02.000: INFO: Waiting for pod pod-a3580be5-ce6f-43b2-b858-1ac7b709c658 to disappear
    Jan 30 08:59:02.002: INFO: Pod pod-a3580be5-ce6f-43b2-b858-1ac7b709c658 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:59:02.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9989" for this suite. 01/30/23 08:59:02.005
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:59:02.012
Jan 30 08:59:02.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename deployment 01/30/23 08:59:02.013
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:59:02.024
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:59:02.026
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
Jan 30 08:59:02.029: INFO: Creating deployment "webserver-deployment"
Jan 30 08:59:02.034: INFO: Waiting for observed generation 1
Jan 30 08:59:04.042: INFO: Waiting for all required pods to come up
Jan 30 08:59:04.047: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running 01/30/23 08:59:04.047
Jan 30 08:59:04.047: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-v7ht8" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-224ll" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-4wmbh" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-5gmxd" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-cwfcm" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-dvtqd" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-g667p" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-hgxq7" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-qn5kf" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.049: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-tfsdv" in namespace "deployment-9214" to be "running"
Jan 30 08:59:04.054: INFO: Pod "webserver-deployment-7f5969cbc7-v7ht8": Phase="Pending", Reason="", readiness=false. Elapsed: 7.090855ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-224ll": Phase="Pending", Reason="", readiness=false. Elapsed: 7.160363ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-4wmbh": Phase="Pending", Reason="", readiness=false. Elapsed: 7.19317ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-5gmxd": Phase="Pending", Reason="", readiness=false. Elapsed: 7.487284ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-tfsdv": Phase="Pending", Reason="", readiness=false. Elapsed: 6.762986ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-g667p": Phase="Pending", Reason="", readiness=false. Elapsed: 7.324163ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-cwfcm": Phase="Pending", Reason="", readiness=false. Elapsed: 7.48959ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-dvtqd": Phase="Pending", Reason="", readiness=false. Elapsed: 7.418494ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-hgxq7": Phase="Pending", Reason="", readiness=false. Elapsed: 7.282989ms
Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-qn5kf": Phase="Pending", Reason="", readiness=false. Elapsed: 7.217043ms
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-g667p": Phase="Running", Reason="", readiness=true. Elapsed: 2.013955089s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-g667p" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-224ll": Phase="Running", Reason="", readiness=true. Elapsed: 2.014391172s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-v7ht8": Phase="Running", Reason="", readiness=true. Elapsed: 2.014672151s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-v7ht8" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-224ll" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-4wmbh": Phase="Running", Reason="", readiness=true. Elapsed: 2.014489724s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-4wmbh" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-tfsdv": Phase="Running", Reason="", readiness=true. Elapsed: 2.013669367s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-tfsdv" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-dvtqd": Phase="Running", Reason="", readiness=true. Elapsed: 2.014266165s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-dvtqd" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-cwfcm": Phase="Running", Reason="", readiness=true. Elapsed: 2.014396691s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-5gmxd": Phase="Running", Reason="", readiness=true. Elapsed: 2.014474417s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-cwfcm" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-5gmxd" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-qn5kf": Phase="Running", Reason="", readiness=true. Elapsed: 2.014121367s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-qn5kf" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-hgxq7": Phase="Running", Reason="", readiness=true. Elapsed: 2.014229688s
Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-hgxq7" satisfied condition "running"
Jan 30 08:59:06.062: INFO: Waiting for deployment "webserver-deployment" to complete
Jan 30 08:59:06.068: INFO: Updating deployment "webserver-deployment" with a non-existent image
Jan 30 08:59:06.076: INFO: Updating deployment webserver-deployment
Jan 30 08:59:06.076: INFO: Waiting for observed generation 2
Jan 30 08:59:08.081: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Jan 30 08:59:08.084: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Jan 30 08:59:08.085: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 30 08:59:08.091: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Jan 30 08:59:08.091: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Jan 30 08:59:08.093: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jan 30 08:59:08.097: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Jan 30 08:59:08.097: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Jan 30 08:59:08.113: INFO: Updating deployment webserver-deployment
Jan 30 08:59:08.113: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Jan 30 08:59:08.117: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Jan 30 08:59:08.120: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 08:59:10.133: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-9214  6d39c1e3-5506-4626-8596-169aa54983c6 15902 3 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004b733a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:33,UpdatedReplicas:13,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-30 08:59:08 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-01-30 08:59:08 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Jan 30 08:59:10.137: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-9214  2ebe2ad9-2bd7-48de-82d0-c60fea45a266 15892 3 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 6d39c1e3-5506-4626-8596-169aa54983c6 0xc0049699f7 0xc0049699f8}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6d39c1e3-5506-4626-8596-169aa54983c6\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004969a98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:13,FullyLabeledReplicas:13,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:59:10.137: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Jan 30 08:59:10.137: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-9214  59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 15899 3 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 6d39c1e3-5506-4626-8596-169aa54983c6 0xc004969687 0xc004969688}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6d39c1e3-5506-4626-8596-169aa54983c6\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0049698b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:20,FullyLabeledReplicas:20,ObservedGeneration:3,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-224ll" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-224ll webserver-deployment-7f5969cbc7- deployment-9214  deb4f628-8d7c-4886-809c-576cf103f52e 15759 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b737e7 0xc004b737e8}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.126\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v5t45,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v5t45,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.126,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://0810414112b1037dbfc2d54db49d5bbf03ed2e9900881c9e15b5751e679377f1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.126,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-5gmxd" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-5gmxd webserver-deployment-7f5969cbc7- deployment-9214  3ee22e88-1afe-44a5-9e74-8e4f4d8a3354 15740 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b739d0 0xc004b739d1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q4jkb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q4jkb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.124,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://01b1450cde01e36f0f3898535ee9ed3f9f2f67cec54dfa7c2c1010f0f2b9d749,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.124,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-62knb" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-62knb webserver-deployment-7f5969cbc7- deployment-9214  0b057e42-a7f9-4379-ab50-1de53a3d5f59 15888 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b73bc0 0xc004b73bc1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xr6ft,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xr6ft,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-68wt5" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-68wt5 webserver-deployment-7f5969cbc7- deployment-9214  81c87c87-17a9-492a-86d2-9e2901cb4fa6 15897 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b73d30 0xc004b73d31}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zrds2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zrds2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-6g8bh" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-6g8bh webserver-deployment-7f5969cbc7- deployment-9214  a8e9eb59-39eb-4f1a-b8b1-7c11313b06ce 15879 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b73f10 0xc004b73f11}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lkdkp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lkdkp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-7b2rq" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-7b2rq webserver-deployment-7f5969cbc7- deployment-9214  a343260b-33b1-4521-bd01-ef782ec86cc5 15886 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f220f0 0xc003f220f1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5fnnn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5fnnn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-cwfcm" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-cwfcm webserver-deployment-7f5969cbc7- deployment-9214  387d38ef-f9bd-461c-b0dc-f4fe8e5ec736 15749 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22250 0xc003f22251}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.221\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2jmw2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2jmw2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.221,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://85fade78944e90af8615938b75b9b8a67825fbf22cea786984acb9278b65face,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.221,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-d5sm4" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-d5sm4 webserver-deployment-7f5969cbc7- deployment-9214  0cec9bc2-be61-472c-bdaf-c5ae9c9ca57e 15890 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22430 0xc003f22431}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g7zgw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g7zgw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-d7v2m" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-d7v2m webserver-deployment-7f5969cbc7- deployment-9214  d81a88aa-7a90-41d8-9fd1-c4664de3e0ba 15889 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22590 0xc003f22591}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l5wzx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l5wzx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-dvtqd" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-dvtqd webserver-deployment-7f5969cbc7- deployment-9214  c1ef2813-2e0a-4072-8f9f-9d46af4a05b8 15745 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f226f0 0xc003f226f1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.125\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-62n4s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-62n4s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.125,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://a177c52c69f3c8f199c26637b59d7d702c71ccbdf595774bf8d9cce29835690e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.125,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-fnmd2" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fnmd2 webserver-deployment-7f5969cbc7- deployment-9214  fe15f55d-1e1d-488f-9902-79cfe8316181 15878 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f228d0 0xc003f228d1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f4bpd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f4bpd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.145: INFO: Pod "webserver-deployment-7f5969cbc7-g667p" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-g667p webserver-deployment-7f5969cbc7- deployment-9214  b4fdf175-6d12-4680-bf54-1d646bca41ef 15742 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22a30 0xc003f22a31}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.128\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-49wd5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-49wd5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.128,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://fff67bceae54bd004d661e683c1451cf25dd590e685664aaf8bca6bed004cc9f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.128,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.149: INFO: Pod "webserver-deployment-7f5969cbc7-hgxq7" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-hgxq7 webserver-deployment-7f5969cbc7- deployment-9214  22281dc7-a22e-447d-b282-e9bc17ef12f8 15752 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22c10 0xc003f22c11}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.127\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nwlgx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nwlgx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.127,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://2261f93ac206423bc0d697c67918846517735c5133cae0f856e1adddd1cbf888,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.127,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.149: INFO: Pod "webserver-deployment-7f5969cbc7-lc46g" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-lc46g webserver-deployment-7f5969cbc7- deployment-9214  d6b06a32-1e62-46ba-899b-269a2ebbbd52 15864 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22df0 0xc003f22df1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5bj8g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5bj8g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.150: INFO: Pod "webserver-deployment-7f5969cbc7-mvjts" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-mvjts webserver-deployment-7f5969cbc7- deployment-9214  dc0df94f-d8e0-47d6-bdb8-64bba9b47822 15877 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22f70 0xc003f22f71}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7ldqn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7ldqn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.151: INFO: Pod "webserver-deployment-7f5969cbc7-qn5kf" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qn5kf webserver-deployment-7f5969cbc7- deployment-9214  f5ed728c-9932-4780-b790-d0c9f7b625c8 15733 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f230d0 0xc003f230d1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.220\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qmsx7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qmsx7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.220,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://29cf40cb0fb3d0ed128ca9fa147b0cf0a0f5cd439c7bcf1cc45459b7dbda7901,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.220,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.152: INFO: Pod "webserver-deployment-7f5969cbc7-v7ht8" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-v7ht8 webserver-deployment-7f5969cbc7- deployment-9214  68075abf-294d-45db-a112-6a0979130547 15756 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f232b0 0xc003f232b1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.219\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x88c9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x88c9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.219,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://592f9583d7a4475c9626a8cc00bd9cd6123dfdabb1c7fd86ada813a921ccfc7d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.219,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.152: INFO: Pod "webserver-deployment-7f5969cbc7-x52cw" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-x52cw webserver-deployment-7f5969cbc7- deployment-9214  9ad951da-23bb-4b8a-891a-1fe28b77bf7a 15898 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f23490 0xc003f23491}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bzhqm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bzhqm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.153: INFO: Pod "webserver-deployment-7f5969cbc7-x94qt" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-x94qt webserver-deployment-7f5969cbc7- deployment-9214  93c28771-bbbd-44e8-abb6-dfbbb18fa8b2 15887 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f23650 0xc003f23651}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-652zt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-652zt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.153: INFO: Pod "webserver-deployment-7f5969cbc7-xj2st" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xj2st webserver-deployment-7f5969cbc7- deployment-9214  3110fdfe-2087-48ae-a238-cf9978000a9e 15863 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f237b0 0xc003f237b1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7jc42,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7jc42,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.153: INFO: Pod "webserver-deployment-d9f79cb5-4crvc" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-4crvc webserver-deployment-d9f79cb5- deployment-9214  822d5958-5d0c-40e9-a2da-b09d4b6a1d5f 15833 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc003f238ff 0xc003f23910}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-57zrd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-57zrd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.153: INFO: Pod "webserver-deployment-d9f79cb5-827hr" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-827hr webserver-deployment-d9f79cb5- deployment-9214  8bad71ff-b8e3-4fd5-aaa4-0d7ed88acb1d 15883 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc003f23adf 0xc003f23af0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mwj45,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mwj45,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-bxqpq" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-bxqpq webserver-deployment-d9f79cb5- deployment-9214  1502d9ce-474c-4556-91e2-e90e139f7756 15891 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc003f23c5f 0xc003f23c70}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lkn4z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lkn4z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-cqs6h" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-cqs6h webserver-deployment-d9f79cb5- deployment-9214  2a4582ec-718d-4eca-a5f9-b7282ee1e67d 15866 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc003f23e3f 0xc003f23e50}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t8btf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t8btf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-fqpdj" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-fqpdj webserver-deployment-d9f79cb5- deployment-9214  95d3965a-2d5e-4a90-8ccf-562960d35756 15880 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc00522401f 0xc005224030}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jf4qg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jf4qg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-hwjwl" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-hwjwl webserver-deployment-d9f79cb5- deployment-9214  d386ae81-343d-4eb0-adfb-218d0aa3182e 15869 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc00522418f 0xc0052241a0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dphjz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dphjz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-j7zv5" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-j7zv5 webserver-deployment-d9f79cb5- deployment-9214  b1bc3be6-abd3-4b0d-a8fc-5f4c3e650640 15815 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc0052242ff 0xc005224310}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kr7fj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kr7fj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.155: INFO: Pod "webserver-deployment-d9f79cb5-lsdl7" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-lsdl7 webserver-deployment-d9f79cb5- deployment-9214  fb91157f-b888-4c9b-9613-6279b64355d8 15814 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc0052244df 0xc0052244f0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s9n8f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s9n8f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.155: INFO: Pod "webserver-deployment-d9f79cb5-mms8s" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-mms8s webserver-deployment-d9f79cb5- deployment-9214  6ac94b22-d35a-4c5a-8579-356d0e73dbf9 15789 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc0052246bf 0xc0052246d0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s7wcc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s7wcc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.155: INFO: Pod "webserver-deployment-d9f79cb5-qrb4p" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-qrb4p webserver-deployment-d9f79cb5- deployment-9214  a403db8c-15a7-4e77-b45a-f6d87091191d 15831 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc00522489f 0xc0052248b0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7ltk9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7ltk9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.156: INFO: Pod "webserver-deployment-d9f79cb5-rh24z" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-rh24z webserver-deployment-d9f79cb5- deployment-9214  588d7691-8bb9-4562-9808-ddc0095bb2a0 15906 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc005224a7f 0xc005224a90}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vf6jr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vf6jr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.156: INFO: Pod "webserver-deployment-d9f79cb5-s2nhq" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-s2nhq webserver-deployment-d9f79cb5- deployment-9214  6b6970bb-485b-4ce3-a379-87acb628bc6c 15865 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc005224c5f 0xc005224c70}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p67dc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p67dc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 08:59:10.156: INFO: Pod "webserver-deployment-d9f79cb5-tmsv7" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-tmsv7 webserver-deployment-d9f79cb5- deployment-9214  e6a5cca6-2881-43a9-b1c2-842a3d53e6ca 15876 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc005224dcf 0xc005224de0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gr6gx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gr6gx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 30 08:59:10.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-9214" for this suite. 01/30/23 08:59:10.163
------------------------------
â€¢ [SLOW TEST] [8.158 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:59:02.012
    Jan 30 08:59:02.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename deployment 01/30/23 08:59:02.013
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:59:02.024
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:59:02.026
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support proportional scaling [Conformance]
      test/e2e/apps/deployment.go:160
    Jan 30 08:59:02.029: INFO: Creating deployment "webserver-deployment"
    Jan 30 08:59:02.034: INFO: Waiting for observed generation 1
    Jan 30 08:59:04.042: INFO: Waiting for all required pods to come up
    Jan 30 08:59:04.047: INFO: Pod name httpd: Found 10 pods out of 10
    STEP: ensuring each pod is running 01/30/23 08:59:04.047
    Jan 30 08:59:04.047: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-v7ht8" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-224ll" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-4wmbh" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-5gmxd" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-cwfcm" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-dvtqd" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-g667p" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-hgxq7" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.048: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-qn5kf" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.049: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-tfsdv" in namespace "deployment-9214" to be "running"
    Jan 30 08:59:04.054: INFO: Pod "webserver-deployment-7f5969cbc7-v7ht8": Phase="Pending", Reason="", readiness=false. Elapsed: 7.090855ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-224ll": Phase="Pending", Reason="", readiness=false. Elapsed: 7.160363ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-4wmbh": Phase="Pending", Reason="", readiness=false. Elapsed: 7.19317ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-5gmxd": Phase="Pending", Reason="", readiness=false. Elapsed: 7.487284ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-tfsdv": Phase="Pending", Reason="", readiness=false. Elapsed: 6.762986ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-g667p": Phase="Pending", Reason="", readiness=false. Elapsed: 7.324163ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-cwfcm": Phase="Pending", Reason="", readiness=false. Elapsed: 7.48959ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-dvtqd": Phase="Pending", Reason="", readiness=false. Elapsed: 7.418494ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-hgxq7": Phase="Pending", Reason="", readiness=false. Elapsed: 7.282989ms
    Jan 30 08:59:04.055: INFO: Pod "webserver-deployment-7f5969cbc7-qn5kf": Phase="Pending", Reason="", readiness=false. Elapsed: 7.217043ms
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-g667p": Phase="Running", Reason="", readiness=true. Elapsed: 2.013955089s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-g667p" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-224ll": Phase="Running", Reason="", readiness=true. Elapsed: 2.014391172s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-v7ht8": Phase="Running", Reason="", readiness=true. Elapsed: 2.014672151s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-v7ht8" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-224ll" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-4wmbh": Phase="Running", Reason="", readiness=true. Elapsed: 2.014489724s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-4wmbh" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-tfsdv": Phase="Running", Reason="", readiness=true. Elapsed: 2.013669367s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-tfsdv" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-dvtqd": Phase="Running", Reason="", readiness=true. Elapsed: 2.014266165s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-dvtqd" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-cwfcm": Phase="Running", Reason="", readiness=true. Elapsed: 2.014396691s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-5gmxd": Phase="Running", Reason="", readiness=true. Elapsed: 2.014474417s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-cwfcm" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-5gmxd" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-qn5kf": Phase="Running", Reason="", readiness=true. Elapsed: 2.014121367s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-qn5kf" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-hgxq7": Phase="Running", Reason="", readiness=true. Elapsed: 2.014229688s
    Jan 30 08:59:06.062: INFO: Pod "webserver-deployment-7f5969cbc7-hgxq7" satisfied condition "running"
    Jan 30 08:59:06.062: INFO: Waiting for deployment "webserver-deployment" to complete
    Jan 30 08:59:06.068: INFO: Updating deployment "webserver-deployment" with a non-existent image
    Jan 30 08:59:06.076: INFO: Updating deployment webserver-deployment
    Jan 30 08:59:06.076: INFO: Waiting for observed generation 2
    Jan 30 08:59:08.081: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
    Jan 30 08:59:08.084: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
    Jan 30 08:59:08.085: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Jan 30 08:59:08.091: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
    Jan 30 08:59:08.091: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
    Jan 30 08:59:08.093: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Jan 30 08:59:08.097: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
    Jan 30 08:59:08.097: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
    Jan 30 08:59:08.113: INFO: Updating deployment webserver-deployment
    Jan 30 08:59:08.113: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
    Jan 30 08:59:08.117: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
    Jan 30 08:59:08.120: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 30 08:59:10.133: INFO: Deployment "webserver-deployment":
    &Deployment{ObjectMeta:{webserver-deployment  deployment-9214  6d39c1e3-5506-4626-8596-169aa54983c6 15902 3 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004b733a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:33,UpdatedReplicas:13,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-01-30 08:59:08 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-01-30 08:59:08 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

    Jan 30 08:59:10.137: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
    &ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-9214  2ebe2ad9-2bd7-48de-82d0-c60fea45a266 15892 3 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 6d39c1e3-5506-4626-8596-169aa54983c6 0xc0049699f7 0xc0049699f8}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6d39c1e3-5506-4626-8596-169aa54983c6\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004969a98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:13,FullyLabeledReplicas:13,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:59:10.137: INFO: All old ReplicaSets of Deployment "webserver-deployment":
    Jan 30 08:59:10.137: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-9214  59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 15899 3 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 6d39c1e3-5506-4626-8596-169aa54983c6 0xc004969687 0xc004969688}] [] [{kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6d39c1e3-5506-4626-8596-169aa54983c6\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0049698b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:20,FullyLabeledReplicas:20,ObservedGeneration:3,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-224ll" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-224ll webserver-deployment-7f5969cbc7- deployment-9214  deb4f628-8d7c-4886-809c-576cf103f52e 15759 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b737e7 0xc004b737e8}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.126\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v5t45,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v5t45,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.126,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://0810414112b1037dbfc2d54db49d5bbf03ed2e9900881c9e15b5751e679377f1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.126,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-5gmxd" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-5gmxd webserver-deployment-7f5969cbc7- deployment-9214  3ee22e88-1afe-44a5-9e74-8e4f4d8a3354 15740 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b739d0 0xc004b739d1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q4jkb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q4jkb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.124,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://01b1450cde01e36f0f3898535ee9ed3f9f2f67cec54dfa7c2c1010f0f2b9d749,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.124,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-62knb" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-62knb webserver-deployment-7f5969cbc7- deployment-9214  0b057e42-a7f9-4379-ab50-1de53a3d5f59 15888 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b73bc0 0xc004b73bc1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xr6ft,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xr6ft,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-68wt5" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-68wt5 webserver-deployment-7f5969cbc7- deployment-9214  81c87c87-17a9-492a-86d2-9e2901cb4fa6 15897 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b73d30 0xc004b73d31}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zrds2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zrds2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-6g8bh" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-6g8bh webserver-deployment-7f5969cbc7- deployment-9214  a8e9eb59-39eb-4f1a-b8b1-7c11313b06ce 15879 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc004b73f10 0xc004b73f11}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lkdkp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lkdkp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.143: INFO: Pod "webserver-deployment-7f5969cbc7-7b2rq" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-7b2rq webserver-deployment-7f5969cbc7- deployment-9214  a343260b-33b1-4521-bd01-ef782ec86cc5 15886 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f220f0 0xc003f220f1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5fnnn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5fnnn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-cwfcm" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-cwfcm webserver-deployment-7f5969cbc7- deployment-9214  387d38ef-f9bd-461c-b0dc-f4fe8e5ec736 15749 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22250 0xc003f22251}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.221\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2jmw2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2jmw2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.221,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://85fade78944e90af8615938b75b9b8a67825fbf22cea786984acb9278b65face,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.221,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-d5sm4" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-d5sm4 webserver-deployment-7f5969cbc7- deployment-9214  0cec9bc2-be61-472c-bdaf-c5ae9c9ca57e 15890 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22430 0xc003f22431}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g7zgw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g7zgw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-d7v2m" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-d7v2m webserver-deployment-7f5969cbc7- deployment-9214  d81a88aa-7a90-41d8-9fd1-c4664de3e0ba 15889 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22590 0xc003f22591}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l5wzx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l5wzx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-dvtqd" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-dvtqd webserver-deployment-7f5969cbc7- deployment-9214  c1ef2813-2e0a-4072-8f9f-9d46af4a05b8 15745 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f226f0 0xc003f226f1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.125\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-62n4s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-62n4s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.125,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://a177c52c69f3c8f199c26637b59d7d702c71ccbdf595774bf8d9cce29835690e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.125,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.144: INFO: Pod "webserver-deployment-7f5969cbc7-fnmd2" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fnmd2 webserver-deployment-7f5969cbc7- deployment-9214  fe15f55d-1e1d-488f-9902-79cfe8316181 15878 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f228d0 0xc003f228d1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f4bpd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f4bpd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.145: INFO: Pod "webserver-deployment-7f5969cbc7-g667p" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-g667p webserver-deployment-7f5969cbc7- deployment-9214  b4fdf175-6d12-4680-bf54-1d646bca41ef 15742 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22a30 0xc003f22a31}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.128\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-49wd5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-49wd5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.128,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://fff67bceae54bd004d661e683c1451cf25dd590e685664aaf8bca6bed004cc9f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.128,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.149: INFO: Pod "webserver-deployment-7f5969cbc7-hgxq7" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-hgxq7 webserver-deployment-7f5969cbc7- deployment-9214  22281dc7-a22e-447d-b282-e9bc17ef12f8 15752 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22c10 0xc003f22c11}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.127\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nwlgx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nwlgx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:10.244.2.127,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://2261f93ac206423bc0d697c67918846517735c5133cae0f856e1adddd1cbf888,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.2.127,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.149: INFO: Pod "webserver-deployment-7f5969cbc7-lc46g" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-lc46g webserver-deployment-7f5969cbc7- deployment-9214  d6b06a32-1e62-46ba-899b-269a2ebbbd52 15864 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22df0 0xc003f22df1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5bj8g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5bj8g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.150: INFO: Pod "webserver-deployment-7f5969cbc7-mvjts" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-mvjts webserver-deployment-7f5969cbc7- deployment-9214  dc0df94f-d8e0-47d6-bdb8-64bba9b47822 15877 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f22f70 0xc003f22f71}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7ldqn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7ldqn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.151: INFO: Pod "webserver-deployment-7f5969cbc7-qn5kf" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qn5kf webserver-deployment-7f5969cbc7- deployment-9214  f5ed728c-9932-4780-b790-d0c9f7b625c8 15733 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f230d0 0xc003f230d1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.220\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qmsx7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qmsx7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.220,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://29cf40cb0fb3d0ed128ca9fa147b0cf0a0f5cd439c7bcf1cc45459b7dbda7901,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.220,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.152: INFO: Pod "webserver-deployment-7f5969cbc7-v7ht8" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-v7ht8 webserver-deployment-7f5969cbc7- deployment-9214  68075abf-294d-45db-a112-6a0979130547 15756 0 2023-01-30 08:59:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f232b0 0xc003f232b1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.219\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x88c9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x88c9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.219,StartTime:2023-01-30 08:59:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 08:59:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f,ContainerID:containerd://592f9583d7a4475c9626a8cc00bd9cd6123dfdabb1c7fd86ada813a921ccfc7d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.219,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.152: INFO: Pod "webserver-deployment-7f5969cbc7-x52cw" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-x52cw webserver-deployment-7f5969cbc7- deployment-9214  9ad951da-23bb-4b8a-891a-1fe28b77bf7a 15898 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f23490 0xc003f23491}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bzhqm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bzhqm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.153: INFO: Pod "webserver-deployment-7f5969cbc7-x94qt" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-x94qt webserver-deployment-7f5969cbc7- deployment-9214  93c28771-bbbd-44e8-abb6-dfbbb18fa8b2 15887 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f23650 0xc003f23651}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-652zt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-652zt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.153: INFO: Pod "webserver-deployment-7f5969cbc7-xj2st" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xj2st webserver-deployment-7f5969cbc7- deployment-9214  3110fdfe-2087-48ae-a238-cf9978000a9e 15863 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 59cf5f9d-7da0-4032-8ca5-29e6a0edcd81 0xc003f237b0 0xc003f237b1}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59cf5f9d-7da0-4032-8ca5-29e6a0edcd81\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7jc42,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7jc42,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.153: INFO: Pod "webserver-deployment-d9f79cb5-4crvc" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-4crvc webserver-deployment-d9f79cb5- deployment-9214  822d5958-5d0c-40e9-a2da-b09d4b6a1d5f 15833 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc003f238ff 0xc003f23910}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-57zrd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-57zrd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.153: INFO: Pod "webserver-deployment-d9f79cb5-827hr" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-827hr webserver-deployment-d9f79cb5- deployment-9214  8bad71ff-b8e3-4fd5-aaa4-0d7ed88acb1d 15883 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc003f23adf 0xc003f23af0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mwj45,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mwj45,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-bxqpq" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-bxqpq webserver-deployment-d9f79cb5- deployment-9214  1502d9ce-474c-4556-91e2-e90e139f7756 15891 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc003f23c5f 0xc003f23c70}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lkn4z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lkn4z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-cqs6h" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-cqs6h webserver-deployment-d9f79cb5- deployment-9214  2a4582ec-718d-4eca-a5f9-b7282ee1e67d 15866 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc003f23e3f 0xc003f23e50}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t8btf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t8btf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-fqpdj" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-fqpdj webserver-deployment-d9f79cb5- deployment-9214  95d3965a-2d5e-4a90-8ccf-562960d35756 15880 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc00522401f 0xc005224030}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jf4qg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jf4qg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-hwjwl" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-hwjwl webserver-deployment-d9f79cb5- deployment-9214  d386ae81-343d-4eb0-adfb-218d0aa3182e 15869 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc00522418f 0xc0052241a0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dphjz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dphjz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.154: INFO: Pod "webserver-deployment-d9f79cb5-j7zv5" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-j7zv5 webserver-deployment-d9f79cb5- deployment-9214  b1bc3be6-abd3-4b0d-a8fc-5f4c3e650640 15815 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc0052242ff 0xc005224310}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kr7fj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kr7fj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.155: INFO: Pod "webserver-deployment-d9f79cb5-lsdl7" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-lsdl7 webserver-deployment-d9f79cb5- deployment-9214  fb91157f-b888-4c9b-9613-6279b64355d8 15814 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc0052244df 0xc0052244f0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s9n8f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s9n8f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.155: INFO: Pod "webserver-deployment-d9f79cb5-mms8s" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-mms8s webserver-deployment-d9f79cb5- deployment-9214  6ac94b22-d35a-4c5a-8579-356d0e73dbf9 15789 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc0052246bf 0xc0052246d0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s7wcc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s7wcc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.155: INFO: Pod "webserver-deployment-d9f79cb5-qrb4p" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-qrb4p webserver-deployment-d9f79cb5- deployment-9214  a403db8c-15a7-4e77-b45a-f6d87091191d 15831 0 2023-01-30 08:59:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc00522489f 0xc0052248b0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7ltk9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7ltk9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:,StartTime:2023-01-30 08:59:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.156: INFO: Pod "webserver-deployment-d9f79cb5-rh24z" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-rh24z webserver-deployment-d9f79cb5- deployment-9214  588d7691-8bb9-4562-9808-ddc0095bb2a0 15906 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc005224a7f 0xc005224a90}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vf6jr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vf6jr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.2,PodIP:,StartTime:2023-01-30 08:59:08 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.156: INFO: Pod "webserver-deployment-d9f79cb5-s2nhq" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-s2nhq webserver-deployment-d9f79cb5- deployment-9214  6b6970bb-485b-4ce3-a379-87acb628bc6c 15865 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc005224c5f 0xc005224c70}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p67dc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p67dc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 08:59:10.156: INFO: Pod "webserver-deployment-d9f79cb5-tmsv7" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-tmsv7 webserver-deployment-d9f79cb5- deployment-9214  e6a5cca6-2881-43a9-b1c2-842a3d53e6ca 15876 0 2023-01-30 08:59:08 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 2ebe2ad9-2bd7-48de-82d0-c60fea45a266 0xc005224dcf 0xc005224de0}] [] [{kube-controller-manager Update v1 2023-01-30 08:59:08 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ebe2ad9-2bd7-48de-82d0-c60fea45a266\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gr6gx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gr6gx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 08:59:08 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 30 08:59:10.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-9214" for this suite. 01/30/23 08:59:10.163
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 08:59:10.172
Jan 30 08:59:10.172: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename taint-multiple-pods 01/30/23 08:59:10.173
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:59:10.204
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:59:10.208
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:383
Jan 30 08:59:10.215: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 09:00:10.232: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
Jan 30 09:00:10.235: INFO: Starting informer...
STEP: Starting pods... 01/30/23 09:00:10.235
Jan 30 09:00:10.446: INFO: Pod1 is running on tce-worker2. Tainting Node
Jan 30 09:00:10.653: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-8839" to be "running"
Jan 30 09:00:10.656: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.497695ms
Jan 30 09:00:12.658: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.005132899s
Jan 30 09:00:12.658: INFO: Pod "taint-eviction-b1" satisfied condition "running"
Jan 30 09:00:12.658: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-8839" to be "running"
Jan 30 09:00:12.662: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 4.144463ms
Jan 30 09:00:12.662: INFO: Pod "taint-eviction-b2" satisfied condition "running"
Jan 30 09:00:12.662: INFO: Pod2 is running on tce-worker2. Tainting Node
STEP: Trying to apply a taint on the Node 01/30/23 09:00:12.662
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 01/30/23 09:00:12.684
STEP: Waiting for Pod1 and Pod2 to be deleted 01/30/23 09:00:12.688
Jan 30 09:00:18.927: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Jan 30 09:00:38.975: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 01/30/23 09:00:38.984
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:00:38.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-multiple-pods-8839" for this suite. 01/30/23 09:00:38.989
------------------------------
â€¢ [SLOW TEST] [88.823 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 08:59:10.172
    Jan 30 08:59:10.172: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename taint-multiple-pods 01/30/23 08:59:10.173
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 08:59:10.204
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 08:59:10.208
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/node/taints.go:383
    Jan 30 08:59:10.215: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 30 09:00:10.232: INFO: Waiting for terminating namespaces to be deleted...
    [It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
      test/e2e/node/taints.go:455
    Jan 30 09:00:10.235: INFO: Starting informer...
    STEP: Starting pods... 01/30/23 09:00:10.235
    Jan 30 09:00:10.446: INFO: Pod1 is running on tce-worker2. Tainting Node
    Jan 30 09:00:10.653: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-8839" to be "running"
    Jan 30 09:00:10.656: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.497695ms
    Jan 30 09:00:12.658: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.005132899s
    Jan 30 09:00:12.658: INFO: Pod "taint-eviction-b1" satisfied condition "running"
    Jan 30 09:00:12.658: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-8839" to be "running"
    Jan 30 09:00:12.662: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 4.144463ms
    Jan 30 09:00:12.662: INFO: Pod "taint-eviction-b2" satisfied condition "running"
    Jan 30 09:00:12.662: INFO: Pod2 is running on tce-worker2. Tainting Node
    STEP: Trying to apply a taint on the Node 01/30/23 09:00:12.662
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 01/30/23 09:00:12.684
    STEP: Waiting for Pod1 and Pod2 to be deleted 01/30/23 09:00:12.688
    Jan 30 09:00:18.927: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
    Jan 30 09:00:38.975: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 01/30/23 09:00:38.984
    [AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:00:38.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-multiple-pods-8839" for this suite. 01/30/23 09:00:38.989
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:00:38.998
Jan 30 09:00:38.998: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename events 01/30/23 09:00:38.999
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:00:39.016
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:00:39.018
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
STEP: Create set of events 01/30/23 09:00:39.021
Jan 30 09:00:39.026: INFO: created test-event-1
Jan 30 09:00:39.030: INFO: created test-event-2
Jan 30 09:00:39.035: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace 01/30/23 09:00:39.035
STEP: delete collection of events 01/30/23 09:00:39.037
Jan 30 09:00:39.037: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 01/30/23 09:00:39.048
Jan 30 09:00:39.048: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Jan 30 09:00:39.053: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-8236" for this suite. 01/30/23 09:00:39.056
------------------------------
â€¢ [0.064 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:00:38.998
    Jan 30 09:00:38.998: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename events 01/30/23 09:00:38.999
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:00:39.016
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:00:39.018
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/core_events.go:175
    STEP: Create set of events 01/30/23 09:00:39.021
    Jan 30 09:00:39.026: INFO: created test-event-1
    Jan 30 09:00:39.030: INFO: created test-event-2
    Jan 30 09:00:39.035: INFO: created test-event-3
    STEP: get a list of Events with a label in the current namespace 01/30/23 09:00:39.035
    STEP: delete collection of events 01/30/23 09:00:39.037
    Jan 30 09:00:39.037: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 01/30/23 09:00:39.048
    Jan 30 09:00:39.048: INFO: requesting list of events to confirm quantity
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:00:39.053: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-8236" for this suite. 01/30/23 09:00:39.056
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:00:39.063
Jan 30 09:00:39.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 09:00:39.064
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:00:39.074
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:00:39.077
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
STEP: Creating configMap with name configmap-test-volume-a8682b84-8e05-4fb2-ad15-3576ba5201c2 01/30/23 09:00:39.08
STEP: Creating a pod to test consume configMaps 01/30/23 09:00:39.084
Jan 30 09:00:39.092: INFO: Waiting up to 5m0s for pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c" in namespace "configmap-2742" to be "Succeeded or Failed"
Jan 30 09:00:39.095: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.706203ms
Jan 30 09:00:41.099: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c": Phase="Running", Reason="", readiness=true. Elapsed: 2.007044328s
Jan 30 09:00:43.098: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c": Phase="Running", Reason="", readiness=false. Elapsed: 4.006713628s
Jan 30 09:00:45.098: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.006000382s
STEP: Saw pod success 01/30/23 09:00:45.098
Jan 30 09:00:45.098: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c" satisfied condition "Succeeded or Failed"
Jan 30 09:00:45.100: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c container configmap-volume-test: <nil>
STEP: delete the pod 01/30/23 09:00:45.108
Jan 30 09:00:45.120: INFO: Waiting for pod pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c to disappear
Jan 30 09:00:45.122: INFO: Pod pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:00:45.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2742" for this suite. 01/30/23 09:00:45.128
------------------------------
â€¢ [SLOW TEST] [6.070 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:00:39.063
    Jan 30 09:00:39.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 09:00:39.064
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:00:39.074
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:00:39.077
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:423
    STEP: Creating configMap with name configmap-test-volume-a8682b84-8e05-4fb2-ad15-3576ba5201c2 01/30/23 09:00:39.08
    STEP: Creating a pod to test consume configMaps 01/30/23 09:00:39.084
    Jan 30 09:00:39.092: INFO: Waiting up to 5m0s for pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c" in namespace "configmap-2742" to be "Succeeded or Failed"
    Jan 30 09:00:39.095: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.706203ms
    Jan 30 09:00:41.099: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c": Phase="Running", Reason="", readiness=true. Elapsed: 2.007044328s
    Jan 30 09:00:43.098: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c": Phase="Running", Reason="", readiness=false. Elapsed: 4.006713628s
    Jan 30 09:00:45.098: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.006000382s
    STEP: Saw pod success 01/30/23 09:00:45.098
    Jan 30 09:00:45.098: INFO: Pod "pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c" satisfied condition "Succeeded or Failed"
    Jan 30 09:00:45.100: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c container configmap-volume-test: <nil>
    STEP: delete the pod 01/30/23 09:00:45.108
    Jan 30 09:00:45.120: INFO: Waiting for pod pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c to disappear
    Jan 30 09:00:45.122: INFO: Pod pod-configmaps-06a5aee6-495f-4153-8d50-d4447935728c no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:00:45.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2742" for this suite. 01/30/23 09:00:45.128
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:00:45.134
Jan 30 09:00:45.134: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 09:00:45.135
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:00:45.147
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:00:45.15
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
STEP: creating a replication controller 01/30/23 09:00:45.152
Jan 30 09:00:45.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 create -f -'
Jan 30 09:00:45.703: INFO: stderr: ""
Jan 30 09:00:45.703: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 01/30/23 09:00:45.703
Jan 30 09:00:45.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 09:00:45.795: INFO: stderr: ""
Jan 30 09:00:45.795: INFO: stdout: "update-demo-nautilus-srsvz update-demo-nautilus-xdvj5 "
Jan 30 09:00:45.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-srsvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 09:00:45.858: INFO: stderr: ""
Jan 30 09:00:45.858: INFO: stdout: ""
Jan 30 09:00:45.858: INFO: update-demo-nautilus-srsvz is created but not running
Jan 30 09:00:50.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jan 30 09:00:50.920: INFO: stderr: ""
Jan 30 09:00:50.920: INFO: stdout: "update-demo-nautilus-srsvz update-demo-nautilus-xdvj5 "
Jan 30 09:00:50.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-srsvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 09:00:50.981: INFO: stderr: ""
Jan 30 09:00:50.981: INFO: stdout: "true"
Jan 30 09:00:50.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-srsvz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 09:00:51.038: INFO: stderr: ""
Jan 30 09:00:51.038: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 30 09:00:51.038: INFO: validating pod update-demo-nautilus-srsvz
Jan 30 09:00:51.041: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 09:00:51.041: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 09:00:51.041: INFO: update-demo-nautilus-srsvz is verified up and running
Jan 30 09:00:51.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-xdvj5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jan 30 09:00:51.108: INFO: stderr: ""
Jan 30 09:00:51.108: INFO: stdout: "true"
Jan 30 09:00:51.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-xdvj5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jan 30 09:00:51.169: INFO: stderr: ""
Jan 30 09:00:51.169: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Jan 30 09:00:51.169: INFO: validating pod update-demo-nautilus-xdvj5
Jan 30 09:00:51.179: INFO: got data: {
  "image": "nautilus.jpg"
}

Jan 30 09:00:51.179: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jan 30 09:00:51.179: INFO: update-demo-nautilus-xdvj5 is verified up and running
STEP: using delete to clean up resources 01/30/23 09:00:51.179
Jan 30 09:00:51.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 delete --grace-period=0 --force -f -'
Jan 30 09:00:51.261: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 09:00:51.261: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jan 30 09:00:51.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get rc,svc -l name=update-demo --no-headers'
Jan 30 09:00:51.353: INFO: stderr: "No resources found in kubectl-4727 namespace.\n"
Jan 30 09:00:51.353: INFO: stdout: ""
Jan 30 09:00:51.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 30 09:00:51.431: INFO: stderr: ""
Jan 30 09:00:51.431: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 09:00:51.431: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4727" for this suite. 01/30/23 09:00:51.434
------------------------------
â€¢ [SLOW TEST] [6.305 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should create and stop a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:339

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:00:45.134
    Jan 30 09:00:45.134: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 09:00:45.135
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:00:45.147
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:00:45.15
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should create and stop a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:339
    STEP: creating a replication controller 01/30/23 09:00:45.152
    Jan 30 09:00:45.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 create -f -'
    Jan 30 09:00:45.703: INFO: stderr: ""
    Jan 30 09:00:45.703: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 01/30/23 09:00:45.703
    Jan 30 09:00:45.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 30 09:00:45.795: INFO: stderr: ""
    Jan 30 09:00:45.795: INFO: stdout: "update-demo-nautilus-srsvz update-demo-nautilus-xdvj5 "
    Jan 30 09:00:45.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-srsvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 09:00:45.858: INFO: stderr: ""
    Jan 30 09:00:45.858: INFO: stdout: ""
    Jan 30 09:00:45.858: INFO: update-demo-nautilus-srsvz is created but not running
    Jan 30 09:00:50.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Jan 30 09:00:50.920: INFO: stderr: ""
    Jan 30 09:00:50.920: INFO: stdout: "update-demo-nautilus-srsvz update-demo-nautilus-xdvj5 "
    Jan 30 09:00:50.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-srsvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 09:00:50.981: INFO: stderr: ""
    Jan 30 09:00:50.981: INFO: stdout: "true"
    Jan 30 09:00:50.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-srsvz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 30 09:00:51.038: INFO: stderr: ""
    Jan 30 09:00:51.038: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 30 09:00:51.038: INFO: validating pod update-demo-nautilus-srsvz
    Jan 30 09:00:51.041: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 30 09:00:51.041: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 30 09:00:51.041: INFO: update-demo-nautilus-srsvz is verified up and running
    Jan 30 09:00:51.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-xdvj5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Jan 30 09:00:51.108: INFO: stderr: ""
    Jan 30 09:00:51.108: INFO: stdout: "true"
    Jan 30 09:00:51.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods update-demo-nautilus-xdvj5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Jan 30 09:00:51.169: INFO: stderr: ""
    Jan 30 09:00:51.169: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Jan 30 09:00:51.169: INFO: validating pod update-demo-nautilus-xdvj5
    Jan 30 09:00:51.179: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Jan 30 09:00:51.179: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Jan 30 09:00:51.179: INFO: update-demo-nautilus-xdvj5 is verified up and running
    STEP: using delete to clean up resources 01/30/23 09:00:51.179
    Jan 30 09:00:51.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 delete --grace-period=0 --force -f -'
    Jan 30 09:00:51.261: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 09:00:51.261: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Jan 30 09:00:51.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get rc,svc -l name=update-demo --no-headers'
    Jan 30 09:00:51.353: INFO: stderr: "No resources found in kubectl-4727 namespace.\n"
    Jan 30 09:00:51.353: INFO: stdout: ""
    Jan 30 09:00:51.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4727 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Jan 30 09:00:51.431: INFO: stderr: ""
    Jan 30 09:00:51.431: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:00:51.431: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4727" for this suite. 01/30/23 09:00:51.434
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:00:51.44
Jan 30 09:00:51.440: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 09:00:51.441
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:00:51.453
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:00:51.455
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
STEP: Counting existing ResourceQuota 01/30/23 09:00:51.458
STEP: Creating a ResourceQuota 01/30/23 09:00:56.464
STEP: Ensuring resource quota status is calculated 01/30/23 09:00:56.47
STEP: Creating a Service 01/30/23 09:00:58.472
STEP: Creating a NodePort Service 01/30/23 09:00:58.486
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 01/30/23 09:00:58.512
STEP: Ensuring resource quota status captures service creation 01/30/23 09:00:58.534
STEP: Deleting Services 01/30/23 09:01:00.537
STEP: Ensuring resource quota status released usage 01/30/23 09:01:00.578
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 09:01:02.582: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-278" for this suite. 01/30/23 09:01:02.585
------------------------------
â€¢ [SLOW TEST] [11.158 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:00:51.44
    Jan 30 09:00:51.440: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 09:00:51.441
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:00:51.453
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:00:51.455
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a service. [Conformance]
      test/e2e/apimachinery/resource_quota.go:100
    STEP: Counting existing ResourceQuota 01/30/23 09:00:51.458
    STEP: Creating a ResourceQuota 01/30/23 09:00:56.464
    STEP: Ensuring resource quota status is calculated 01/30/23 09:00:56.47
    STEP: Creating a Service 01/30/23 09:00:58.472
    STEP: Creating a NodePort Service 01/30/23 09:00:58.486
    STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 01/30/23 09:00:58.512
    STEP: Ensuring resource quota status captures service creation 01/30/23 09:00:58.534
    STEP: Deleting Services 01/30/23 09:01:00.537
    STEP: Ensuring resource quota status released usage 01/30/23 09:01:00.578
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:01:02.582: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-278" for this suite. 01/30/23 09:01:02.585
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:01:02.598
Jan 30 09:01:02.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-probe 01/30/23 09:01:02.599
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:01:02.61
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:01:02.613
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
STEP: Creating pod busybox-13441ec6-3124-4d19-94cd-523aa1e6492e in namespace container-probe-7968 01/30/23 09:01:02.615
Jan 30 09:01:02.626: INFO: Waiting up to 5m0s for pod "busybox-13441ec6-3124-4d19-94cd-523aa1e6492e" in namespace "container-probe-7968" to be "not pending"
Jan 30 09:01:02.631: INFO: Pod "busybox-13441ec6-3124-4d19-94cd-523aa1e6492e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.481087ms
Jan 30 09:01:04.635: INFO: Pod "busybox-13441ec6-3124-4d19-94cd-523aa1e6492e": Phase="Running", Reason="", readiness=true. Elapsed: 2.008925639s
Jan 30 09:01:04.635: INFO: Pod "busybox-13441ec6-3124-4d19-94cd-523aa1e6492e" satisfied condition "not pending"
Jan 30 09:01:04.635: INFO: Started pod busybox-13441ec6-3124-4d19-94cd-523aa1e6492e in namespace container-probe-7968
STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 09:01:04.635
Jan 30 09:01:04.637: INFO: Initial restart count of pod busybox-13441ec6-3124-4d19-94cd-523aa1e6492e is 0
STEP: deleting the pod 01/30/23 09:05:05.039
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 30 09:05:05.063: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-7968" for this suite. 01/30/23 09:05:05.069
------------------------------
â€¢ [SLOW TEST] [242.476 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:01:02.598
    Jan 30 09:01:02.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-probe 01/30/23 09:01:02.599
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:01:02.61
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:01:02.613
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:152
    STEP: Creating pod busybox-13441ec6-3124-4d19-94cd-523aa1e6492e in namespace container-probe-7968 01/30/23 09:01:02.615
    Jan 30 09:01:02.626: INFO: Waiting up to 5m0s for pod "busybox-13441ec6-3124-4d19-94cd-523aa1e6492e" in namespace "container-probe-7968" to be "not pending"
    Jan 30 09:01:02.631: INFO: Pod "busybox-13441ec6-3124-4d19-94cd-523aa1e6492e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.481087ms
    Jan 30 09:01:04.635: INFO: Pod "busybox-13441ec6-3124-4d19-94cd-523aa1e6492e": Phase="Running", Reason="", readiness=true. Elapsed: 2.008925639s
    Jan 30 09:01:04.635: INFO: Pod "busybox-13441ec6-3124-4d19-94cd-523aa1e6492e" satisfied condition "not pending"
    Jan 30 09:01:04.635: INFO: Started pod busybox-13441ec6-3124-4d19-94cd-523aa1e6492e in namespace container-probe-7968
    STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 09:01:04.635
    Jan 30 09:01:04.637: INFO: Initial restart count of pod busybox-13441ec6-3124-4d19-94cd-523aa1e6492e is 0
    STEP: deleting the pod 01/30/23 09:05:05.039
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:05:05.063: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-7968" for this suite. 01/30/23 09:05:05.069
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:05:05.076
Jan 30 09:05:05.076: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename runtimeclass 01/30/23 09:05:05.076
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:05:05.091
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:05:05.093
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
Jan 30 09:05:05.115: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-5775 to be scheduled
Jan 30 09:05:05.118: INFO: 1 pods are not scheduled: [runtimeclass-5775/test-runtimeclass-runtimeclass-5775-preconfigured-handler-5c76b(8be39d51-19af-4eb0-ae4a-455c72ca6f24)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 30 09:05:07.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-5775" for this suite. 01/30/23 09:05:07.131
------------------------------
â€¢ [2.060 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:05:05.076
    Jan 30 09:05:05.076: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename runtimeclass 01/30/23 09:05:05.076
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:05:05.091
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:05:05.093
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:104
    Jan 30 09:05:05.115: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-5775 to be scheduled
    Jan 30 09:05:05.118: INFO: 1 pods are not scheduled: [runtimeclass-5775/test-runtimeclass-runtimeclass-5775-preconfigured-handler-5c76b(8be39d51-19af-4eb0-ae4a-455c72ca6f24)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:05:07.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-5775" for this suite. 01/30/23 09:05:07.131
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] ReplicationController
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:05:07.136
Jan 30 09:05:07.137: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replication-controller 01/30/23 09:05:07.137
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:05:07.153
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:05:07.157
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
STEP: Given a ReplicationController is created 01/30/23 09:05:07.16
STEP: When the matched label of one of its pods change 01/30/23 09:05:07.165
Jan 30 09:05:07.171: INFO: Pod name pod-release: Found 0 pods out of 1
Jan 30 09:05:12.174: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released 01/30/23 09:05:12.183
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 30 09:05:13.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-5675" for this suite. 01/30/23 09:05:13.191
------------------------------
â€¢ [SLOW TEST] [6.063 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:05:07.136
    Jan 30 09:05:07.137: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replication-controller 01/30/23 09:05:07.137
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:05:07.153
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:05:07.157
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should release no longer matching pods [Conformance]
      test/e2e/apps/rc.go:101
    STEP: Given a ReplicationController is created 01/30/23 09:05:07.16
    STEP: When the matched label of one of its pods change 01/30/23 09:05:07.165
    Jan 30 09:05:07.171: INFO: Pod name pod-release: Found 0 pods out of 1
    Jan 30 09:05:12.174: INFO: Pod name pod-release: Found 1 pods out of 1
    STEP: Then the pod is released 01/30/23 09:05:12.183
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:05:13.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-5675" for this suite. 01/30/23 09:05:13.191
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:05:13.199
Jan 30 09:05:13.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename gc 01/30/23 09:05:13.2
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:05:13.211
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:05:13.213
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
STEP: create the rc 01/30/23 09:05:13.218
STEP: delete the rc 01/30/23 09:05:18.228
STEP: wait for the rc to be deleted 01/30/23 09:05:18.248
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 01/30/23 09:05:23.251
STEP: Gathering metrics 01/30/23 09:05:53.258
Jan 30 09:05:53.270: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
Jan 30 09:05:53.273: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.802131ms
Jan 30 09:05:53.273: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
Jan 30 09:05:53.273: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
Jan 30 09:05:53.325: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Jan 30 09:05:53.325: INFO: Deleting pod "simpletest.rc-26l5r" in namespace "gc-2935"
Jan 30 09:05:53.338: INFO: Deleting pod "simpletest.rc-26pqr" in namespace "gc-2935"
Jan 30 09:05:53.350: INFO: Deleting pod "simpletest.rc-28vpb" in namespace "gc-2935"
Jan 30 09:05:53.372: INFO: Deleting pod "simpletest.rc-2r848" in namespace "gc-2935"
Jan 30 09:05:53.387: INFO: Deleting pod "simpletest.rc-2rrxl" in namespace "gc-2935"
Jan 30 09:05:53.402: INFO: Deleting pod "simpletest.rc-49smf" in namespace "gc-2935"
Jan 30 09:05:53.420: INFO: Deleting pod "simpletest.rc-4blhh" in namespace "gc-2935"
Jan 30 09:05:53.432: INFO: Deleting pod "simpletest.rc-4rfqg" in namespace "gc-2935"
Jan 30 09:05:53.446: INFO: Deleting pod "simpletest.rc-4vcqd" in namespace "gc-2935"
Jan 30 09:05:53.463: INFO: Deleting pod "simpletest.rc-4vj4d" in namespace "gc-2935"
Jan 30 09:05:53.480: INFO: Deleting pod "simpletest.rc-4x85l" in namespace "gc-2935"
Jan 30 09:05:53.514: INFO: Deleting pod "simpletest.rc-5ccr5" in namespace "gc-2935"
Jan 30 09:05:53.538: INFO: Deleting pod "simpletest.rc-5g9qw" in namespace "gc-2935"
Jan 30 09:05:53.562: INFO: Deleting pod "simpletest.rc-5mhl4" in namespace "gc-2935"
Jan 30 09:05:53.582: INFO: Deleting pod "simpletest.rc-64v4x" in namespace "gc-2935"
Jan 30 09:05:53.598: INFO: Deleting pod "simpletest.rc-66nwp" in namespace "gc-2935"
Jan 30 09:05:53.615: INFO: Deleting pod "simpletest.rc-6gj5h" in namespace "gc-2935"
Jan 30 09:05:53.642: INFO: Deleting pod "simpletest.rc-6hrkn" in namespace "gc-2935"
Jan 30 09:05:53.654: INFO: Deleting pod "simpletest.rc-6qh4r" in namespace "gc-2935"
Jan 30 09:05:53.673: INFO: Deleting pod "simpletest.rc-7bd28" in namespace "gc-2935"
Jan 30 09:05:53.693: INFO: Deleting pod "simpletest.rc-7k279" in namespace "gc-2935"
Jan 30 09:05:53.714: INFO: Deleting pod "simpletest.rc-8b6lh" in namespace "gc-2935"
Jan 30 09:05:53.724: INFO: Deleting pod "simpletest.rc-8gdcj" in namespace "gc-2935"
Jan 30 09:05:53.735: INFO: Deleting pod "simpletest.rc-8gg5v" in namespace "gc-2935"
Jan 30 09:05:53.751: INFO: Deleting pod "simpletest.rc-8nngd" in namespace "gc-2935"
Jan 30 09:05:53.780: INFO: Deleting pod "simpletest.rc-97qhz" in namespace "gc-2935"
Jan 30 09:05:53.811: INFO: Deleting pod "simpletest.rc-9drm7" in namespace "gc-2935"
Jan 30 09:05:53.843: INFO: Deleting pod "simpletest.rc-9h55q" in namespace "gc-2935"
Jan 30 09:05:53.884: INFO: Deleting pod "simpletest.rc-9hq89" in namespace "gc-2935"
Jan 30 09:05:53.929: INFO: Deleting pod "simpletest.rc-9mk85" in namespace "gc-2935"
Jan 30 09:05:54.029: INFO: Deleting pod "simpletest.rc-9qwtd" in namespace "gc-2935"
Jan 30 09:05:54.079: INFO: Deleting pod "simpletest.rc-9xd6m" in namespace "gc-2935"
Jan 30 09:05:54.133: INFO: Deleting pod "simpletest.rc-blbws" in namespace "gc-2935"
Jan 30 09:05:54.169: INFO: Deleting pod "simpletest.rc-c445k" in namespace "gc-2935"
Jan 30 09:05:54.201: INFO: Deleting pod "simpletest.rc-c6hqp" in namespace "gc-2935"
Jan 30 09:05:54.217: INFO: Deleting pod "simpletest.rc-cknhl" in namespace "gc-2935"
Jan 30 09:05:54.242: INFO: Deleting pod "simpletest.rc-cwnj5" in namespace "gc-2935"
Jan 30 09:05:54.278: INFO: Deleting pod "simpletest.rc-czp2w" in namespace "gc-2935"
Jan 30 09:05:54.310: INFO: Deleting pod "simpletest.rc-dfpqd" in namespace "gc-2935"
Jan 30 09:05:54.337: INFO: Deleting pod "simpletest.rc-dgtpp" in namespace "gc-2935"
Jan 30 09:05:54.375: INFO: Deleting pod "simpletest.rc-dp9gv" in namespace "gc-2935"
Jan 30 09:05:54.395: INFO: Deleting pod "simpletest.rc-drx8f" in namespace "gc-2935"
Jan 30 09:05:54.417: INFO: Deleting pod "simpletest.rc-f8kkn" in namespace "gc-2935"
Jan 30 09:05:54.433: INFO: Deleting pod "simpletest.rc-fhmsx" in namespace "gc-2935"
Jan 30 09:05:54.461: INFO: Deleting pod "simpletest.rc-fkjh8" in namespace "gc-2935"
Jan 30 09:05:54.471: INFO: Deleting pod "simpletest.rc-fpcxn" in namespace "gc-2935"
Jan 30 09:05:54.494: INFO: Deleting pod "simpletest.rc-g86gg" in namespace "gc-2935"
Jan 30 09:05:54.510: INFO: Deleting pod "simpletest.rc-gbzb7" in namespace "gc-2935"
Jan 30 09:05:54.526: INFO: Deleting pod "simpletest.rc-glzml" in namespace "gc-2935"
Jan 30 09:05:54.538: INFO: Deleting pod "simpletest.rc-gm77j" in namespace "gc-2935"
Jan 30 09:05:54.566: INFO: Deleting pod "simpletest.rc-h8qr7" in namespace "gc-2935"
Jan 30 09:05:54.587: INFO: Deleting pod "simpletest.rc-hbzzg" in namespace "gc-2935"
Jan 30 09:05:54.600: INFO: Deleting pod "simpletest.rc-hgtb7" in namespace "gc-2935"
Jan 30 09:05:54.624: INFO: Deleting pod "simpletest.rc-j2ngt" in namespace "gc-2935"
Jan 30 09:05:54.643: INFO: Deleting pod "simpletest.rc-j8qxc" in namespace "gc-2935"
Jan 30 09:05:54.682: INFO: Deleting pod "simpletest.rc-k5944" in namespace "gc-2935"
Jan 30 09:05:54.700: INFO: Deleting pod "simpletest.rc-kcvhp" in namespace "gc-2935"
Jan 30 09:05:54.728: INFO: Deleting pod "simpletest.rc-kdf2x" in namespace "gc-2935"
Jan 30 09:05:54.760: INFO: Deleting pod "simpletest.rc-kmlbk" in namespace "gc-2935"
Jan 30 09:05:54.773: INFO: Deleting pod "simpletest.rc-kqzht" in namespace "gc-2935"
Jan 30 09:05:54.788: INFO: Deleting pod "simpletest.rc-kwwcj" in namespace "gc-2935"
Jan 30 09:05:54.805: INFO: Deleting pod "simpletest.rc-m9xpl" in namespace "gc-2935"
Jan 30 09:05:54.820: INFO: Deleting pod "simpletest.rc-mjfn4" in namespace "gc-2935"
Jan 30 09:05:54.843: INFO: Deleting pod "simpletest.rc-mjm47" in namespace "gc-2935"
Jan 30 09:05:54.872: INFO: Deleting pod "simpletest.rc-mvqsf" in namespace "gc-2935"
Jan 30 09:05:54.887: INFO: Deleting pod "simpletest.rc-n7664" in namespace "gc-2935"
Jan 30 09:05:54.919: INFO: Deleting pod "simpletest.rc-ntcdd" in namespace "gc-2935"
Jan 30 09:05:54.945: INFO: Deleting pod "simpletest.rc-nzkgm" in namespace "gc-2935"
Jan 30 09:05:54.995: INFO: Deleting pod "simpletest.rc-p7tq2" in namespace "gc-2935"
Jan 30 09:05:55.017: INFO: Deleting pod "simpletest.rc-p95b5" in namespace "gc-2935"
Jan 30 09:05:55.030: INFO: Deleting pod "simpletest.rc-pls4f" in namespace "gc-2935"
Jan 30 09:05:55.067: INFO: Deleting pod "simpletest.rc-pmwpg" in namespace "gc-2935"
Jan 30 09:05:55.110: INFO: Deleting pod "simpletest.rc-ppz64" in namespace "gc-2935"
Jan 30 09:05:55.124: INFO: Deleting pod "simpletest.rc-qp65k" in namespace "gc-2935"
Jan 30 09:05:55.152: INFO: Deleting pod "simpletest.rc-qvtxr" in namespace "gc-2935"
Jan 30 09:05:55.238: INFO: Deleting pod "simpletest.rc-qvvd5" in namespace "gc-2935"
Jan 30 09:05:55.283: INFO: Deleting pod "simpletest.rc-rbmlk" in namespace "gc-2935"
Jan 30 09:05:55.302: INFO: Deleting pod "simpletest.rc-rh6bj" in namespace "gc-2935"
Jan 30 09:05:55.353: INFO: Deleting pod "simpletest.rc-rl2dk" in namespace "gc-2935"
Jan 30 09:05:55.383: INFO: Deleting pod "simpletest.rc-rlwmc" in namespace "gc-2935"
Jan 30 09:05:55.408: INFO: Deleting pod "simpletest.rc-rrvc6" in namespace "gc-2935"
Jan 30 09:05:55.441: INFO: Deleting pod "simpletest.rc-rvrwt" in namespace "gc-2935"
Jan 30 09:05:55.471: INFO: Deleting pod "simpletest.rc-s88gl" in namespace "gc-2935"
Jan 30 09:05:55.497: INFO: Deleting pod "simpletest.rc-shlnm" in namespace "gc-2935"
Jan 30 09:05:55.565: INFO: Deleting pod "simpletest.rc-t2zzc" in namespace "gc-2935"
Jan 30 09:05:55.598: INFO: Deleting pod "simpletest.rc-tkdhx" in namespace "gc-2935"
Jan 30 09:05:55.630: INFO: Deleting pod "simpletest.rc-tp42z" in namespace "gc-2935"
Jan 30 09:05:55.661: INFO: Deleting pod "simpletest.rc-tpjv7" in namespace "gc-2935"
Jan 30 09:05:55.706: INFO: Deleting pod "simpletest.rc-tzwdw" in namespace "gc-2935"
Jan 30 09:05:55.729: INFO: Deleting pod "simpletest.rc-v8gvq" in namespace "gc-2935"
Jan 30 09:05:55.758: INFO: Deleting pod "simpletest.rc-vthwt" in namespace "gc-2935"
Jan 30 09:05:55.778: INFO: Deleting pod "simpletest.rc-w6v28" in namespace "gc-2935"
Jan 30 09:05:55.808: INFO: Deleting pod "simpletest.rc-wbgmj" in namespace "gc-2935"
Jan 30 09:05:55.834: INFO: Deleting pod "simpletest.rc-x74pw" in namespace "gc-2935"
Jan 30 09:05:55.846: INFO: Deleting pod "simpletest.rc-x8cxl" in namespace "gc-2935"
Jan 30 09:05:55.876: INFO: Deleting pod "simpletest.rc-xptnk" in namespace "gc-2935"
Jan 30 09:05:55.904: INFO: Deleting pod "simpletest.rc-zb9bg" in namespace "gc-2935"
Jan 30 09:05:55.921: INFO: Deleting pod "simpletest.rc-zjnkl" in namespace "gc-2935"
Jan 30 09:05:55.938: INFO: Deleting pod "simpletest.rc-zqwms" in namespace "gc-2935"
Jan 30 09:05:55.964: INFO: Deleting pod "simpletest.rc-zrptm" in namespace "gc-2935"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 30 09:05:55.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-2935" for this suite. 01/30/23 09:05:56.013
------------------------------
â€¢ [SLOW TEST] [42.864 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:05:13.199
    Jan 30 09:05:13.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename gc 01/30/23 09:05:13.2
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:05:13.211
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:05:13.213
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan pods created by rc if delete options say so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:370
    STEP: create the rc 01/30/23 09:05:13.218
    STEP: delete the rc 01/30/23 09:05:18.228
    STEP: wait for the rc to be deleted 01/30/23 09:05:18.248
    STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 01/30/23 09:05:23.251
    STEP: Gathering metrics 01/30/23 09:05:53.258
    Jan 30 09:05:53.270: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
    Jan 30 09:05:53.273: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.802131ms
    Jan 30 09:05:53.273: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
    Jan 30 09:05:53.273: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
    Jan 30 09:05:53.325: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Jan 30 09:05:53.325: INFO: Deleting pod "simpletest.rc-26l5r" in namespace "gc-2935"
    Jan 30 09:05:53.338: INFO: Deleting pod "simpletest.rc-26pqr" in namespace "gc-2935"
    Jan 30 09:05:53.350: INFO: Deleting pod "simpletest.rc-28vpb" in namespace "gc-2935"
    Jan 30 09:05:53.372: INFO: Deleting pod "simpletest.rc-2r848" in namespace "gc-2935"
    Jan 30 09:05:53.387: INFO: Deleting pod "simpletest.rc-2rrxl" in namespace "gc-2935"
    Jan 30 09:05:53.402: INFO: Deleting pod "simpletest.rc-49smf" in namespace "gc-2935"
    Jan 30 09:05:53.420: INFO: Deleting pod "simpletest.rc-4blhh" in namespace "gc-2935"
    Jan 30 09:05:53.432: INFO: Deleting pod "simpletest.rc-4rfqg" in namespace "gc-2935"
    Jan 30 09:05:53.446: INFO: Deleting pod "simpletest.rc-4vcqd" in namespace "gc-2935"
    Jan 30 09:05:53.463: INFO: Deleting pod "simpletest.rc-4vj4d" in namespace "gc-2935"
    Jan 30 09:05:53.480: INFO: Deleting pod "simpletest.rc-4x85l" in namespace "gc-2935"
    Jan 30 09:05:53.514: INFO: Deleting pod "simpletest.rc-5ccr5" in namespace "gc-2935"
    Jan 30 09:05:53.538: INFO: Deleting pod "simpletest.rc-5g9qw" in namespace "gc-2935"
    Jan 30 09:05:53.562: INFO: Deleting pod "simpletest.rc-5mhl4" in namespace "gc-2935"
    Jan 30 09:05:53.582: INFO: Deleting pod "simpletest.rc-64v4x" in namespace "gc-2935"
    Jan 30 09:05:53.598: INFO: Deleting pod "simpletest.rc-66nwp" in namespace "gc-2935"
    Jan 30 09:05:53.615: INFO: Deleting pod "simpletest.rc-6gj5h" in namespace "gc-2935"
    Jan 30 09:05:53.642: INFO: Deleting pod "simpletest.rc-6hrkn" in namespace "gc-2935"
    Jan 30 09:05:53.654: INFO: Deleting pod "simpletest.rc-6qh4r" in namespace "gc-2935"
    Jan 30 09:05:53.673: INFO: Deleting pod "simpletest.rc-7bd28" in namespace "gc-2935"
    Jan 30 09:05:53.693: INFO: Deleting pod "simpletest.rc-7k279" in namespace "gc-2935"
    Jan 30 09:05:53.714: INFO: Deleting pod "simpletest.rc-8b6lh" in namespace "gc-2935"
    Jan 30 09:05:53.724: INFO: Deleting pod "simpletest.rc-8gdcj" in namespace "gc-2935"
    Jan 30 09:05:53.735: INFO: Deleting pod "simpletest.rc-8gg5v" in namespace "gc-2935"
    Jan 30 09:05:53.751: INFO: Deleting pod "simpletest.rc-8nngd" in namespace "gc-2935"
    Jan 30 09:05:53.780: INFO: Deleting pod "simpletest.rc-97qhz" in namespace "gc-2935"
    Jan 30 09:05:53.811: INFO: Deleting pod "simpletest.rc-9drm7" in namespace "gc-2935"
    Jan 30 09:05:53.843: INFO: Deleting pod "simpletest.rc-9h55q" in namespace "gc-2935"
    Jan 30 09:05:53.884: INFO: Deleting pod "simpletest.rc-9hq89" in namespace "gc-2935"
    Jan 30 09:05:53.929: INFO: Deleting pod "simpletest.rc-9mk85" in namespace "gc-2935"
    Jan 30 09:05:54.029: INFO: Deleting pod "simpletest.rc-9qwtd" in namespace "gc-2935"
    Jan 30 09:05:54.079: INFO: Deleting pod "simpletest.rc-9xd6m" in namespace "gc-2935"
    Jan 30 09:05:54.133: INFO: Deleting pod "simpletest.rc-blbws" in namespace "gc-2935"
    Jan 30 09:05:54.169: INFO: Deleting pod "simpletest.rc-c445k" in namespace "gc-2935"
    Jan 30 09:05:54.201: INFO: Deleting pod "simpletest.rc-c6hqp" in namespace "gc-2935"
    Jan 30 09:05:54.217: INFO: Deleting pod "simpletest.rc-cknhl" in namespace "gc-2935"
    Jan 30 09:05:54.242: INFO: Deleting pod "simpletest.rc-cwnj5" in namespace "gc-2935"
    Jan 30 09:05:54.278: INFO: Deleting pod "simpletest.rc-czp2w" in namespace "gc-2935"
    Jan 30 09:05:54.310: INFO: Deleting pod "simpletest.rc-dfpqd" in namespace "gc-2935"
    Jan 30 09:05:54.337: INFO: Deleting pod "simpletest.rc-dgtpp" in namespace "gc-2935"
    Jan 30 09:05:54.375: INFO: Deleting pod "simpletest.rc-dp9gv" in namespace "gc-2935"
    Jan 30 09:05:54.395: INFO: Deleting pod "simpletest.rc-drx8f" in namespace "gc-2935"
    Jan 30 09:05:54.417: INFO: Deleting pod "simpletest.rc-f8kkn" in namespace "gc-2935"
    Jan 30 09:05:54.433: INFO: Deleting pod "simpletest.rc-fhmsx" in namespace "gc-2935"
    Jan 30 09:05:54.461: INFO: Deleting pod "simpletest.rc-fkjh8" in namespace "gc-2935"
    Jan 30 09:05:54.471: INFO: Deleting pod "simpletest.rc-fpcxn" in namespace "gc-2935"
    Jan 30 09:05:54.494: INFO: Deleting pod "simpletest.rc-g86gg" in namespace "gc-2935"
    Jan 30 09:05:54.510: INFO: Deleting pod "simpletest.rc-gbzb7" in namespace "gc-2935"
    Jan 30 09:05:54.526: INFO: Deleting pod "simpletest.rc-glzml" in namespace "gc-2935"
    Jan 30 09:05:54.538: INFO: Deleting pod "simpletest.rc-gm77j" in namespace "gc-2935"
    Jan 30 09:05:54.566: INFO: Deleting pod "simpletest.rc-h8qr7" in namespace "gc-2935"
    Jan 30 09:05:54.587: INFO: Deleting pod "simpletest.rc-hbzzg" in namespace "gc-2935"
    Jan 30 09:05:54.600: INFO: Deleting pod "simpletest.rc-hgtb7" in namespace "gc-2935"
    Jan 30 09:05:54.624: INFO: Deleting pod "simpletest.rc-j2ngt" in namespace "gc-2935"
    Jan 30 09:05:54.643: INFO: Deleting pod "simpletest.rc-j8qxc" in namespace "gc-2935"
    Jan 30 09:05:54.682: INFO: Deleting pod "simpletest.rc-k5944" in namespace "gc-2935"
    Jan 30 09:05:54.700: INFO: Deleting pod "simpletest.rc-kcvhp" in namespace "gc-2935"
    Jan 30 09:05:54.728: INFO: Deleting pod "simpletest.rc-kdf2x" in namespace "gc-2935"
    Jan 30 09:05:54.760: INFO: Deleting pod "simpletest.rc-kmlbk" in namespace "gc-2935"
    Jan 30 09:05:54.773: INFO: Deleting pod "simpletest.rc-kqzht" in namespace "gc-2935"
    Jan 30 09:05:54.788: INFO: Deleting pod "simpletest.rc-kwwcj" in namespace "gc-2935"
    Jan 30 09:05:54.805: INFO: Deleting pod "simpletest.rc-m9xpl" in namespace "gc-2935"
    Jan 30 09:05:54.820: INFO: Deleting pod "simpletest.rc-mjfn4" in namespace "gc-2935"
    Jan 30 09:05:54.843: INFO: Deleting pod "simpletest.rc-mjm47" in namespace "gc-2935"
    Jan 30 09:05:54.872: INFO: Deleting pod "simpletest.rc-mvqsf" in namespace "gc-2935"
    Jan 30 09:05:54.887: INFO: Deleting pod "simpletest.rc-n7664" in namespace "gc-2935"
    Jan 30 09:05:54.919: INFO: Deleting pod "simpletest.rc-ntcdd" in namespace "gc-2935"
    Jan 30 09:05:54.945: INFO: Deleting pod "simpletest.rc-nzkgm" in namespace "gc-2935"
    Jan 30 09:05:54.995: INFO: Deleting pod "simpletest.rc-p7tq2" in namespace "gc-2935"
    Jan 30 09:05:55.017: INFO: Deleting pod "simpletest.rc-p95b5" in namespace "gc-2935"
    Jan 30 09:05:55.030: INFO: Deleting pod "simpletest.rc-pls4f" in namespace "gc-2935"
    Jan 30 09:05:55.067: INFO: Deleting pod "simpletest.rc-pmwpg" in namespace "gc-2935"
    Jan 30 09:05:55.110: INFO: Deleting pod "simpletest.rc-ppz64" in namespace "gc-2935"
    Jan 30 09:05:55.124: INFO: Deleting pod "simpletest.rc-qp65k" in namespace "gc-2935"
    Jan 30 09:05:55.152: INFO: Deleting pod "simpletest.rc-qvtxr" in namespace "gc-2935"
    Jan 30 09:05:55.238: INFO: Deleting pod "simpletest.rc-qvvd5" in namespace "gc-2935"
    Jan 30 09:05:55.283: INFO: Deleting pod "simpletest.rc-rbmlk" in namespace "gc-2935"
    Jan 30 09:05:55.302: INFO: Deleting pod "simpletest.rc-rh6bj" in namespace "gc-2935"
    Jan 30 09:05:55.353: INFO: Deleting pod "simpletest.rc-rl2dk" in namespace "gc-2935"
    Jan 30 09:05:55.383: INFO: Deleting pod "simpletest.rc-rlwmc" in namespace "gc-2935"
    Jan 30 09:05:55.408: INFO: Deleting pod "simpletest.rc-rrvc6" in namespace "gc-2935"
    Jan 30 09:05:55.441: INFO: Deleting pod "simpletest.rc-rvrwt" in namespace "gc-2935"
    Jan 30 09:05:55.471: INFO: Deleting pod "simpletest.rc-s88gl" in namespace "gc-2935"
    Jan 30 09:05:55.497: INFO: Deleting pod "simpletest.rc-shlnm" in namespace "gc-2935"
    Jan 30 09:05:55.565: INFO: Deleting pod "simpletest.rc-t2zzc" in namespace "gc-2935"
    Jan 30 09:05:55.598: INFO: Deleting pod "simpletest.rc-tkdhx" in namespace "gc-2935"
    Jan 30 09:05:55.630: INFO: Deleting pod "simpletest.rc-tp42z" in namespace "gc-2935"
    Jan 30 09:05:55.661: INFO: Deleting pod "simpletest.rc-tpjv7" in namespace "gc-2935"
    Jan 30 09:05:55.706: INFO: Deleting pod "simpletest.rc-tzwdw" in namespace "gc-2935"
    Jan 30 09:05:55.729: INFO: Deleting pod "simpletest.rc-v8gvq" in namespace "gc-2935"
    Jan 30 09:05:55.758: INFO: Deleting pod "simpletest.rc-vthwt" in namespace "gc-2935"
    Jan 30 09:05:55.778: INFO: Deleting pod "simpletest.rc-w6v28" in namespace "gc-2935"
    Jan 30 09:05:55.808: INFO: Deleting pod "simpletest.rc-wbgmj" in namespace "gc-2935"
    Jan 30 09:05:55.834: INFO: Deleting pod "simpletest.rc-x74pw" in namespace "gc-2935"
    Jan 30 09:05:55.846: INFO: Deleting pod "simpletest.rc-x8cxl" in namespace "gc-2935"
    Jan 30 09:05:55.876: INFO: Deleting pod "simpletest.rc-xptnk" in namespace "gc-2935"
    Jan 30 09:05:55.904: INFO: Deleting pod "simpletest.rc-zb9bg" in namespace "gc-2935"
    Jan 30 09:05:55.921: INFO: Deleting pod "simpletest.rc-zjnkl" in namespace "gc-2935"
    Jan 30 09:05:55.938: INFO: Deleting pod "simpletest.rc-zqwms" in namespace "gc-2935"
    Jan 30 09:05:55.964: INFO: Deleting pod "simpletest.rc-zrptm" in namespace "gc-2935"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:05:55.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-2935" for this suite. 01/30/23 09:05:56.013
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:05:56.064
Jan 30 09:05:56.064: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:05:56.065
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:05:56.094
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:05:56.097
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:05:56.102
Jan 30 09:05:56.113: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87" in namespace "projected-5495" to be "Succeeded or Failed"
Jan 30 09:05:56.117: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 4.413418ms
Jan 30 09:05:58.123: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01037655s
Jan 30 09:06:00.121: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008302546s
Jan 30 09:06:02.120: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 6.007112333s
Jan 30 09:06:04.120: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 8.007764386s
Jan 30 09:06:06.120: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.007228333s
STEP: Saw pod success 01/30/23 09:06:06.12
Jan 30 09:06:06.120: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87" satisfied condition "Succeeded or Failed"
Jan 30 09:06:06.122: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87 container client-container: <nil>
STEP: delete the pod 01/30/23 09:06:06.373
Jan 30 09:06:06.413: INFO: Waiting for pod downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87 to disappear
Jan 30 09:06:06.415: INFO: Pod downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 09:06:06.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5495" for this suite. 01/30/23 09:06:06.419
------------------------------
â€¢ [SLOW TEST] [10.364 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:05:56.064
    Jan 30 09:05:56.064: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:05:56.065
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:05:56.094
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:05:56.097
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:53
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:05:56.102
    Jan 30 09:05:56.113: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87" in namespace "projected-5495" to be "Succeeded or Failed"
    Jan 30 09:05:56.117: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 4.413418ms
    Jan 30 09:05:58.123: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01037655s
    Jan 30 09:06:00.121: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008302546s
    Jan 30 09:06:02.120: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 6.007112333s
    Jan 30 09:06:04.120: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Pending", Reason="", readiness=false. Elapsed: 8.007764386s
    Jan 30 09:06:06.120: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.007228333s
    STEP: Saw pod success 01/30/23 09:06:06.12
    Jan 30 09:06:06.120: INFO: Pod "downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87" satisfied condition "Succeeded or Failed"
    Jan 30 09:06:06.122: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87 container client-container: <nil>
    STEP: delete the pod 01/30/23 09:06:06.373
    Jan 30 09:06:06.413: INFO: Waiting for pod downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87 to disappear
    Jan 30 09:06:06.415: INFO: Pod downwardapi-volume-a57fb341-84ee-465b-a44d-04b8cef93a87 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:06:06.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5495" for this suite. 01/30/23 09:06:06.419
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:06:06.432
Jan 30 09:06:06.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename limitrange 01/30/23 09:06:06.433
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:06.447
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:06.45
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
STEP: Creating a LimitRange 01/30/23 09:06:06.454
STEP: Setting up watch 01/30/23 09:06:06.459
STEP: Submitting a LimitRange 01/30/23 09:06:06.563
STEP: Verifying LimitRange creation was observed 01/30/23 09:06:06.568
STEP: Fetching the LimitRange to ensure it has proper values 01/30/23 09:06:06.57
Jan 30 09:06:06.572: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 30 09:06:06.572: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements 01/30/23 09:06:06.572
STEP: Ensuring Pod has resource requirements applied from LimitRange 01/30/23 09:06:06.577
Jan 30 09:06:06.580: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jan 30 09:06:06.580: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements 01/30/23 09:06:06.581
STEP: Ensuring Pod has merged resource requirements applied from LimitRange 01/30/23 09:06:06.593
Jan 30 09:06:06.596: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Jan 30 09:06:06.596: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources 01/30/23 09:06:06.596
STEP: Failing to create a Pod with more than max resources 01/30/23 09:06:06.598
STEP: Updating a LimitRange 01/30/23 09:06:06.601
STEP: Verifying LimitRange updating is effective 01/30/23 09:06:06.605
STEP: Creating a Pod with less than former min resources 01/30/23 09:06:08.609
STEP: Failing to create a Pod with more than max resources 01/30/23 09:06:08.614
STEP: Deleting a LimitRange 01/30/23 09:06:08.617
STEP: Verifying the LimitRange was deleted 01/30/23 09:06:08.637
Jan 30 09:06:13.639: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources 01/30/23 09:06:13.639
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Jan 30 09:06:13.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-5014" for this suite. 01/30/23 09:06:13.669
------------------------------
â€¢ [SLOW TEST] [7.246 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:06:06.432
    Jan 30 09:06:06.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename limitrange 01/30/23 09:06:06.433
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:06.447
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:06.45
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
      test/e2e/scheduling/limit_range.go:61
    STEP: Creating a LimitRange 01/30/23 09:06:06.454
    STEP: Setting up watch 01/30/23 09:06:06.459
    STEP: Submitting a LimitRange 01/30/23 09:06:06.563
    STEP: Verifying LimitRange creation was observed 01/30/23 09:06:06.568
    STEP: Fetching the LimitRange to ensure it has proper values 01/30/23 09:06:06.57
    Jan 30 09:06:06.572: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Jan 30 09:06:06.572: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with no resource requirements 01/30/23 09:06:06.572
    STEP: Ensuring Pod has resource requirements applied from LimitRange 01/30/23 09:06:06.577
    Jan 30 09:06:06.580: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Jan 30 09:06:06.580: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with partial resource requirements 01/30/23 09:06:06.581
    STEP: Ensuring Pod has merged resource requirements applied from LimitRange 01/30/23 09:06:06.593
    Jan 30 09:06:06.596: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
    Jan 30 09:06:06.596: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Failing to create a Pod with less than min resources 01/30/23 09:06:06.596
    STEP: Failing to create a Pod with more than max resources 01/30/23 09:06:06.598
    STEP: Updating a LimitRange 01/30/23 09:06:06.601
    STEP: Verifying LimitRange updating is effective 01/30/23 09:06:06.605
    STEP: Creating a Pod with less than former min resources 01/30/23 09:06:08.609
    STEP: Failing to create a Pod with more than max resources 01/30/23 09:06:08.614
    STEP: Deleting a LimitRange 01/30/23 09:06:08.617
    STEP: Verifying the LimitRange was deleted 01/30/23 09:06:08.637
    Jan 30 09:06:13.639: INFO: limitRange is already deleted
    STEP: Creating a Pod with more than former max resources 01/30/23 09:06:13.639
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:06:13.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-5014" for this suite. 01/30/23 09:06:13.669
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:06:13.677
Jan 30 09:06:13.678: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 09:06:13.679
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:13.69
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:13.692
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
Jan 30 09:06:13.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:06:14.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-7755" for this suite. 01/30/23 09:06:14.238
------------------------------
â€¢ [0.565 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    getting/updating/patching custom resource definition status sub-resource works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:145

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:06:13.677
    Jan 30 09:06:13.678: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 09:06:13.679
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:13.69
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:13.692
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:145
    Jan 30 09:06:13.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:06:14.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-7755" for this suite. 01/30/23 09:06:14.238
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:06:14.244
Jan 30 09:06:14.244: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-pred 01/30/23 09:06:14.245
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:14.254
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:14.257
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Jan 30 09:06:14.259: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 30 09:06:14.268: INFO: Waiting for terminating namespaces to be deleted...
Jan 30 09:06:14.270: INFO: 
Logging pods the apiserver thinks is on node tce-worker before test
Jan 30 09:06:14.275: INFO: kube-flannel-ds-7n9z9 from kube-flannel started at 2023-01-30 08:54:18 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.275: INFO: 	Container kube-flannel ready: true, restart count 0
Jan 30 09:06:14.275: INFO: coredns-787d4945fb-66qrn from kube-system started at 2023-01-30 09:00:12 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.275: INFO: 	Container coredns ready: true, restart count 0
Jan 30 09:06:14.275: INFO: kube-proxy-qskrv from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.275: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 30 09:06:14.275: INFO: pod-partial-resources from limitrange-5014 started at 2023-01-30 09:06:06 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.275: INFO: 	Container pause ready: true, restart count 0
Jan 30 09:06:14.275: INFO: local-path-provisioner-c8855d4bb-c9t9l from local-path-storage started at 2023-01-30 09:00:12 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.275: INFO: 	Container local-path-provisioner ready: true, restart count 0
Jan 30 09:06:14.275: INFO: sonobuoy from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.275: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 30 09:06:14.275: INFO: sonobuoy-e2e-job-bfd46d4d86374bf4 from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (2 container statuses recorded)
Jan 30 09:06:14.275: INFO: 	Container e2e ready: true, restart count 0
Jan 30 09:06:14.275: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:06:14.275: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
Jan 30 09:06:14.275: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:06:14.275: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 09:06:14.275: INFO: 
Logging pods the apiserver thinks is on node tce-worker2 before test
Jan 30 09:06:14.279: INFO: kube-flannel-ds-bdsbq from kube-flannel started at 2023-01-30 09:00:39 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.279: INFO: 	Container kube-flannel ready: true, restart count 0
Jan 30 09:06:14.279: INFO: kube-proxy-6h6xz from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.279: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 30 09:06:14.279: INFO: pfpod from limitrange-5014 started at 2023-01-30 09:06:08 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.279: INFO: 	Container pause ready: true, restart count 0
Jan 30 09:06:14.279: INFO: pod-no-resources from limitrange-5014 started at 2023-01-30 09:06:06 +0000 UTC (1 container statuses recorded)
Jan 30 09:06:14.279: INFO: 	Container pause ready: true, restart count 0
Jan 30 09:06:14.279: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
Jan 30 09:06:14.279: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:06:14.279: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
STEP: verifying the node has the label node tce-worker 01/30/23 09:06:20.31
STEP: verifying the node has the label node tce-worker2 01/30/23 09:06:20.322
Jan 30 09:06:20.331: INFO: Pod kube-flannel-ds-7n9z9 requesting resource cpu=100m on Node tce-worker
Jan 30 09:06:20.331: INFO: Pod kube-flannel-ds-bdsbq requesting resource cpu=100m on Node tce-worker2
Jan 30 09:06:20.331: INFO: Pod coredns-787d4945fb-66qrn requesting resource cpu=100m on Node tce-worker
Jan 30 09:06:20.331: INFO: Pod kube-proxy-6h6xz requesting resource cpu=0m on Node tce-worker2
Jan 30 09:06:20.331: INFO: Pod kube-proxy-qskrv requesting resource cpu=0m on Node tce-worker
Jan 30 09:06:20.331: INFO: Pod pfpod requesting resource cpu=10m on Node tce-worker2
Jan 30 09:06:20.331: INFO: Pod pod-partial-resources requesting resource cpu=300m on Node tce-worker
Jan 30 09:06:20.331: INFO: Pod local-path-provisioner-c8855d4bb-c9t9l requesting resource cpu=0m on Node tce-worker
Jan 30 09:06:20.331: INFO: Pod sonobuoy requesting resource cpu=0m on Node tce-worker
Jan 30 09:06:20.331: INFO: Pod sonobuoy-e2e-job-bfd46d4d86374bf4 requesting resource cpu=0m on Node tce-worker
Jan 30 09:06:20.331: INFO: Pod sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k requesting resource cpu=0m on Node tce-worker
Jan 30 09:06:20.331: INFO: Pod sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 requesting resource cpu=0m on Node tce-worker2
STEP: Starting Pods to consume most of the cluster CPU. 01/30/23 09:06:20.331
Jan 30 09:06:20.331: INFO: Creating a pod which consumes cpu=5250m on Node tce-worker
Jan 30 09:06:20.341: INFO: Creating a pod which consumes cpu=5523m on Node tce-worker2
Jan 30 09:06:20.349: INFO: Waiting up to 5m0s for pod "filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9" in namespace "sched-pred-7609" to be "running"
Jan 30 09:06:20.359: INFO: Pod "filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9": Phase="Pending", Reason="", readiness=false. Elapsed: 10.768804ms
Jan 30 09:06:22.362: INFO: Pod "filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9": Phase="Running", Reason="", readiness=true. Elapsed: 2.013864506s
Jan 30 09:06:22.363: INFO: Pod "filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9" satisfied condition "running"
Jan 30 09:06:22.363: INFO: Waiting up to 5m0s for pod "filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e" in namespace "sched-pred-7609" to be "running"
Jan 30 09:06:22.365: INFO: Pod "filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e": Phase="Running", Reason="", readiness=true. Elapsed: 2.484167ms
Jan 30 09:06:22.365: INFO: Pod "filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e" satisfied condition "running"
STEP: Creating another pod that requires unavailable amount of CPU. 01/30/23 09:06:22.365
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e.173f0ae88f562da2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7609/filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e to tce-worker2] 01/30/23 09:06:22.368
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e.173f0ae8afd7acbc], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 01/30/23 09:06:22.368
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e.173f0ae8b19af215], Reason = [Created], Message = [Created container filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e] 01/30/23 09:06:22.368
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e.173f0ae8bab39f9a], Reason = [Started], Message = [Started container filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e] 01/30/23 09:06:22.368
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9.173f0ae88ea05fd5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7609/filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9 to tce-worker] 01/30/23 09:06:22.368
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9.173f0ae8af84af76], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 01/30/23 09:06:22.368
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9.173f0ae8b16ddf75], Reason = [Created], Message = [Created container filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9] 01/30/23 09:06:22.368
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9.173f0ae8baac5a85], Reason = [Started], Message = [Started container filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9] 01/30/23 09:06:22.368
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.173f0ae9081906eb], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod..] 01/30/23 09:06:22.388
STEP: removing the label node off the node tce-worker 01/30/23 09:06:23.387
STEP: verifying the node doesn't have the label node 01/30/23 09:06:23.399
STEP: removing the label node off the node tce-worker2 01/30/23 09:06:23.401
STEP: verifying the node doesn't have the label node 01/30/23 09:06:23.414
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:06:23.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-7609" for this suite. 01/30/23 09:06:23.427
------------------------------
â€¢ [SLOW TEST] [9.197 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:06:14.244
    Jan 30 09:06:14.244: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-pred 01/30/23 09:06:14.245
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:14.254
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:14.257
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Jan 30 09:06:14.259: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Jan 30 09:06:14.268: INFO: Waiting for terminating namespaces to be deleted...
    Jan 30 09:06:14.270: INFO: 
    Logging pods the apiserver thinks is on node tce-worker before test
    Jan 30 09:06:14.275: INFO: kube-flannel-ds-7n9z9 from kube-flannel started at 2023-01-30 08:54:18 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.275: INFO: 	Container kube-flannel ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: coredns-787d4945fb-66qrn from kube-system started at 2023-01-30 09:00:12 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.275: INFO: 	Container coredns ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: kube-proxy-qskrv from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.275: INFO: 	Container kube-proxy ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: pod-partial-resources from limitrange-5014 started at 2023-01-30 09:06:06 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.275: INFO: 	Container pause ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: local-path-provisioner-c8855d4bb-c9t9l from local-path-storage started at 2023-01-30 09:00:12 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.275: INFO: 	Container local-path-provisioner ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: sonobuoy from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.275: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: sonobuoy-e2e-job-bfd46d4d86374bf4 from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (2 container statuses recorded)
    Jan 30 09:06:14.275: INFO: 	Container e2e ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
    Jan 30 09:06:14.275: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 30 09:06:14.275: INFO: 
    Logging pods the apiserver thinks is on node tce-worker2 before test
    Jan 30 09:06:14.279: INFO: kube-flannel-ds-bdsbq from kube-flannel started at 2023-01-30 09:00:39 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.279: INFO: 	Container kube-flannel ready: true, restart count 0
    Jan 30 09:06:14.279: INFO: kube-proxy-6h6xz from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.279: INFO: 	Container kube-proxy ready: true, restart count 0
    Jan 30 09:06:14.279: INFO: pfpod from limitrange-5014 started at 2023-01-30 09:06:08 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.279: INFO: 	Container pause ready: true, restart count 0
    Jan 30 09:06:14.279: INFO: pod-no-resources from limitrange-5014 started at 2023-01-30 09:06:06 +0000 UTC (1 container statuses recorded)
    Jan 30 09:06:14.279: INFO: 	Container pause ready: true, restart count 0
    Jan 30 09:06:14.279: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
    Jan 30 09:06:14.279: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 09:06:14.279: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates resource limits of pods that are allowed to run  [Conformance]
      test/e2e/scheduling/predicates.go:331
    STEP: verifying the node has the label node tce-worker 01/30/23 09:06:20.31
    STEP: verifying the node has the label node tce-worker2 01/30/23 09:06:20.322
    Jan 30 09:06:20.331: INFO: Pod kube-flannel-ds-7n9z9 requesting resource cpu=100m on Node tce-worker
    Jan 30 09:06:20.331: INFO: Pod kube-flannel-ds-bdsbq requesting resource cpu=100m on Node tce-worker2
    Jan 30 09:06:20.331: INFO: Pod coredns-787d4945fb-66qrn requesting resource cpu=100m on Node tce-worker
    Jan 30 09:06:20.331: INFO: Pod kube-proxy-6h6xz requesting resource cpu=0m on Node tce-worker2
    Jan 30 09:06:20.331: INFO: Pod kube-proxy-qskrv requesting resource cpu=0m on Node tce-worker
    Jan 30 09:06:20.331: INFO: Pod pfpod requesting resource cpu=10m on Node tce-worker2
    Jan 30 09:06:20.331: INFO: Pod pod-partial-resources requesting resource cpu=300m on Node tce-worker
    Jan 30 09:06:20.331: INFO: Pod local-path-provisioner-c8855d4bb-c9t9l requesting resource cpu=0m on Node tce-worker
    Jan 30 09:06:20.331: INFO: Pod sonobuoy requesting resource cpu=0m on Node tce-worker
    Jan 30 09:06:20.331: INFO: Pod sonobuoy-e2e-job-bfd46d4d86374bf4 requesting resource cpu=0m on Node tce-worker
    Jan 30 09:06:20.331: INFO: Pod sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k requesting resource cpu=0m on Node tce-worker
    Jan 30 09:06:20.331: INFO: Pod sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 requesting resource cpu=0m on Node tce-worker2
    STEP: Starting Pods to consume most of the cluster CPU. 01/30/23 09:06:20.331
    Jan 30 09:06:20.331: INFO: Creating a pod which consumes cpu=5250m on Node tce-worker
    Jan 30 09:06:20.341: INFO: Creating a pod which consumes cpu=5523m on Node tce-worker2
    Jan 30 09:06:20.349: INFO: Waiting up to 5m0s for pod "filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9" in namespace "sched-pred-7609" to be "running"
    Jan 30 09:06:20.359: INFO: Pod "filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9": Phase="Pending", Reason="", readiness=false. Elapsed: 10.768804ms
    Jan 30 09:06:22.362: INFO: Pod "filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9": Phase="Running", Reason="", readiness=true. Elapsed: 2.013864506s
    Jan 30 09:06:22.363: INFO: Pod "filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9" satisfied condition "running"
    Jan 30 09:06:22.363: INFO: Waiting up to 5m0s for pod "filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e" in namespace "sched-pred-7609" to be "running"
    Jan 30 09:06:22.365: INFO: Pod "filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e": Phase="Running", Reason="", readiness=true. Elapsed: 2.484167ms
    Jan 30 09:06:22.365: INFO: Pod "filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e" satisfied condition "running"
    STEP: Creating another pod that requires unavailable amount of CPU. 01/30/23 09:06:22.365
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e.173f0ae88f562da2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7609/filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e to tce-worker2] 01/30/23 09:06:22.368
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e.173f0ae8afd7acbc], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 01/30/23 09:06:22.368
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e.173f0ae8b19af215], Reason = [Created], Message = [Created container filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e] 01/30/23 09:06:22.368
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e.173f0ae8bab39f9a], Reason = [Started], Message = [Started container filler-pod-235e8481-19e5-4e7b-b592-d89c843ba84e] 01/30/23 09:06:22.368
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9.173f0ae88ea05fd5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7609/filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9 to tce-worker] 01/30/23 09:06:22.368
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9.173f0ae8af84af76], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 01/30/23 09:06:22.368
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9.173f0ae8b16ddf75], Reason = [Created], Message = [Created container filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9] 01/30/23 09:06:22.368
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9.173f0ae8baac5a85], Reason = [Started], Message = [Started container filler-pod-89e23768-e6f3-492e-a195-626f1d6ae0e9] 01/30/23 09:06:22.368
    STEP: Considering event: 
    Type = [Warning], Name = [additional-pod.173f0ae9081906eb], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod..] 01/30/23 09:06:22.388
    STEP: removing the label node off the node tce-worker 01/30/23 09:06:23.387
    STEP: verifying the node doesn't have the label node 01/30/23 09:06:23.399
    STEP: removing the label node off the node tce-worker2 01/30/23 09:06:23.401
    STEP: verifying the node doesn't have the label node 01/30/23 09:06:23.414
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:06:23.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-7609" for this suite. 01/30/23 09:06:23.427
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:06:23.445
Jan 30 09:06:23.445: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pod-network-test 01/30/23 09:06:23.446
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:23.46
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:23.463
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
STEP: Performing setup for networking test in namespace pod-network-test-797 01/30/23 09:06:23.467
STEP: creating a selector 01/30/23 09:06:23.468
STEP: Creating the service pods in kubernetes 01/30/23 09:06:23.468
Jan 30 09:06:23.468: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 30 09:06:23.491: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-797" to be "running and ready"
Jan 30 09:06:23.497: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.410674ms
Jan 30 09:06:23.497: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:06:25.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.009169687s
Jan 30 09:06:25.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:27.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.009240451s
Jan 30 09:06:27.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:29.499: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.008627481s
Jan 30 09:06:29.499: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:31.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009474417s
Jan 30 09:06:31.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:33.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.009852287s
Jan 30 09:06:33.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:35.501: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.010369468s
Jan 30 09:06:35.501: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:37.501: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.010441874s
Jan 30 09:06:37.501: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:39.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.009181057s
Jan 30 09:06:39.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:41.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.008981329s
Jan 30 09:06:41.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:43.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.009333798s
Jan 30 09:06:43.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:06:45.501: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.010640694s
Jan 30 09:06:45.501: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Jan 30 09:06:45.501: INFO: Pod "netserver-0" satisfied condition "running and ready"
Jan 30 09:06:45.503: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-797" to be "running and ready"
Jan 30 09:06:45.505: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.846436ms
Jan 30 09:06:45.505: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Jan 30 09:06:45.505: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 01/30/23 09:06:45.507
Jan 30 09:06:45.524: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-797" to be "running"
Jan 30 09:06:45.527: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.993394ms
Jan 30 09:06:47.530: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.005227332s
Jan 30 09:06:47.530: INFO: Pod "test-container-pod" satisfied condition "running"
Jan 30 09:06:47.532: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jan 30 09:06:47.532: INFO: Breadth first check of 10.244.2.194 on host 172.20.0.2...
Jan 30 09:06:47.533: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.44:9080/dial?request=hostname&protocol=udp&host=10.244.2.194&port=8081&tries=1'] Namespace:pod-network-test-797 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:06:47.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:06:47.534: INFO: ExecWithOptions: Clientset creation
Jan 30 09:06:47.534: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-797/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.44%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.194%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 09:06:47.639: INFO: Waiting for responses: map[]
Jan 30 09:06:47.639: INFO: reached 10.244.2.194 after 0/1 tries
Jan 30 09:06:47.639: INFO: Breadth first check of 10.244.1.43 on host 172.20.0.4...
Jan 30 09:06:47.642: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.44:9080/dial?request=hostname&protocol=udp&host=10.244.1.43&port=8081&tries=1'] Namespace:pod-network-test-797 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:06:47.642: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:06:47.642: INFO: ExecWithOptions: Clientset creation
Jan 30 09:06:47.642: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-797/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.44%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.43%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 09:06:47.672: INFO: Waiting for responses: map[]
Jan 30 09:06:47.672: INFO: reached 10.244.1.43 after 0/1 tries
Jan 30 09:06:47.672: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Jan 30 09:06:47.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-797" for this suite. 01/30/23 09:06:47.675
------------------------------
â€¢ [SLOW TEST] [24.235 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:06:23.445
    Jan 30 09:06:23.445: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pod-network-test 01/30/23 09:06:23.446
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:23.46
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:23.463
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:93
    STEP: Performing setup for networking test in namespace pod-network-test-797 01/30/23 09:06:23.467
    STEP: creating a selector 01/30/23 09:06:23.468
    STEP: Creating the service pods in kubernetes 01/30/23 09:06:23.468
    Jan 30 09:06:23.468: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Jan 30 09:06:23.491: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-797" to be "running and ready"
    Jan 30 09:06:23.497: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.410674ms
    Jan 30 09:06:23.497: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:06:25.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.009169687s
    Jan 30 09:06:25.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:27.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.009240451s
    Jan 30 09:06:27.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:29.499: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.008627481s
    Jan 30 09:06:29.499: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:31.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009474417s
    Jan 30 09:06:31.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:33.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.009852287s
    Jan 30 09:06:33.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:35.501: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.010369468s
    Jan 30 09:06:35.501: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:37.501: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.010441874s
    Jan 30 09:06:37.501: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:39.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.009181057s
    Jan 30 09:06:39.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:41.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.008981329s
    Jan 30 09:06:41.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:43.500: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.009333798s
    Jan 30 09:06:43.500: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:06:45.501: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.010640694s
    Jan 30 09:06:45.501: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Jan 30 09:06:45.501: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Jan 30 09:06:45.503: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-797" to be "running and ready"
    Jan 30 09:06:45.505: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.846436ms
    Jan 30 09:06:45.505: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Jan 30 09:06:45.505: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 01/30/23 09:06:45.507
    Jan 30 09:06:45.524: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-797" to be "running"
    Jan 30 09:06:45.527: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.993394ms
    Jan 30 09:06:47.530: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.005227332s
    Jan 30 09:06:47.530: INFO: Pod "test-container-pod" satisfied condition "running"
    Jan 30 09:06:47.532: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Jan 30 09:06:47.532: INFO: Breadth first check of 10.244.2.194 on host 172.20.0.2...
    Jan 30 09:06:47.533: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.44:9080/dial?request=hostname&protocol=udp&host=10.244.2.194&port=8081&tries=1'] Namespace:pod-network-test-797 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:06:47.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:06:47.534: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:06:47.534: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-797/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.44%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.194%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Jan 30 09:06:47.639: INFO: Waiting for responses: map[]
    Jan 30 09:06:47.639: INFO: reached 10.244.2.194 after 0/1 tries
    Jan 30 09:06:47.639: INFO: Breadth first check of 10.244.1.43 on host 172.20.0.4...
    Jan 30 09:06:47.642: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.44:9080/dial?request=hostname&protocol=udp&host=10.244.1.43&port=8081&tries=1'] Namespace:pod-network-test-797 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:06:47.642: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:06:47.642: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:06:47.642: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-797/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.44%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.43%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Jan 30 09:06:47.672: INFO: Waiting for responses: map[]
    Jan 30 09:06:47.672: INFO: reached 10.244.1.43 after 0/1 tries
    Jan 30 09:06:47.672: INFO: Going to retry 0 out of 2 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:06:47.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-797" for this suite. 01/30/23 09:06:47.675
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label
  should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:06:47.681
Jan 30 09:06:47.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 09:06:47.681
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:47.693
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:47.695
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1494
STEP: creating the pod 01/30/23 09:06:47.697
Jan 30 09:06:47.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 create -f -'
Jan 30 09:06:48.225: INFO: stderr: ""
Jan 30 09:06:48.225: INFO: stdout: "pod/pause created\n"
Jan 30 09:06:48.225: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Jan 30 09:06:48.225: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-4582" to be "running and ready"
Jan 30 09:06:48.230: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 4.600779ms
Jan 30 09:06:48.231: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'tce-worker2' to be 'Running' but was 'Pending'
Jan 30 09:06:50.236: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.01054585s
Jan 30 09:06:50.236: INFO: Pod "pause" satisfied condition "running and ready"
Jan 30 09:06:50.236: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
STEP: adding the label testing-label with value testing-label-value to a pod 01/30/23 09:06:50.236
Jan 30 09:06:50.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 label pods pause testing-label=testing-label-value'
Jan 30 09:06:50.299: INFO: stderr: ""
Jan 30 09:06:50.299: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value 01/30/23 09:06:50.299
Jan 30 09:06:50.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 get pod pause -L testing-label'
Jan 30 09:06:50.373: INFO: stderr: ""
Jan 30 09:06:50.373: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod 01/30/23 09:06:50.373
Jan 30 09:06:50.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 label pods pause testing-label-'
Jan 30 09:06:50.445: INFO: stderr: ""
Jan 30 09:06:50.445: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label 01/30/23 09:06:50.445
Jan 30 09:06:50.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 get pod pause -L testing-label'
Jan 30 09:06:50.527: INFO: stderr: ""
Jan 30 09:06:50.527: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1500
STEP: using delete to clean up resources 01/30/23 09:06:50.527
Jan 30 09:06:50.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 delete --grace-period=0 --force -f -'
Jan 30 09:06:50.607: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jan 30 09:06:50.607: INFO: stdout: "pod \"pause\" force deleted\n"
Jan 30 09:06:50.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 get rc,svc -l name=pause --no-headers'
Jan 30 09:06:50.681: INFO: stderr: "No resources found in kubectl-4582 namespace.\n"
Jan 30 09:06:50.681: INFO: stdout: ""
Jan 30 09:06:50.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jan 30 09:06:50.739: INFO: stderr: ""
Jan 30 09:06:50.739: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 09:06:50.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4582" for this suite. 01/30/23 09:06:50.742
------------------------------
â€¢ [3.067 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl label
  test/e2e/kubectl/kubectl.go:1492
    should update the label on a resource  [Conformance]
    test/e2e/kubectl/kubectl.go:1509

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:06:47.681
    Jan 30 09:06:47.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 09:06:47.681
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:47.693
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:47.695
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1494
    STEP: creating the pod 01/30/23 09:06:47.697
    Jan 30 09:06:47.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 create -f -'
    Jan 30 09:06:48.225: INFO: stderr: ""
    Jan 30 09:06:48.225: INFO: stdout: "pod/pause created\n"
    Jan 30 09:06:48.225: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
    Jan 30 09:06:48.225: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-4582" to be "running and ready"
    Jan 30 09:06:48.230: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 4.600779ms
    Jan 30 09:06:48.231: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'tce-worker2' to be 'Running' but was 'Pending'
    Jan 30 09:06:50.236: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.01054585s
    Jan 30 09:06:50.236: INFO: Pod "pause" satisfied condition "running and ready"
    Jan 30 09:06:50.236: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
    [It] should update the label on a resource  [Conformance]
      test/e2e/kubectl/kubectl.go:1509
    STEP: adding the label testing-label with value testing-label-value to a pod 01/30/23 09:06:50.236
    Jan 30 09:06:50.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 label pods pause testing-label=testing-label-value'
    Jan 30 09:06:50.299: INFO: stderr: ""
    Jan 30 09:06:50.299: INFO: stdout: "pod/pause labeled\n"
    STEP: verifying the pod has the label testing-label with the value testing-label-value 01/30/23 09:06:50.299
    Jan 30 09:06:50.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 get pod pause -L testing-label'
    Jan 30 09:06:50.373: INFO: stderr: ""
    Jan 30 09:06:50.373: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
    STEP: removing the label testing-label of a pod 01/30/23 09:06:50.373
    Jan 30 09:06:50.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 label pods pause testing-label-'
    Jan 30 09:06:50.445: INFO: stderr: ""
    Jan 30 09:06:50.445: INFO: stdout: "pod/pause unlabeled\n"
    STEP: verifying the pod doesn't have the label testing-label 01/30/23 09:06:50.445
    Jan 30 09:06:50.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 get pod pause -L testing-label'
    Jan 30 09:06:50.527: INFO: stderr: ""
    Jan 30 09:06:50.527: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
    [AfterEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1500
    STEP: using delete to clean up resources 01/30/23 09:06:50.527
    Jan 30 09:06:50.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 delete --grace-period=0 --force -f -'
    Jan 30 09:06:50.607: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Jan 30 09:06:50.607: INFO: stdout: "pod \"pause\" force deleted\n"
    Jan 30 09:06:50.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 get rc,svc -l name=pause --no-headers'
    Jan 30 09:06:50.681: INFO: stderr: "No resources found in kubectl-4582 namespace.\n"
    Jan 30 09:06:50.681: INFO: stdout: ""
    Jan 30 09:06:50.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-4582 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Jan 30 09:06:50.739: INFO: stderr: ""
    Jan 30 09:06:50.739: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:06:50.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4582" for this suite. 01/30/23 09:06:50.742
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:06:50.751
Jan 30 09:06:50.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-lifecycle-hook 01/30/23 09:06:50.752
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:50.762
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:50.765
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 01/30/23 09:06:50.769
Jan 30 09:06:50.779: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-8866" to be "running and ready"
Jan 30 09:06:50.781: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.084994ms
Jan 30 09:06:50.781: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:06:52.790: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.011370484s
Jan 30 09:06:52.790: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Jan 30 09:06:52.790: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
STEP: create the pod with lifecycle hook 01/30/23 09:06:52.794
Jan 30 09:06:52.804: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-8866" to be "running and ready"
Jan 30 09:06:52.817: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 13.544133ms
Jan 30 09:06:52.817: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:06:54.828: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.023971642s
Jan 30 09:06:54.828: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
Jan 30 09:06:54.828: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
STEP: check poststart hook 01/30/23 09:06:54.83
STEP: delete the pod with lifecycle hook 01/30/23 09:06:54.836
Jan 30 09:06:54.841: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 30 09:06:54.843: INFO: Pod pod-with-poststart-exec-hook still exists
Jan 30 09:06:56.843: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jan 30 09:06:56.846: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Jan 30 09:06:56.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-8866" for this suite. 01/30/23 09:06:56.848
------------------------------
â€¢ [SLOW TEST] [6.101 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:134

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:06:50.751
    Jan 30 09:06:50.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-lifecycle-hook 01/30/23 09:06:50.752
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:50.762
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:50.765
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 01/30/23 09:06:50.769
    Jan 30 09:06:50.779: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-8866" to be "running and ready"
    Jan 30 09:06:50.781: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.084994ms
    Jan 30 09:06:50.781: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:06:52.790: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.011370484s
    Jan 30 09:06:52.790: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Jan 30 09:06:52.790: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:134
    STEP: create the pod with lifecycle hook 01/30/23 09:06:52.794
    Jan 30 09:06:52.804: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-8866" to be "running and ready"
    Jan 30 09:06:52.817: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 13.544133ms
    Jan 30 09:06:52.817: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:06:54.828: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.023971642s
    Jan 30 09:06:54.828: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
    Jan 30 09:06:54.828: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
    STEP: check poststart hook 01/30/23 09:06:54.83
    STEP: delete the pod with lifecycle hook 01/30/23 09:06:54.836
    Jan 30 09:06:54.841: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Jan 30 09:06:54.843: INFO: Pod pod-with-poststart-exec-hook still exists
    Jan 30 09:06:56.843: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Jan 30 09:06:56.846: INFO: Pod pod-with-poststart-exec-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:06:56.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-8866" for this suite. 01/30/23 09:06:56.848
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:06:56.853
Jan 30 09:06:56.853: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 09:06:56.854
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:56.865
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:56.868
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
STEP: Creating a ResourceQuota with best effort scope 01/30/23 09:06:56.872
STEP: Ensuring ResourceQuota status is calculated 01/30/23 09:06:56.877
STEP: Creating a ResourceQuota with not best effort scope 01/30/23 09:06:58.879
STEP: Ensuring ResourceQuota status is calculated 01/30/23 09:06:58.894
STEP: Creating a best-effort pod 01/30/23 09:07:00.897
STEP: Ensuring resource quota with best effort scope captures the pod usage 01/30/23 09:07:00.918
STEP: Ensuring resource quota with not best effort ignored the pod usage 01/30/23 09:07:02.921
STEP: Deleting the pod 01/30/23 09:07:04.935
STEP: Ensuring resource quota status released the pod usage 01/30/23 09:07:04.945
STEP: Creating a not best-effort pod 01/30/23 09:07:06.958
STEP: Ensuring resource quota with not best effort scope captures the pod usage 01/30/23 09:07:06.965
STEP: Ensuring resource quota with best effort scope ignored the pod usage 01/30/23 09:07:08.968
STEP: Deleting the pod 01/30/23 09:07:10.971
STEP: Ensuring resource quota status released the pod usage 01/30/23 09:07:10.977
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 09:07:12.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-7304" for this suite. 01/30/23 09:07:12.983
------------------------------
â€¢ [SLOW TEST] [16.156 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:06:56.853
    Jan 30 09:06:56.853: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 09:06:56.854
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:06:56.865
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:06:56.868
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with best effort scope. [Conformance]
      test/e2e/apimachinery/resource_quota.go:803
    STEP: Creating a ResourceQuota with best effort scope 01/30/23 09:06:56.872
    STEP: Ensuring ResourceQuota status is calculated 01/30/23 09:06:56.877
    STEP: Creating a ResourceQuota with not best effort scope 01/30/23 09:06:58.879
    STEP: Ensuring ResourceQuota status is calculated 01/30/23 09:06:58.894
    STEP: Creating a best-effort pod 01/30/23 09:07:00.897
    STEP: Ensuring resource quota with best effort scope captures the pod usage 01/30/23 09:07:00.918
    STEP: Ensuring resource quota with not best effort ignored the pod usage 01/30/23 09:07:02.921
    STEP: Deleting the pod 01/30/23 09:07:04.935
    STEP: Ensuring resource quota status released the pod usage 01/30/23 09:07:04.945
    STEP: Creating a not best-effort pod 01/30/23 09:07:06.958
    STEP: Ensuring resource quota with not best effort scope captures the pod usage 01/30/23 09:07:06.965
    STEP: Ensuring resource quota with best effort scope ignored the pod usage 01/30/23 09:07:08.968
    STEP: Deleting the pod 01/30/23 09:07:10.971
    STEP: Ensuring resource quota status released the pod usage 01/30/23 09:07:10.977
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:07:12.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-7304" for this suite. 01/30/23 09:07:12.983
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:07:13.009
Jan 30 09:07:13.009: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 09:07:13.01
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:07:13.021
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:07:13.023
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
STEP: Creating a pod to test emptydir 0777 on node default medium 01/30/23 09:07:13.025
Jan 30 09:07:13.032: INFO: Waiting up to 5m0s for pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce" in namespace "emptydir-8252" to be "Succeeded or Failed"
Jan 30 09:07:13.035: INFO: Pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.654919ms
Jan 30 09:07:15.037: INFO: Pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005492811s
Jan 30 09:07:17.038: INFO: Pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006586185s
STEP: Saw pod success 01/30/23 09:07:17.038
Jan 30 09:07:17.039: INFO: Pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce" satisfied condition "Succeeded or Failed"
Jan 30 09:07:17.040: INFO: Trying to get logs from node tce-worker2 pod pod-fa8c4da6-ddb9-4033-840b-49c654b259ce container test-container: <nil>
STEP: delete the pod 01/30/23 09:07:17.045
Jan 30 09:07:17.065: INFO: Waiting for pod pod-fa8c4da6-ddb9-4033-840b-49c654b259ce to disappear
Jan 30 09:07:17.068: INFO: Pod pod-fa8c4da6-ddb9-4033-840b-49c654b259ce no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 09:07:17.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8252" for this suite. 01/30/23 09:07:17.071
------------------------------
â€¢ [4.071 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:07:13.009
    Jan 30 09:07:13.009: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 09:07:13.01
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:07:13.021
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:07:13.023
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:187
    STEP: Creating a pod to test emptydir 0777 on node default medium 01/30/23 09:07:13.025
    Jan 30 09:07:13.032: INFO: Waiting up to 5m0s for pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce" in namespace "emptydir-8252" to be "Succeeded or Failed"
    Jan 30 09:07:13.035: INFO: Pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.654919ms
    Jan 30 09:07:15.037: INFO: Pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005492811s
    Jan 30 09:07:17.038: INFO: Pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006586185s
    STEP: Saw pod success 01/30/23 09:07:17.038
    Jan 30 09:07:17.039: INFO: Pod "pod-fa8c4da6-ddb9-4033-840b-49c654b259ce" satisfied condition "Succeeded or Failed"
    Jan 30 09:07:17.040: INFO: Trying to get logs from node tce-worker2 pod pod-fa8c4da6-ddb9-4033-840b-49c654b259ce container test-container: <nil>
    STEP: delete the pod 01/30/23 09:07:17.045
    Jan 30 09:07:17.065: INFO: Waiting for pod pod-fa8c4da6-ddb9-4033-840b-49c654b259ce to disappear
    Jan 30 09:07:17.068: INFO: Pod pod-fa8c4da6-ddb9-4033-840b-49c654b259ce no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:07:17.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8252" for this suite. 01/30/23 09:07:17.071
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin]
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:07:17.081
Jan 30 09:07:17.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename certificates 01/30/23 09:07:17.082
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:07:17.094
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:07:17.099
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
STEP: getting /apis 01/30/23 09:07:17.616
STEP: getting /apis/certificates.k8s.io 01/30/23 09:07:17.619
STEP: getting /apis/certificates.k8s.io/v1 01/30/23 09:07:17.62
STEP: creating 01/30/23 09:07:17.621
STEP: getting 01/30/23 09:07:17.633
STEP: listing 01/30/23 09:07:17.635
STEP: watching 01/30/23 09:07:17.638
Jan 30 09:07:17.638: INFO: starting watch
STEP: patching 01/30/23 09:07:17.639
STEP: updating 01/30/23 09:07:17.644
Jan 30 09:07:17.650: INFO: waiting for watch events with expected annotations
Jan 30 09:07:17.650: INFO: saw patched and updated annotations
STEP: getting /approval 01/30/23 09:07:17.65
STEP: patching /approval 01/30/23 09:07:17.652
STEP: updating /approval 01/30/23 09:07:17.66
STEP: getting /status 01/30/23 09:07:17.665
STEP: patching /status 01/30/23 09:07:17.667
STEP: updating /status 01/30/23 09:07:17.673
STEP: deleting 01/30/23 09:07:17.68
STEP: deleting a collection 01/30/23 09:07:17.688
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:07:17.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "certificates-3004" for this suite. 01/30/23 09:07:17.704
------------------------------
â€¢ [0.628 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin]
test/e2e/auth/framework.go:23
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:07:17.081
    Jan 30 09:07:17.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename certificates 01/30/23 09:07:17.082
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:07:17.094
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:07:17.099
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSR API operations [Conformance]
      test/e2e/auth/certificates.go:200
    STEP: getting /apis 01/30/23 09:07:17.616
    STEP: getting /apis/certificates.k8s.io 01/30/23 09:07:17.619
    STEP: getting /apis/certificates.k8s.io/v1 01/30/23 09:07:17.62
    STEP: creating 01/30/23 09:07:17.621
    STEP: getting 01/30/23 09:07:17.633
    STEP: listing 01/30/23 09:07:17.635
    STEP: watching 01/30/23 09:07:17.638
    Jan 30 09:07:17.638: INFO: starting watch
    STEP: patching 01/30/23 09:07:17.639
    STEP: updating 01/30/23 09:07:17.644
    Jan 30 09:07:17.650: INFO: waiting for watch events with expected annotations
    Jan 30 09:07:17.650: INFO: saw patched and updated annotations
    STEP: getting /approval 01/30/23 09:07:17.65
    STEP: patching /approval 01/30/23 09:07:17.652
    STEP: updating /approval 01/30/23 09:07:17.66
    STEP: getting /status 01/30/23 09:07:17.665
    STEP: patching /status 01/30/23 09:07:17.667
    STEP: updating /status 01/30/23 09:07:17.673
    STEP: deleting 01/30/23 09:07:17.68
    STEP: deleting a collection 01/30/23 09:07:17.688
    [AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:07:17.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "certificates-3004" for this suite. 01/30/23 09:07:17.704
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:07:17.712
Jan 30 09:07:17.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-lifecycle-hook 01/30/23 09:07:17.714
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:07:17.724
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:07:17.726
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 01/30/23 09:07:17.733
Jan 30 09:07:17.741: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-1594" to be "running and ready"
Jan 30 09:07:17.743: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.090652ms
Jan 30 09:07:17.743: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:07:19.746: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.00531475s
Jan 30 09:07:19.746: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Jan 30 09:07:19.746: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
STEP: create the pod with lifecycle hook 01/30/23 09:07:19.748
Jan 30 09:07:19.754: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-1594" to be "running and ready"
Jan 30 09:07:19.756: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.264554ms
Jan 30 09:07:19.756: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:07:21.758: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.004679664s
Jan 30 09:07:21.758: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
Jan 30 09:07:21.758: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 01/30/23 09:07:21.76
Jan 30 09:07:21.775: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 30 09:07:21.778: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 30 09:07:23.779: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 30 09:07:23.782: INFO: Pod pod-with-prestop-exec-hook still exists
Jan 30 09:07:25.779: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jan 30 09:07:25.782: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook 01/30/23 09:07:25.782
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Jan 30 09:07:25.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-1594" for this suite. 01/30/23 09:07:25.788
------------------------------
â€¢ [SLOW TEST] [8.092 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:151

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:07:17.712
    Jan 30 09:07:17.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-lifecycle-hook 01/30/23 09:07:17.714
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:07:17.724
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:07:17.726
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 01/30/23 09:07:17.733
    Jan 30 09:07:17.741: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-1594" to be "running and ready"
    Jan 30 09:07:17.743: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.090652ms
    Jan 30 09:07:17.743: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:07:19.746: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.00531475s
    Jan 30 09:07:19.746: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Jan 30 09:07:19.746: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:151
    STEP: create the pod with lifecycle hook 01/30/23 09:07:19.748
    Jan 30 09:07:19.754: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-1594" to be "running and ready"
    Jan 30 09:07:19.756: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.264554ms
    Jan 30 09:07:19.756: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:07:21.758: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.004679664s
    Jan 30 09:07:21.758: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
    Jan 30 09:07:21.758: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 01/30/23 09:07:21.76
    Jan 30 09:07:21.775: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Jan 30 09:07:21.778: INFO: Pod pod-with-prestop-exec-hook still exists
    Jan 30 09:07:23.779: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Jan 30 09:07:23.782: INFO: Pod pod-with-prestop-exec-hook still exists
    Jan 30 09:07:25.779: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Jan 30 09:07:25.782: INFO: Pod pod-with-prestop-exec-hook no longer exists
    STEP: check prestop hook 01/30/23 09:07:25.782
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:07:25.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-1594" for this suite. 01/30/23 09:07:25.788
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:07:25.804
Jan 30 09:07:25.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-probe 01/30/23 09:07:25.806
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:07:25.819
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:07:25.821
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
STEP: Creating pod busybox-13f425ff-739a-468b-9077-0390d58bc9c6 in namespace container-probe-3855 01/30/23 09:07:25.824
Jan 30 09:07:25.831: INFO: Waiting up to 5m0s for pod "busybox-13f425ff-739a-468b-9077-0390d58bc9c6" in namespace "container-probe-3855" to be "not pending"
Jan 30 09:07:25.833: INFO: Pod "busybox-13f425ff-739a-468b-9077-0390d58bc9c6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.054648ms
Jan 30 09:07:27.836: INFO: Pod "busybox-13f425ff-739a-468b-9077-0390d58bc9c6": Phase="Running", Reason="", readiness=true. Elapsed: 2.004939895s
Jan 30 09:07:27.836: INFO: Pod "busybox-13f425ff-739a-468b-9077-0390d58bc9c6" satisfied condition "not pending"
Jan 30 09:07:27.836: INFO: Started pod busybox-13f425ff-739a-468b-9077-0390d58bc9c6 in namespace container-probe-3855
STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 09:07:27.836
Jan 30 09:07:27.839: INFO: Initial restart count of pod busybox-13f425ff-739a-468b-9077-0390d58bc9c6 is 0
Jan 30 09:08:17.917: INFO: Restart count of pod container-probe-3855/busybox-13f425ff-739a-468b-9077-0390d58bc9c6 is now 1 (50.078771176s elapsed)
STEP: deleting the pod 01/30/23 09:08:17.918
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 30 09:08:17.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-3855" for this suite. 01/30/23 09:08:17.939
------------------------------
â€¢ [SLOW TEST] [52.139 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:07:25.804
    Jan 30 09:07:25.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-probe 01/30/23 09:07:25.806
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:07:25.819
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:07:25.821
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:135
    STEP: Creating pod busybox-13f425ff-739a-468b-9077-0390d58bc9c6 in namespace container-probe-3855 01/30/23 09:07:25.824
    Jan 30 09:07:25.831: INFO: Waiting up to 5m0s for pod "busybox-13f425ff-739a-468b-9077-0390d58bc9c6" in namespace "container-probe-3855" to be "not pending"
    Jan 30 09:07:25.833: INFO: Pod "busybox-13f425ff-739a-468b-9077-0390d58bc9c6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.054648ms
    Jan 30 09:07:27.836: INFO: Pod "busybox-13f425ff-739a-468b-9077-0390d58bc9c6": Phase="Running", Reason="", readiness=true. Elapsed: 2.004939895s
    Jan 30 09:07:27.836: INFO: Pod "busybox-13f425ff-739a-468b-9077-0390d58bc9c6" satisfied condition "not pending"
    Jan 30 09:07:27.836: INFO: Started pod busybox-13f425ff-739a-468b-9077-0390d58bc9c6 in namespace container-probe-3855
    STEP: checking the pod's current state and verifying that restartCount is present 01/30/23 09:07:27.836
    Jan 30 09:07:27.839: INFO: Initial restart count of pod busybox-13f425ff-739a-468b-9077-0390d58bc9c6 is 0
    Jan 30 09:08:17.917: INFO: Restart count of pod container-probe-3855/busybox-13f425ff-739a-468b-9077-0390d58bc9c6 is now 1 (50.078771176s elapsed)
    STEP: deleting the pod 01/30/23 09:08:17.918
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:08:17.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-3855" for this suite. 01/30/23 09:08:17.939
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
[BeforeEach] [sig-storage] CSIStorageCapacity
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:08:17.947
Jan 30 09:08:17.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename csistoragecapacity 01/30/23 09:08:17.948
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:17.962
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:17.965
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:31
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
STEP: getting /apis 01/30/23 09:08:17.967
STEP: getting /apis/storage.k8s.io 01/30/23 09:08:17.969
STEP: getting /apis/storage.k8s.io/v1 01/30/23 09:08:17.97
STEP: creating 01/30/23 09:08:17.971
STEP: watching 01/30/23 09:08:17.987
Jan 30 09:08:17.987: INFO: starting watch
STEP: getting 01/30/23 09:08:17.998
STEP: listing in namespace 01/30/23 09:08:18.001
STEP: listing across namespaces 01/30/23 09:08:18.003
STEP: patching 01/30/23 09:08:18.006
STEP: updating 01/30/23 09:08:18.012
Jan 30 09:08:18.017: INFO: waiting for watch events with expected annotations in namespace
Jan 30 09:08:18.017: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting 01/30/23 09:08:18.017
STEP: deleting a collection 01/30/23 09:08:18.031
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/node/init/init.go:32
Jan 30 09:08:18.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  tear down framework | framework.go:193
STEP: Destroying namespace "csistoragecapacity-6609" for this suite. 01/30/23 09:08:18.047
------------------------------
â€¢ [0.105 seconds]
[sig-storage] CSIStorageCapacity
test/e2e/storage/utils/framework.go:23
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIStorageCapacity
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:08:17.947
    Jan 30 09:08:17.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename csistoragecapacity 01/30/23 09:08:17.948
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:17.962
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:17.965
    [BeforeEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support CSIStorageCapacities API operations [Conformance]
      test/e2e/storage/csistoragecapacity.go:49
    STEP: getting /apis 01/30/23 09:08:17.967
    STEP: getting /apis/storage.k8s.io 01/30/23 09:08:17.969
    STEP: getting /apis/storage.k8s.io/v1 01/30/23 09:08:17.97
    STEP: creating 01/30/23 09:08:17.971
    STEP: watching 01/30/23 09:08:17.987
    Jan 30 09:08:17.987: INFO: starting watch
    STEP: getting 01/30/23 09:08:17.998
    STEP: listing in namespace 01/30/23 09:08:18.001
    STEP: listing across namespaces 01/30/23 09:08:18.003
    STEP: patching 01/30/23 09:08:18.006
    STEP: updating 01/30/23 09:08:18.012
    Jan 30 09:08:18.017: INFO: waiting for watch events with expected annotations in namespace
    Jan 30 09:08:18.017: INFO: waiting for watch events with expected annotations across namespace
    STEP: deleting 01/30/23 09:08:18.017
    STEP: deleting a collection 01/30/23 09:08:18.031
    [AfterEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:08:18.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      tear down framework | framework.go:193
    STEP: Destroying namespace "csistoragecapacity-6609" for this suite. 01/30/23 09:08:18.047
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:08:18.053
Jan 30 09:08:18.053: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 09:08:18.054
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:18.068
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:18.073
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 09:08:18.09
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:08:18.4
STEP: Deploying the webhook pod 01/30/23 09:08:18.405
STEP: Wait for the deployment to be ready 01/30/23 09:08:18.417
Jan 30 09:08:18.422: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 09:08:20.428
STEP: Verifying the service has paired with the endpoint 01/30/23 09:08:20.437
Jan 30 09:08:21.437: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 01/30/23 09:08:21.44
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 01/30/23 09:08:21.468
STEP: Creating a dummy validating-webhook-configuration object 01/30/23 09:08:21.478
STEP: Deleting the validating-webhook-configuration, which should be possible to remove 01/30/23 09:08:21.486
STEP: Creating a dummy mutating-webhook-configuration object 01/30/23 09:08:21.492
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 01/30/23 09:08:21.499
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:08:21.516: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1448" for this suite. 01/30/23 09:08:21.56
STEP: Destroying namespace "webhook-1448-markers" for this suite. 01/30/23 09:08:21.57
------------------------------
â€¢ [3.526 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:08:18.053
    Jan 30 09:08:18.053: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 09:08:18.054
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:18.068
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:18.073
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 09:08:18.09
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:08:18.4
    STEP: Deploying the webhook pod 01/30/23 09:08:18.405
    STEP: Wait for the deployment to be ready 01/30/23 09:08:18.417
    Jan 30 09:08:18.422: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 09:08:20.428
    STEP: Verifying the service has paired with the endpoint 01/30/23 09:08:20.437
    Jan 30 09:08:21.437: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
      test/e2e/apimachinery/webhook.go:277
    STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 01/30/23 09:08:21.44
    STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 01/30/23 09:08:21.468
    STEP: Creating a dummy validating-webhook-configuration object 01/30/23 09:08:21.478
    STEP: Deleting the validating-webhook-configuration, which should be possible to remove 01/30/23 09:08:21.486
    STEP: Creating a dummy mutating-webhook-configuration object 01/30/23 09:08:21.492
    STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 01/30/23 09:08:21.499
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:08:21.516: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1448" for this suite. 01/30/23 09:08:21.56
    STEP: Destroying namespace "webhook-1448-markers" for this suite. 01/30/23 09:08:21.57
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:08:21.58
Jan 30 09:08:21.580: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 09:08:21.581
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:21.592
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:21.594
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
STEP: validating cluster-info 01/30/23 09:08:21.597
Jan 30 09:08:21.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-2418 cluster-info'
Jan 30 09:08:21.659: INFO: stderr: ""
Jan 30 09:08:21.659: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 09:08:21.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2418" for this suite. 01/30/23 09:08:21.663
------------------------------
â€¢ [0.088 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl cluster-info
  test/e2e/kubectl/kubectl.go:1244
    should check if Kubernetes control plane services is included in cluster-info  [Conformance]
    test/e2e/kubectl/kubectl.go:1250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:08:21.58
    Jan 30 09:08:21.580: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 09:08:21.581
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:21.592
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:21.594
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
      test/e2e/kubectl/kubectl.go:1250
    STEP: validating cluster-info 01/30/23 09:08:21.597
    Jan 30 09:08:21.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-2418 cluster-info'
    Jan 30 09:08:21.659: INFO: stderr: ""
    Jan 30 09:08:21.659: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:08:21.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2418" for this suite. 01/30/23 09:08:21.663
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:08:21.668
Jan 30 09:08:21.668: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 09:08:21.669
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:21.681
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:21.684
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
STEP: Creating configMap with name cm-test-opt-del-911c33e6-d350-4359-a82c-9c8c0755c9fb 01/30/23 09:08:21.695
STEP: Creating configMap with name cm-test-opt-upd-2a91a026-aa6e-4ff2-abc1-64d7dac546a5 01/30/23 09:08:21.7
STEP: Creating the pod 01/30/23 09:08:21.705
Jan 30 09:08:21.713: INFO: Waiting up to 5m0s for pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b" in namespace "configmap-867" to be "running and ready"
Jan 30 09:08:21.716: INFO: Pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.530315ms
Jan 30 09:08:21.716: INFO: The phase of Pod pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:08:23.718: INFO: Pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004897532s
Jan 30 09:08:23.718: INFO: The phase of Pod pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:08:25.719: INFO: Pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b": Phase="Running", Reason="", readiness=true. Elapsed: 4.005261688s
Jan 30 09:08:25.719: INFO: The phase of Pod pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b is Running (Ready = true)
Jan 30 09:08:25.719: INFO: Pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-911c33e6-d350-4359-a82c-9c8c0755c9fb 01/30/23 09:08:25.743
STEP: Updating configmap cm-test-opt-upd-2a91a026-aa6e-4ff2-abc1-64d7dac546a5 01/30/23 09:08:25.747
STEP: Creating configMap with name cm-test-opt-create-d08c3757-cc1c-4e39-8268-a4fc4b2efd57 01/30/23 09:08:25.752
STEP: waiting to observe update in volume 01/30/23 09:08:25.756
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:08:29.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-867" for this suite. 01/30/23 09:08:29.78
------------------------------
â€¢ [SLOW TEST] [8.120 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:08:21.668
    Jan 30 09:08:21.668: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 09:08:21.669
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:21.681
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:21.684
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:240
    STEP: Creating configMap with name cm-test-opt-del-911c33e6-d350-4359-a82c-9c8c0755c9fb 01/30/23 09:08:21.695
    STEP: Creating configMap with name cm-test-opt-upd-2a91a026-aa6e-4ff2-abc1-64d7dac546a5 01/30/23 09:08:21.7
    STEP: Creating the pod 01/30/23 09:08:21.705
    Jan 30 09:08:21.713: INFO: Waiting up to 5m0s for pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b" in namespace "configmap-867" to be "running and ready"
    Jan 30 09:08:21.716: INFO: Pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.530315ms
    Jan 30 09:08:21.716: INFO: The phase of Pod pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:08:23.718: INFO: Pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004897532s
    Jan 30 09:08:23.718: INFO: The phase of Pod pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:08:25.719: INFO: Pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b": Phase="Running", Reason="", readiness=true. Elapsed: 4.005261688s
    Jan 30 09:08:25.719: INFO: The phase of Pod pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b is Running (Ready = true)
    Jan 30 09:08:25.719: INFO: Pod "pod-configmaps-12fbc68e-fbae-42f8-9616-154b024b6e0b" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-911c33e6-d350-4359-a82c-9c8c0755c9fb 01/30/23 09:08:25.743
    STEP: Updating configmap cm-test-opt-upd-2a91a026-aa6e-4ff2-abc1-64d7dac546a5 01/30/23 09:08:25.747
    STEP: Creating configMap with name cm-test-opt-create-d08c3757-cc1c-4e39-8268-a4fc4b2efd57 01/30/23 09:08:25.752
    STEP: waiting to observe update in volume 01/30/23 09:08:25.756
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:08:29.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-867" for this suite. 01/30/23 09:08:29.78
  << End Captured GinkgoWriter Output
------------------------------
[sig-network] DNS
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:08:29.788
Jan 30 09:08:29.788: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename dns 01/30/23 09:08:29.788
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:29.8
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:29.801
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
STEP: Creating a test headless service 01/30/23 09:08:29.804
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local;sleep 1; done
 01/30/23 09:08:29.808
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local;sleep 1; done
 01/30/23 09:08:29.808
STEP: creating a pod to probe DNS 01/30/23 09:08:29.808
STEP: submitting the pod to kubernetes 01/30/23 09:08:29.808
Jan 30 09:08:29.817: INFO: Waiting up to 15m0s for pod "dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8" in namespace "dns-4538" to be "running"
Jan 30 09:08:29.820: INFO: Pod "dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.559818ms
Jan 30 09:08:31.823: INFO: Pod "dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8": Phase="Running", Reason="", readiness=true. Elapsed: 2.005219499s
Jan 30 09:08:31.823: INFO: Pod "dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8" satisfied condition "running"
STEP: retrieving the pod 01/30/23 09:08:31.823
STEP: looking for the results for each expected name from probers 01/30/23 09:08:31.825
Jan 30 09:08:31.828: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:31.830: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:31.832: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:31.835: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:31.838: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:31.840: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:31.842: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:31.844: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:31.844: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

Jan 30 09:08:36.849: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:36.851: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:36.853: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:36.855: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:36.857: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:36.858: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:36.861: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:36.863: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:36.863: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

Jan 30 09:08:41.848: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:41.850: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:41.852: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:41.854: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:41.856: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:41.858: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:41.860: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:41.862: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:41.862: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

Jan 30 09:08:46.849: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:46.851: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:46.853: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:46.855: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:46.857: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:46.859: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:46.861: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:46.863: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:46.863: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

Jan 30 09:08:51.847: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:51.849: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:51.851: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:51.853: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:51.855: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:51.857: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:51.859: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:51.861: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:51.861: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

Jan 30 09:08:56.849: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:56.851: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:56.853: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:56.856: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:56.858: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:56.860: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:56.862: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:56.864: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
Jan 30 09:08:56.864: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

Jan 30 09:09:01.869: INFO: DNS probes using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 succeeded

STEP: deleting the pod 01/30/23 09:09:01.869
STEP: deleting the test headless service 01/30/23 09:09:01.901
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 30 09:09:01.914: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-4538" for this suite. 01/30/23 09:09:01.918
------------------------------
â€¢ [SLOW TEST] [32.136 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:08:29.788
    Jan 30 09:08:29.788: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename dns 01/30/23 09:08:29.788
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:08:29.8
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:08:29.801
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Subdomain [Conformance]
      test/e2e/network/dns.go:290
    STEP: Creating a test headless service 01/30/23 09:08:29.804
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local;sleep 1; done
     01/30/23 09:08:29.808
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4538.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local;sleep 1; done
     01/30/23 09:08:29.808
    STEP: creating a pod to probe DNS 01/30/23 09:08:29.808
    STEP: submitting the pod to kubernetes 01/30/23 09:08:29.808
    Jan 30 09:08:29.817: INFO: Waiting up to 15m0s for pod "dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8" in namespace "dns-4538" to be "running"
    Jan 30 09:08:29.820: INFO: Pod "dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.559818ms
    Jan 30 09:08:31.823: INFO: Pod "dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8": Phase="Running", Reason="", readiness=true. Elapsed: 2.005219499s
    Jan 30 09:08:31.823: INFO: Pod "dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 09:08:31.823
    STEP: looking for the results for each expected name from probers 01/30/23 09:08:31.825
    Jan 30 09:08:31.828: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:31.830: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:31.832: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:31.835: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:31.838: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:31.840: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:31.842: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:31.844: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:31.844: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

    Jan 30 09:08:36.849: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:36.851: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:36.853: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:36.855: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:36.857: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:36.858: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:36.861: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:36.863: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:36.863: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

    Jan 30 09:08:41.848: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:41.850: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:41.852: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:41.854: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:41.856: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:41.858: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:41.860: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:41.862: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:41.862: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

    Jan 30 09:08:46.849: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:46.851: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:46.853: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:46.855: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:46.857: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:46.859: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:46.861: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:46.863: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:46.863: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

    Jan 30 09:08:51.847: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:51.849: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:51.851: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:51.853: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:51.855: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:51.857: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:51.859: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:51.861: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:51.861: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

    Jan 30 09:08:56.849: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:56.851: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:56.853: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:56.856: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:56.858: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:56.860: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:56.862: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:56.864: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local from pod dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8: the server could not find the requested resource (get pods dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8)
    Jan 30 09:08:56.864: INFO: Lookups using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4538.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4538.svc.cluster.local jessie_udp@dns-test-service-2.dns-4538.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4538.svc.cluster.local]

    Jan 30 09:09:01.869: INFO: DNS probes using dns-4538/dns-test-b41bcc19-566c-4494-9f48-8afc25794ed8 succeeded

    STEP: deleting the pod 01/30/23 09:09:01.869
    STEP: deleting the test headless service 01/30/23 09:09:01.901
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:09:01.914: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-4538" for this suite. 01/30/23 09:09:01.918
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:09:01.924
Jan 30 09:09:01.925: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename namespaces 01/30/23 09:09:01.926
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:01.946
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:09:01.952
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
STEP: Creating a test namespace 01/30/23 09:09:01.955
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:01.968
STEP: Creating a service in the namespace 01/30/23 09:09:01.972
STEP: Deleting the namespace 01/30/23 09:09:01.981
STEP: Waiting for the namespace to be removed. 01/30/23 09:09:02
STEP: Recreating the namespace 01/30/23 09:09:08.003
STEP: Verifying there is no service in the namespace 01/30/23 09:09:08.011
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:09:08.014: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-9634" for this suite. 01/30/23 09:09:08.017
STEP: Destroying namespace "nsdeletetest-8365" for this suite. 01/30/23 09:09:08.022
Jan 30 09:09:08.023: INFO: Namespace nsdeletetest-8365 was already deleted
STEP: Destroying namespace "nsdeletetest-3199" for this suite. 01/30/23 09:09:08.023
------------------------------
â€¢ [SLOW TEST] [6.103 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:09:01.924
    Jan 30 09:09:01.925: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename namespaces 01/30/23 09:09:01.926
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:01.946
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:09:01.952
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all services are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:251
    STEP: Creating a test namespace 01/30/23 09:09:01.955
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:01.968
    STEP: Creating a service in the namespace 01/30/23 09:09:01.972
    STEP: Deleting the namespace 01/30/23 09:09:01.981
    STEP: Waiting for the namespace to be removed. 01/30/23 09:09:02
    STEP: Recreating the namespace 01/30/23 09:09:08.003
    STEP: Verifying there is no service in the namespace 01/30/23 09:09:08.011
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:09:08.014: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-9634" for this suite. 01/30/23 09:09:08.017
    STEP: Destroying namespace "nsdeletetest-8365" for this suite. 01/30/23 09:09:08.022
    Jan 30 09:09:08.023: INFO: Namespace nsdeletetest-8365 was already deleted
    STEP: Destroying namespace "nsdeletetest-3199" for this suite. 01/30/23 09:09:08.023
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Variable Expansion
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:09:08.027
Jan 30 09:09:08.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename var-expansion 01/30/23 09:09:08.028
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:08.04
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:09:08.043
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
STEP: creating the pod 01/30/23 09:09:08.045
STEP: waiting for pod running 01/30/23 09:09:08.052
Jan 30 09:09:08.052: INFO: Waiting up to 2m0s for pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" in namespace "var-expansion-4436" to be "running"
Jan 30 09:09:08.055: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.363873ms
Jan 30 09:09:10.057: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1": Phase="Running", Reason="", readiness=true. Elapsed: 2.005721707s
Jan 30 09:09:10.057: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" satisfied condition "running"
STEP: creating a file in subpath 01/30/23 09:09:10.057
Jan 30 09:09:10.059: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4436 PodName:var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:09:10.059: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:09:10.060: INFO: ExecWithOptions: Clientset creation
Jan 30 09:09:10.060: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-4436/pods/var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path 01/30/23 09:09:10.144
Jan 30 09:09:10.146: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4436 PodName:var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:09:10.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:09:10.147: INFO: ExecWithOptions: Clientset creation
Jan 30 09:09:10.147: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-4436/pods/var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value 01/30/23 09:09:10.179
Jan 30 09:09:10.694: INFO: Successfully updated pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1"
STEP: waiting for annotated pod running 01/30/23 09:09:10.694
Jan 30 09:09:10.694: INFO: Waiting up to 2m0s for pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" in namespace "var-expansion-4436" to be "running"
Jan 30 09:09:10.696: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1": Phase="Running", Reason="", readiness=true. Elapsed: 2.503048ms
Jan 30 09:09:10.696: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" satisfied condition "running"
STEP: deleting the pod gracefully 01/30/23 09:09:10.696
Jan 30 09:09:10.697: INFO: Deleting pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" in namespace "var-expansion-4436"
Jan 30 09:09:10.712: INFO: Wait up to 5m0s for pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 30 09:09:44.719: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-4436" for this suite. 01/30/23 09:09:44.722
------------------------------
â€¢ [SLOW TEST] [36.709 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:09:08.027
    Jan 30 09:09:08.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename var-expansion 01/30/23 09:09:08.028
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:08.04
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:09:08.043
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should succeed in writing subpaths in container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:297
    STEP: creating the pod 01/30/23 09:09:08.045
    STEP: waiting for pod running 01/30/23 09:09:08.052
    Jan 30 09:09:08.052: INFO: Waiting up to 2m0s for pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" in namespace "var-expansion-4436" to be "running"
    Jan 30 09:09:08.055: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.363873ms
    Jan 30 09:09:10.057: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1": Phase="Running", Reason="", readiness=true. Elapsed: 2.005721707s
    Jan 30 09:09:10.057: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" satisfied condition "running"
    STEP: creating a file in subpath 01/30/23 09:09:10.057
    Jan 30 09:09:10.059: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4436 PodName:var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:09:10.059: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:09:10.060: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:09:10.060: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-4436/pods/var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: test for file in mounted path 01/30/23 09:09:10.144
    Jan 30 09:09:10.146: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4436 PodName:var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:09:10.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:09:10.147: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:09:10.147: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-4436/pods/var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: updating the annotation value 01/30/23 09:09:10.179
    Jan 30 09:09:10.694: INFO: Successfully updated pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1"
    STEP: waiting for annotated pod running 01/30/23 09:09:10.694
    Jan 30 09:09:10.694: INFO: Waiting up to 2m0s for pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" in namespace "var-expansion-4436" to be "running"
    Jan 30 09:09:10.696: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1": Phase="Running", Reason="", readiness=true. Elapsed: 2.503048ms
    Jan 30 09:09:10.696: INFO: Pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" satisfied condition "running"
    STEP: deleting the pod gracefully 01/30/23 09:09:10.696
    Jan 30 09:09:10.697: INFO: Deleting pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" in namespace "var-expansion-4436"
    Jan 30 09:09:10.712: INFO: Wait up to 5m0s for pod "var-expansion-0c3a15b5-b14c-446e-a378-2316837693d1" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:09:44.719: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-4436" for this suite. 01/30/23 09:09:44.722
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:09:44.737
Jan 30 09:09:44.737: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:09:44.738
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:44.749
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:09:44.752
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:09:44.754
Jan 30 09:09:44.760: INFO: Waiting up to 5m0s for pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207" in namespace "projected-3307" to be "Succeeded or Failed"
Jan 30 09:09:44.762: INFO: Pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207": Phase="Pending", Reason="", readiness=false. Elapsed: 2.737279ms
Jan 30 09:09:46.767: INFO: Pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006790385s
Jan 30 09:09:48.766: INFO: Pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006299775s
STEP: Saw pod success 01/30/23 09:09:48.766
Jan 30 09:09:48.766: INFO: Pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207" satisfied condition "Succeeded or Failed"
Jan 30 09:09:48.769: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207 container client-container: <nil>
STEP: delete the pod 01/30/23 09:09:48.773
Jan 30 09:09:48.796: INFO: Waiting for pod downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207 to disappear
Jan 30 09:09:48.798: INFO: Pod downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 09:09:48.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3307" for this suite. 01/30/23 09:09:48.801
------------------------------
â€¢ [4.069 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:09:44.737
    Jan 30 09:09:44.737: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:09:44.738
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:44.749
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:09:44.752
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:221
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:09:44.754
    Jan 30 09:09:44.760: INFO: Waiting up to 5m0s for pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207" in namespace "projected-3307" to be "Succeeded or Failed"
    Jan 30 09:09:44.762: INFO: Pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207": Phase="Pending", Reason="", readiness=false. Elapsed: 2.737279ms
    Jan 30 09:09:46.767: INFO: Pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006790385s
    Jan 30 09:09:48.766: INFO: Pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006299775s
    STEP: Saw pod success 01/30/23 09:09:48.766
    Jan 30 09:09:48.766: INFO: Pod "downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207" satisfied condition "Succeeded or Failed"
    Jan 30 09:09:48.769: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207 container client-container: <nil>
    STEP: delete the pod 01/30/23 09:09:48.773
    Jan 30 09:09:48.796: INFO: Waiting for pod downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207 to disappear
    Jan 30 09:09:48.798: INFO: Pod downwardapi-volume-84db8b7d-9936-48b1-96a3-70e63349e207 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:09:48.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3307" for this suite. 01/30/23 09:09:48.801
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:09:48.806
Jan 30 09:09:48.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename subpath 01/30/23 09:09:48.811
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:48.821
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:09:48.824
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/30/23 09:09:48.826
[It] should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
STEP: Creating pod pod-subpath-test-downwardapi-2jrs 01/30/23 09:09:48.836
STEP: Creating a pod to test atomic-volume-subpath 01/30/23 09:09:48.836
Jan 30 09:09:48.843: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-2jrs" in namespace "subpath-2791" to be "Succeeded or Failed"
Jan 30 09:09:48.847: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Pending", Reason="", readiness=false. Elapsed: 3.824338ms
Jan 30 09:09:50.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 2.007766231s
Jan 30 09:09:52.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 4.006737663s
Jan 30 09:09:54.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 6.006389821s
Jan 30 09:09:56.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 8.007465158s
Jan 30 09:09:58.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 10.007508142s
Jan 30 09:10:00.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 12.0076518s
Jan 30 09:10:02.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 14.007007256s
Jan 30 09:10:04.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 16.008278317s
Jan 30 09:10:06.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 18.007503822s
Jan 30 09:10:08.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 20.007097451s
Jan 30 09:10:10.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=false. Elapsed: 22.007968698s
Jan 30 09:10:12.849: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.006229884s
STEP: Saw pod success 01/30/23 09:10:12.849
Jan 30 09:10:12.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs" satisfied condition "Succeeded or Failed"
Jan 30 09:10:12.851: INFO: Trying to get logs from node tce-worker2 pod pod-subpath-test-downwardapi-2jrs container test-container-subpath-downwardapi-2jrs: <nil>
STEP: delete the pod 01/30/23 09:10:12.855
Jan 30 09:10:12.869: INFO: Waiting for pod pod-subpath-test-downwardapi-2jrs to disappear
Jan 30 09:10:12.871: INFO: Pod pod-subpath-test-downwardapi-2jrs no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-2jrs 01/30/23 09:10:12.871
Jan 30 09:10:12.871: INFO: Deleting pod "pod-subpath-test-downwardapi-2jrs" in namespace "subpath-2791"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:12.872: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-2791" for this suite. 01/30/23 09:10:12.875
------------------------------
â€¢ [SLOW TEST] [24.079 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/storage/subpath.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:09:48.806
    Jan 30 09:09:48.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename subpath 01/30/23 09:09:48.811
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:09:48.821
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:09:48.824
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/30/23 09:09:48.826
    [It] should support subpaths with downward pod [Conformance]
      test/e2e/storage/subpath.go:92
    STEP: Creating pod pod-subpath-test-downwardapi-2jrs 01/30/23 09:09:48.836
    STEP: Creating a pod to test atomic-volume-subpath 01/30/23 09:09:48.836
    Jan 30 09:09:48.843: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-2jrs" in namespace "subpath-2791" to be "Succeeded or Failed"
    Jan 30 09:09:48.847: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Pending", Reason="", readiness=false. Elapsed: 3.824338ms
    Jan 30 09:09:50.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 2.007766231s
    Jan 30 09:09:52.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 4.006737663s
    Jan 30 09:09:54.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 6.006389821s
    Jan 30 09:09:56.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 8.007465158s
    Jan 30 09:09:58.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 10.007508142s
    Jan 30 09:10:00.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 12.0076518s
    Jan 30 09:10:02.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 14.007007256s
    Jan 30 09:10:04.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 16.008278317s
    Jan 30 09:10:06.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 18.007503822s
    Jan 30 09:10:08.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=true. Elapsed: 20.007097451s
    Jan 30 09:10:10.851: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Running", Reason="", readiness=false. Elapsed: 22.007968698s
    Jan 30 09:10:12.849: INFO: Pod "pod-subpath-test-downwardapi-2jrs": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.006229884s
    STEP: Saw pod success 01/30/23 09:10:12.849
    Jan 30 09:10:12.850: INFO: Pod "pod-subpath-test-downwardapi-2jrs" satisfied condition "Succeeded or Failed"
    Jan 30 09:10:12.851: INFO: Trying to get logs from node tce-worker2 pod pod-subpath-test-downwardapi-2jrs container test-container-subpath-downwardapi-2jrs: <nil>
    STEP: delete the pod 01/30/23 09:10:12.855
    Jan 30 09:10:12.869: INFO: Waiting for pod pod-subpath-test-downwardapi-2jrs to disappear
    Jan 30 09:10:12.871: INFO: Pod pod-subpath-test-downwardapi-2jrs no longer exists
    STEP: Deleting pod pod-subpath-test-downwardapi-2jrs 01/30/23 09:10:12.871
    Jan 30 09:10:12.871: INFO: Deleting pod "pod-subpath-test-downwardapi-2jrs" in namespace "subpath-2791"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:12.872: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-2791" for this suite. 01/30/23 09:10:12.875
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:12.885
Jan 30 09:10:12.886: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-probe 01/30/23 09:10:12.886
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:12.899
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:12.901
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
Jan 30 09:10:12.912: INFO: Waiting up to 5m0s for pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab" in namespace "container-probe-3523" to be "running and ready"
Jan 30 09:10:12.915: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Pending", Reason="", readiness=false. Elapsed: 3.066839ms
Jan 30 09:10:12.915: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:10:14.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 2.005947799s
Jan 30 09:10:14.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:16.919: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 4.006854959s
Jan 30 09:10:16.919: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:18.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 6.005729775s
Jan 30 09:10:18.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:20.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 8.005869522s
Jan 30 09:10:20.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:22.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 10.006114188s
Jan 30 09:10:22.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:24.917: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 12.00539787s
Jan 30 09:10:24.917: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:26.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 14.00624096s
Jan 30 09:10:26.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:28.917: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 16.005204582s
Jan 30 09:10:28.917: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:30.917: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 18.005653269s
Jan 30 09:10:30.917: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:32.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 20.006231261s
Jan 30 09:10:32.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
Jan 30 09:10:34.919: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=true. Elapsed: 22.00696408s
Jan 30 09:10:34.919: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = true)
Jan 30 09:10:34.919: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab" satisfied condition "running and ready"
Jan 30 09:10:34.921: INFO: Container started at 2023-01-30 09:10:13 +0000 UTC, pod became ready at 2023-01-30 09:10:33 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:34.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-3523" for this suite. 01/30/23 09:10:34.923
------------------------------
â€¢ [SLOW TEST] [22.052 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:12.885
    Jan 30 09:10:12.886: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-probe 01/30/23 09:10:12.886
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:12.899
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:12.901
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:72
    Jan 30 09:10:12.912: INFO: Waiting up to 5m0s for pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab" in namespace "container-probe-3523" to be "running and ready"
    Jan 30 09:10:12.915: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Pending", Reason="", readiness=false. Elapsed: 3.066839ms
    Jan 30 09:10:12.915: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:10:14.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 2.005947799s
    Jan 30 09:10:14.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:16.919: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 4.006854959s
    Jan 30 09:10:16.919: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:18.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 6.005729775s
    Jan 30 09:10:18.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:20.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 8.005869522s
    Jan 30 09:10:20.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:22.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 10.006114188s
    Jan 30 09:10:22.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:24.917: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 12.00539787s
    Jan 30 09:10:24.917: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:26.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 14.00624096s
    Jan 30 09:10:26.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:28.917: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 16.005204582s
    Jan 30 09:10:28.917: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:30.917: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 18.005653269s
    Jan 30 09:10:30.917: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:32.918: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=false. Elapsed: 20.006231261s
    Jan 30 09:10:32.918: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = false)
    Jan 30 09:10:34.919: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab": Phase="Running", Reason="", readiness=true. Elapsed: 22.00696408s
    Jan 30 09:10:34.919: INFO: The phase of Pod test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab is Running (Ready = true)
    Jan 30 09:10:34.919: INFO: Pod "test-webserver-72af8547-3bf8-4e8f-af06-ed8450d82cab" satisfied condition "running and ready"
    Jan 30 09:10:34.921: INFO: Container started at 2023-01-30 09:10:13 +0000 UTC, pod became ready at 2023-01-30 09:10:33 +0000 UTC
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:34.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-3523" for this suite. 01/30/23 09:10:34.923
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
[BeforeEach] [sig-network] IngressClass API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:34.939
Jan 30 09:10:34.939: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename ingressclass 01/30/23 09:10:34.94
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:34.95
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:34.954
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:211
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
STEP: getting /apis 01/30/23 09:10:34.957
STEP: getting /apis/networking.k8s.io 01/30/23 09:10:34.959
STEP: getting /apis/networking.k8s.iov1 01/30/23 09:10:34.96
STEP: creating 01/30/23 09:10:34.961
STEP: getting 01/30/23 09:10:34.973
STEP: listing 01/30/23 09:10:34.975
STEP: watching 01/30/23 09:10:34.978
Jan 30 09:10:34.978: INFO: starting watch
STEP: patching 01/30/23 09:10:34.979
STEP: updating 01/30/23 09:10:34.983
Jan 30 09:10:34.987: INFO: waiting for watch events with expected annotations
Jan 30 09:10:34.987: INFO: saw patched and updated annotations
STEP: deleting 01/30/23 09:10:34.987
STEP: deleting a collection 01/30/23 09:10:34.997
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:35.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] IngressClass API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] IngressClass API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingressclass-89" for this suite. 01/30/23 09:10:35.014
------------------------------
â€¢ [0.081 seconds]
[sig-network] IngressClass API
test/e2e/network/common/framework.go:23
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] IngressClass API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:34.939
    Jan 30 09:10:34.939: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename ingressclass 01/30/23 09:10:34.94
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:34.95
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:34.954
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/network/ingressclass.go:211
    [It]  should support creating IngressClass API operations [Conformance]
      test/e2e/network/ingressclass.go:223
    STEP: getting /apis 01/30/23 09:10:34.957
    STEP: getting /apis/networking.k8s.io 01/30/23 09:10:34.959
    STEP: getting /apis/networking.k8s.iov1 01/30/23 09:10:34.96
    STEP: creating 01/30/23 09:10:34.961
    STEP: getting 01/30/23 09:10:34.973
    STEP: listing 01/30/23 09:10:34.975
    STEP: watching 01/30/23 09:10:34.978
    Jan 30 09:10:34.978: INFO: starting watch
    STEP: patching 01/30/23 09:10:34.979
    STEP: updating 01/30/23 09:10:34.983
    Jan 30 09:10:34.987: INFO: waiting for watch events with expected annotations
    Jan 30 09:10:34.987: INFO: saw patched and updated annotations
    STEP: deleting 01/30/23 09:10:34.987
    STEP: deleting a collection 01/30/23 09:10:34.997
    [AfterEach] [sig-network] IngressClass API
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:35.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] IngressClass API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] IngressClass API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingressclass-89" for this suite. 01/30/23 09:10:35.014
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:35.021
Jan 30 09:10:35.021: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:10:35.025
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:35.04
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:35.043
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
STEP: Creating configMap with name projected-configmap-test-volume-8aaadbe1-d2a2-4e2c-817f-c600960c9651 01/30/23 09:10:35.046
STEP: Creating a pod to test consume configMaps 01/30/23 09:10:35.051
Jan 30 09:10:35.058: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea" in namespace "projected-4728" to be "Succeeded or Failed"
Jan 30 09:10:35.061: INFO: Pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea": Phase="Pending", Reason="", readiness=false. Elapsed: 3.342737ms
Jan 30 09:10:37.065: INFO: Pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006552392s
Jan 30 09:10:39.065: INFO: Pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007003241s
STEP: Saw pod success 01/30/23 09:10:39.065
Jan 30 09:10:39.065: INFO: Pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea" satisfied condition "Succeeded or Failed"
Jan 30 09:10:39.067: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:10:39.071
Jan 30 09:10:39.079: INFO: Waiting for pod pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea to disappear
Jan 30 09:10:39.081: INFO: Pod pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:39.081: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4728" for this suite. 01/30/23 09:10:39.084
------------------------------
â€¢ [4.067 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:35.021
    Jan 30 09:10:35.021: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:10:35.025
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:35.04
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:35.043
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:74
    STEP: Creating configMap with name projected-configmap-test-volume-8aaadbe1-d2a2-4e2c-817f-c600960c9651 01/30/23 09:10:35.046
    STEP: Creating a pod to test consume configMaps 01/30/23 09:10:35.051
    Jan 30 09:10:35.058: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea" in namespace "projected-4728" to be "Succeeded or Failed"
    Jan 30 09:10:35.061: INFO: Pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea": Phase="Pending", Reason="", readiness=false. Elapsed: 3.342737ms
    Jan 30 09:10:37.065: INFO: Pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006552392s
    Jan 30 09:10:39.065: INFO: Pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007003241s
    STEP: Saw pod success 01/30/23 09:10:39.065
    Jan 30 09:10:39.065: INFO: Pod "pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea" satisfied condition "Succeeded or Failed"
    Jan 30 09:10:39.067: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:10:39.071
    Jan 30 09:10:39.079: INFO: Waiting for pod pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea to disappear
    Jan 30 09:10:39.081: INFO: Pod pod-projected-configmaps-78c5a26d-e4d6-4a3a-b8a7-7230707432ea no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:39.081: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4728" for this suite. 01/30/23 09:10:39.084
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:39.089
Jan 30 09:10:39.089: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename disruption 01/30/23 09:10:39.09
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:39.11
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:39.114
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
STEP: Waiting for the pdb to be processed 01/30/23 09:10:39.122
STEP: Waiting for all pods to be running 01/30/23 09:10:41.171
Jan 30 09:10:41.176: INFO: running pods: 0 < 3
Jan 30 09:10:43.180: INFO: running pods: 2 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:45.180: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-8234" for this suite. 01/30/23 09:10:45.183
------------------------------
â€¢ [SLOW TEST] [6.098 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:39.089
    Jan 30 09:10:39.089: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename disruption 01/30/23 09:10:39.09
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:39.11
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:39.114
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should observe PodDisruptionBudget status updated [Conformance]
      test/e2e/apps/disruption.go:141
    STEP: Waiting for the pdb to be processed 01/30/23 09:10:39.122
    STEP: Waiting for all pods to be running 01/30/23 09:10:41.171
    Jan 30 09:10:41.176: INFO: running pods: 0 < 3
    Jan 30 09:10:43.180: INFO: running pods: 2 < 3
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:45.180: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-8234" for this suite. 01/30/23 09:10:45.183
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:45.188
Jan 30 09:10:45.188: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 09:10:45.188
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:45.199
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:45.202
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
STEP: Creating a pod to test emptydir 0644 on node default medium 01/30/23 09:10:45.204
Jan 30 09:10:45.212: INFO: Waiting up to 5m0s for pod "pod-45d7ae5f-0274-4974-a046-088904db7312" in namespace "emptydir-8081" to be "Succeeded or Failed"
Jan 30 09:10:45.214: INFO: Pod "pod-45d7ae5f-0274-4974-a046-088904db7312": Phase="Pending", Reason="", readiness=false. Elapsed: 2.150243ms
Jan 30 09:10:47.216: INFO: Pod "pod-45d7ae5f-0274-4974-a046-088904db7312": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004806422s
Jan 30 09:10:49.217: INFO: Pod "pod-45d7ae5f-0274-4974-a046-088904db7312": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005456989s
STEP: Saw pod success 01/30/23 09:10:49.217
Jan 30 09:10:49.217: INFO: Pod "pod-45d7ae5f-0274-4974-a046-088904db7312" satisfied condition "Succeeded or Failed"
Jan 30 09:10:49.219: INFO: Trying to get logs from node tce-worker2 pod pod-45d7ae5f-0274-4974-a046-088904db7312 container test-container: <nil>
STEP: delete the pod 01/30/23 09:10:49.223
Jan 30 09:10:49.243: INFO: Waiting for pod pod-45d7ae5f-0274-4974-a046-088904db7312 to disappear
Jan 30 09:10:49.245: INFO: Pod pod-45d7ae5f-0274-4974-a046-088904db7312 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:49.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8081" for this suite. 01/30/23 09:10:49.248
------------------------------
â€¢ [4.066 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:45.188
    Jan 30 09:10:45.188: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 09:10:45.188
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:45.199
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:45.202
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:167
    STEP: Creating a pod to test emptydir 0644 on node default medium 01/30/23 09:10:45.204
    Jan 30 09:10:45.212: INFO: Waiting up to 5m0s for pod "pod-45d7ae5f-0274-4974-a046-088904db7312" in namespace "emptydir-8081" to be "Succeeded or Failed"
    Jan 30 09:10:45.214: INFO: Pod "pod-45d7ae5f-0274-4974-a046-088904db7312": Phase="Pending", Reason="", readiness=false. Elapsed: 2.150243ms
    Jan 30 09:10:47.216: INFO: Pod "pod-45d7ae5f-0274-4974-a046-088904db7312": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004806422s
    Jan 30 09:10:49.217: INFO: Pod "pod-45d7ae5f-0274-4974-a046-088904db7312": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005456989s
    STEP: Saw pod success 01/30/23 09:10:49.217
    Jan 30 09:10:49.217: INFO: Pod "pod-45d7ae5f-0274-4974-a046-088904db7312" satisfied condition "Succeeded or Failed"
    Jan 30 09:10:49.219: INFO: Trying to get logs from node tce-worker2 pod pod-45d7ae5f-0274-4974-a046-088904db7312 container test-container: <nil>
    STEP: delete the pod 01/30/23 09:10:49.223
    Jan 30 09:10:49.243: INFO: Waiting for pod pod-45d7ae5f-0274-4974-a046-088904db7312 to disappear
    Jan 30 09:10:49.245: INFO: Pod pod-45d7ae5f-0274-4974-a046-088904db7312 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:49.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8081" for this suite. 01/30/23 09:10:49.248
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:49.254
Jan 30 09:10:49.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename runtimeclass 01/30/23 09:10:49.255
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:49.265
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:49.268
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
Jan 30 09:10:49.281: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-3427 to be scheduled
Jan 30 09:10:49.284: INFO: 1 pods are not scheduled: [runtimeclass-3427/test-runtimeclass-runtimeclass-3427-preconfigured-handler-9tg5m(2d0319be-abcc-43a2-990f-9429cbdc21d2)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:51.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-3427" for this suite. 01/30/23 09:10:51.306
------------------------------
â€¢ [2.062 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:49.254
    Jan 30 09:10:49.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename runtimeclass 01/30/23 09:10:49.255
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:49.265
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:49.268
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:129
    Jan 30 09:10:49.281: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-3427 to be scheduled
    Jan 30 09:10:49.284: INFO: 1 pods are not scheduled: [runtimeclass-3427/test-runtimeclass-runtimeclass-3427-preconfigured-handler-9tg5m(2d0319be-abcc-43a2-990f-9429cbdc21d2)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:51.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-3427" for this suite. 01/30/23 09:10:51.306
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:51.317
Jan 30 09:10:51.318: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:10:51.319
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:51.334
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:51.338
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
STEP: Creating configMap with name projected-configmap-test-volume-map-dd24c3b3-81fc-4729-8553-4e90552543f6 01/30/23 09:10:51.341
STEP: Creating a pod to test consume configMaps 01/30/23 09:10:51.346
Jan 30 09:10:51.353: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865" in namespace "projected-8515" to be "Succeeded or Failed"
Jan 30 09:10:51.356: INFO: Pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865": Phase="Pending", Reason="", readiness=false. Elapsed: 2.697717ms
Jan 30 09:10:53.358: INFO: Pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865": Phase="Running", Reason="", readiness=true. Elapsed: 2.005185967s
Jan 30 09:10:55.359: INFO: Pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005733847s
STEP: Saw pod success 01/30/23 09:10:55.359
Jan 30 09:10:55.359: INFO: Pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865" satisfied condition "Succeeded or Failed"
Jan 30 09:10:55.361: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:10:55.365
Jan 30 09:10:55.377: INFO: Waiting for pod pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865 to disappear
Jan 30 09:10:55.378: INFO: Pod pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:55.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8515" for this suite. 01/30/23 09:10:55.381
------------------------------
â€¢ [4.068 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:51.317
    Jan 30 09:10:51.318: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:10:51.319
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:51.334
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:51.338
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:99
    STEP: Creating configMap with name projected-configmap-test-volume-map-dd24c3b3-81fc-4729-8553-4e90552543f6 01/30/23 09:10:51.341
    STEP: Creating a pod to test consume configMaps 01/30/23 09:10:51.346
    Jan 30 09:10:51.353: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865" in namespace "projected-8515" to be "Succeeded or Failed"
    Jan 30 09:10:51.356: INFO: Pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865": Phase="Pending", Reason="", readiness=false. Elapsed: 2.697717ms
    Jan 30 09:10:53.358: INFO: Pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865": Phase="Running", Reason="", readiness=true. Elapsed: 2.005185967s
    Jan 30 09:10:55.359: INFO: Pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005733847s
    STEP: Saw pod success 01/30/23 09:10:55.359
    Jan 30 09:10:55.359: INFO: Pod "pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865" satisfied condition "Succeeded or Failed"
    Jan 30 09:10:55.361: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:10:55.365
    Jan 30 09:10:55.377: INFO: Waiting for pod pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865 to disappear
    Jan 30 09:10:55.378: INFO: Pod pod-projected-configmaps-92a20966-91e3-4c33-863c-c99e6ad4c865 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:55.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8515" for this suite. 01/30/23 09:10:55.381
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:55.39
Jan 30 09:10:55.390: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 09:10:55.391
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:55.403
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:55.407
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
STEP: Creating projection with secret that has name secret-emptykey-test-0abb5aa1-fb2a-4e94-9af8-11fe57cccdfd 01/30/23 09:10:55.41
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:55.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-5830" for this suite. 01/30/23 09:10:55.416
------------------------------
â€¢ [0.032 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:55.39
    Jan 30 09:10:55.390: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 09:10:55.391
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:55.403
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:55.407
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create secret due to empty secret key [Conformance]
      test/e2e/common/node/secrets.go:140
    STEP: Creating projection with secret that has name secret-emptykey-test-0abb5aa1-fb2a-4e94-9af8-11fe57cccdfd 01/30/23 09:10:55.41
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:55.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-5830" for this suite. 01/30/23 09:10:55.416
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:55.422
Jan 30 09:10:55.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replication-controller 01/30/23 09:10:55.423
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:55.434
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:55.439
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
Jan 30 09:10:55.443: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 01/30/23 09:10:56.461
STEP: Checking rc "condition-test" has the desired failure condition set 01/30/23 09:10:56.466
STEP: Scaling down rc "condition-test" to satisfy pod quota 01/30/23 09:10:57.471
Jan 30 09:10:57.479: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set 01/30/23 09:10:57.479
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 30 09:10:58.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-39" for this suite. 01/30/23 09:10:58.487
------------------------------
â€¢ [3.071 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:55.422
    Jan 30 09:10:55.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replication-controller 01/30/23 09:10:55.423
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:55.434
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:55.439
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should surface a failure condition on a common issue like exceeded quota [Conformance]
      test/e2e/apps/rc.go:83
    Jan 30 09:10:55.443: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
    STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 01/30/23 09:10:56.461
    STEP: Checking rc "condition-test" has the desired failure condition set 01/30/23 09:10:56.466
    STEP: Scaling down rc "condition-test" to satisfy pod quota 01/30/23 09:10:57.471
    Jan 30 09:10:57.479: INFO: Updating replication controller "condition-test"
    STEP: Checking rc "condition-test" has no failure condition set 01/30/23 09:10:57.479
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:10:58.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-39" for this suite. 01/30/23 09:10:58.487
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
[BeforeEach] [sig-network] Service endpoints latency
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:10:58.493
Jan 30 09:10:58.493: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename svc-latency 01/30/23 09:10:58.494
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:58.508
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:58.51
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:31
[It] should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
Jan 30 09:10:58.513: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: creating replication controller svc-latency-rc in namespace svc-latency-5570 01/30/23 09:10:58.515
I0130 09:10:58.520349      24 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5570, replica count: 1
I0130 09:10:59.572446      24 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 09:10:59.715: INFO: Created: latency-svc-vlmdv
Jan 30 09:10:59.726: INFO: Got endpoints: latency-svc-vlmdv [53.616156ms]
Jan 30 09:10:59.745: INFO: Created: latency-svc-d6kdn
Jan 30 09:10:59.749: INFO: Got endpoints: latency-svc-d6kdn [21.515231ms]
Jan 30 09:10:59.758: INFO: Created: latency-svc-sjzj7
Jan 30 09:10:59.768: INFO: Got endpoints: latency-svc-sjzj7 [41.395213ms]
Jan 30 09:10:59.770: INFO: Created: latency-svc-2cn2v
Jan 30 09:10:59.777: INFO: Got endpoints: latency-svc-2cn2v [49.342084ms]
Jan 30 09:10:59.783: INFO: Created: latency-svc-87qg8
Jan 30 09:10:59.814: INFO: Got endpoints: latency-svc-87qg8 [86.710424ms]
Jan 30 09:10:59.820: INFO: Created: latency-svc-v7z6b
Jan 30 09:10:59.831: INFO: Created: latency-svc-b96hc
Jan 30 09:10:59.841: INFO: Got endpoints: latency-svc-v7z6b [113.628857ms]
Jan 30 09:10:59.851: INFO: Got endpoints: latency-svc-b96hc [123.357811ms]
Jan 30 09:10:59.856: INFO: Created: latency-svc-tlqkt
Jan 30 09:10:59.878: INFO: Got endpoints: latency-svc-tlqkt [150.607477ms]
Jan 30 09:10:59.885: INFO: Created: latency-svc-94jmn
Jan 30 09:10:59.894: INFO: Got endpoints: latency-svc-94jmn [166.73296ms]
Jan 30 09:10:59.899: INFO: Created: latency-svc-c2vq8
Jan 30 09:10:59.907: INFO: Got endpoints: latency-svc-c2vq8 [179.792479ms]
Jan 30 09:10:59.911: INFO: Created: latency-svc-pstqz
Jan 30 09:10:59.919: INFO: Got endpoints: latency-svc-pstqz [192.39154ms]
Jan 30 09:10:59.997: INFO: Created: latency-svc-46bn9
Jan 30 09:11:00.000: INFO: Created: latency-svc-42nnr
Jan 30 09:11:00.001: INFO: Created: latency-svc-79942
Jan 30 09:11:00.003: INFO: Created: latency-svc-s9tcs
Jan 30 09:11:00.004: INFO: Created: latency-svc-w76nz
Jan 30 09:11:00.004: INFO: Created: latency-svc-d2t42
Jan 30 09:11:00.004: INFO: Created: latency-svc-qcfnj
Jan 30 09:11:00.004: INFO: Created: latency-svc-rst8j
Jan 30 09:11:00.004: INFO: Created: latency-svc-hm87x
Jan 30 09:11:00.004: INFO: Created: latency-svc-rff4l
Jan 30 09:11:00.004: INFO: Created: latency-svc-vgtwd
Jan 30 09:11:00.004: INFO: Created: latency-svc-lg2nv
Jan 30 09:11:00.003: INFO: Created: latency-svc-4l92q
Jan 30 09:11:00.004: INFO: Created: latency-svc-2vjw4
Jan 30 09:11:00.005: INFO: Created: latency-svc-v4dxt
Jan 30 09:11:00.011: INFO: Got endpoints: latency-svc-46bn9 [116.725015ms]
Jan 30 09:11:00.026: INFO: Got endpoints: latency-svc-79942 [249.176411ms]
Jan 30 09:11:00.027: INFO: Got endpoints: latency-svc-4l92q [299.070858ms]
Jan 30 09:11:00.033: INFO: Got endpoints: latency-svc-42nnr [113.76122ms]
Jan 30 09:11:00.034: INFO: Got endpoints: latency-svc-2vjw4 [126.894109ms]
Jan 30 09:11:00.034: INFO: Got endpoints: latency-svc-rff4l [305.964465ms]
Jan 30 09:11:00.041: INFO: Created: latency-svc-nf4mv
Jan 30 09:11:00.049: INFO: Got endpoints: latency-svc-v4dxt [170.535751ms]
Jan 30 09:11:00.049: INFO: Got endpoints: latency-svc-rst8j [321.610676ms]
Jan 30 09:11:00.049: INFO: Got endpoints: latency-svc-d2t42 [321.719622ms]
Jan 30 09:11:00.063: INFO: Got endpoints: latency-svc-lg2nv [221.440758ms]
Jan 30 09:11:00.063: INFO: Got endpoints: latency-svc-qcfnj [335.259075ms]
Jan 30 09:11:00.065: INFO: Created: latency-svc-lmpth
Jan 30 09:11:00.065: INFO: Got endpoints: latency-svc-w76nz [315.976429ms]
Jan 30 09:11:00.065: INFO: Got endpoints: latency-svc-s9tcs [296.479144ms]
Jan 30 09:11:00.065: INFO: Got endpoints: latency-svc-hm87x [251.129804ms]
Jan 30 09:11:00.080: INFO: Got endpoints: latency-svc-vgtwd [229.01581ms]
Jan 30 09:11:00.080: INFO: Got endpoints: latency-svc-nf4mv [68.667158ms]
Jan 30 09:11:00.080: INFO: Got endpoints: latency-svc-lmpth [53.782729ms]
Jan 30 09:11:00.091: INFO: Created: latency-svc-v4kq2
Jan 30 09:11:00.101: INFO: Created: latency-svc-zj55m
Jan 30 09:11:00.105: INFO: Got endpoints: latency-svc-v4kq2 [78.582347ms]
Jan 30 09:11:00.110: INFO: Got endpoints: latency-svc-zj55m [75.826846ms]
Jan 30 09:11:00.114: INFO: Created: latency-svc-7q5fg
Jan 30 09:11:00.121: INFO: Got endpoints: latency-svc-7q5fg [86.914555ms]
Jan 30 09:11:00.125: INFO: Created: latency-svc-2vbrd
Jan 30 09:11:00.135: INFO: Got endpoints: latency-svc-2vbrd [99.960846ms]
Jan 30 09:11:00.139: INFO: Created: latency-svc-bn8rd
Jan 30 09:11:00.148: INFO: Got endpoints: latency-svc-bn8rd [98.139045ms]
Jan 30 09:11:00.151: INFO: Created: latency-svc-crvk8
Jan 30 09:11:00.160: INFO: Got endpoints: latency-svc-crvk8 [110.579085ms]
Jan 30 09:11:00.165: INFO: Created: latency-svc-9gmrh
Jan 30 09:11:00.182: INFO: Got endpoints: latency-svc-9gmrh [132.237046ms]
Jan 30 09:11:00.184: INFO: Created: latency-svc-ftjbj
Jan 30 09:11:00.202: INFO: Got endpoints: latency-svc-ftjbj [138.844326ms]
Jan 30 09:11:00.209: INFO: Created: latency-svc-8gn4d
Jan 30 09:11:00.216: INFO: Got endpoints: latency-svc-8gn4d [153.699647ms]
Jan 30 09:11:00.224: INFO: Created: latency-svc-xfhm7
Jan 30 09:11:00.231: INFO: Got endpoints: latency-svc-xfhm7 [165.85605ms]
Jan 30 09:11:00.236: INFO: Created: latency-svc-ksw9s
Jan 30 09:11:00.242: INFO: Got endpoints: latency-svc-ksw9s [176.818147ms]
Jan 30 09:11:00.247: INFO: Created: latency-svc-xksr5
Jan 30 09:11:00.252: INFO: Got endpoints: latency-svc-xksr5 [186.431805ms]
Jan 30 09:11:00.255: INFO: Created: latency-svc-jj9mq
Jan 30 09:11:00.264: INFO: Created: latency-svc-6v5tt
Jan 30 09:11:00.271: INFO: Got endpoints: latency-svc-jj9mq [191.410022ms]
Jan 30 09:11:00.276: INFO: Created: latency-svc-tcc7f
Jan 30 09:11:00.286: INFO: Created: latency-svc-8nx8c
Jan 30 09:11:00.295: INFO: Created: latency-svc-ltsbx
Jan 30 09:11:00.308: INFO: Created: latency-svc-79qnv
Jan 30 09:11:00.321: INFO: Created: latency-svc-zbfwq
Jan 30 09:11:00.326: INFO: Got endpoints: latency-svc-6v5tt [245.768058ms]
Jan 30 09:11:00.333: INFO: Created: latency-svc-h72tx
Jan 30 09:11:00.341: INFO: Created: latency-svc-xkkr5
Jan 30 09:11:00.350: INFO: Created: latency-svc-6zghv
Jan 30 09:11:00.359: INFO: Created: latency-svc-qdlg4
Jan 30 09:11:00.366: INFO: Created: latency-svc-r52k9
Jan 30 09:11:00.374: INFO: Created: latency-svc-58dvr
Jan 30 09:11:00.377: INFO: Got endpoints: latency-svc-tcc7f [296.817115ms]
Jan 30 09:11:00.382: INFO: Created: latency-svc-9cgxl
Jan 30 09:11:00.399: INFO: Created: latency-svc-l7fxm
Jan 30 09:11:00.413: INFO: Created: latency-svc-qt2nh
Jan 30 09:11:00.422: INFO: Created: latency-svc-rj7t7
Jan 30 09:11:00.434: INFO: Got endpoints: latency-svc-8nx8c [328.845927ms]
Jan 30 09:11:00.442: INFO: Created: latency-svc-bflsf
Jan 30 09:11:00.454: INFO: Created: latency-svc-sbg27
Jan 30 09:11:00.473: INFO: Got endpoints: latency-svc-ltsbx [363.215806ms]
Jan 30 09:11:00.489: INFO: Created: latency-svc-flb2l
Jan 30 09:11:00.526: INFO: Got endpoints: latency-svc-79qnv [404.895938ms]
Jan 30 09:11:00.544: INFO: Created: latency-svc-r5ffr
Jan 30 09:11:00.573: INFO: Got endpoints: latency-svc-zbfwq [438.009733ms]
Jan 30 09:11:00.587: INFO: Created: latency-svc-5bdwh
Jan 30 09:11:00.624: INFO: Got endpoints: latency-svc-h72tx [475.989205ms]
Jan 30 09:11:00.636: INFO: Created: latency-svc-j9hhz
Jan 30 09:11:00.671: INFO: Got endpoints: latency-svc-xkkr5 [511.341897ms]
Jan 30 09:11:00.681: INFO: Created: latency-svc-kslns
Jan 30 09:11:00.724: INFO: Got endpoints: latency-svc-6zghv [542.334908ms]
Jan 30 09:11:00.746: INFO: Created: latency-svc-mvnvf
Jan 30 09:11:00.775: INFO: Got endpoints: latency-svc-qdlg4 [573.453997ms]
Jan 30 09:11:00.801: INFO: Created: latency-svc-dfwjt
Jan 30 09:11:00.831: INFO: Got endpoints: latency-svc-r52k9 [612.980544ms]
Jan 30 09:11:00.843: INFO: Created: latency-svc-7n7zc
Jan 30 09:11:00.873: INFO: Got endpoints: latency-svc-58dvr [642.33116ms]
Jan 30 09:11:00.890: INFO: Created: latency-svc-dnjmd
Jan 30 09:11:00.921: INFO: Got endpoints: latency-svc-9cgxl [679.426299ms]
Jan 30 09:11:00.937: INFO: Created: latency-svc-dm66t
Jan 30 09:11:00.974: INFO: Got endpoints: latency-svc-l7fxm [722.514037ms]
Jan 30 09:11:00.988: INFO: Created: latency-svc-4d6mm
Jan 30 09:11:01.022: INFO: Got endpoints: latency-svc-qt2nh [750.181465ms]
Jan 30 09:11:01.035: INFO: Created: latency-svc-h6lkq
Jan 30 09:11:01.073: INFO: Got endpoints: latency-svc-rj7t7 [747.035031ms]
Jan 30 09:11:01.087: INFO: Created: latency-svc-7xnkj
Jan 30 09:11:01.123: INFO: Got endpoints: latency-svc-bflsf [745.831066ms]
Jan 30 09:11:01.133: INFO: Created: latency-svc-vrhp7
Jan 30 09:11:01.172: INFO: Got endpoints: latency-svc-sbg27 [737.201186ms]
Jan 30 09:11:01.185: INFO: Created: latency-svc-msf8j
Jan 30 09:11:01.222: INFO: Got endpoints: latency-svc-flb2l [749.072427ms]
Jan 30 09:11:01.234: INFO: Created: latency-svc-pc99s
Jan 30 09:11:01.272: INFO: Got endpoints: latency-svc-r5ffr [745.933925ms]
Jan 30 09:11:01.284: INFO: Created: latency-svc-stp55
Jan 30 09:11:01.322: INFO: Got endpoints: latency-svc-5bdwh [748.795884ms]
Jan 30 09:11:01.335: INFO: Created: latency-svc-8mfgf
Jan 30 09:11:01.371: INFO: Got endpoints: latency-svc-j9hhz [747.517332ms]
Jan 30 09:11:01.383: INFO: Created: latency-svc-zztxf
Jan 30 09:11:01.421: INFO: Got endpoints: latency-svc-kslns [750.125871ms]
Jan 30 09:11:01.433: INFO: Created: latency-svc-hf42h
Jan 30 09:11:01.472: INFO: Got endpoints: latency-svc-mvnvf [747.704199ms]
Jan 30 09:11:01.482: INFO: Created: latency-svc-tjzzz
Jan 30 09:11:01.523: INFO: Got endpoints: latency-svc-dfwjt [747.376111ms]
Jan 30 09:11:01.533: INFO: Created: latency-svc-z57rj
Jan 30 09:11:01.572: INFO: Got endpoints: latency-svc-7n7zc [740.770124ms]
Jan 30 09:11:01.582: INFO: Created: latency-svc-vn8xf
Jan 30 09:11:01.627: INFO: Got endpoints: latency-svc-dnjmd [754.348393ms]
Jan 30 09:11:01.650: INFO: Created: latency-svc-5fswn
Jan 30 09:11:01.672: INFO: Got endpoints: latency-svc-dm66t [751.078803ms]
Jan 30 09:11:01.683: INFO: Created: latency-svc-rx62q
Jan 30 09:11:01.723: INFO: Got endpoints: latency-svc-4d6mm [748.269592ms]
Jan 30 09:11:01.738: INFO: Created: latency-svc-5rxdz
Jan 30 09:11:01.789: INFO: Got endpoints: latency-svc-h6lkq [767.672946ms]
Jan 30 09:11:01.799: INFO: Created: latency-svc-lcgjw
Jan 30 09:11:01.821: INFO: Got endpoints: latency-svc-7xnkj [748.060378ms]
Jan 30 09:11:01.832: INFO: Created: latency-svc-rxv9x
Jan 30 09:11:01.872: INFO: Got endpoints: latency-svc-vrhp7 [749.696178ms]
Jan 30 09:11:01.885: INFO: Created: latency-svc-j4kgd
Jan 30 09:11:01.921: INFO: Got endpoints: latency-svc-msf8j [749.329368ms]
Jan 30 09:11:01.934: INFO: Created: latency-svc-j64kb
Jan 30 09:11:01.971: INFO: Got endpoints: latency-svc-pc99s [748.952381ms]
Jan 30 09:11:01.984: INFO: Created: latency-svc-2jj6q
Jan 30 09:11:02.025: INFO: Got endpoints: latency-svc-stp55 [752.694612ms]
Jan 30 09:11:02.035: INFO: Created: latency-svc-j4kjn
Jan 30 09:11:02.073: INFO: Got endpoints: latency-svc-8mfgf [750.69965ms]
Jan 30 09:11:02.085: INFO: Created: latency-svc-2h6wv
Jan 30 09:11:02.123: INFO: Got endpoints: latency-svc-zztxf [751.929352ms]
Jan 30 09:11:02.136: INFO: Created: latency-svc-kmg5p
Jan 30 09:11:02.172: INFO: Got endpoints: latency-svc-hf42h [750.365501ms]
Jan 30 09:11:02.186: INFO: Created: latency-svc-s9zwl
Jan 30 09:11:02.221: INFO: Got endpoints: latency-svc-tjzzz [749.611597ms]
Jan 30 09:11:02.233: INFO: Created: latency-svc-fk2h6
Jan 30 09:11:02.274: INFO: Got endpoints: latency-svc-z57rj [750.873506ms]
Jan 30 09:11:02.285: INFO: Created: latency-svc-prsf9
Jan 30 09:11:02.323: INFO: Got endpoints: latency-svc-vn8xf [751.297308ms]
Jan 30 09:11:02.335: INFO: Created: latency-svc-bf52t
Jan 30 09:11:02.371: INFO: Got endpoints: latency-svc-5fswn [743.321081ms]
Jan 30 09:11:02.382: INFO: Created: latency-svc-8qbwr
Jan 30 09:11:02.421: INFO: Got endpoints: latency-svc-rx62q [748.166924ms]
Jan 30 09:11:02.430: INFO: Created: latency-svc-46mj7
Jan 30 09:11:02.473: INFO: Got endpoints: latency-svc-5rxdz [750.248146ms]
Jan 30 09:11:02.481: INFO: Created: latency-svc-bfglr
Jan 30 09:11:02.522: INFO: Got endpoints: latency-svc-lcgjw [732.5743ms]
Jan 30 09:11:02.530: INFO: Created: latency-svc-qk4jm
Jan 30 09:11:02.570: INFO: Got endpoints: latency-svc-rxv9x [749.253674ms]
Jan 30 09:11:02.581: INFO: Created: latency-svc-5zwb2
Jan 30 09:11:02.621: INFO: Got endpoints: latency-svc-j4kgd [748.557622ms]
Jan 30 09:11:02.630: INFO: Created: latency-svc-sv5xt
Jan 30 09:11:02.673: INFO: Got endpoints: latency-svc-j64kb [751.223681ms]
Jan 30 09:11:02.685: INFO: Created: latency-svc-bmb7x
Jan 30 09:11:02.726: INFO: Got endpoints: latency-svc-2jj6q [754.828ms]
Jan 30 09:11:02.740: INFO: Created: latency-svc-vr9xp
Jan 30 09:11:02.776: INFO: Got endpoints: latency-svc-j4kjn [751.258289ms]
Jan 30 09:11:02.792: INFO: Created: latency-svc-87r7b
Jan 30 09:11:02.821: INFO: Got endpoints: latency-svc-2h6wv [748.166704ms]
Jan 30 09:11:02.832: INFO: Created: latency-svc-x77c4
Jan 30 09:11:02.874: INFO: Got endpoints: latency-svc-kmg5p [751.227485ms]
Jan 30 09:11:02.884: INFO: Created: latency-svc-v7ns7
Jan 30 09:11:02.921: INFO: Got endpoints: latency-svc-s9zwl [748.603579ms]
Jan 30 09:11:02.932: INFO: Created: latency-svc-s56nl
Jan 30 09:11:02.971: INFO: Got endpoints: latency-svc-fk2h6 [749.095264ms]
Jan 30 09:11:02.979: INFO: Created: latency-svc-2rddm
Jan 30 09:11:03.021: INFO: Got endpoints: latency-svc-prsf9 [746.890829ms]
Jan 30 09:11:03.031: INFO: Created: latency-svc-mdc8k
Jan 30 09:11:03.071: INFO: Got endpoints: latency-svc-bf52t [747.857987ms]
Jan 30 09:11:03.080: INFO: Created: latency-svc-s8hwp
Jan 30 09:11:03.122: INFO: Got endpoints: latency-svc-8qbwr [750.557898ms]
Jan 30 09:11:03.131: INFO: Created: latency-svc-dcxqf
Jan 30 09:11:03.175: INFO: Got endpoints: latency-svc-46mj7 [754.030954ms]
Jan 30 09:11:03.188: INFO: Created: latency-svc-7dt6m
Jan 30 09:11:03.222: INFO: Got endpoints: latency-svc-bfglr [748.538592ms]
Jan 30 09:11:03.230: INFO: Created: latency-svc-8ng4s
Jan 30 09:11:03.271: INFO: Got endpoints: latency-svc-qk4jm [748.499817ms]
Jan 30 09:11:03.281: INFO: Created: latency-svc-qqrq5
Jan 30 09:11:03.322: INFO: Got endpoints: latency-svc-5zwb2 [751.797354ms]
Jan 30 09:11:03.332: INFO: Created: latency-svc-72vl2
Jan 30 09:11:03.371: INFO: Got endpoints: latency-svc-sv5xt [749.943746ms]
Jan 30 09:11:03.381: INFO: Created: latency-svc-z5zks
Jan 30 09:11:03.425: INFO: Got endpoints: latency-svc-bmb7x [751.740501ms]
Jan 30 09:11:03.433: INFO: Created: latency-svc-c6dcg
Jan 30 09:11:03.470: INFO: Got endpoints: latency-svc-vr9xp [743.652778ms]
Jan 30 09:11:03.482: INFO: Created: latency-svc-tt5kn
Jan 30 09:11:03.521: INFO: Got endpoints: latency-svc-87r7b [744.630049ms]
Jan 30 09:11:03.537: INFO: Created: latency-svc-bw8zp
Jan 30 09:11:03.572: INFO: Got endpoints: latency-svc-x77c4 [750.99692ms]
Jan 30 09:11:03.587: INFO: Created: latency-svc-99nx8
Jan 30 09:11:03.623: INFO: Got endpoints: latency-svc-v7ns7 [748.107362ms]
Jan 30 09:11:03.638: INFO: Created: latency-svc-2j2d9
Jan 30 09:11:03.674: INFO: Got endpoints: latency-svc-s56nl [753.325813ms]
Jan 30 09:11:03.685: INFO: Created: latency-svc-wb4wr
Jan 30 09:11:03.754: INFO: Got endpoints: latency-svc-2rddm [783.75823ms]
Jan 30 09:11:03.782: INFO: Got endpoints: latency-svc-mdc8k [761.670157ms]
Jan 30 09:11:03.793: INFO: Created: latency-svc-qfgk4
Jan 30 09:11:03.816: INFO: Created: latency-svc-j9p58
Jan 30 09:11:03.827: INFO: Got endpoints: latency-svc-s8hwp [755.400641ms]
Jan 30 09:11:03.844: INFO: Created: latency-svc-t8nm9
Jan 30 09:11:03.873: INFO: Got endpoints: latency-svc-dcxqf [751.506487ms]
Jan 30 09:11:03.898: INFO: Created: latency-svc-86m4n
Jan 30 09:11:03.921: INFO: Got endpoints: latency-svc-7dt6m [746.266579ms]
Jan 30 09:11:03.932: INFO: Created: latency-svc-9jmqt
Jan 30 09:11:03.971: INFO: Got endpoints: latency-svc-8ng4s [749.585235ms]
Jan 30 09:11:03.983: INFO: Created: latency-svc-4pswl
Jan 30 09:11:04.021: INFO: Got endpoints: latency-svc-qqrq5 [750.366897ms]
Jan 30 09:11:04.031: INFO: Created: latency-svc-rzrrs
Jan 30 09:11:04.072: INFO: Got endpoints: latency-svc-72vl2 [750.076926ms]
Jan 30 09:11:04.082: INFO: Created: latency-svc-x6blb
Jan 30 09:11:04.121: INFO: Got endpoints: latency-svc-z5zks [750.218798ms]
Jan 30 09:11:04.133: INFO: Created: latency-svc-mqtnb
Jan 30 09:11:04.172: INFO: Got endpoints: latency-svc-c6dcg [747.064427ms]
Jan 30 09:11:04.186: INFO: Created: latency-svc-rcp6v
Jan 30 09:11:04.221: INFO: Got endpoints: latency-svc-tt5kn [750.500941ms]
Jan 30 09:11:04.233: INFO: Created: latency-svc-rxnls
Jan 30 09:11:04.272: INFO: Got endpoints: latency-svc-bw8zp [750.413933ms]
Jan 30 09:11:04.282: INFO: Created: latency-svc-p4lrr
Jan 30 09:11:04.325: INFO: Got endpoints: latency-svc-99nx8 [752.315359ms]
Jan 30 09:11:04.338: INFO: Created: latency-svc-l46mg
Jan 30 09:11:04.373: INFO: Got endpoints: latency-svc-2j2d9 [750.633517ms]
Jan 30 09:11:04.387: INFO: Created: latency-svc-8c577
Jan 30 09:11:04.421: INFO: Got endpoints: latency-svc-wb4wr [746.654444ms]
Jan 30 09:11:04.430: INFO: Created: latency-svc-snfbd
Jan 30 09:11:04.491: INFO: Got endpoints: latency-svc-qfgk4 [736.832986ms]
Jan 30 09:11:04.504: INFO: Created: latency-svc-9249j
Jan 30 09:11:04.521: INFO: Got endpoints: latency-svc-j9p58 [738.501499ms]
Jan 30 09:11:04.530: INFO: Created: latency-svc-thtt9
Jan 30 09:11:04.573: INFO: Got endpoints: latency-svc-t8nm9 [745.867861ms]
Jan 30 09:11:04.582: INFO: Created: latency-svc-pnft2
Jan 30 09:11:04.624: INFO: Got endpoints: latency-svc-86m4n [750.62067ms]
Jan 30 09:11:04.632: INFO: Created: latency-svc-pjls4
Jan 30 09:11:04.671: INFO: Got endpoints: latency-svc-9jmqt [750.266563ms]
Jan 30 09:11:04.681: INFO: Created: latency-svc-77gtn
Jan 30 09:11:04.721: INFO: Got endpoints: latency-svc-4pswl [750.148937ms]
Jan 30 09:11:04.735: INFO: Created: latency-svc-4lzv6
Jan 30 09:11:04.777: INFO: Got endpoints: latency-svc-rzrrs [755.482426ms]
Jan 30 09:11:04.790: INFO: Created: latency-svc-jj89k
Jan 30 09:11:04.821: INFO: Got endpoints: latency-svc-x6blb [748.686557ms]
Jan 30 09:11:04.840: INFO: Created: latency-svc-t8x7k
Jan 30 09:11:04.873: INFO: Got endpoints: latency-svc-mqtnb [751.991839ms]
Jan 30 09:11:04.886: INFO: Created: latency-svc-lcd2f
Jan 30 09:11:04.922: INFO: Got endpoints: latency-svc-rcp6v [749.702037ms]
Jan 30 09:11:04.935: INFO: Created: latency-svc-8ccrd
Jan 30 09:11:04.971: INFO: Got endpoints: latency-svc-rxnls [750.117924ms]
Jan 30 09:11:04.981: INFO: Created: latency-svc-pch4b
Jan 30 09:11:05.021: INFO: Got endpoints: latency-svc-p4lrr [748.930347ms]
Jan 30 09:11:05.032: INFO: Created: latency-svc-sqcd2
Jan 30 09:11:05.072: INFO: Got endpoints: latency-svc-l46mg [747.587726ms]
Jan 30 09:11:05.081: INFO: Created: latency-svc-zpzxc
Jan 30 09:11:05.122: INFO: Got endpoints: latency-svc-8c577 [749.09864ms]
Jan 30 09:11:05.135: INFO: Created: latency-svc-nwr9m
Jan 30 09:11:05.173: INFO: Got endpoints: latency-svc-snfbd [751.678198ms]
Jan 30 09:11:05.182: INFO: Created: latency-svc-94vj6
Jan 30 09:11:05.224: INFO: Got endpoints: latency-svc-9249j [732.241261ms]
Jan 30 09:11:05.232: INFO: Created: latency-svc-ft49d
Jan 30 09:11:05.272: INFO: Got endpoints: latency-svc-thtt9 [750.545388ms]
Jan 30 09:11:05.279: INFO: Created: latency-svc-cztwg
Jan 30 09:11:05.321: INFO: Got endpoints: latency-svc-pnft2 [748.630699ms]
Jan 30 09:11:05.330: INFO: Created: latency-svc-b2brs
Jan 30 09:11:05.371: INFO: Got endpoints: latency-svc-pjls4 [746.914213ms]
Jan 30 09:11:05.381: INFO: Created: latency-svc-wqpmc
Jan 30 09:11:05.423: INFO: Got endpoints: latency-svc-77gtn [751.680341ms]
Jan 30 09:11:05.433: INFO: Created: latency-svc-6srgj
Jan 30 09:11:05.472: INFO: Got endpoints: latency-svc-4lzv6 [750.353565ms]
Jan 30 09:11:05.481: INFO: Created: latency-svc-7nvqz
Jan 30 09:11:05.521: INFO: Got endpoints: latency-svc-jj89k [743.65068ms]
Jan 30 09:11:05.531: INFO: Created: latency-svc-kq597
Jan 30 09:11:05.571: INFO: Got endpoints: latency-svc-t8x7k [749.564747ms]
Jan 30 09:11:05.579: INFO: Created: latency-svc-frln6
Jan 30 09:11:05.622: INFO: Got endpoints: latency-svc-lcd2f [748.441839ms]
Jan 30 09:11:05.635: INFO: Created: latency-svc-q2sjl
Jan 30 09:11:05.672: INFO: Got endpoints: latency-svc-8ccrd [749.952484ms]
Jan 30 09:11:05.681: INFO: Created: latency-svc-7ndqz
Jan 30 09:11:05.725: INFO: Got endpoints: latency-svc-pch4b [753.708445ms]
Jan 30 09:11:05.740: INFO: Created: latency-svc-ld6j5
Jan 30 09:11:05.774: INFO: Got endpoints: latency-svc-sqcd2 [753.348159ms]
Jan 30 09:11:05.787: INFO: Created: latency-svc-5q2k7
Jan 30 09:11:05.821: INFO: Got endpoints: latency-svc-zpzxc [748.203345ms]
Jan 30 09:11:05.832: INFO: Created: latency-svc-b7sw8
Jan 30 09:11:05.873: INFO: Got endpoints: latency-svc-nwr9m [750.072552ms]
Jan 30 09:11:05.886: INFO: Created: latency-svc-jvqsn
Jan 30 09:11:05.922: INFO: Got endpoints: latency-svc-94vj6 [749.5168ms]
Jan 30 09:11:05.933: INFO: Created: latency-svc-776wk
Jan 30 09:11:05.972: INFO: Got endpoints: latency-svc-ft49d [748.57508ms]
Jan 30 09:11:05.982: INFO: Created: latency-svc-hmjt5
Jan 30 09:11:06.022: INFO: Got endpoints: latency-svc-cztwg [749.904657ms]
Jan 30 09:11:06.032: INFO: Created: latency-svc-dqvbs
Jan 30 09:11:06.073: INFO: Got endpoints: latency-svc-b2brs [751.582093ms]
Jan 30 09:11:06.083: INFO: Created: latency-svc-s6bp9
Jan 30 09:11:06.122: INFO: Got endpoints: latency-svc-wqpmc [750.779313ms]
Jan 30 09:11:06.131: INFO: Created: latency-svc-fwjd7
Jan 30 09:11:06.173: INFO: Got endpoints: latency-svc-6srgj [749.679329ms]
Jan 30 09:11:06.182: INFO: Created: latency-svc-r94tx
Jan 30 09:11:06.221: INFO: Got endpoints: latency-svc-7nvqz [749.144927ms]
Jan 30 09:11:06.231: INFO: Created: latency-svc-sx2jq
Jan 30 09:11:06.273: INFO: Got endpoints: latency-svc-kq597 [752.520421ms]
Jan 30 09:11:06.286: INFO: Created: latency-svc-gkqfg
Jan 30 09:11:06.321: INFO: Got endpoints: latency-svc-frln6 [749.885317ms]
Jan 30 09:11:06.331: INFO: Created: latency-svc-9zjcd
Jan 30 09:11:06.373: INFO: Got endpoints: latency-svc-q2sjl [750.998641ms]
Jan 30 09:11:06.382: INFO: Created: latency-svc-v7dnf
Jan 30 09:11:06.433: INFO: Got endpoints: latency-svc-7ndqz [760.770318ms]
Jan 30 09:11:06.443: INFO: Created: latency-svc-g8nxn
Jan 30 09:11:06.471: INFO: Got endpoints: latency-svc-ld6j5 [745.513264ms]
Jan 30 09:11:06.481: INFO: Created: latency-svc-69vcs
Jan 30 09:11:06.521: INFO: Got endpoints: latency-svc-5q2k7 [746.59971ms]
Jan 30 09:11:06.529: INFO: Created: latency-svc-vn66p
Jan 30 09:11:06.573: INFO: Got endpoints: latency-svc-b7sw8 [752.647548ms]
Jan 30 09:11:06.582: INFO: Created: latency-svc-2bx5b
Jan 30 09:11:06.622: INFO: Got endpoints: latency-svc-jvqsn [749.336833ms]
Jan 30 09:11:06.632: INFO: Created: latency-svc-sj6c2
Jan 30 09:11:06.679: INFO: Got endpoints: latency-svc-776wk [756.479339ms]
Jan 30 09:11:06.689: INFO: Created: latency-svc-fgmbn
Jan 30 09:11:06.721: INFO: Got endpoints: latency-svc-hmjt5 [748.322833ms]
Jan 30 09:11:06.735: INFO: Created: latency-svc-5lm5w
Jan 30 09:11:06.773: INFO: Got endpoints: latency-svc-dqvbs [751.491628ms]
Jan 30 09:11:06.791: INFO: Created: latency-svc-p75z5
Jan 30 09:11:06.824: INFO: Got endpoints: latency-svc-s6bp9 [750.807025ms]
Jan 30 09:11:06.833: INFO: Created: latency-svc-gnpdv
Jan 30 09:11:06.872: INFO: Got endpoints: latency-svc-fwjd7 [749.976346ms]
Jan 30 09:11:06.880: INFO: Created: latency-svc-q8xbw
Jan 30 09:11:06.920: INFO: Got endpoints: latency-svc-r94tx [747.46636ms]
Jan 30 09:11:06.933: INFO: Created: latency-svc-qhk4c
Jan 30 09:11:06.971: INFO: Got endpoints: latency-svc-sx2jq [749.968704ms]
Jan 30 09:11:06.980: INFO: Created: latency-svc-m7fcb
Jan 30 09:11:07.022: INFO: Got endpoints: latency-svc-gkqfg [749.154355ms]
Jan 30 09:11:07.031: INFO: Created: latency-svc-l8tpx
Jan 30 09:11:07.071: INFO: Got endpoints: latency-svc-9zjcd [749.787909ms]
Jan 30 09:11:07.083: INFO: Created: latency-svc-4nprz
Jan 30 09:11:07.121: INFO: Got endpoints: latency-svc-v7dnf [747.545973ms]
Jan 30 09:11:07.132: INFO: Created: latency-svc-ktn2z
Jan 30 09:11:07.172: INFO: Got endpoints: latency-svc-g8nxn [739.382821ms]
Jan 30 09:11:07.183: INFO: Created: latency-svc-7mgjl
Jan 30 09:11:07.220: INFO: Got endpoints: latency-svc-69vcs [749.889261ms]
Jan 30 09:11:07.230: INFO: Created: latency-svc-nsgpc
Jan 30 09:11:07.274: INFO: Got endpoints: latency-svc-vn66p [753.650716ms]
Jan 30 09:11:07.283: INFO: Created: latency-svc-s988r
Jan 30 09:11:07.322: INFO: Got endpoints: latency-svc-2bx5b [748.42575ms]
Jan 30 09:11:07.332: INFO: Created: latency-svc-mgplx
Jan 30 09:11:07.371: INFO: Got endpoints: latency-svc-sj6c2 [748.767919ms]
Jan 30 09:11:07.379: INFO: Created: latency-svc-jz6d9
Jan 30 09:11:07.422: INFO: Got endpoints: latency-svc-fgmbn [743.350857ms]
Jan 30 09:11:07.431: INFO: Created: latency-svc-f2bqw
Jan 30 09:11:07.473: INFO: Got endpoints: latency-svc-5lm5w [752.823495ms]
Jan 30 09:11:07.481: INFO: Created: latency-svc-cfpw4
Jan 30 09:11:07.521: INFO: Got endpoints: latency-svc-p75z5 [747.14206ms]
Jan 30 09:11:07.535: INFO: Created: latency-svc-crspm
Jan 30 09:11:07.571: INFO: Got endpoints: latency-svc-gnpdv [747.682968ms]
Jan 30 09:11:07.621: INFO: Got endpoints: latency-svc-q8xbw [748.479308ms]
Jan 30 09:11:07.670: INFO: Got endpoints: latency-svc-qhk4c [748.962532ms]
Jan 30 09:11:07.722: INFO: Got endpoints: latency-svc-m7fcb [750.891455ms]
Jan 30 09:11:07.779: INFO: Got endpoints: latency-svc-l8tpx [756.129922ms]
Jan 30 09:11:07.823: INFO: Got endpoints: latency-svc-4nprz [752.026808ms]
Jan 30 09:11:07.872: INFO: Got endpoints: latency-svc-ktn2z [750.731126ms]
Jan 30 09:11:07.922: INFO: Got endpoints: latency-svc-7mgjl [750.009393ms]
Jan 30 09:11:07.971: INFO: Got endpoints: latency-svc-nsgpc [750.936633ms]
Jan 30 09:11:08.023: INFO: Got endpoints: latency-svc-s988r [748.575968ms]
Jan 30 09:11:08.070: INFO: Got endpoints: latency-svc-mgplx [748.323776ms]
Jan 30 09:11:08.122: INFO: Got endpoints: latency-svc-jz6d9 [751.439134ms]
Jan 30 09:11:08.171: INFO: Got endpoints: latency-svc-f2bqw [748.830056ms]
Jan 30 09:11:08.221: INFO: Got endpoints: latency-svc-cfpw4 [747.464028ms]
Jan 30 09:11:08.271: INFO: Got endpoints: latency-svc-crspm [750.034767ms]
Jan 30 09:11:08.271: INFO: Latencies: [21.515231ms 41.395213ms 49.342084ms 53.782729ms 68.667158ms 75.826846ms 78.582347ms 86.710424ms 86.914555ms 98.139045ms 99.960846ms 110.579085ms 113.628857ms 113.76122ms 116.725015ms 123.357811ms 126.894109ms 132.237046ms 138.844326ms 150.607477ms 153.699647ms 165.85605ms 166.73296ms 170.535751ms 176.818147ms 179.792479ms 186.431805ms 191.410022ms 192.39154ms 221.440758ms 229.01581ms 245.768058ms 249.176411ms 251.129804ms 296.479144ms 296.817115ms 299.070858ms 305.964465ms 315.976429ms 321.610676ms 321.719622ms 328.845927ms 335.259075ms 363.215806ms 404.895938ms 438.009733ms 475.989205ms 511.341897ms 542.334908ms 573.453997ms 612.980544ms 642.33116ms 679.426299ms 722.514037ms 732.241261ms 732.5743ms 736.832986ms 737.201186ms 738.501499ms 739.382821ms 740.770124ms 743.321081ms 743.350857ms 743.65068ms 743.652778ms 744.630049ms 745.513264ms 745.831066ms 745.867861ms 745.933925ms 746.266579ms 746.59971ms 746.654444ms 746.890829ms 746.914213ms 747.035031ms 747.064427ms 747.14206ms 747.376111ms 747.464028ms 747.46636ms 747.517332ms 747.545973ms 747.587726ms 747.682968ms 747.704199ms 747.857987ms 748.060378ms 748.107362ms 748.166704ms 748.166924ms 748.203345ms 748.269592ms 748.322833ms 748.323776ms 748.42575ms 748.441839ms 748.479308ms 748.499817ms 748.538592ms 748.557622ms 748.57508ms 748.575968ms 748.603579ms 748.630699ms 748.686557ms 748.767919ms 748.795884ms 748.830056ms 748.930347ms 748.952381ms 748.962532ms 749.072427ms 749.095264ms 749.09864ms 749.144927ms 749.154355ms 749.253674ms 749.329368ms 749.336833ms 749.5168ms 749.564747ms 749.585235ms 749.611597ms 749.679329ms 749.696178ms 749.702037ms 749.787909ms 749.885317ms 749.889261ms 749.904657ms 749.943746ms 749.952484ms 749.968704ms 749.976346ms 750.009393ms 750.034767ms 750.072552ms 750.076926ms 750.117924ms 750.125871ms 750.148937ms 750.181465ms 750.218798ms 750.248146ms 750.266563ms 750.353565ms 750.365501ms 750.366897ms 750.413933ms 750.500941ms 750.545388ms 750.557898ms 750.62067ms 750.633517ms 750.69965ms 750.731126ms 750.779313ms 750.807025ms 750.873506ms 750.891455ms 750.936633ms 750.99692ms 750.998641ms 751.078803ms 751.223681ms 751.227485ms 751.258289ms 751.297308ms 751.439134ms 751.491628ms 751.506487ms 751.582093ms 751.678198ms 751.680341ms 751.740501ms 751.797354ms 751.929352ms 751.991839ms 752.026808ms 752.315359ms 752.520421ms 752.647548ms 752.694612ms 752.823495ms 753.325813ms 753.348159ms 753.650716ms 753.708445ms 754.030954ms 754.348393ms 754.828ms 755.400641ms 755.482426ms 756.129922ms 756.479339ms 760.770318ms 761.670157ms 767.672946ms 783.75823ms]
Jan 30 09:11:08.271: INFO: 50 %ile: 748.557622ms
Jan 30 09:11:08.271: INFO: 90 %ile: 752.315359ms
Jan 30 09:11:08.271: INFO: 99 %ile: 767.672946ms
Jan 30 09:11:08.271: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/node/init/init.go:32
Jan 30 09:11:08.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  tear down framework | framework.go:193
STEP: Destroying namespace "svc-latency-5570" for this suite. 01/30/23 09:11:08.275
------------------------------
â€¢ [SLOW TEST] [9.787 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Service endpoints latency
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:10:58.493
    Jan 30 09:10:58.493: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename svc-latency 01/30/23 09:10:58.494
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:10:58.508
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:10:58.51
    [BeforeEach] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be very high  [Conformance]
      test/e2e/network/service_latency.go:59
    Jan 30 09:10:58.513: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: creating replication controller svc-latency-rc in namespace svc-latency-5570 01/30/23 09:10:58.515
    I0130 09:10:58.520349      24 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5570, replica count: 1
    I0130 09:10:59.572446      24 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 09:10:59.715: INFO: Created: latency-svc-vlmdv
    Jan 30 09:10:59.726: INFO: Got endpoints: latency-svc-vlmdv [53.616156ms]
    Jan 30 09:10:59.745: INFO: Created: latency-svc-d6kdn
    Jan 30 09:10:59.749: INFO: Got endpoints: latency-svc-d6kdn [21.515231ms]
    Jan 30 09:10:59.758: INFO: Created: latency-svc-sjzj7
    Jan 30 09:10:59.768: INFO: Got endpoints: latency-svc-sjzj7 [41.395213ms]
    Jan 30 09:10:59.770: INFO: Created: latency-svc-2cn2v
    Jan 30 09:10:59.777: INFO: Got endpoints: latency-svc-2cn2v [49.342084ms]
    Jan 30 09:10:59.783: INFO: Created: latency-svc-87qg8
    Jan 30 09:10:59.814: INFO: Got endpoints: latency-svc-87qg8 [86.710424ms]
    Jan 30 09:10:59.820: INFO: Created: latency-svc-v7z6b
    Jan 30 09:10:59.831: INFO: Created: latency-svc-b96hc
    Jan 30 09:10:59.841: INFO: Got endpoints: latency-svc-v7z6b [113.628857ms]
    Jan 30 09:10:59.851: INFO: Got endpoints: latency-svc-b96hc [123.357811ms]
    Jan 30 09:10:59.856: INFO: Created: latency-svc-tlqkt
    Jan 30 09:10:59.878: INFO: Got endpoints: latency-svc-tlqkt [150.607477ms]
    Jan 30 09:10:59.885: INFO: Created: latency-svc-94jmn
    Jan 30 09:10:59.894: INFO: Got endpoints: latency-svc-94jmn [166.73296ms]
    Jan 30 09:10:59.899: INFO: Created: latency-svc-c2vq8
    Jan 30 09:10:59.907: INFO: Got endpoints: latency-svc-c2vq8 [179.792479ms]
    Jan 30 09:10:59.911: INFO: Created: latency-svc-pstqz
    Jan 30 09:10:59.919: INFO: Got endpoints: latency-svc-pstqz [192.39154ms]
    Jan 30 09:10:59.997: INFO: Created: latency-svc-46bn9
    Jan 30 09:11:00.000: INFO: Created: latency-svc-42nnr
    Jan 30 09:11:00.001: INFO: Created: latency-svc-79942
    Jan 30 09:11:00.003: INFO: Created: latency-svc-s9tcs
    Jan 30 09:11:00.004: INFO: Created: latency-svc-w76nz
    Jan 30 09:11:00.004: INFO: Created: latency-svc-d2t42
    Jan 30 09:11:00.004: INFO: Created: latency-svc-qcfnj
    Jan 30 09:11:00.004: INFO: Created: latency-svc-rst8j
    Jan 30 09:11:00.004: INFO: Created: latency-svc-hm87x
    Jan 30 09:11:00.004: INFO: Created: latency-svc-rff4l
    Jan 30 09:11:00.004: INFO: Created: latency-svc-vgtwd
    Jan 30 09:11:00.004: INFO: Created: latency-svc-lg2nv
    Jan 30 09:11:00.003: INFO: Created: latency-svc-4l92q
    Jan 30 09:11:00.004: INFO: Created: latency-svc-2vjw4
    Jan 30 09:11:00.005: INFO: Created: latency-svc-v4dxt
    Jan 30 09:11:00.011: INFO: Got endpoints: latency-svc-46bn9 [116.725015ms]
    Jan 30 09:11:00.026: INFO: Got endpoints: latency-svc-79942 [249.176411ms]
    Jan 30 09:11:00.027: INFO: Got endpoints: latency-svc-4l92q [299.070858ms]
    Jan 30 09:11:00.033: INFO: Got endpoints: latency-svc-42nnr [113.76122ms]
    Jan 30 09:11:00.034: INFO: Got endpoints: latency-svc-2vjw4 [126.894109ms]
    Jan 30 09:11:00.034: INFO: Got endpoints: latency-svc-rff4l [305.964465ms]
    Jan 30 09:11:00.041: INFO: Created: latency-svc-nf4mv
    Jan 30 09:11:00.049: INFO: Got endpoints: latency-svc-v4dxt [170.535751ms]
    Jan 30 09:11:00.049: INFO: Got endpoints: latency-svc-rst8j [321.610676ms]
    Jan 30 09:11:00.049: INFO: Got endpoints: latency-svc-d2t42 [321.719622ms]
    Jan 30 09:11:00.063: INFO: Got endpoints: latency-svc-lg2nv [221.440758ms]
    Jan 30 09:11:00.063: INFO: Got endpoints: latency-svc-qcfnj [335.259075ms]
    Jan 30 09:11:00.065: INFO: Created: latency-svc-lmpth
    Jan 30 09:11:00.065: INFO: Got endpoints: latency-svc-w76nz [315.976429ms]
    Jan 30 09:11:00.065: INFO: Got endpoints: latency-svc-s9tcs [296.479144ms]
    Jan 30 09:11:00.065: INFO: Got endpoints: latency-svc-hm87x [251.129804ms]
    Jan 30 09:11:00.080: INFO: Got endpoints: latency-svc-vgtwd [229.01581ms]
    Jan 30 09:11:00.080: INFO: Got endpoints: latency-svc-nf4mv [68.667158ms]
    Jan 30 09:11:00.080: INFO: Got endpoints: latency-svc-lmpth [53.782729ms]
    Jan 30 09:11:00.091: INFO: Created: latency-svc-v4kq2
    Jan 30 09:11:00.101: INFO: Created: latency-svc-zj55m
    Jan 30 09:11:00.105: INFO: Got endpoints: latency-svc-v4kq2 [78.582347ms]
    Jan 30 09:11:00.110: INFO: Got endpoints: latency-svc-zj55m [75.826846ms]
    Jan 30 09:11:00.114: INFO: Created: latency-svc-7q5fg
    Jan 30 09:11:00.121: INFO: Got endpoints: latency-svc-7q5fg [86.914555ms]
    Jan 30 09:11:00.125: INFO: Created: latency-svc-2vbrd
    Jan 30 09:11:00.135: INFO: Got endpoints: latency-svc-2vbrd [99.960846ms]
    Jan 30 09:11:00.139: INFO: Created: latency-svc-bn8rd
    Jan 30 09:11:00.148: INFO: Got endpoints: latency-svc-bn8rd [98.139045ms]
    Jan 30 09:11:00.151: INFO: Created: latency-svc-crvk8
    Jan 30 09:11:00.160: INFO: Got endpoints: latency-svc-crvk8 [110.579085ms]
    Jan 30 09:11:00.165: INFO: Created: latency-svc-9gmrh
    Jan 30 09:11:00.182: INFO: Got endpoints: latency-svc-9gmrh [132.237046ms]
    Jan 30 09:11:00.184: INFO: Created: latency-svc-ftjbj
    Jan 30 09:11:00.202: INFO: Got endpoints: latency-svc-ftjbj [138.844326ms]
    Jan 30 09:11:00.209: INFO: Created: latency-svc-8gn4d
    Jan 30 09:11:00.216: INFO: Got endpoints: latency-svc-8gn4d [153.699647ms]
    Jan 30 09:11:00.224: INFO: Created: latency-svc-xfhm7
    Jan 30 09:11:00.231: INFO: Got endpoints: latency-svc-xfhm7 [165.85605ms]
    Jan 30 09:11:00.236: INFO: Created: latency-svc-ksw9s
    Jan 30 09:11:00.242: INFO: Got endpoints: latency-svc-ksw9s [176.818147ms]
    Jan 30 09:11:00.247: INFO: Created: latency-svc-xksr5
    Jan 30 09:11:00.252: INFO: Got endpoints: latency-svc-xksr5 [186.431805ms]
    Jan 30 09:11:00.255: INFO: Created: latency-svc-jj9mq
    Jan 30 09:11:00.264: INFO: Created: latency-svc-6v5tt
    Jan 30 09:11:00.271: INFO: Got endpoints: latency-svc-jj9mq [191.410022ms]
    Jan 30 09:11:00.276: INFO: Created: latency-svc-tcc7f
    Jan 30 09:11:00.286: INFO: Created: latency-svc-8nx8c
    Jan 30 09:11:00.295: INFO: Created: latency-svc-ltsbx
    Jan 30 09:11:00.308: INFO: Created: latency-svc-79qnv
    Jan 30 09:11:00.321: INFO: Created: latency-svc-zbfwq
    Jan 30 09:11:00.326: INFO: Got endpoints: latency-svc-6v5tt [245.768058ms]
    Jan 30 09:11:00.333: INFO: Created: latency-svc-h72tx
    Jan 30 09:11:00.341: INFO: Created: latency-svc-xkkr5
    Jan 30 09:11:00.350: INFO: Created: latency-svc-6zghv
    Jan 30 09:11:00.359: INFO: Created: latency-svc-qdlg4
    Jan 30 09:11:00.366: INFO: Created: latency-svc-r52k9
    Jan 30 09:11:00.374: INFO: Created: latency-svc-58dvr
    Jan 30 09:11:00.377: INFO: Got endpoints: latency-svc-tcc7f [296.817115ms]
    Jan 30 09:11:00.382: INFO: Created: latency-svc-9cgxl
    Jan 30 09:11:00.399: INFO: Created: latency-svc-l7fxm
    Jan 30 09:11:00.413: INFO: Created: latency-svc-qt2nh
    Jan 30 09:11:00.422: INFO: Created: latency-svc-rj7t7
    Jan 30 09:11:00.434: INFO: Got endpoints: latency-svc-8nx8c [328.845927ms]
    Jan 30 09:11:00.442: INFO: Created: latency-svc-bflsf
    Jan 30 09:11:00.454: INFO: Created: latency-svc-sbg27
    Jan 30 09:11:00.473: INFO: Got endpoints: latency-svc-ltsbx [363.215806ms]
    Jan 30 09:11:00.489: INFO: Created: latency-svc-flb2l
    Jan 30 09:11:00.526: INFO: Got endpoints: latency-svc-79qnv [404.895938ms]
    Jan 30 09:11:00.544: INFO: Created: latency-svc-r5ffr
    Jan 30 09:11:00.573: INFO: Got endpoints: latency-svc-zbfwq [438.009733ms]
    Jan 30 09:11:00.587: INFO: Created: latency-svc-5bdwh
    Jan 30 09:11:00.624: INFO: Got endpoints: latency-svc-h72tx [475.989205ms]
    Jan 30 09:11:00.636: INFO: Created: latency-svc-j9hhz
    Jan 30 09:11:00.671: INFO: Got endpoints: latency-svc-xkkr5 [511.341897ms]
    Jan 30 09:11:00.681: INFO: Created: latency-svc-kslns
    Jan 30 09:11:00.724: INFO: Got endpoints: latency-svc-6zghv [542.334908ms]
    Jan 30 09:11:00.746: INFO: Created: latency-svc-mvnvf
    Jan 30 09:11:00.775: INFO: Got endpoints: latency-svc-qdlg4 [573.453997ms]
    Jan 30 09:11:00.801: INFO: Created: latency-svc-dfwjt
    Jan 30 09:11:00.831: INFO: Got endpoints: latency-svc-r52k9 [612.980544ms]
    Jan 30 09:11:00.843: INFO: Created: latency-svc-7n7zc
    Jan 30 09:11:00.873: INFO: Got endpoints: latency-svc-58dvr [642.33116ms]
    Jan 30 09:11:00.890: INFO: Created: latency-svc-dnjmd
    Jan 30 09:11:00.921: INFO: Got endpoints: latency-svc-9cgxl [679.426299ms]
    Jan 30 09:11:00.937: INFO: Created: latency-svc-dm66t
    Jan 30 09:11:00.974: INFO: Got endpoints: latency-svc-l7fxm [722.514037ms]
    Jan 30 09:11:00.988: INFO: Created: latency-svc-4d6mm
    Jan 30 09:11:01.022: INFO: Got endpoints: latency-svc-qt2nh [750.181465ms]
    Jan 30 09:11:01.035: INFO: Created: latency-svc-h6lkq
    Jan 30 09:11:01.073: INFO: Got endpoints: latency-svc-rj7t7 [747.035031ms]
    Jan 30 09:11:01.087: INFO: Created: latency-svc-7xnkj
    Jan 30 09:11:01.123: INFO: Got endpoints: latency-svc-bflsf [745.831066ms]
    Jan 30 09:11:01.133: INFO: Created: latency-svc-vrhp7
    Jan 30 09:11:01.172: INFO: Got endpoints: latency-svc-sbg27 [737.201186ms]
    Jan 30 09:11:01.185: INFO: Created: latency-svc-msf8j
    Jan 30 09:11:01.222: INFO: Got endpoints: latency-svc-flb2l [749.072427ms]
    Jan 30 09:11:01.234: INFO: Created: latency-svc-pc99s
    Jan 30 09:11:01.272: INFO: Got endpoints: latency-svc-r5ffr [745.933925ms]
    Jan 30 09:11:01.284: INFO: Created: latency-svc-stp55
    Jan 30 09:11:01.322: INFO: Got endpoints: latency-svc-5bdwh [748.795884ms]
    Jan 30 09:11:01.335: INFO: Created: latency-svc-8mfgf
    Jan 30 09:11:01.371: INFO: Got endpoints: latency-svc-j9hhz [747.517332ms]
    Jan 30 09:11:01.383: INFO: Created: latency-svc-zztxf
    Jan 30 09:11:01.421: INFO: Got endpoints: latency-svc-kslns [750.125871ms]
    Jan 30 09:11:01.433: INFO: Created: latency-svc-hf42h
    Jan 30 09:11:01.472: INFO: Got endpoints: latency-svc-mvnvf [747.704199ms]
    Jan 30 09:11:01.482: INFO: Created: latency-svc-tjzzz
    Jan 30 09:11:01.523: INFO: Got endpoints: latency-svc-dfwjt [747.376111ms]
    Jan 30 09:11:01.533: INFO: Created: latency-svc-z57rj
    Jan 30 09:11:01.572: INFO: Got endpoints: latency-svc-7n7zc [740.770124ms]
    Jan 30 09:11:01.582: INFO: Created: latency-svc-vn8xf
    Jan 30 09:11:01.627: INFO: Got endpoints: latency-svc-dnjmd [754.348393ms]
    Jan 30 09:11:01.650: INFO: Created: latency-svc-5fswn
    Jan 30 09:11:01.672: INFO: Got endpoints: latency-svc-dm66t [751.078803ms]
    Jan 30 09:11:01.683: INFO: Created: latency-svc-rx62q
    Jan 30 09:11:01.723: INFO: Got endpoints: latency-svc-4d6mm [748.269592ms]
    Jan 30 09:11:01.738: INFO: Created: latency-svc-5rxdz
    Jan 30 09:11:01.789: INFO: Got endpoints: latency-svc-h6lkq [767.672946ms]
    Jan 30 09:11:01.799: INFO: Created: latency-svc-lcgjw
    Jan 30 09:11:01.821: INFO: Got endpoints: latency-svc-7xnkj [748.060378ms]
    Jan 30 09:11:01.832: INFO: Created: latency-svc-rxv9x
    Jan 30 09:11:01.872: INFO: Got endpoints: latency-svc-vrhp7 [749.696178ms]
    Jan 30 09:11:01.885: INFO: Created: latency-svc-j4kgd
    Jan 30 09:11:01.921: INFO: Got endpoints: latency-svc-msf8j [749.329368ms]
    Jan 30 09:11:01.934: INFO: Created: latency-svc-j64kb
    Jan 30 09:11:01.971: INFO: Got endpoints: latency-svc-pc99s [748.952381ms]
    Jan 30 09:11:01.984: INFO: Created: latency-svc-2jj6q
    Jan 30 09:11:02.025: INFO: Got endpoints: latency-svc-stp55 [752.694612ms]
    Jan 30 09:11:02.035: INFO: Created: latency-svc-j4kjn
    Jan 30 09:11:02.073: INFO: Got endpoints: latency-svc-8mfgf [750.69965ms]
    Jan 30 09:11:02.085: INFO: Created: latency-svc-2h6wv
    Jan 30 09:11:02.123: INFO: Got endpoints: latency-svc-zztxf [751.929352ms]
    Jan 30 09:11:02.136: INFO: Created: latency-svc-kmg5p
    Jan 30 09:11:02.172: INFO: Got endpoints: latency-svc-hf42h [750.365501ms]
    Jan 30 09:11:02.186: INFO: Created: latency-svc-s9zwl
    Jan 30 09:11:02.221: INFO: Got endpoints: latency-svc-tjzzz [749.611597ms]
    Jan 30 09:11:02.233: INFO: Created: latency-svc-fk2h6
    Jan 30 09:11:02.274: INFO: Got endpoints: latency-svc-z57rj [750.873506ms]
    Jan 30 09:11:02.285: INFO: Created: latency-svc-prsf9
    Jan 30 09:11:02.323: INFO: Got endpoints: latency-svc-vn8xf [751.297308ms]
    Jan 30 09:11:02.335: INFO: Created: latency-svc-bf52t
    Jan 30 09:11:02.371: INFO: Got endpoints: latency-svc-5fswn [743.321081ms]
    Jan 30 09:11:02.382: INFO: Created: latency-svc-8qbwr
    Jan 30 09:11:02.421: INFO: Got endpoints: latency-svc-rx62q [748.166924ms]
    Jan 30 09:11:02.430: INFO: Created: latency-svc-46mj7
    Jan 30 09:11:02.473: INFO: Got endpoints: latency-svc-5rxdz [750.248146ms]
    Jan 30 09:11:02.481: INFO: Created: latency-svc-bfglr
    Jan 30 09:11:02.522: INFO: Got endpoints: latency-svc-lcgjw [732.5743ms]
    Jan 30 09:11:02.530: INFO: Created: latency-svc-qk4jm
    Jan 30 09:11:02.570: INFO: Got endpoints: latency-svc-rxv9x [749.253674ms]
    Jan 30 09:11:02.581: INFO: Created: latency-svc-5zwb2
    Jan 30 09:11:02.621: INFO: Got endpoints: latency-svc-j4kgd [748.557622ms]
    Jan 30 09:11:02.630: INFO: Created: latency-svc-sv5xt
    Jan 30 09:11:02.673: INFO: Got endpoints: latency-svc-j64kb [751.223681ms]
    Jan 30 09:11:02.685: INFO: Created: latency-svc-bmb7x
    Jan 30 09:11:02.726: INFO: Got endpoints: latency-svc-2jj6q [754.828ms]
    Jan 30 09:11:02.740: INFO: Created: latency-svc-vr9xp
    Jan 30 09:11:02.776: INFO: Got endpoints: latency-svc-j4kjn [751.258289ms]
    Jan 30 09:11:02.792: INFO: Created: latency-svc-87r7b
    Jan 30 09:11:02.821: INFO: Got endpoints: latency-svc-2h6wv [748.166704ms]
    Jan 30 09:11:02.832: INFO: Created: latency-svc-x77c4
    Jan 30 09:11:02.874: INFO: Got endpoints: latency-svc-kmg5p [751.227485ms]
    Jan 30 09:11:02.884: INFO: Created: latency-svc-v7ns7
    Jan 30 09:11:02.921: INFO: Got endpoints: latency-svc-s9zwl [748.603579ms]
    Jan 30 09:11:02.932: INFO: Created: latency-svc-s56nl
    Jan 30 09:11:02.971: INFO: Got endpoints: latency-svc-fk2h6 [749.095264ms]
    Jan 30 09:11:02.979: INFO: Created: latency-svc-2rddm
    Jan 30 09:11:03.021: INFO: Got endpoints: latency-svc-prsf9 [746.890829ms]
    Jan 30 09:11:03.031: INFO: Created: latency-svc-mdc8k
    Jan 30 09:11:03.071: INFO: Got endpoints: latency-svc-bf52t [747.857987ms]
    Jan 30 09:11:03.080: INFO: Created: latency-svc-s8hwp
    Jan 30 09:11:03.122: INFO: Got endpoints: latency-svc-8qbwr [750.557898ms]
    Jan 30 09:11:03.131: INFO: Created: latency-svc-dcxqf
    Jan 30 09:11:03.175: INFO: Got endpoints: latency-svc-46mj7 [754.030954ms]
    Jan 30 09:11:03.188: INFO: Created: latency-svc-7dt6m
    Jan 30 09:11:03.222: INFO: Got endpoints: latency-svc-bfglr [748.538592ms]
    Jan 30 09:11:03.230: INFO: Created: latency-svc-8ng4s
    Jan 30 09:11:03.271: INFO: Got endpoints: latency-svc-qk4jm [748.499817ms]
    Jan 30 09:11:03.281: INFO: Created: latency-svc-qqrq5
    Jan 30 09:11:03.322: INFO: Got endpoints: latency-svc-5zwb2 [751.797354ms]
    Jan 30 09:11:03.332: INFO: Created: latency-svc-72vl2
    Jan 30 09:11:03.371: INFO: Got endpoints: latency-svc-sv5xt [749.943746ms]
    Jan 30 09:11:03.381: INFO: Created: latency-svc-z5zks
    Jan 30 09:11:03.425: INFO: Got endpoints: latency-svc-bmb7x [751.740501ms]
    Jan 30 09:11:03.433: INFO: Created: latency-svc-c6dcg
    Jan 30 09:11:03.470: INFO: Got endpoints: latency-svc-vr9xp [743.652778ms]
    Jan 30 09:11:03.482: INFO: Created: latency-svc-tt5kn
    Jan 30 09:11:03.521: INFO: Got endpoints: latency-svc-87r7b [744.630049ms]
    Jan 30 09:11:03.537: INFO: Created: latency-svc-bw8zp
    Jan 30 09:11:03.572: INFO: Got endpoints: latency-svc-x77c4 [750.99692ms]
    Jan 30 09:11:03.587: INFO: Created: latency-svc-99nx8
    Jan 30 09:11:03.623: INFO: Got endpoints: latency-svc-v7ns7 [748.107362ms]
    Jan 30 09:11:03.638: INFO: Created: latency-svc-2j2d9
    Jan 30 09:11:03.674: INFO: Got endpoints: latency-svc-s56nl [753.325813ms]
    Jan 30 09:11:03.685: INFO: Created: latency-svc-wb4wr
    Jan 30 09:11:03.754: INFO: Got endpoints: latency-svc-2rddm [783.75823ms]
    Jan 30 09:11:03.782: INFO: Got endpoints: latency-svc-mdc8k [761.670157ms]
    Jan 30 09:11:03.793: INFO: Created: latency-svc-qfgk4
    Jan 30 09:11:03.816: INFO: Created: latency-svc-j9p58
    Jan 30 09:11:03.827: INFO: Got endpoints: latency-svc-s8hwp [755.400641ms]
    Jan 30 09:11:03.844: INFO: Created: latency-svc-t8nm9
    Jan 30 09:11:03.873: INFO: Got endpoints: latency-svc-dcxqf [751.506487ms]
    Jan 30 09:11:03.898: INFO: Created: latency-svc-86m4n
    Jan 30 09:11:03.921: INFO: Got endpoints: latency-svc-7dt6m [746.266579ms]
    Jan 30 09:11:03.932: INFO: Created: latency-svc-9jmqt
    Jan 30 09:11:03.971: INFO: Got endpoints: latency-svc-8ng4s [749.585235ms]
    Jan 30 09:11:03.983: INFO: Created: latency-svc-4pswl
    Jan 30 09:11:04.021: INFO: Got endpoints: latency-svc-qqrq5 [750.366897ms]
    Jan 30 09:11:04.031: INFO: Created: latency-svc-rzrrs
    Jan 30 09:11:04.072: INFO: Got endpoints: latency-svc-72vl2 [750.076926ms]
    Jan 30 09:11:04.082: INFO: Created: latency-svc-x6blb
    Jan 30 09:11:04.121: INFO: Got endpoints: latency-svc-z5zks [750.218798ms]
    Jan 30 09:11:04.133: INFO: Created: latency-svc-mqtnb
    Jan 30 09:11:04.172: INFO: Got endpoints: latency-svc-c6dcg [747.064427ms]
    Jan 30 09:11:04.186: INFO: Created: latency-svc-rcp6v
    Jan 30 09:11:04.221: INFO: Got endpoints: latency-svc-tt5kn [750.500941ms]
    Jan 30 09:11:04.233: INFO: Created: latency-svc-rxnls
    Jan 30 09:11:04.272: INFO: Got endpoints: latency-svc-bw8zp [750.413933ms]
    Jan 30 09:11:04.282: INFO: Created: latency-svc-p4lrr
    Jan 30 09:11:04.325: INFO: Got endpoints: latency-svc-99nx8 [752.315359ms]
    Jan 30 09:11:04.338: INFO: Created: latency-svc-l46mg
    Jan 30 09:11:04.373: INFO: Got endpoints: latency-svc-2j2d9 [750.633517ms]
    Jan 30 09:11:04.387: INFO: Created: latency-svc-8c577
    Jan 30 09:11:04.421: INFO: Got endpoints: latency-svc-wb4wr [746.654444ms]
    Jan 30 09:11:04.430: INFO: Created: latency-svc-snfbd
    Jan 30 09:11:04.491: INFO: Got endpoints: latency-svc-qfgk4 [736.832986ms]
    Jan 30 09:11:04.504: INFO: Created: latency-svc-9249j
    Jan 30 09:11:04.521: INFO: Got endpoints: latency-svc-j9p58 [738.501499ms]
    Jan 30 09:11:04.530: INFO: Created: latency-svc-thtt9
    Jan 30 09:11:04.573: INFO: Got endpoints: latency-svc-t8nm9 [745.867861ms]
    Jan 30 09:11:04.582: INFO: Created: latency-svc-pnft2
    Jan 30 09:11:04.624: INFO: Got endpoints: latency-svc-86m4n [750.62067ms]
    Jan 30 09:11:04.632: INFO: Created: latency-svc-pjls4
    Jan 30 09:11:04.671: INFO: Got endpoints: latency-svc-9jmqt [750.266563ms]
    Jan 30 09:11:04.681: INFO: Created: latency-svc-77gtn
    Jan 30 09:11:04.721: INFO: Got endpoints: latency-svc-4pswl [750.148937ms]
    Jan 30 09:11:04.735: INFO: Created: latency-svc-4lzv6
    Jan 30 09:11:04.777: INFO: Got endpoints: latency-svc-rzrrs [755.482426ms]
    Jan 30 09:11:04.790: INFO: Created: latency-svc-jj89k
    Jan 30 09:11:04.821: INFO: Got endpoints: latency-svc-x6blb [748.686557ms]
    Jan 30 09:11:04.840: INFO: Created: latency-svc-t8x7k
    Jan 30 09:11:04.873: INFO: Got endpoints: latency-svc-mqtnb [751.991839ms]
    Jan 30 09:11:04.886: INFO: Created: latency-svc-lcd2f
    Jan 30 09:11:04.922: INFO: Got endpoints: latency-svc-rcp6v [749.702037ms]
    Jan 30 09:11:04.935: INFO: Created: latency-svc-8ccrd
    Jan 30 09:11:04.971: INFO: Got endpoints: latency-svc-rxnls [750.117924ms]
    Jan 30 09:11:04.981: INFO: Created: latency-svc-pch4b
    Jan 30 09:11:05.021: INFO: Got endpoints: latency-svc-p4lrr [748.930347ms]
    Jan 30 09:11:05.032: INFO: Created: latency-svc-sqcd2
    Jan 30 09:11:05.072: INFO: Got endpoints: latency-svc-l46mg [747.587726ms]
    Jan 30 09:11:05.081: INFO: Created: latency-svc-zpzxc
    Jan 30 09:11:05.122: INFO: Got endpoints: latency-svc-8c577 [749.09864ms]
    Jan 30 09:11:05.135: INFO: Created: latency-svc-nwr9m
    Jan 30 09:11:05.173: INFO: Got endpoints: latency-svc-snfbd [751.678198ms]
    Jan 30 09:11:05.182: INFO: Created: latency-svc-94vj6
    Jan 30 09:11:05.224: INFO: Got endpoints: latency-svc-9249j [732.241261ms]
    Jan 30 09:11:05.232: INFO: Created: latency-svc-ft49d
    Jan 30 09:11:05.272: INFO: Got endpoints: latency-svc-thtt9 [750.545388ms]
    Jan 30 09:11:05.279: INFO: Created: latency-svc-cztwg
    Jan 30 09:11:05.321: INFO: Got endpoints: latency-svc-pnft2 [748.630699ms]
    Jan 30 09:11:05.330: INFO: Created: latency-svc-b2brs
    Jan 30 09:11:05.371: INFO: Got endpoints: latency-svc-pjls4 [746.914213ms]
    Jan 30 09:11:05.381: INFO: Created: latency-svc-wqpmc
    Jan 30 09:11:05.423: INFO: Got endpoints: latency-svc-77gtn [751.680341ms]
    Jan 30 09:11:05.433: INFO: Created: latency-svc-6srgj
    Jan 30 09:11:05.472: INFO: Got endpoints: latency-svc-4lzv6 [750.353565ms]
    Jan 30 09:11:05.481: INFO: Created: latency-svc-7nvqz
    Jan 30 09:11:05.521: INFO: Got endpoints: latency-svc-jj89k [743.65068ms]
    Jan 30 09:11:05.531: INFO: Created: latency-svc-kq597
    Jan 30 09:11:05.571: INFO: Got endpoints: latency-svc-t8x7k [749.564747ms]
    Jan 30 09:11:05.579: INFO: Created: latency-svc-frln6
    Jan 30 09:11:05.622: INFO: Got endpoints: latency-svc-lcd2f [748.441839ms]
    Jan 30 09:11:05.635: INFO: Created: latency-svc-q2sjl
    Jan 30 09:11:05.672: INFO: Got endpoints: latency-svc-8ccrd [749.952484ms]
    Jan 30 09:11:05.681: INFO: Created: latency-svc-7ndqz
    Jan 30 09:11:05.725: INFO: Got endpoints: latency-svc-pch4b [753.708445ms]
    Jan 30 09:11:05.740: INFO: Created: latency-svc-ld6j5
    Jan 30 09:11:05.774: INFO: Got endpoints: latency-svc-sqcd2 [753.348159ms]
    Jan 30 09:11:05.787: INFO: Created: latency-svc-5q2k7
    Jan 30 09:11:05.821: INFO: Got endpoints: latency-svc-zpzxc [748.203345ms]
    Jan 30 09:11:05.832: INFO: Created: latency-svc-b7sw8
    Jan 30 09:11:05.873: INFO: Got endpoints: latency-svc-nwr9m [750.072552ms]
    Jan 30 09:11:05.886: INFO: Created: latency-svc-jvqsn
    Jan 30 09:11:05.922: INFO: Got endpoints: latency-svc-94vj6 [749.5168ms]
    Jan 30 09:11:05.933: INFO: Created: latency-svc-776wk
    Jan 30 09:11:05.972: INFO: Got endpoints: latency-svc-ft49d [748.57508ms]
    Jan 30 09:11:05.982: INFO: Created: latency-svc-hmjt5
    Jan 30 09:11:06.022: INFO: Got endpoints: latency-svc-cztwg [749.904657ms]
    Jan 30 09:11:06.032: INFO: Created: latency-svc-dqvbs
    Jan 30 09:11:06.073: INFO: Got endpoints: latency-svc-b2brs [751.582093ms]
    Jan 30 09:11:06.083: INFO: Created: latency-svc-s6bp9
    Jan 30 09:11:06.122: INFO: Got endpoints: latency-svc-wqpmc [750.779313ms]
    Jan 30 09:11:06.131: INFO: Created: latency-svc-fwjd7
    Jan 30 09:11:06.173: INFO: Got endpoints: latency-svc-6srgj [749.679329ms]
    Jan 30 09:11:06.182: INFO: Created: latency-svc-r94tx
    Jan 30 09:11:06.221: INFO: Got endpoints: latency-svc-7nvqz [749.144927ms]
    Jan 30 09:11:06.231: INFO: Created: latency-svc-sx2jq
    Jan 30 09:11:06.273: INFO: Got endpoints: latency-svc-kq597 [752.520421ms]
    Jan 30 09:11:06.286: INFO: Created: latency-svc-gkqfg
    Jan 30 09:11:06.321: INFO: Got endpoints: latency-svc-frln6 [749.885317ms]
    Jan 30 09:11:06.331: INFO: Created: latency-svc-9zjcd
    Jan 30 09:11:06.373: INFO: Got endpoints: latency-svc-q2sjl [750.998641ms]
    Jan 30 09:11:06.382: INFO: Created: latency-svc-v7dnf
    Jan 30 09:11:06.433: INFO: Got endpoints: latency-svc-7ndqz [760.770318ms]
    Jan 30 09:11:06.443: INFO: Created: latency-svc-g8nxn
    Jan 30 09:11:06.471: INFO: Got endpoints: latency-svc-ld6j5 [745.513264ms]
    Jan 30 09:11:06.481: INFO: Created: latency-svc-69vcs
    Jan 30 09:11:06.521: INFO: Got endpoints: latency-svc-5q2k7 [746.59971ms]
    Jan 30 09:11:06.529: INFO: Created: latency-svc-vn66p
    Jan 30 09:11:06.573: INFO: Got endpoints: latency-svc-b7sw8 [752.647548ms]
    Jan 30 09:11:06.582: INFO: Created: latency-svc-2bx5b
    Jan 30 09:11:06.622: INFO: Got endpoints: latency-svc-jvqsn [749.336833ms]
    Jan 30 09:11:06.632: INFO: Created: latency-svc-sj6c2
    Jan 30 09:11:06.679: INFO: Got endpoints: latency-svc-776wk [756.479339ms]
    Jan 30 09:11:06.689: INFO: Created: latency-svc-fgmbn
    Jan 30 09:11:06.721: INFO: Got endpoints: latency-svc-hmjt5 [748.322833ms]
    Jan 30 09:11:06.735: INFO: Created: latency-svc-5lm5w
    Jan 30 09:11:06.773: INFO: Got endpoints: latency-svc-dqvbs [751.491628ms]
    Jan 30 09:11:06.791: INFO: Created: latency-svc-p75z5
    Jan 30 09:11:06.824: INFO: Got endpoints: latency-svc-s6bp9 [750.807025ms]
    Jan 30 09:11:06.833: INFO: Created: latency-svc-gnpdv
    Jan 30 09:11:06.872: INFO: Got endpoints: latency-svc-fwjd7 [749.976346ms]
    Jan 30 09:11:06.880: INFO: Created: latency-svc-q8xbw
    Jan 30 09:11:06.920: INFO: Got endpoints: latency-svc-r94tx [747.46636ms]
    Jan 30 09:11:06.933: INFO: Created: latency-svc-qhk4c
    Jan 30 09:11:06.971: INFO: Got endpoints: latency-svc-sx2jq [749.968704ms]
    Jan 30 09:11:06.980: INFO: Created: latency-svc-m7fcb
    Jan 30 09:11:07.022: INFO: Got endpoints: latency-svc-gkqfg [749.154355ms]
    Jan 30 09:11:07.031: INFO: Created: latency-svc-l8tpx
    Jan 30 09:11:07.071: INFO: Got endpoints: latency-svc-9zjcd [749.787909ms]
    Jan 30 09:11:07.083: INFO: Created: latency-svc-4nprz
    Jan 30 09:11:07.121: INFO: Got endpoints: latency-svc-v7dnf [747.545973ms]
    Jan 30 09:11:07.132: INFO: Created: latency-svc-ktn2z
    Jan 30 09:11:07.172: INFO: Got endpoints: latency-svc-g8nxn [739.382821ms]
    Jan 30 09:11:07.183: INFO: Created: latency-svc-7mgjl
    Jan 30 09:11:07.220: INFO: Got endpoints: latency-svc-69vcs [749.889261ms]
    Jan 30 09:11:07.230: INFO: Created: latency-svc-nsgpc
    Jan 30 09:11:07.274: INFO: Got endpoints: latency-svc-vn66p [753.650716ms]
    Jan 30 09:11:07.283: INFO: Created: latency-svc-s988r
    Jan 30 09:11:07.322: INFO: Got endpoints: latency-svc-2bx5b [748.42575ms]
    Jan 30 09:11:07.332: INFO: Created: latency-svc-mgplx
    Jan 30 09:11:07.371: INFO: Got endpoints: latency-svc-sj6c2 [748.767919ms]
    Jan 30 09:11:07.379: INFO: Created: latency-svc-jz6d9
    Jan 30 09:11:07.422: INFO: Got endpoints: latency-svc-fgmbn [743.350857ms]
    Jan 30 09:11:07.431: INFO: Created: latency-svc-f2bqw
    Jan 30 09:11:07.473: INFO: Got endpoints: latency-svc-5lm5w [752.823495ms]
    Jan 30 09:11:07.481: INFO: Created: latency-svc-cfpw4
    Jan 30 09:11:07.521: INFO: Got endpoints: latency-svc-p75z5 [747.14206ms]
    Jan 30 09:11:07.535: INFO: Created: latency-svc-crspm
    Jan 30 09:11:07.571: INFO: Got endpoints: latency-svc-gnpdv [747.682968ms]
    Jan 30 09:11:07.621: INFO: Got endpoints: latency-svc-q8xbw [748.479308ms]
    Jan 30 09:11:07.670: INFO: Got endpoints: latency-svc-qhk4c [748.962532ms]
    Jan 30 09:11:07.722: INFO: Got endpoints: latency-svc-m7fcb [750.891455ms]
    Jan 30 09:11:07.779: INFO: Got endpoints: latency-svc-l8tpx [756.129922ms]
    Jan 30 09:11:07.823: INFO: Got endpoints: latency-svc-4nprz [752.026808ms]
    Jan 30 09:11:07.872: INFO: Got endpoints: latency-svc-ktn2z [750.731126ms]
    Jan 30 09:11:07.922: INFO: Got endpoints: latency-svc-7mgjl [750.009393ms]
    Jan 30 09:11:07.971: INFO: Got endpoints: latency-svc-nsgpc [750.936633ms]
    Jan 30 09:11:08.023: INFO: Got endpoints: latency-svc-s988r [748.575968ms]
    Jan 30 09:11:08.070: INFO: Got endpoints: latency-svc-mgplx [748.323776ms]
    Jan 30 09:11:08.122: INFO: Got endpoints: latency-svc-jz6d9 [751.439134ms]
    Jan 30 09:11:08.171: INFO: Got endpoints: latency-svc-f2bqw [748.830056ms]
    Jan 30 09:11:08.221: INFO: Got endpoints: latency-svc-cfpw4 [747.464028ms]
    Jan 30 09:11:08.271: INFO: Got endpoints: latency-svc-crspm [750.034767ms]
    Jan 30 09:11:08.271: INFO: Latencies: [21.515231ms 41.395213ms 49.342084ms 53.782729ms 68.667158ms 75.826846ms 78.582347ms 86.710424ms 86.914555ms 98.139045ms 99.960846ms 110.579085ms 113.628857ms 113.76122ms 116.725015ms 123.357811ms 126.894109ms 132.237046ms 138.844326ms 150.607477ms 153.699647ms 165.85605ms 166.73296ms 170.535751ms 176.818147ms 179.792479ms 186.431805ms 191.410022ms 192.39154ms 221.440758ms 229.01581ms 245.768058ms 249.176411ms 251.129804ms 296.479144ms 296.817115ms 299.070858ms 305.964465ms 315.976429ms 321.610676ms 321.719622ms 328.845927ms 335.259075ms 363.215806ms 404.895938ms 438.009733ms 475.989205ms 511.341897ms 542.334908ms 573.453997ms 612.980544ms 642.33116ms 679.426299ms 722.514037ms 732.241261ms 732.5743ms 736.832986ms 737.201186ms 738.501499ms 739.382821ms 740.770124ms 743.321081ms 743.350857ms 743.65068ms 743.652778ms 744.630049ms 745.513264ms 745.831066ms 745.867861ms 745.933925ms 746.266579ms 746.59971ms 746.654444ms 746.890829ms 746.914213ms 747.035031ms 747.064427ms 747.14206ms 747.376111ms 747.464028ms 747.46636ms 747.517332ms 747.545973ms 747.587726ms 747.682968ms 747.704199ms 747.857987ms 748.060378ms 748.107362ms 748.166704ms 748.166924ms 748.203345ms 748.269592ms 748.322833ms 748.323776ms 748.42575ms 748.441839ms 748.479308ms 748.499817ms 748.538592ms 748.557622ms 748.57508ms 748.575968ms 748.603579ms 748.630699ms 748.686557ms 748.767919ms 748.795884ms 748.830056ms 748.930347ms 748.952381ms 748.962532ms 749.072427ms 749.095264ms 749.09864ms 749.144927ms 749.154355ms 749.253674ms 749.329368ms 749.336833ms 749.5168ms 749.564747ms 749.585235ms 749.611597ms 749.679329ms 749.696178ms 749.702037ms 749.787909ms 749.885317ms 749.889261ms 749.904657ms 749.943746ms 749.952484ms 749.968704ms 749.976346ms 750.009393ms 750.034767ms 750.072552ms 750.076926ms 750.117924ms 750.125871ms 750.148937ms 750.181465ms 750.218798ms 750.248146ms 750.266563ms 750.353565ms 750.365501ms 750.366897ms 750.413933ms 750.500941ms 750.545388ms 750.557898ms 750.62067ms 750.633517ms 750.69965ms 750.731126ms 750.779313ms 750.807025ms 750.873506ms 750.891455ms 750.936633ms 750.99692ms 750.998641ms 751.078803ms 751.223681ms 751.227485ms 751.258289ms 751.297308ms 751.439134ms 751.491628ms 751.506487ms 751.582093ms 751.678198ms 751.680341ms 751.740501ms 751.797354ms 751.929352ms 751.991839ms 752.026808ms 752.315359ms 752.520421ms 752.647548ms 752.694612ms 752.823495ms 753.325813ms 753.348159ms 753.650716ms 753.708445ms 754.030954ms 754.348393ms 754.828ms 755.400641ms 755.482426ms 756.129922ms 756.479339ms 760.770318ms 761.670157ms 767.672946ms 783.75823ms]
    Jan 30 09:11:08.271: INFO: 50 %ile: 748.557622ms
    Jan 30 09:11:08.271: INFO: 90 %ile: 752.315359ms
    Jan 30 09:11:08.271: INFO: 99 %ile: 767.672946ms
    Jan 30 09:11:08.271: INFO: Total sample count: 200
    [AfterEach] [sig-network] Service endpoints latency
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:11:08.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      tear down framework | framework.go:193
    STEP: Destroying namespace "svc-latency-5570" for this suite. 01/30/23 09:11:08.275
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:11:08.281
Jan 30 09:11:08.281: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 09:11:08.281
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:08.297
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:08.304
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
STEP: creating the pod 01/30/23 09:11:08.307
STEP: submitting the pod to kubernetes 01/30/23 09:11:08.307
Jan 30 09:11:08.315: INFO: Waiting up to 5m0s for pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50" in namespace "pods-1217" to be "running and ready"
Jan 30 09:11:08.319: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50": Phase="Pending", Reason="", readiness=false. Elapsed: 3.653693ms
Jan 30 09:11:08.319: INFO: The phase of Pod pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:11:10.321: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50": Phase="Running", Reason="", readiness=true. Elapsed: 2.00606397s
Jan 30 09:11:10.321: INFO: The phase of Pod pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50 is Running (Ready = true)
Jan 30 09:11:10.321: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 01/30/23 09:11:10.323
STEP: updating the pod 01/30/23 09:11:10.325
Jan 30 09:11:10.837: INFO: Successfully updated pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50"
Jan 30 09:11:10.837: INFO: Waiting up to 5m0s for pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50" in namespace "pods-1217" to be "running"
Jan 30 09:11:10.839: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50": Phase="Running", Reason="", readiness=true. Elapsed: 2.228022ms
Jan 30 09:11:10.839: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50" satisfied condition "running"
STEP: verifying the updated pod is in kubernetes 01/30/23 09:11:10.839
Jan 30 09:11:10.842: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 09:11:10.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-1217" for this suite. 01/30/23 09:11:10.847
------------------------------
â€¢ [2.572 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:11:08.281
    Jan 30 09:11:08.281: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 09:11:08.281
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:08.297
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:08.304
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:344
    STEP: creating the pod 01/30/23 09:11:08.307
    STEP: submitting the pod to kubernetes 01/30/23 09:11:08.307
    Jan 30 09:11:08.315: INFO: Waiting up to 5m0s for pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50" in namespace "pods-1217" to be "running and ready"
    Jan 30 09:11:08.319: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50": Phase="Pending", Reason="", readiness=false. Elapsed: 3.653693ms
    Jan 30 09:11:08.319: INFO: The phase of Pod pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:11:10.321: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50": Phase="Running", Reason="", readiness=true. Elapsed: 2.00606397s
    Jan 30 09:11:10.321: INFO: The phase of Pod pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50 is Running (Ready = true)
    Jan 30 09:11:10.321: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 01/30/23 09:11:10.323
    STEP: updating the pod 01/30/23 09:11:10.325
    Jan 30 09:11:10.837: INFO: Successfully updated pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50"
    Jan 30 09:11:10.837: INFO: Waiting up to 5m0s for pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50" in namespace "pods-1217" to be "running"
    Jan 30 09:11:10.839: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50": Phase="Running", Reason="", readiness=true. Elapsed: 2.228022ms
    Jan 30 09:11:10.839: INFO: Pod "pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50" satisfied condition "running"
    STEP: verifying the updated pod is in kubernetes 01/30/23 09:11:10.839
    Jan 30 09:11:10.842: INFO: Pod update OK
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:11:10.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-1217" for this suite. 01/30/23 09:11:10.847
  << End Captured GinkgoWriter Output
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:11:10.852
Jan 30 09:11:10.853: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-pred 01/30/23 09:11:10.853
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:10.867
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:10.869
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Jan 30 09:11:10.872: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jan 30 09:11:10.877: INFO: Waiting for terminating namespaces to be deleted...
Jan 30 09:11:10.880: INFO: 
Logging pods the apiserver thinks is on node tce-worker before test
Jan 30 09:11:10.884: INFO: kube-flannel-ds-7n9z9 from kube-flannel started at 2023-01-30 08:54:18 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.884: INFO: 	Container kube-flannel ready: true, restart count 0
Jan 30 09:11:10.884: INFO: coredns-787d4945fb-66qrn from kube-system started at 2023-01-30 09:00:12 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.884: INFO: 	Container coredns ready: true, restart count 0
Jan 30 09:11:10.884: INFO: kube-proxy-qskrv from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.884: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 30 09:11:10.884: INFO: local-path-provisioner-c8855d4bb-c9t9l from local-path-storage started at 2023-01-30 09:00:12 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.884: INFO: 	Container local-path-provisioner ready: true, restart count 0
Jan 30 09:11:10.884: INFO: sonobuoy from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.884: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jan 30 09:11:10.884: INFO: sonobuoy-e2e-job-bfd46d4d86374bf4 from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (2 container statuses recorded)
Jan 30 09:11:10.884: INFO: 	Container e2e ready: true, restart count 0
Jan 30 09:11:10.885: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:11:10.885: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
Jan 30 09:11:10.885: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:11:10.885: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 09:11:10.885: INFO: 
Logging pods the apiserver thinks is on node tce-worker2 before test
Jan 30 09:11:10.889: INFO: kube-flannel-ds-bdsbq from kube-flannel started at 2023-01-30 09:00:39 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.889: INFO: 	Container kube-flannel ready: true, restart count 0
Jan 30 09:11:10.889: INFO: kube-proxy-6h6xz from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.889: INFO: 	Container kube-proxy ready: true, restart count 0
Jan 30 09:11:10.889: INFO: pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50 from pods-1217 started at 2023-01-30 09:11:08 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.889: INFO: 	Container pause ready: true, restart count 0
Jan 30 09:11:10.889: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
Jan 30 09:11:10.889: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jan 30 09:11:10.889: INFO: 	Container systemd-logs ready: true, restart count 0
Jan 30 09:11:10.889: INFO: svc-latency-rc-h5qb2 from svc-latency-5570 started at 2023-01-30 09:10:58 +0000 UTC (1 container statuses recorded)
Jan 30 09:11:10.889: INFO: 	Container svc-latency-rc ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
STEP: Trying to launch a pod without a label to get a node which can launch it. 01/30/23 09:11:10.889
Jan 30 09:11:10.896: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-9045" to be "running"
Jan 30 09:11:10.898: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00876ms
Jan 30 09:11:12.902: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.005060249s
Jan 30 09:11:12.902: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 01/30/23 09:11:12.903
STEP: Trying to apply a random label on the found node. 01/30/23 09:11:12.913
STEP: verifying the node has the label kubernetes.io/e2e-e0694fa8-65bd-41a7-8809-61c16acb4331 42 01/30/23 09:11:12.92
STEP: Trying to relaunch the pod, now with labels. 01/30/23 09:11:12.923
Jan 30 09:11:12.927: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-9045" to be "not pending"
Jan 30 09:11:12.930: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021796ms
Jan 30 09:11:14.934: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.006866537s
Jan 30 09:11:14.934: INFO: Pod "with-labels" satisfied condition "not pending"
STEP: removing the label kubernetes.io/e2e-e0694fa8-65bd-41a7-8809-61c16acb4331 off the node tce-worker2 01/30/23 09:11:14.937
STEP: verifying the node doesn't have the label kubernetes.io/e2e-e0694fa8-65bd-41a7-8809-61c16acb4331 01/30/23 09:11:14.95
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:11:14.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-9045" for this suite. 01/30/23 09:11:14.964
------------------------------
â€¢ [4.125 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:11:10.852
    Jan 30 09:11:10.853: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-pred 01/30/23 09:11:10.853
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:10.867
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:10.869
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Jan 30 09:11:10.872: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Jan 30 09:11:10.877: INFO: Waiting for terminating namespaces to be deleted...
    Jan 30 09:11:10.880: INFO: 
    Logging pods the apiserver thinks is on node tce-worker before test
    Jan 30 09:11:10.884: INFO: kube-flannel-ds-7n9z9 from kube-flannel started at 2023-01-30 08:54:18 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.884: INFO: 	Container kube-flannel ready: true, restart count 0
    Jan 30 09:11:10.884: INFO: coredns-787d4945fb-66qrn from kube-system started at 2023-01-30 09:00:12 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.884: INFO: 	Container coredns ready: true, restart count 0
    Jan 30 09:11:10.884: INFO: kube-proxy-qskrv from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.884: INFO: 	Container kube-proxy ready: true, restart count 0
    Jan 30 09:11:10.884: INFO: local-path-provisioner-c8855d4bb-c9t9l from local-path-storage started at 2023-01-30 09:00:12 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.884: INFO: 	Container local-path-provisioner ready: true, restart count 0
    Jan 30 09:11:10.884: INFO: sonobuoy from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.884: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Jan 30 09:11:10.884: INFO: sonobuoy-e2e-job-bfd46d4d86374bf4 from sonobuoy started at 2023-01-30 08:11:21 +0000 UTC (2 container statuses recorded)
    Jan 30 09:11:10.884: INFO: 	Container e2e ready: true, restart count 0
    Jan 30 09:11:10.885: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 09:11:10.885: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-bg88k from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
    Jan 30 09:11:10.885: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 09:11:10.885: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 30 09:11:10.885: INFO: 
    Logging pods the apiserver thinks is on node tce-worker2 before test
    Jan 30 09:11:10.889: INFO: kube-flannel-ds-bdsbq from kube-flannel started at 2023-01-30 09:00:39 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.889: INFO: 	Container kube-flannel ready: true, restart count 0
    Jan 30 09:11:10.889: INFO: kube-proxy-6h6xz from kube-system started at 2023-01-30 08:08:03 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.889: INFO: 	Container kube-proxy ready: true, restart count 0
    Jan 30 09:11:10.889: INFO: pod-update-26f48347-89ee-40a6-a4fe-68701deb5c50 from pods-1217 started at 2023-01-30 09:11:08 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.889: INFO: 	Container pause ready: true, restart count 0
    Jan 30 09:11:10.889: INFO: sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-rzjb7 from sonobuoy started at 2023-01-30 08:11:22 +0000 UTC (2 container statuses recorded)
    Jan 30 09:11:10.889: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Jan 30 09:11:10.889: INFO: 	Container systemd-logs ready: true, restart count 0
    Jan 30 09:11:10.889: INFO: svc-latency-rc-h5qb2 from svc-latency-5570 started at 2023-01-30 09:10:58 +0000 UTC (1 container statuses recorded)
    Jan 30 09:11:10.889: INFO: 	Container svc-latency-rc ready: true, restart count 0
    [It] validates that NodeSelector is respected if matching  [Conformance]
      test/e2e/scheduling/predicates.go:466
    STEP: Trying to launch a pod without a label to get a node which can launch it. 01/30/23 09:11:10.889
    Jan 30 09:11:10.896: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-9045" to be "running"
    Jan 30 09:11:10.898: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00876ms
    Jan 30 09:11:12.902: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.005060249s
    Jan 30 09:11:12.902: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 01/30/23 09:11:12.903
    STEP: Trying to apply a random label on the found node. 01/30/23 09:11:12.913
    STEP: verifying the node has the label kubernetes.io/e2e-e0694fa8-65bd-41a7-8809-61c16acb4331 42 01/30/23 09:11:12.92
    STEP: Trying to relaunch the pod, now with labels. 01/30/23 09:11:12.923
    Jan 30 09:11:12.927: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-9045" to be "not pending"
    Jan 30 09:11:12.930: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021796ms
    Jan 30 09:11:14.934: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.006866537s
    Jan 30 09:11:14.934: INFO: Pod "with-labels" satisfied condition "not pending"
    STEP: removing the label kubernetes.io/e2e-e0694fa8-65bd-41a7-8809-61c16acb4331 off the node tce-worker2 01/30/23 09:11:14.937
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-e0694fa8-65bd-41a7-8809-61c16acb4331 01/30/23 09:11:14.95
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:11:14.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-9045" for this suite. 01/30/23 09:11:14.964
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:11:14.978
Jan 30 09:11:14.978: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename namespaces 01/30/23 09:11:14.979
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:15.004
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:15.011
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
STEP: Read namespace status 01/30/23 09:11:15.014
Jan 30 09:11:15.021: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
STEP: Patch namespace status 01/30/23 09:11:15.021
Jan 30 09:11:15.030: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
STEP: Update namespace status 01/30/23 09:11:15.03
Jan 30 09:11:15.046: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:11:15.048: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-6370" for this suite. 01/30/23 09:11:15.061
------------------------------
â€¢ [0.091 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:11:14.978
    Jan 30 09:11:14.978: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename namespaces 01/30/23 09:11:14.979
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:15.004
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:15.011
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a namespace status [Conformance]
      test/e2e/apimachinery/namespace.go:299
    STEP: Read namespace status 01/30/23 09:11:15.014
    Jan 30 09:11:15.021: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
    STEP: Patch namespace status 01/30/23 09:11:15.021
    Jan 30 09:11:15.030: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
    STEP: Update namespace status 01/30/23 09:11:15.03
    Jan 30 09:11:15.046: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:11:15.048: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-6370" for this suite. 01/30/23 09:11:15.061
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:11:15.07
Jan 30 09:11:15.070: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 09:11:15.071
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:15.089
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:15.092
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:11:15.095
Jan 30 09:11:15.103: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769" in namespace "downward-api-115" to be "Succeeded or Failed"
Jan 30 09:11:15.107: INFO: Pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769": Phase="Pending", Reason="", readiness=false. Elapsed: 4.082963ms
Jan 30 09:11:17.112: INFO: Pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008403855s
Jan 30 09:11:19.110: INFO: Pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006467897s
STEP: Saw pod success 01/30/23 09:11:19.11
Jan 30 09:11:19.110: INFO: Pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769" satisfied condition "Succeeded or Failed"
Jan 30 09:11:19.113: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769 container client-container: <nil>
STEP: delete the pod 01/30/23 09:11:19.12
Jan 30 09:11:19.129: INFO: Waiting for pod downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769 to disappear
Jan 30 09:11:19.131: INFO: Pod downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 09:11:19.132: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-115" for this suite. 01/30/23 09:11:19.135
------------------------------
â€¢ [4.069 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:11:15.07
    Jan 30 09:11:15.070: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 09:11:15.071
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:15.089
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:15.092
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:68
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:11:15.095
    Jan 30 09:11:15.103: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769" in namespace "downward-api-115" to be "Succeeded or Failed"
    Jan 30 09:11:15.107: INFO: Pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769": Phase="Pending", Reason="", readiness=false. Elapsed: 4.082963ms
    Jan 30 09:11:17.112: INFO: Pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008403855s
    Jan 30 09:11:19.110: INFO: Pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006467897s
    STEP: Saw pod success 01/30/23 09:11:19.11
    Jan 30 09:11:19.110: INFO: Pod "downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769" satisfied condition "Succeeded or Failed"
    Jan 30 09:11:19.113: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769 container client-container: <nil>
    STEP: delete the pod 01/30/23 09:11:19.12
    Jan 30 09:11:19.129: INFO: Waiting for pod downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769 to disappear
    Jan 30 09:11:19.131: INFO: Pod downwardapi-volume-f7dfc04f-8ddd-4844-9796-55bda0626769 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:11:19.132: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-115" for this suite. 01/30/23 09:11:19.135
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:616
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:11:19.141
Jan 30 09:11:19.141: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-preemption 01/30/23 09:11:19.141
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:19.154
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:19.156
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Jan 30 09:11:19.173: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 09:12:19.189: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:12:19.191
Jan 30 09:12:19.191: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-preemption-path 01/30/23 09:12:19.191
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:12:19.203
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:12:19.205
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:569
STEP: Finding an available node 01/30/23 09:12:19.207
STEP: Trying to launch a pod without a label to get a node which can launch it. 01/30/23 09:12:19.207
Jan 30 09:12:19.213: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-9983" to be "running"
Jan 30 09:12:19.215: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.107397ms
Jan 30 09:12:21.218: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.005592842s
Jan 30 09:12:21.218: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 01/30/23 09:12:21.221
Jan 30 09:12:21.231: INFO: found a healthy node: tce-worker2
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:616
Jan 30 09:12:29.278: INFO: pods created so far: [1 1 1]
Jan 30 09:12:29.278: INFO: length of pods created so far: 3
Jan 30 09:12:35.286: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/node/init/init.go:32
Jan 30 09:12:42.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:543
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:12:42.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PreemptionExecutionPath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PreemptionExecutionPath
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-9983" for this suite. 01/30/23 09:12:42.345
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-1252" for this suite. 01/30/23 09:12:42.35
------------------------------
â€¢ [SLOW TEST] [83.215 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:531
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/scheduling/preemption.go:616

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:11:19.141
    Jan 30 09:11:19.141: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-preemption 01/30/23 09:11:19.141
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:11:19.154
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:11:19.156
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Jan 30 09:11:19.173: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 30 09:12:19.189: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PreemptionExecutionPath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:12:19.191
    Jan 30 09:12:19.191: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-preemption-path 01/30/23 09:12:19.191
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:12:19.203
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:12:19.205
    [BeforeEach] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:569
    STEP: Finding an available node 01/30/23 09:12:19.207
    STEP: Trying to launch a pod without a label to get a node which can launch it. 01/30/23 09:12:19.207
    Jan 30 09:12:19.213: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-9983" to be "running"
    Jan 30 09:12:19.215: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 2.107397ms
    Jan 30 09:12:21.218: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.005592842s
    Jan 30 09:12:21.218: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 01/30/23 09:12:21.221
    Jan 30 09:12:21.231: INFO: found a healthy node: tce-worker2
    [It] runs ReplicaSets to verify preemption running path [Conformance]
      test/e2e/scheduling/preemption.go:616
    Jan 30 09:12:29.278: INFO: pods created so far: [1 1 1]
    Jan 30 09:12:29.278: INFO: length of pods created so far: 3
    Jan 30 09:12:35.286: INFO: pods created so far: [2 2 1]
    [AfterEach] PreemptionExecutionPath
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:12:42.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:543
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:12:42.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PreemptionExecutionPath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PreemptionExecutionPath
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-9983" for this suite. 01/30/23 09:12:42.345
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-1252" for this suite. 01/30/23 09:12:42.35
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:12:42.356
Jan 30 09:12:42.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:12:42.357
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:12:42.37
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:12:42.374
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
Jan 30 09:12:42.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 01/30/23 09:12:43.672
Jan 30 09:12:43.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 create -f -'
Jan 30 09:12:44.196: INFO: stderr: ""
Jan 30 09:12:44.196: INFO: stdout: "e2e-test-crd-publish-openapi-4146-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 30 09:12:44.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 delete e2e-test-crd-publish-openapi-4146-crds test-foo'
Jan 30 09:12:44.277: INFO: stderr: ""
Jan 30 09:12:44.277: INFO: stdout: "e2e-test-crd-publish-openapi-4146-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Jan 30 09:12:44.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 apply -f -'
Jan 30 09:12:44.423: INFO: stderr: ""
Jan 30 09:12:44.423: INFO: stdout: "e2e-test-crd-publish-openapi-4146-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jan 30 09:12:44.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 delete e2e-test-crd-publish-openapi-4146-crds test-foo'
Jan 30 09:12:44.501: INFO: stderr: ""
Jan 30 09:12:44.501: INFO: stdout: "e2e-test-crd-publish-openapi-4146-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 01/30/23 09:12:44.501
Jan 30 09:12:44.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 create -f -'
Jan 30 09:12:44.632: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 01/30/23 09:12:44.632
Jan 30 09:12:44.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 create -f -'
Jan 30 09:12:44.751: INFO: rc: 1
Jan 30 09:12:44.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 apply -f -'
Jan 30 09:12:44.892: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties 01/30/23 09:12:44.892
Jan 30 09:12:44.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 create -f -'
Jan 30 09:12:45.054: INFO: rc: 1
Jan 30 09:12:45.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 apply -f -'
Jan 30 09:12:45.199: INFO: rc: 1
STEP: kubectl explain works to explain CR properties 01/30/23 09:12:45.199
Jan 30 09:12:45.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds'
Jan 30 09:12:45.334: INFO: stderr: ""
Jan 30 09:12:45.334: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4146-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively 01/30/23 09:12:45.334
Jan 30 09:12:45.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds.metadata'
Jan 30 09:12:45.456: INFO: stderr: ""
Jan 30 09:12:45.456: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4146-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Jan 30 09:12:45.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds.spec'
Jan 30 09:12:45.620: INFO: stderr: ""
Jan 30 09:12:45.620: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4146-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Jan 30 09:12:45.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds.spec.bars'
Jan 30 09:12:45.764: INFO: stderr: ""
Jan 30 09:12:45.764: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4146-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist 01/30/23 09:12:45.764
Jan 30 09:12:45.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds.spec.bars2'
Jan 30 09:12:45.888: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:12:47.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9426" for this suite. 01/30/23 09:12:47.221
------------------------------
â€¢ [4.873 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:12:42.356
    Jan 30 09:12:42.356: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:12:42.357
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:12:42.37
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:12:42.374
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD with validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:69
    Jan 30 09:12:42.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 01/30/23 09:12:43.672
    Jan 30 09:12:43.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 create -f -'
    Jan 30 09:12:44.196: INFO: stderr: ""
    Jan 30 09:12:44.196: INFO: stdout: "e2e-test-crd-publish-openapi-4146-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Jan 30 09:12:44.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 delete e2e-test-crd-publish-openapi-4146-crds test-foo'
    Jan 30 09:12:44.277: INFO: stderr: ""
    Jan 30 09:12:44.277: INFO: stdout: "e2e-test-crd-publish-openapi-4146-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    Jan 30 09:12:44.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 apply -f -'
    Jan 30 09:12:44.423: INFO: stderr: ""
    Jan 30 09:12:44.423: INFO: stdout: "e2e-test-crd-publish-openapi-4146-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Jan 30 09:12:44.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 delete e2e-test-crd-publish-openapi-4146-crds test-foo'
    Jan 30 09:12:44.501: INFO: stderr: ""
    Jan 30 09:12:44.501: INFO: stdout: "e2e-test-crd-publish-openapi-4146-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 01/30/23 09:12:44.501
    Jan 30 09:12:44.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 create -f -'
    Jan 30 09:12:44.632: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 01/30/23 09:12:44.632
    Jan 30 09:12:44.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 create -f -'
    Jan 30 09:12:44.751: INFO: rc: 1
    Jan 30 09:12:44.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 apply -f -'
    Jan 30 09:12:44.892: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request without required properties 01/30/23 09:12:44.892
    Jan 30 09:12:44.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 create -f -'
    Jan 30 09:12:45.054: INFO: rc: 1
    Jan 30 09:12:45.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 --namespace=crd-publish-openapi-9426 apply -f -'
    Jan 30 09:12:45.199: INFO: rc: 1
    STEP: kubectl explain works to explain CR properties 01/30/23 09:12:45.199
    Jan 30 09:12:45.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds'
    Jan 30 09:12:45.334: INFO: stderr: ""
    Jan 30 09:12:45.334: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4146-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
    STEP: kubectl explain works to explain CR properties recursively 01/30/23 09:12:45.334
    Jan 30 09:12:45.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds.metadata'
    Jan 30 09:12:45.456: INFO: stderr: ""
    Jan 30 09:12:45.456: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4146-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
    Jan 30 09:12:45.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds.spec'
    Jan 30 09:12:45.620: INFO: stderr: ""
    Jan 30 09:12:45.620: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4146-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
    Jan 30 09:12:45.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds.spec.bars'
    Jan 30 09:12:45.764: INFO: stderr: ""
    Jan 30 09:12:45.764: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4146-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
    STEP: kubectl explain works to return error when explain is called on property that doesn't exist 01/30/23 09:12:45.764
    Jan 30 09:12:45.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=crd-publish-openapi-9426 explain e2e-test-crd-publish-openapi-4146-crds.spec.bars2'
    Jan 30 09:12:45.888: INFO: rc: 1
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:12:47.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9426" for this suite. 01/30/23 09:12:47.221
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:12:47.229
Jan 30 09:12:47.229: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename gc 01/30/23 09:12:47.23
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:12:47.246
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:12:47.25
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
STEP: create the rc1 01/30/23 09:12:47.257
STEP: create the rc2 01/30/23 09:12:47.265
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 01/30/23 09:12:52.285
STEP: delete the rc simpletest-rc-to-be-deleted 01/30/23 09:12:53.263
STEP: wait for the rc to be deleted 01/30/23 09:12:53.285
Jan 30 09:12:58.305: INFO: 67 pods remaining
Jan 30 09:12:58.306: INFO: 67 pods has nil DeletionTimestamp
Jan 30 09:12:58.306: INFO: 
STEP: Gathering metrics 01/30/23 09:13:03.294
Jan 30 09:13:03.312: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
Jan 30 09:13:03.315: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.92552ms
Jan 30 09:13:03.315: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
Jan 30 09:13:03.315: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
Jan 30 09:13:03.381: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Jan 30 09:13:03.381: INFO: Deleting pod "simpletest-rc-to-be-deleted-26qs2" in namespace "gc-5432"
Jan 30 09:13:03.406: INFO: Deleting pod "simpletest-rc-to-be-deleted-2dkd8" in namespace "gc-5432"
Jan 30 09:13:03.417: INFO: Deleting pod "simpletest-rc-to-be-deleted-2l5f7" in namespace "gc-5432"
Jan 30 09:13:03.428: INFO: Deleting pod "simpletest-rc-to-be-deleted-2nw27" in namespace "gc-5432"
Jan 30 09:13:03.442: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bc9j" in namespace "gc-5432"
Jan 30 09:13:03.460: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hq8q" in namespace "gc-5432"
Jan 30 09:13:03.471: INFO: Deleting pod "simpletest-rc-to-be-deleted-4p68b" in namespace "gc-5432"
Jan 30 09:13:03.495: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pkkm" in namespace "gc-5432"
Jan 30 09:13:03.517: INFO: Deleting pod "simpletest-rc-to-be-deleted-4qxtw" in namespace "gc-5432"
Jan 30 09:13:03.542: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vnl5" in namespace "gc-5432"
Jan 30 09:13:03.575: INFO: Deleting pod "simpletest-rc-to-be-deleted-5d2ld" in namespace "gc-5432"
Jan 30 09:13:03.591: INFO: Deleting pod "simpletest-rc-to-be-deleted-5g77b" in namespace "gc-5432"
Jan 30 09:13:03.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mlwc" in namespace "gc-5432"
Jan 30 09:13:03.646: INFO: Deleting pod "simpletest-rc-to-be-deleted-5pl8t" in namespace "gc-5432"
Jan 30 09:13:03.667: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rfwm" in namespace "gc-5432"
Jan 30 09:13:03.683: INFO: Deleting pod "simpletest-rc-to-be-deleted-5w2nr" in namespace "gc-5432"
Jan 30 09:13:03.695: INFO: Deleting pod "simpletest-rc-to-be-deleted-65nd2" in namespace "gc-5432"
Jan 30 09:13:03.716: INFO: Deleting pod "simpletest-rc-to-be-deleted-67ngw" in namespace "gc-5432"
Jan 30 09:13:03.737: INFO: Deleting pod "simpletest-rc-to-be-deleted-67tz4" in namespace "gc-5432"
Jan 30 09:13:03.753: INFO: Deleting pod "simpletest-rc-to-be-deleted-6bdq8" in namespace "gc-5432"
Jan 30 09:13:03.784: INFO: Deleting pod "simpletest-rc-to-be-deleted-6cgng" in namespace "gc-5432"
Jan 30 09:13:03.814: INFO: Deleting pod "simpletest-rc-to-be-deleted-6gt47" in namespace "gc-5432"
Jan 30 09:13:03.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nhdr" in namespace "gc-5432"
Jan 30 09:13:03.906: INFO: Deleting pod "simpletest-rc-to-be-deleted-6r2j5" in namespace "gc-5432"
Jan 30 09:13:03.990: INFO: Deleting pod "simpletest-rc-to-be-deleted-72f8w" in namespace "gc-5432"
Jan 30 09:13:04.018: INFO: Deleting pod "simpletest-rc-to-be-deleted-769ch" in namespace "gc-5432"
Jan 30 09:13:04.046: INFO: Deleting pod "simpletest-rc-to-be-deleted-79mhp" in namespace "gc-5432"
Jan 30 09:13:04.137: INFO: Deleting pod "simpletest-rc-to-be-deleted-79vbq" in namespace "gc-5432"
Jan 30 09:13:04.227: INFO: Deleting pod "simpletest-rc-to-be-deleted-7fww9" in namespace "gc-5432"
Jan 30 09:13:04.282: INFO: Deleting pod "simpletest-rc-to-be-deleted-7rgr5" in namespace "gc-5432"
Jan 30 09:13:04.312: INFO: Deleting pod "simpletest-rc-to-be-deleted-7scsk" in namespace "gc-5432"
Jan 30 09:13:04.331: INFO: Deleting pod "simpletest-rc-to-be-deleted-8j6vd" in namespace "gc-5432"
Jan 30 09:13:04.354: INFO: Deleting pod "simpletest-rc-to-be-deleted-8m2dd" in namespace "gc-5432"
Jan 30 09:13:04.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t78w" in namespace "gc-5432"
Jan 30 09:13:04.407: INFO: Deleting pod "simpletest-rc-to-be-deleted-929m2" in namespace "gc-5432"
Jan 30 09:13:04.423: INFO: Deleting pod "simpletest-rc-to-be-deleted-9k6q9" in namespace "gc-5432"
Jan 30 09:13:04.461: INFO: Deleting pod "simpletest-rc-to-be-deleted-9n9xn" in namespace "gc-5432"
Jan 30 09:13:04.482: INFO: Deleting pod "simpletest-rc-to-be-deleted-9pjld" in namespace "gc-5432"
Jan 30 09:13:04.515: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9k6b" in namespace "gc-5432"
Jan 30 09:13:04.535: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjqzz" in namespace "gc-5432"
Jan 30 09:13:04.549: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjskz" in namespace "gc-5432"
Jan 30 09:13:04.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-blsj6" in namespace "gc-5432"
Jan 30 09:13:04.588: INFO: Deleting pod "simpletest-rc-to-be-deleted-bssq6" in namespace "gc-5432"
Jan 30 09:13:04.608: INFO: Deleting pod "simpletest-rc-to-be-deleted-bwfsx" in namespace "gc-5432"
Jan 30 09:13:04.643: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9php" in namespace "gc-5432"
Jan 30 09:13:04.670: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjn6g" in namespace "gc-5432"
Jan 30 09:13:04.687: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5vgn" in namespace "gc-5432"
Jan 30 09:13:04.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbfgw" in namespace "gc-5432"
Jan 30 09:13:04.730: INFO: Deleting pod "simpletest-rc-to-be-deleted-ddfwb" in namespace "gc-5432"
Jan 30 09:13:04.762: INFO: Deleting pod "simpletest-rc-to-be-deleted-f64gz" in namespace "gc-5432"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 30 09:13:04.785: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-5432" for this suite. 01/30/23 09:13:04.796
------------------------------
â€¢ [SLOW TEST] [17.582 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:12:47.229
    Jan 30 09:12:47.229: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename gc 01/30/23 09:12:47.23
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:12:47.246
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:12:47.25
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
      test/e2e/apimachinery/garbage_collector.go:735
    STEP: create the rc1 01/30/23 09:12:47.257
    STEP: create the rc2 01/30/23 09:12:47.265
    STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 01/30/23 09:12:52.285
    STEP: delete the rc simpletest-rc-to-be-deleted 01/30/23 09:12:53.263
    STEP: wait for the rc to be deleted 01/30/23 09:12:53.285
    Jan 30 09:12:58.305: INFO: 67 pods remaining
    Jan 30 09:12:58.306: INFO: 67 pods has nil DeletionTimestamp
    Jan 30 09:12:58.306: INFO: 
    STEP: Gathering metrics 01/30/23 09:13:03.294
    Jan 30 09:13:03.312: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
    Jan 30 09:13:03.315: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.92552ms
    Jan 30 09:13:03.315: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
    Jan 30 09:13:03.315: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
    Jan 30 09:13:03.381: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Jan 30 09:13:03.381: INFO: Deleting pod "simpletest-rc-to-be-deleted-26qs2" in namespace "gc-5432"
    Jan 30 09:13:03.406: INFO: Deleting pod "simpletest-rc-to-be-deleted-2dkd8" in namespace "gc-5432"
    Jan 30 09:13:03.417: INFO: Deleting pod "simpletest-rc-to-be-deleted-2l5f7" in namespace "gc-5432"
    Jan 30 09:13:03.428: INFO: Deleting pod "simpletest-rc-to-be-deleted-2nw27" in namespace "gc-5432"
    Jan 30 09:13:03.442: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bc9j" in namespace "gc-5432"
    Jan 30 09:13:03.460: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hq8q" in namespace "gc-5432"
    Jan 30 09:13:03.471: INFO: Deleting pod "simpletest-rc-to-be-deleted-4p68b" in namespace "gc-5432"
    Jan 30 09:13:03.495: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pkkm" in namespace "gc-5432"
    Jan 30 09:13:03.517: INFO: Deleting pod "simpletest-rc-to-be-deleted-4qxtw" in namespace "gc-5432"
    Jan 30 09:13:03.542: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vnl5" in namespace "gc-5432"
    Jan 30 09:13:03.575: INFO: Deleting pod "simpletest-rc-to-be-deleted-5d2ld" in namespace "gc-5432"
    Jan 30 09:13:03.591: INFO: Deleting pod "simpletest-rc-to-be-deleted-5g77b" in namespace "gc-5432"
    Jan 30 09:13:03.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mlwc" in namespace "gc-5432"
    Jan 30 09:13:03.646: INFO: Deleting pod "simpletest-rc-to-be-deleted-5pl8t" in namespace "gc-5432"
    Jan 30 09:13:03.667: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rfwm" in namespace "gc-5432"
    Jan 30 09:13:03.683: INFO: Deleting pod "simpletest-rc-to-be-deleted-5w2nr" in namespace "gc-5432"
    Jan 30 09:13:03.695: INFO: Deleting pod "simpletest-rc-to-be-deleted-65nd2" in namespace "gc-5432"
    Jan 30 09:13:03.716: INFO: Deleting pod "simpletest-rc-to-be-deleted-67ngw" in namespace "gc-5432"
    Jan 30 09:13:03.737: INFO: Deleting pod "simpletest-rc-to-be-deleted-67tz4" in namespace "gc-5432"
    Jan 30 09:13:03.753: INFO: Deleting pod "simpletest-rc-to-be-deleted-6bdq8" in namespace "gc-5432"
    Jan 30 09:13:03.784: INFO: Deleting pod "simpletest-rc-to-be-deleted-6cgng" in namespace "gc-5432"
    Jan 30 09:13:03.814: INFO: Deleting pod "simpletest-rc-to-be-deleted-6gt47" in namespace "gc-5432"
    Jan 30 09:13:03.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nhdr" in namespace "gc-5432"
    Jan 30 09:13:03.906: INFO: Deleting pod "simpletest-rc-to-be-deleted-6r2j5" in namespace "gc-5432"
    Jan 30 09:13:03.990: INFO: Deleting pod "simpletest-rc-to-be-deleted-72f8w" in namespace "gc-5432"
    Jan 30 09:13:04.018: INFO: Deleting pod "simpletest-rc-to-be-deleted-769ch" in namespace "gc-5432"
    Jan 30 09:13:04.046: INFO: Deleting pod "simpletest-rc-to-be-deleted-79mhp" in namespace "gc-5432"
    Jan 30 09:13:04.137: INFO: Deleting pod "simpletest-rc-to-be-deleted-79vbq" in namespace "gc-5432"
    Jan 30 09:13:04.227: INFO: Deleting pod "simpletest-rc-to-be-deleted-7fww9" in namespace "gc-5432"
    Jan 30 09:13:04.282: INFO: Deleting pod "simpletest-rc-to-be-deleted-7rgr5" in namespace "gc-5432"
    Jan 30 09:13:04.312: INFO: Deleting pod "simpletest-rc-to-be-deleted-7scsk" in namespace "gc-5432"
    Jan 30 09:13:04.331: INFO: Deleting pod "simpletest-rc-to-be-deleted-8j6vd" in namespace "gc-5432"
    Jan 30 09:13:04.354: INFO: Deleting pod "simpletest-rc-to-be-deleted-8m2dd" in namespace "gc-5432"
    Jan 30 09:13:04.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t78w" in namespace "gc-5432"
    Jan 30 09:13:04.407: INFO: Deleting pod "simpletest-rc-to-be-deleted-929m2" in namespace "gc-5432"
    Jan 30 09:13:04.423: INFO: Deleting pod "simpletest-rc-to-be-deleted-9k6q9" in namespace "gc-5432"
    Jan 30 09:13:04.461: INFO: Deleting pod "simpletest-rc-to-be-deleted-9n9xn" in namespace "gc-5432"
    Jan 30 09:13:04.482: INFO: Deleting pod "simpletest-rc-to-be-deleted-9pjld" in namespace "gc-5432"
    Jan 30 09:13:04.515: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9k6b" in namespace "gc-5432"
    Jan 30 09:13:04.535: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjqzz" in namespace "gc-5432"
    Jan 30 09:13:04.549: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjskz" in namespace "gc-5432"
    Jan 30 09:13:04.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-blsj6" in namespace "gc-5432"
    Jan 30 09:13:04.588: INFO: Deleting pod "simpletest-rc-to-be-deleted-bssq6" in namespace "gc-5432"
    Jan 30 09:13:04.608: INFO: Deleting pod "simpletest-rc-to-be-deleted-bwfsx" in namespace "gc-5432"
    Jan 30 09:13:04.643: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9php" in namespace "gc-5432"
    Jan 30 09:13:04.670: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjn6g" in namespace "gc-5432"
    Jan 30 09:13:04.687: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5vgn" in namespace "gc-5432"
    Jan 30 09:13:04.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbfgw" in namespace "gc-5432"
    Jan 30 09:13:04.730: INFO: Deleting pod "simpletest-rc-to-be-deleted-ddfwb" in namespace "gc-5432"
    Jan 30 09:13:04.762: INFO: Deleting pod "simpletest-rc-to-be-deleted-f64gz" in namespace "gc-5432"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:13:04.785: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-5432" for this suite. 01/30/23 09:13:04.796
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:13:04.813
Jan 30 09:13:04.813: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename security-context 01/30/23 09:13:04.815
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:04.848
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:04.852
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 01/30/23 09:13:04.868
Jan 30 09:13:04.896: INFO: Waiting up to 5m0s for pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22" in namespace "security-context-1746" to be "Succeeded or Failed"
Jan 30 09:13:04.907: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 10.690168ms
Jan 30 09:13:06.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013399586s
Jan 30 09:13:08.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014104312s
Jan 30 09:13:10.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013337979s
Jan 30 09:13:12.911: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 8.014546328s
Jan 30 09:13:14.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.013162817s
STEP: Saw pod success 01/30/23 09:13:14.91
Jan 30 09:13:14.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22" satisfied condition "Succeeded or Failed"
Jan 30 09:13:14.912: INFO: Trying to get logs from node tce-worker2 pod security-context-082a44ae-ab4d-490b-af12-dac53eb54a22 container test-container: <nil>
STEP: delete the pod 01/30/23 09:13:14.92
Jan 30 09:13:14.941: INFO: Waiting for pod security-context-082a44ae-ab4d-490b-af12-dac53eb54a22 to disappear
Jan 30 09:13:14.943: INFO: Pod security-context-082a44ae-ab4d-490b-af12-dac53eb54a22 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 30 09:13:14.943: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-1746" for this suite. 01/30/23 09:13:14.946
------------------------------
â€¢ [SLOW TEST] [10.138 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:13:04.813
    Jan 30 09:13:04.813: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename security-context 01/30/23 09:13:04.815
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:04.848
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:04.852
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:129
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 01/30/23 09:13:04.868
    Jan 30 09:13:04.896: INFO: Waiting up to 5m0s for pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22" in namespace "security-context-1746" to be "Succeeded or Failed"
    Jan 30 09:13:04.907: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 10.690168ms
    Jan 30 09:13:06.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013399586s
    Jan 30 09:13:08.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014104312s
    Jan 30 09:13:10.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013337979s
    Jan 30 09:13:12.911: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Pending", Reason="", readiness=false. Elapsed: 8.014546328s
    Jan 30 09:13:14.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.013162817s
    STEP: Saw pod success 01/30/23 09:13:14.91
    Jan 30 09:13:14.910: INFO: Pod "security-context-082a44ae-ab4d-490b-af12-dac53eb54a22" satisfied condition "Succeeded or Failed"
    Jan 30 09:13:14.912: INFO: Trying to get logs from node tce-worker2 pod security-context-082a44ae-ab4d-490b-af12-dac53eb54a22 container test-container: <nil>
    STEP: delete the pod 01/30/23 09:13:14.92
    Jan 30 09:13:14.941: INFO: Waiting for pod security-context-082a44ae-ab4d-490b-af12-dac53eb54a22 to disappear
    Jan 30 09:13:14.943: INFO: Pod security-context-082a44ae-ab4d-490b-af12-dac53eb54a22 no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:13:14.943: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-1746" for this suite. 01/30/23 09:13:14.946
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
[BeforeEach] [sig-architecture] Conformance Tests
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:13:14.952
Jan 30 09:13:14.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename conformance-tests 01/30/23 09:13:14.953
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:14.966
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:14.971
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:31
[It] should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
STEP: Getting node addresses 01/30/23 09:13:14.974
Jan 30 09:13:14.974: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/node/init/init.go:32
Jan 30 09:13:14.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  tear down framework | framework.go:193
STEP: Destroying namespace "conformance-tests-8195" for this suite. 01/30/23 09:13:14.981
------------------------------
â€¢ [0.035 seconds]
[sig-architecture] Conformance Tests
test/e2e/architecture/framework.go:23
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-architecture] Conformance Tests
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:13:14.952
    Jan 30 09:13:14.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename conformance-tests 01/30/23 09:13:14.953
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:14.966
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:14.971
    [BeforeEach] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:31
    [It] should have at least two untainted nodes [Conformance]
      test/e2e/architecture/conformance.go:38
    STEP: Getting node addresses 01/30/23 09:13:14.974
    Jan 30 09:13:14.974: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    [AfterEach] [sig-architecture] Conformance Tests
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:13:14.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      tear down framework | framework.go:193
    STEP: Destroying namespace "conformance-tests-8195" for this suite. 01/30/23 09:13:14.981
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:13:14.987
Jan 30 09:13:14.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename job 01/30/23 09:13:14.988
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:14.999
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:15.003
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
STEP: Creating Indexed job 01/30/23 09:13:15.006
STEP: Ensuring job reaches completions 01/30/23 09:13:15.013
STEP: Ensuring pods with index for job exist 01/30/23 09:13:25.016
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 30 09:13:25.020: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-9758" for this suite. 01/30/23 09:13:25.023
------------------------------
â€¢ [SLOW TEST] [10.051 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:13:14.987
    Jan 30 09:13:14.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename job 01/30/23 09:13:14.988
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:14.999
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:15.003
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
      test/e2e/apps/job.go:366
    STEP: Creating Indexed job 01/30/23 09:13:15.006
    STEP: Ensuring job reaches completions 01/30/23 09:13:15.013
    STEP: Ensuring pods with index for job exist 01/30/23 09:13:25.016
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:13:25.020: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-9758" for this suite. 01/30/23 09:13:25.023
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:13:25.039
Jan 30 09:13:25.039: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:13:25.041
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:25.056
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:25.059
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
STEP: set up a multi version CRD 01/30/23 09:13:25.063
Jan 30 09:13:25.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: rename a version 01/30/23 09:13:28.273
STEP: check the new version name is served 01/30/23 09:13:28.296
STEP: check the old version name is removed 01/30/23 09:13:29.08
STEP: check the other version is not changed 01/30/23 09:13:29.734
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:13:32.388: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-8400" for this suite. 01/30/23 09:13:32.393
------------------------------
â€¢ [SLOW TEST] [7.370 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:13:25.039
    Jan 30 09:13:25.039: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:13:25.041
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:25.056
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:25.059
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] updates the published spec when one version gets renamed [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:391
    STEP: set up a multi version CRD 01/30/23 09:13:25.063
    Jan 30 09:13:25.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: rename a version 01/30/23 09:13:28.273
    STEP: check the new version name is served 01/30/23 09:13:28.296
    STEP: check the old version name is removed 01/30/23 09:13:29.08
    STEP: check the other version is not changed 01/30/23 09:13:29.734
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:13:32.388: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-8400" for this suite. 01/30/23 09:13:32.393
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:13:32.409
Jan 30 09:13:32.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename gc 01/30/23 09:13:32.411
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:32.422
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:32.424
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
STEP: create the deployment 01/30/23 09:13:32.429
STEP: Wait for the Deployment to create new ReplicaSet 01/30/23 09:13:32.434
STEP: delete the deployment 01/30/23 09:13:32.94
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 01/30/23 09:13:32.944
STEP: Gathering metrics 01/30/23 09:13:33.456
Jan 30 09:13:33.464: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
Jan 30 09:13:33.466: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.470719ms
Jan 30 09:13:33.466: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
Jan 30 09:13:33.466: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
Jan 30 09:13:33.512: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 30 09:13:33.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-7436" for this suite. 01/30/23 09:13:33.517
------------------------------
â€¢ [1.112 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:13:32.409
    Jan 30 09:13:32.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename gc 01/30/23 09:13:32.411
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:32.422
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:32.424
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
      test/e2e/apimachinery/garbage_collector.go:550
    STEP: create the deployment 01/30/23 09:13:32.429
    STEP: Wait for the Deployment to create new ReplicaSet 01/30/23 09:13:32.434
    STEP: delete the deployment 01/30/23 09:13:32.94
    STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 01/30/23 09:13:32.944
    STEP: Gathering metrics 01/30/23 09:13:33.456
    Jan 30 09:13:33.464: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
    Jan 30 09:13:33.466: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.470719ms
    Jan 30 09:13:33.466: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
    Jan 30 09:13:33.466: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
    Jan 30 09:13:33.512: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:13:33.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-7436" for this suite. 01/30/23 09:13:33.517
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:13:33.523
Jan 30 09:13:33.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename events 01/30/23 09:13:33.524
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:33.542
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:33.545
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
STEP: creating a test event 01/30/23 09:13:33.548
STEP: listing all events in all namespaces 01/30/23 09:13:33.56
STEP: patching the test event 01/30/23 09:13:33.564
STEP: fetching the test event 01/30/23 09:13:33.575
STEP: updating the test event 01/30/23 09:13:33.577
STEP: getting the test event 01/30/23 09:13:33.588
STEP: deleting the test event 01/30/23 09:13:33.592
STEP: listing all events in all namespaces 01/30/23 09:13:33.6
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Jan 30 09:13:33.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-8421" for this suite. 01/30/23 09:13:33.607
------------------------------
â€¢ [0.095 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:13:33.523
    Jan 30 09:13:33.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename events 01/30/23 09:13:33.524
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:33.542
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:33.545
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of an event [Conformance]
      test/e2e/instrumentation/core_events.go:57
    STEP: creating a test event 01/30/23 09:13:33.548
    STEP: listing all events in all namespaces 01/30/23 09:13:33.56
    STEP: patching the test event 01/30/23 09:13:33.564
    STEP: fetching the test event 01/30/23 09:13:33.575
    STEP: updating the test event 01/30/23 09:13:33.577
    STEP: getting the test event 01/30/23 09:13:33.588
    STEP: deleting the test event 01/30/23 09:13:33.592
    STEP: listing all events in all namespaces 01/30/23 09:13:33.6
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:13:33.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-8421" for this suite. 01/30/23 09:13:33.607
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:13:33.618
Jan 30 09:13:33.618: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename init-container 01/30/23 09:13:33.619
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:33.634
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:33.637
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
STEP: creating the pod 01/30/23 09:13:33.64
Jan 30 09:13:33.640: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:13:38.694: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-6903" for this suite. 01/30/23 09:13:38.698
------------------------------
â€¢ [SLOW TEST] [5.085 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:13:33.618
    Jan 30 09:13:33.618: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename init-container 01/30/23 09:13:33.619
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:33.634
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:33.637
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:177
    STEP: creating the pod 01/30/23 09:13:33.64
    Jan 30 09:13:33.640: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:13:38.694: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-6903" for this suite. 01/30/23 09:13:38.698
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:13:38.704
Jan 30 09:13:38.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename statefulset 01/30/23 09:13:38.705
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:38.72
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:38.722
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-9401 01/30/23 09:13:38.725
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
STEP: Creating a new StatefulSet 01/30/23 09:13:38.734
Jan 30 09:13:38.752: INFO: Found 0 stateful pods, waiting for 3
Jan 30 09:13:48.755: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:13:48.756: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:13:48.756: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 01/30/23 09:13:48.762
Jan 30 09:13:48.792: INFO: Updating stateful set ss2
STEP: Creating a new revision 01/30/23 09:13:48.792
STEP: Not applying an update when the partition is greater than the number of replicas 01/30/23 09:13:58.802
STEP: Performing a canary update 01/30/23 09:13:58.802
Jan 30 09:13:58.820: INFO: Updating stateful set ss2
Jan 30 09:13:58.823: INFO: Waiting for Pod statefulset-9401/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
STEP: Restoring Pods to the correct revision when they are deleted 01/30/23 09:14:08.828
Jan 30 09:14:08.877: INFO: Found 2 stateful pods, waiting for 3
Jan 30 09:14:18.881: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:14:18.881: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:14:18.881: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update 01/30/23 09:14:18.884
Jan 30 09:14:18.901: INFO: Updating stateful set ss2
Jan 30 09:14:18.905: INFO: Waiting for Pod statefulset-9401/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Jan 30 09:14:28.928: INFO: Updating stateful set ss2
Jan 30 09:14:28.931: INFO: Waiting for StatefulSet statefulset-9401/ss2 to complete update
Jan 30 09:14:28.931: INFO: Waiting for Pod statefulset-9401/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 30 09:14:38.938: INFO: Deleting all statefulset in ns statefulset-9401
Jan 30 09:14:38.940: INFO: Scaling statefulset ss2 to 0
Jan 30 09:14:48.953: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 09:14:48.955: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 30 09:14:48.973: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-9401" for this suite. 01/30/23 09:14:48.975
------------------------------
â€¢ [SLOW TEST] [70.277 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/apps/statefulset.go:317

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:13:38.704
    Jan 30 09:13:38.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename statefulset 01/30/23 09:13:38.705
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:13:38.72
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:13:38.722
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-9401 01/30/23 09:13:38.725
    [It] should perform canary updates and phased rolling updates of template modifications [Conformance]
      test/e2e/apps/statefulset.go:317
    STEP: Creating a new StatefulSet 01/30/23 09:13:38.734
    Jan 30 09:13:38.752: INFO: Found 0 stateful pods, waiting for 3
    Jan 30 09:13:48.755: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 09:13:48.756: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 09:13:48.756: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 01/30/23 09:13:48.762
    Jan 30 09:13:48.792: INFO: Updating stateful set ss2
    STEP: Creating a new revision 01/30/23 09:13:48.792
    STEP: Not applying an update when the partition is greater than the number of replicas 01/30/23 09:13:58.802
    STEP: Performing a canary update 01/30/23 09:13:58.802
    Jan 30 09:13:58.820: INFO: Updating stateful set ss2
    Jan 30 09:13:58.823: INFO: Waiting for Pod statefulset-9401/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    STEP: Restoring Pods to the correct revision when they are deleted 01/30/23 09:14:08.828
    Jan 30 09:14:08.877: INFO: Found 2 stateful pods, waiting for 3
    Jan 30 09:14:18.881: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 09:14:18.881: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 09:14:18.881: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Performing a phased rolling update 01/30/23 09:14:18.884
    Jan 30 09:14:18.901: INFO: Updating stateful set ss2
    Jan 30 09:14:18.905: INFO: Waiting for Pod statefulset-9401/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Jan 30 09:14:28.928: INFO: Updating stateful set ss2
    Jan 30 09:14:28.931: INFO: Waiting for StatefulSet statefulset-9401/ss2 to complete update
    Jan 30 09:14:28.931: INFO: Waiting for Pod statefulset-9401/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 30 09:14:38.938: INFO: Deleting all statefulset in ns statefulset-9401
    Jan 30 09:14:38.940: INFO: Scaling statefulset ss2 to 0
    Jan 30 09:14:48.953: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 09:14:48.955: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:14:48.973: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-9401" for this suite. 01/30/23 09:14:48.975
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:14:48.985
Jan 30 09:14:48.985: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 09:14:48.986
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:14:48.996
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:14:48.999
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
STEP: creating a service externalname-service with the type=ExternalName in namespace services-4814 01/30/23 09:14:49
STEP: changing the ExternalName service to type=NodePort 01/30/23 09:14:49.007
STEP: creating replication controller externalname-service in namespace services-4814 01/30/23 09:14:49.024
I0130 09:14:49.034259      24 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4814, replica count: 2
I0130 09:14:52.085812      24 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 09:14:52.085: INFO: Creating new exec pod
Jan 30 09:14:52.101: INFO: Waiting up to 5m0s for pod "execpodt5k7w" in namespace "services-4814" to be "running"
Jan 30 09:14:52.103: INFO: Pod "execpodt5k7w": Phase="Pending", Reason="", readiness=false. Elapsed: 2.134126ms
Jan 30 09:14:54.106: INFO: Pod "execpodt5k7w": Phase="Running", Reason="", readiness=true. Elapsed: 2.004321544s
Jan 30 09:14:54.106: INFO: Pod "execpodt5k7w" satisfied condition "running"
Jan 30 09:14:55.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4814 exec execpodt5k7w -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Jan 30 09:14:55.248: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 30 09:14:55.248: INFO: stdout: ""
Jan 30 09:14:55.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4814 exec execpodt5k7w -- /bin/sh -x -c nc -v -z -w 2 10.96.131.48 80'
Jan 30 09:14:55.351: INFO: stderr: "+ nc -v -z -w 2 10.96.131.48 80\nConnection to 10.96.131.48 80 port [tcp/http] succeeded!\n"
Jan 30 09:14:55.351: INFO: stdout: ""
Jan 30 09:14:55.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4814 exec execpodt5k7w -- /bin/sh -x -c nc -v -z -w 2 172.20.0.2 30222'
Jan 30 09:14:55.524: INFO: stderr: "+ nc -v -z -w 2 172.20.0.2 30222\nConnection to 172.20.0.2 30222 port [tcp/*] succeeded!\n"
Jan 30 09:14:55.524: INFO: stdout: ""
Jan 30 09:14:55.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4814 exec execpodt5k7w -- /bin/sh -x -c nc -v -z -w 2 172.20.0.4 30222'
Jan 30 09:14:55.688: INFO: stderr: "+ nc -v -z -w 2 172.20.0.4 30222\nConnection to 172.20.0.4 30222 port [tcp/*] succeeded!\n"
Jan 30 09:14:55.688: INFO: stdout: ""
Jan 30 09:14:55.688: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 09:14:55.708: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4814" for this suite. 01/30/23 09:14:55.712
------------------------------
â€¢ [SLOW TEST] [6.738 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:14:48.985
    Jan 30 09:14:48.985: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 09:14:48.986
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:14:48.996
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:14:48.999
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to NodePort [Conformance]
      test/e2e/network/service.go:1477
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-4814 01/30/23 09:14:49
    STEP: changing the ExternalName service to type=NodePort 01/30/23 09:14:49.007
    STEP: creating replication controller externalname-service in namespace services-4814 01/30/23 09:14:49.024
    I0130 09:14:49.034259      24 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4814, replica count: 2
    I0130 09:14:52.085812      24 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 09:14:52.085: INFO: Creating new exec pod
    Jan 30 09:14:52.101: INFO: Waiting up to 5m0s for pod "execpodt5k7w" in namespace "services-4814" to be "running"
    Jan 30 09:14:52.103: INFO: Pod "execpodt5k7w": Phase="Pending", Reason="", readiness=false. Elapsed: 2.134126ms
    Jan 30 09:14:54.106: INFO: Pod "execpodt5k7w": Phase="Running", Reason="", readiness=true. Elapsed: 2.004321544s
    Jan 30 09:14:54.106: INFO: Pod "execpodt5k7w" satisfied condition "running"
    Jan 30 09:14:55.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4814 exec execpodt5k7w -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Jan 30 09:14:55.248: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Jan 30 09:14:55.248: INFO: stdout: ""
    Jan 30 09:14:55.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4814 exec execpodt5k7w -- /bin/sh -x -c nc -v -z -w 2 10.96.131.48 80'
    Jan 30 09:14:55.351: INFO: stderr: "+ nc -v -z -w 2 10.96.131.48 80\nConnection to 10.96.131.48 80 port [tcp/http] succeeded!\n"
    Jan 30 09:14:55.351: INFO: stdout: ""
    Jan 30 09:14:55.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4814 exec execpodt5k7w -- /bin/sh -x -c nc -v -z -w 2 172.20.0.2 30222'
    Jan 30 09:14:55.524: INFO: stderr: "+ nc -v -z -w 2 172.20.0.2 30222\nConnection to 172.20.0.2 30222 port [tcp/*] succeeded!\n"
    Jan 30 09:14:55.524: INFO: stdout: ""
    Jan 30 09:14:55.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-4814 exec execpodt5k7w -- /bin/sh -x -c nc -v -z -w 2 172.20.0.4 30222'
    Jan 30 09:14:55.688: INFO: stderr: "+ nc -v -z -w 2 172.20.0.4 30222\nConnection to 172.20.0.4 30222 port [tcp/*] succeeded!\n"
    Jan 30 09:14:55.688: INFO: stdout: ""
    Jan 30 09:14:55.688: INFO: Cleaning up the ExternalName to NodePort test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:14:55.708: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4814" for this suite. 01/30/23 09:14:55.712
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:14:55.724
Jan 30 09:14:55.724: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 09:14:55.725
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:14:55.744
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:14:55.75
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
STEP: creating service nodeport-test with type=NodePort in namespace services-5859 01/30/23 09:14:55.752
STEP: creating replication controller nodeport-test in namespace services-5859 01/30/23 09:14:55.768
I0130 09:14:55.781091      24 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5859, replica count: 2
I0130 09:14:58.833195      24 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 09:14:58.833: INFO: Creating new exec pod
Jan 30 09:14:58.840: INFO: Waiting up to 5m0s for pod "execpod8plcr" in namespace "services-5859" to be "running"
Jan 30 09:14:58.842: INFO: Pod "execpod8plcr": Phase="Pending", Reason="", readiness=false. Elapsed: 1.94655ms
Jan 30 09:15:00.845: INFO: Pod "execpod8plcr": Phase="Running", Reason="", readiness=true. Elapsed: 2.005555477s
Jan 30 09:15:00.846: INFO: Pod "execpod8plcr" satisfied condition "running"
Jan 30 09:15:01.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-5859 exec execpod8plcr -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
Jan 30 09:15:01.976: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jan 30 09:15:01.976: INFO: stdout: ""
Jan 30 09:15:01.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-5859 exec execpod8plcr -- /bin/sh -x -c nc -v -z -w 2 10.96.173.146 80'
Jan 30 09:15:02.083: INFO: stderr: "+ nc -v -z -w 2 10.96.173.146 80\nConnection to 10.96.173.146 80 port [tcp/http] succeeded!\n"
Jan 30 09:15:02.083: INFO: stdout: ""
Jan 30 09:15:02.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-5859 exec execpod8plcr -- /bin/sh -x -c nc -v -z -w 2 172.20.0.2 31374'
Jan 30 09:15:02.255: INFO: stderr: "+ nc -v -z -w 2 172.20.0.2 31374\nConnection to 172.20.0.2 31374 port [tcp/*] succeeded!\n"
Jan 30 09:15:02.255: INFO: stdout: ""
Jan 30 09:15:02.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-5859 exec execpod8plcr -- /bin/sh -x -c nc -v -z -w 2 172.20.0.4 31374'
Jan 30 09:15:02.446: INFO: stderr: "+ nc -v -z -w 2 172.20.0.4 31374\nConnection to 172.20.0.4 31374 port [tcp/*] succeeded!\n"
Jan 30 09:15:02.446: INFO: stdout: ""
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:02.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5859" for this suite. 01/30/23 09:15:02.45
------------------------------
â€¢ [SLOW TEST] [6.731 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:14:55.724
    Jan 30 09:14:55.724: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 09:14:55.725
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:14:55.744
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:14:55.75
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to create a functioning NodePort service [Conformance]
      test/e2e/network/service.go:1302
    STEP: creating service nodeport-test with type=NodePort in namespace services-5859 01/30/23 09:14:55.752
    STEP: creating replication controller nodeport-test in namespace services-5859 01/30/23 09:14:55.768
    I0130 09:14:55.781091      24 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5859, replica count: 2
    I0130 09:14:58.833195      24 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 09:14:58.833: INFO: Creating new exec pod
    Jan 30 09:14:58.840: INFO: Waiting up to 5m0s for pod "execpod8plcr" in namespace "services-5859" to be "running"
    Jan 30 09:14:58.842: INFO: Pod "execpod8plcr": Phase="Pending", Reason="", readiness=false. Elapsed: 1.94655ms
    Jan 30 09:15:00.845: INFO: Pod "execpod8plcr": Phase="Running", Reason="", readiness=true. Elapsed: 2.005555477s
    Jan 30 09:15:00.846: INFO: Pod "execpod8plcr" satisfied condition "running"
    Jan 30 09:15:01.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-5859 exec execpod8plcr -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
    Jan 30 09:15:01.976: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
    Jan 30 09:15:01.976: INFO: stdout: ""
    Jan 30 09:15:01.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-5859 exec execpod8plcr -- /bin/sh -x -c nc -v -z -w 2 10.96.173.146 80'
    Jan 30 09:15:02.083: INFO: stderr: "+ nc -v -z -w 2 10.96.173.146 80\nConnection to 10.96.173.146 80 port [tcp/http] succeeded!\n"
    Jan 30 09:15:02.083: INFO: stdout: ""
    Jan 30 09:15:02.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-5859 exec execpod8plcr -- /bin/sh -x -c nc -v -z -w 2 172.20.0.2 31374'
    Jan 30 09:15:02.255: INFO: stderr: "+ nc -v -z -w 2 172.20.0.2 31374\nConnection to 172.20.0.2 31374 port [tcp/*] succeeded!\n"
    Jan 30 09:15:02.255: INFO: stdout: ""
    Jan 30 09:15:02.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-5859 exec execpod8plcr -- /bin/sh -x -c nc -v -z -w 2 172.20.0.4 31374'
    Jan 30 09:15:02.446: INFO: stderr: "+ nc -v -z -w 2 172.20.0.4 31374\nConnection to 172.20.0.4 31374 port [tcp/*] succeeded!\n"
    Jan 30 09:15:02.446: INFO: stdout: ""
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:02.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5859" for this suite. 01/30/23 09:15:02.45
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:02.456
Jan 30 09:15:02.457: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:15:02.458
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:02.474
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:02.476
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:15:02.478
Jan 30 09:15:02.486: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa" in namespace "projected-6796" to be "Succeeded or Failed"
Jan 30 09:15:02.489: INFO: Pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa": Phase="Pending", Reason="", readiness=false. Elapsed: 3.001382ms
Jan 30 09:15:04.492: INFO: Pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006661204s
Jan 30 09:15:06.491: INFO: Pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005303539s
STEP: Saw pod success 01/30/23 09:15:06.491
Jan 30 09:15:06.491: INFO: Pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa" satisfied condition "Succeeded or Failed"
Jan 30 09:15:06.493: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa container client-container: <nil>
STEP: delete the pod 01/30/23 09:15:06.5
Jan 30 09:15:06.522: INFO: Waiting for pod downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa to disappear
Jan 30 09:15:06.524: INFO: Pod downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:06.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6796" for this suite. 01/30/23 09:15:06.527
------------------------------
â€¢ [4.076 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:02.456
    Jan 30 09:15:02.457: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:15:02.458
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:02.474
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:02.476
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:193
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:15:02.478
    Jan 30 09:15:02.486: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa" in namespace "projected-6796" to be "Succeeded or Failed"
    Jan 30 09:15:02.489: INFO: Pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa": Phase="Pending", Reason="", readiness=false. Elapsed: 3.001382ms
    Jan 30 09:15:04.492: INFO: Pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006661204s
    Jan 30 09:15:06.491: INFO: Pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005303539s
    STEP: Saw pod success 01/30/23 09:15:06.491
    Jan 30 09:15:06.491: INFO: Pod "downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa" satisfied condition "Succeeded or Failed"
    Jan 30 09:15:06.493: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa container client-container: <nil>
    STEP: delete the pod 01/30/23 09:15:06.5
    Jan 30 09:15:06.522: INFO: Waiting for pod downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa to disappear
    Jan 30 09:15:06.524: INFO: Pod downwardapi-volume-ba01044d-154d-4e9b-a18f-fd00ed4f4dfa no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:06.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6796" for this suite. 01/30/23 09:15:06.527
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:06.533
Jan 30 09:15:06.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename svcaccounts 01/30/23 09:15:06.533
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:06.546
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:06.549
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
Jan 30 09:15:06.565: INFO: created pod pod-service-account-defaultsa
Jan 30 09:15:06.565: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Jan 30 09:15:06.581: INFO: created pod pod-service-account-mountsa
Jan 30 09:15:06.581: INFO: pod pod-service-account-mountsa service account token volume mount: true
Jan 30 09:15:06.586: INFO: created pod pod-service-account-nomountsa
Jan 30 09:15:06.586: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Jan 30 09:15:06.593: INFO: created pod pod-service-account-defaultsa-mountspec
Jan 30 09:15:06.593: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Jan 30 09:15:06.603: INFO: created pod pod-service-account-mountsa-mountspec
Jan 30 09:15:06.603: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Jan 30 09:15:06.615: INFO: created pod pod-service-account-nomountsa-mountspec
Jan 30 09:15:06.615: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Jan 30 09:15:06.631: INFO: created pod pod-service-account-defaultsa-nomountspec
Jan 30 09:15:06.631: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Jan 30 09:15:06.648: INFO: created pod pod-service-account-mountsa-nomountspec
Jan 30 09:15:06.648: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Jan 30 09:15:06.669: INFO: created pod pod-service-account-nomountsa-nomountspec
Jan 30 09:15:06.670: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:06.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4829" for this suite. 01/30/23 09:15:06.688
------------------------------
â€¢ [0.165 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:06.533
    Jan 30 09:15:06.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename svcaccounts 01/30/23 09:15:06.533
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:06.546
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:06.549
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow opting out of API token automount  [Conformance]
      test/e2e/auth/service_accounts.go:161
    Jan 30 09:15:06.565: INFO: created pod pod-service-account-defaultsa
    Jan 30 09:15:06.565: INFO: pod pod-service-account-defaultsa service account token volume mount: true
    Jan 30 09:15:06.581: INFO: created pod pod-service-account-mountsa
    Jan 30 09:15:06.581: INFO: pod pod-service-account-mountsa service account token volume mount: true
    Jan 30 09:15:06.586: INFO: created pod pod-service-account-nomountsa
    Jan 30 09:15:06.586: INFO: pod pod-service-account-nomountsa service account token volume mount: false
    Jan 30 09:15:06.593: INFO: created pod pod-service-account-defaultsa-mountspec
    Jan 30 09:15:06.593: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
    Jan 30 09:15:06.603: INFO: created pod pod-service-account-mountsa-mountspec
    Jan 30 09:15:06.603: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
    Jan 30 09:15:06.615: INFO: created pod pod-service-account-nomountsa-mountspec
    Jan 30 09:15:06.615: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
    Jan 30 09:15:06.631: INFO: created pod pod-service-account-defaultsa-nomountspec
    Jan 30 09:15:06.631: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
    Jan 30 09:15:06.648: INFO: created pod pod-service-account-mountsa-nomountspec
    Jan 30 09:15:06.648: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
    Jan 30 09:15:06.669: INFO: created pod pod-service-account-nomountsa-nomountspec
    Jan 30 09:15:06.670: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:06.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4829" for this suite. 01/30/23 09:15:06.688
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:06.699
Jan 30 09:15:06.699: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 09:15:06.7
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:06.747
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:06.749
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
STEP: Creating secret with name secret-test-map-cd989168-87dc-4341-a3a2-071c742d0dc4 01/30/23 09:15:06.762
STEP: Creating a pod to test consume secrets 01/30/23 09:15:06.768
Jan 30 09:15:06.794: INFO: Waiting up to 5m0s for pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22" in namespace "secrets-2245" to be "Succeeded or Failed"
Jan 30 09:15:06.808: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22": Phase="Pending", Reason="", readiness=false. Elapsed: 13.974003ms
Jan 30 09:15:08.811: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017580416s
Jan 30 09:15:10.812: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018296455s
Jan 30 09:15:12.811: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.01740467s
STEP: Saw pod success 01/30/23 09:15:12.811
Jan 30 09:15:12.811: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22" satisfied condition "Succeeded or Failed"
Jan 30 09:15:12.813: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22 container secret-volume-test: <nil>
STEP: delete the pod 01/30/23 09:15:12.816
Jan 30 09:15:12.823: INFO: Waiting for pod pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22 to disappear
Jan 30 09:15:12.824: INFO: Pod pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:12.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-2245" for this suite. 01/30/23 09:15:12.828
------------------------------
â€¢ [SLOW TEST] [6.133 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:06.699
    Jan 30 09:15:06.699: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 09:15:06.7
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:06.747
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:06.749
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:79
    STEP: Creating secret with name secret-test-map-cd989168-87dc-4341-a3a2-071c742d0dc4 01/30/23 09:15:06.762
    STEP: Creating a pod to test consume secrets 01/30/23 09:15:06.768
    Jan 30 09:15:06.794: INFO: Waiting up to 5m0s for pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22" in namespace "secrets-2245" to be "Succeeded or Failed"
    Jan 30 09:15:06.808: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22": Phase="Pending", Reason="", readiness=false. Elapsed: 13.974003ms
    Jan 30 09:15:08.811: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017580416s
    Jan 30 09:15:10.812: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018296455s
    Jan 30 09:15:12.811: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.01740467s
    STEP: Saw pod success 01/30/23 09:15:12.811
    Jan 30 09:15:12.811: INFO: Pod "pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22" satisfied condition "Succeeded or Failed"
    Jan 30 09:15:12.813: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22 container secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 09:15:12.816
    Jan 30 09:15:12.823: INFO: Waiting for pod pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22 to disappear
    Jan 30 09:15:12.824: INFO: Pod pod-secrets-4fac5511-936f-4bc1-9584-4cad5143ab22 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:12.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-2245" for this suite. 01/30/23 09:15:12.828
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:12.833
Jan 30 09:15:12.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 09:15:12.834
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:12.844
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:12.847
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 09:15:12.857
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:15:13.156
STEP: Deploying the webhook pod 01/30/23 09:15:13.166
STEP: Wait for the deployment to be ready 01/30/23 09:15:13.181
Jan 30 09:15:13.198: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jan 30 09:15:15.204: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 9, 15, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 15, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 9, 15, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 15, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 01/30/23 09:15:17.206
STEP: Verifying the service has paired with the endpoint 01/30/23 09:15:17.214
Jan 30 09:15:18.215: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
Jan 30 09:15:18.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4868-crds.webhook.example.com via the AdmissionRegistration API 01/30/23 09:15:18.736
STEP: Creating a custom resource that should be mutated by the webhook 01/30/23 09:15:18.788
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:21.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3155" for this suite. 01/30/23 09:15:21.392
STEP: Destroying namespace "webhook-3155-markers" for this suite. 01/30/23 09:15:21.397
------------------------------
â€¢ [SLOW TEST] [8.572 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:12.833
    Jan 30 09:15:12.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 09:15:12.834
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:12.844
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:12.847
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 09:15:12.857
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:15:13.156
    STEP: Deploying the webhook pod 01/30/23 09:15:13.166
    STEP: Wait for the deployment to be ready 01/30/23 09:15:13.181
    Jan 30 09:15:13.198: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Jan 30 09:15:15.204: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.January, 30, 9, 15, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 15, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.January, 30, 9, 15, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.January, 30, 9, 15, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 01/30/23 09:15:17.206
    STEP: Verifying the service has paired with the endpoint 01/30/23 09:15:17.214
    Jan 30 09:15:18.215: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource [Conformance]
      test/e2e/apimachinery/webhook.go:291
    Jan 30 09:15:18.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4868-crds.webhook.example.com via the AdmissionRegistration API 01/30/23 09:15:18.736
    STEP: Creating a custom resource that should be mutated by the webhook 01/30/23 09:15:18.788
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:21.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3155" for this suite. 01/30/23 09:15:21.392
    STEP: Destroying namespace "webhook-3155-markers" for this suite. 01/30/23 09:15:21.397
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] DisruptionController
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:21.405
Jan 30 09:15:21.405: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename disruption 01/30/23 09:15:21.413
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:21.439
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:21.444
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
STEP: Waiting for the pdb to be processed 01/30/23 09:15:21.468
STEP: Updating PodDisruptionBudget status 01/30/23 09:15:21.483
STEP: Waiting for all pods to be running 01/30/23 09:15:21.508
Jan 30 09:15:21.516: INFO: running pods: 0 < 1
STEP: locating a running pod 01/30/23 09:15:23.521
STEP: Waiting for the pdb to be processed 01/30/23 09:15:23.539
STEP: Patching PodDisruptionBudget status 01/30/23 09:15:23.544
STEP: Waiting for the pdb to be processed 01/30/23 09:15:23.552
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:23.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-9437" for this suite. 01/30/23 09:15:23.557
------------------------------
â€¢ [2.157 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:21.405
    Jan 30 09:15:21.405: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename disruption 01/30/23 09:15:21.413
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:21.439
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:21.444
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should update/patch PodDisruptionBudget status [Conformance]
      test/e2e/apps/disruption.go:164
    STEP: Waiting for the pdb to be processed 01/30/23 09:15:21.468
    STEP: Updating PodDisruptionBudget status 01/30/23 09:15:21.483
    STEP: Waiting for all pods to be running 01/30/23 09:15:21.508
    Jan 30 09:15:21.516: INFO: running pods: 0 < 1
    STEP: locating a running pod 01/30/23 09:15:23.521
    STEP: Waiting for the pdb to be processed 01/30/23 09:15:23.539
    STEP: Patching PodDisruptionBudget status 01/30/23 09:15:23.544
    STEP: Waiting for the pdb to be processed 01/30/23 09:15:23.552
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:23.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-9437" for this suite. 01/30/23 09:15:23.557
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:23.563
Jan 30 09:15:23.563: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename namespaces 01/30/23 09:15:23.564
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:23.577
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:23.581
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
STEP: Creating namespace "e2e-ns-6dsbr" 01/30/23 09:15:23.585
Jan 30 09:15:23.595: INFO: Namespace "e2e-ns-6dsbr-1927" has []v1.FinalizerName{"kubernetes"}
STEP: Adding e2e finalizer to namespace "e2e-ns-6dsbr-1927" 01/30/23 09:15:23.595
Jan 30 09:15:23.604: INFO: Namespace "e2e-ns-6dsbr-1927" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
STEP: Removing e2e finalizer from namespace "e2e-ns-6dsbr-1927" 01/30/23 09:15:23.604
Jan 30 09:15:23.610: INFO: Namespace "e2e-ns-6dsbr-1927" has []v1.FinalizerName{"kubernetes"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:23.610: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-9569" for this suite. 01/30/23 09:15:23.613
STEP: Destroying namespace "e2e-ns-6dsbr-1927" for this suite. 01/30/23 09:15:23.617
------------------------------
â€¢ [0.059 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:23.563
    Jan 30 09:15:23.563: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename namespaces 01/30/23 09:15:23.564
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:23.577
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:23.581
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply a finalizer to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:394
    STEP: Creating namespace "e2e-ns-6dsbr" 01/30/23 09:15:23.585
    Jan 30 09:15:23.595: INFO: Namespace "e2e-ns-6dsbr-1927" has []v1.FinalizerName{"kubernetes"}
    STEP: Adding e2e finalizer to namespace "e2e-ns-6dsbr-1927" 01/30/23 09:15:23.595
    Jan 30 09:15:23.604: INFO: Namespace "e2e-ns-6dsbr-1927" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
    STEP: Removing e2e finalizer from namespace "e2e-ns-6dsbr-1927" 01/30/23 09:15:23.604
    Jan 30 09:15:23.610: INFO: Namespace "e2e-ns-6dsbr-1927" has []v1.FinalizerName{"kubernetes"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:23.610: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-9569" for this suite. 01/30/23 09:15:23.613
    STEP: Destroying namespace "e2e-ns-6dsbr-1927" for this suite. 01/30/23 09:15:23.617
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:23.626
Jan 30 09:15:23.626: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 09:15:23.627
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:23.641
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:23.643
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
STEP: Creating configMap with name configmap-test-volume-map-c34fdb6c-8b55-494b-ad0c-ba8bf9dd35ee 01/30/23 09:15:23.646
STEP: Creating a pod to test consume configMaps 01/30/23 09:15:23.65
Jan 30 09:15:23.659: INFO: Waiting up to 5m0s for pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641" in namespace "configmap-1487" to be "Succeeded or Failed"
Jan 30 09:15:23.662: INFO: Pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641": Phase="Pending", Reason="", readiness=false. Elapsed: 2.653735ms
Jan 30 09:15:25.665: INFO: Pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005324643s
Jan 30 09:15:27.665: INFO: Pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005511233s
STEP: Saw pod success 01/30/23 09:15:27.665
Jan 30 09:15:27.665: INFO: Pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641" satisfied condition "Succeeded or Failed"
Jan 30 09:15:27.667: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:15:27.671
Jan 30 09:15:27.679: INFO: Waiting for pod pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641 to disappear
Jan 30 09:15:27.682: INFO: Pod pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:27.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-1487" for this suite. 01/30/23 09:15:27.685
------------------------------
â€¢ [4.063 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:23.626
    Jan 30 09:15:23.626: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 09:15:23.627
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:23.641
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:23.643
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:109
    STEP: Creating configMap with name configmap-test-volume-map-c34fdb6c-8b55-494b-ad0c-ba8bf9dd35ee 01/30/23 09:15:23.646
    STEP: Creating a pod to test consume configMaps 01/30/23 09:15:23.65
    Jan 30 09:15:23.659: INFO: Waiting up to 5m0s for pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641" in namespace "configmap-1487" to be "Succeeded or Failed"
    Jan 30 09:15:23.662: INFO: Pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641": Phase="Pending", Reason="", readiness=false. Elapsed: 2.653735ms
    Jan 30 09:15:25.665: INFO: Pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005324643s
    Jan 30 09:15:27.665: INFO: Pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005511233s
    STEP: Saw pod success 01/30/23 09:15:27.665
    Jan 30 09:15:27.665: INFO: Pod "pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641" satisfied condition "Succeeded or Failed"
    Jan 30 09:15:27.667: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:15:27.671
    Jan 30 09:15:27.679: INFO: Waiting for pod pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641 to disappear
    Jan 30 09:15:27.682: INFO: Pod pod-configmaps-d1e95c4e-4123-45dc-bf3b-a093995bc641 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:27.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-1487" for this suite. 01/30/23 09:15:27.685
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:27.689
Jan 30 09:15:27.690: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename var-expansion 01/30/23 09:15:27.69
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:27.71
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:27.712
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
STEP: Creating a pod to test substitution in container's command 01/30/23 09:15:27.714
Jan 30 09:15:27.721: INFO: Waiting up to 5m0s for pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871" in namespace "var-expansion-4603" to be "Succeeded or Failed"
Jan 30 09:15:27.726: INFO: Pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871": Phase="Pending", Reason="", readiness=false. Elapsed: 5.000627ms
Jan 30 09:15:29.729: INFO: Pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007595083s
Jan 30 09:15:31.729: INFO: Pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007828002s
STEP: Saw pod success 01/30/23 09:15:31.729
Jan 30 09:15:31.729: INFO: Pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871" satisfied condition "Succeeded or Failed"
Jan 30 09:15:31.731: INFO: Trying to get logs from node tce-worker2 pod var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871 container dapi-container: <nil>
STEP: delete the pod 01/30/23 09:15:31.734
Jan 30 09:15:31.743: INFO: Waiting for pod var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871 to disappear
Jan 30 09:15:31.744: INFO: Pod var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:31.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-4603" for this suite. 01/30/23 09:15:31.747
------------------------------
â€¢ [4.062 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:27.689
    Jan 30 09:15:27.690: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename var-expansion 01/30/23 09:15:27.69
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:27.71
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:27.712
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's command [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:73
    STEP: Creating a pod to test substitution in container's command 01/30/23 09:15:27.714
    Jan 30 09:15:27.721: INFO: Waiting up to 5m0s for pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871" in namespace "var-expansion-4603" to be "Succeeded or Failed"
    Jan 30 09:15:27.726: INFO: Pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871": Phase="Pending", Reason="", readiness=false. Elapsed: 5.000627ms
    Jan 30 09:15:29.729: INFO: Pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007595083s
    Jan 30 09:15:31.729: INFO: Pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007828002s
    STEP: Saw pod success 01/30/23 09:15:31.729
    Jan 30 09:15:31.729: INFO: Pod "var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871" satisfied condition "Succeeded or Failed"
    Jan 30 09:15:31.731: INFO: Trying to get logs from node tce-worker2 pod var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871 container dapi-container: <nil>
    STEP: delete the pod 01/30/23 09:15:31.734
    Jan 30 09:15:31.743: INFO: Waiting for pod var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871 to disappear
    Jan 30 09:15:31.744: INFO: Pod var-expansion-d45ac89e-7cee-4bb6-a52d-1b075c4cb871 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:31.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-4603" for this suite. 01/30/23 09:15:31.747
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:31.751
Jan 30 09:15:31.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 09:15:31.752
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:31.762
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:31.764
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
STEP: fetching the /apis discovery document 01/30/23 09:15:31.767
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 01/30/23 09:15:31.768
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 01/30/23 09:15:31.768
STEP: fetching the /apis/apiextensions.k8s.io discovery document 01/30/23 09:15:31.768
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 01/30/23 09:15:31.769
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 01/30/23 09:15:31.769
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 01/30/23 09:15:31.769
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:31.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-8880" for this suite. 01/30/23 09:15:31.772
------------------------------
â€¢ [0.025 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:31.751
    Jan 30 09:15:31.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 09:15:31.752
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:31.762
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:31.764
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should include custom resource definition resources in discovery documents [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:198
    STEP: fetching the /apis discovery document 01/30/23 09:15:31.767
    STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 01/30/23 09:15:31.768
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 01/30/23 09:15:31.768
    STEP: fetching the /apis/apiextensions.k8s.io discovery document 01/30/23 09:15:31.768
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 01/30/23 09:15:31.769
    STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 01/30/23 09:15:31.769
    STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 01/30/23 09:15:31.769
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:31.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-8880" for this suite. 01/30/23 09:15:31.772
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:31.776
Jan 30 09:15:31.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 09:15:31.779
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:31.791
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:31.793
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
STEP: Creating a pod to test emptydir 0644 on tmpfs 01/30/23 09:15:31.797
Jan 30 09:15:31.806: INFO: Waiting up to 5m0s for pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104" in namespace "emptydir-7773" to be "Succeeded or Failed"
Jan 30 09:15:31.808: INFO: Pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104": Phase="Pending", Reason="", readiness=false. Elapsed: 1.798426ms
Jan 30 09:15:33.811: INFO: Pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004454501s
Jan 30 09:15:35.810: INFO: Pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004136998s
STEP: Saw pod success 01/30/23 09:15:35.81
Jan 30 09:15:35.810: INFO: Pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104" satisfied condition "Succeeded or Failed"
Jan 30 09:15:35.812: INFO: Trying to get logs from node tce-worker2 pod pod-b7b70d33-7ff7-4bb6-8763-ab824799c104 container test-container: <nil>
STEP: delete the pod 01/30/23 09:15:35.816
Jan 30 09:15:35.838: INFO: Waiting for pod pod-b7b70d33-7ff7-4bb6-8763-ab824799c104 to disappear
Jan 30 09:15:35.840: INFO: Pod pod-b7b70d33-7ff7-4bb6-8763-ab824799c104 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:35.840: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7773" for this suite. 01/30/23 09:15:35.843
------------------------------
â€¢ [4.079 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:31.776
    Jan 30 09:15:31.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 09:15:31.779
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:31.791
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:31.793
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:127
    STEP: Creating a pod to test emptydir 0644 on tmpfs 01/30/23 09:15:31.797
    Jan 30 09:15:31.806: INFO: Waiting up to 5m0s for pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104" in namespace "emptydir-7773" to be "Succeeded or Failed"
    Jan 30 09:15:31.808: INFO: Pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104": Phase="Pending", Reason="", readiness=false. Elapsed: 1.798426ms
    Jan 30 09:15:33.811: INFO: Pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004454501s
    Jan 30 09:15:35.810: INFO: Pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004136998s
    STEP: Saw pod success 01/30/23 09:15:35.81
    Jan 30 09:15:35.810: INFO: Pod "pod-b7b70d33-7ff7-4bb6-8763-ab824799c104" satisfied condition "Succeeded or Failed"
    Jan 30 09:15:35.812: INFO: Trying to get logs from node tce-worker2 pod pod-b7b70d33-7ff7-4bb6-8763-ab824799c104 container test-container: <nil>
    STEP: delete the pod 01/30/23 09:15:35.816
    Jan 30 09:15:35.838: INFO: Waiting for pod pod-b7b70d33-7ff7-4bb6-8763-ab824799c104 to disappear
    Jan 30 09:15:35.840: INFO: Pod pod-b7b70d33-7ff7-4bb6-8763-ab824799c104 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:35.840: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7773" for this suite. 01/30/23 09:15:35.843
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:35.855
Jan 30 09:15:35.856: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 09:15:35.856
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:35.871
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:35.873
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:15:35.875
Jan 30 09:15:35.882: INFO: Waiting up to 5m0s for pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7" in namespace "downward-api-2004" to be "Succeeded or Failed"
Jan 30 09:15:35.885: INFO: Pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.44395ms
Jan 30 09:15:37.888: INFO: Pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005697228s
Jan 30 09:15:39.888: INFO: Pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00596581s
STEP: Saw pod success 01/30/23 09:15:39.888
Jan 30 09:15:39.888: INFO: Pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7" satisfied condition "Succeeded or Failed"
Jan 30 09:15:39.890: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7 container client-container: <nil>
STEP: delete the pod 01/30/23 09:15:39.893
Jan 30 09:15:39.912: INFO: Waiting for pod downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7 to disappear
Jan 30 09:15:39.920: INFO: Pod downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:39.920: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-2004" for this suite. 01/30/23 09:15:39.922
------------------------------
â€¢ [4.071 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:35.855
    Jan 30 09:15:35.856: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 09:15:35.856
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:35.871
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:35.873
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:261
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:15:35.875
    Jan 30 09:15:35.882: INFO: Waiting up to 5m0s for pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7" in namespace "downward-api-2004" to be "Succeeded or Failed"
    Jan 30 09:15:35.885: INFO: Pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.44395ms
    Jan 30 09:15:37.888: INFO: Pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005697228s
    Jan 30 09:15:39.888: INFO: Pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00596581s
    STEP: Saw pod success 01/30/23 09:15:39.888
    Jan 30 09:15:39.888: INFO: Pod "downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7" satisfied condition "Succeeded or Failed"
    Jan 30 09:15:39.890: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7 container client-container: <nil>
    STEP: delete the pod 01/30/23 09:15:39.893
    Jan 30 09:15:39.912: INFO: Waiting for pod downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7 to disappear
    Jan 30 09:15:39.920: INFO: Pod downwardapi-volume-27bf5ec6-feab-4bfc-889c-51b77d8bd0c7 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:39.920: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-2004" for this suite. 01/30/23 09:15:39.922
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:39.927
Jan 30 09:15:39.927: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 09:15:39.927
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:39.939
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:39.941
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 09:15:39.952
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:15:40.568
STEP: Deploying the webhook pod 01/30/23 09:15:40.58
STEP: Wait for the deployment to be ready 01/30/23 09:15:40.593
Jan 30 09:15:40.598: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 09:15:42.604
STEP: Verifying the service has paired with the endpoint 01/30/23 09:15:42.616
Jan 30 09:15:43.616: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
STEP: Creating a mutating webhook configuration 01/30/23 09:15:43.619
STEP: Updating a mutating webhook configuration's rules to not include the create operation 01/30/23 09:15:43.634
STEP: Creating a configMap that should not be mutated 01/30/23 09:15:43.64
STEP: Patching a mutating webhook configuration's rules to include the create operation 01/30/23 09:15:43.647
STEP: Creating a configMap that should be mutated 01/30/23 09:15:43.653
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:43.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1614" for this suite. 01/30/23 09:15:43.711
STEP: Destroying namespace "webhook-1614-markers" for this suite. 01/30/23 09:15:43.726
------------------------------
â€¢ [3.810 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:39.927
    Jan 30 09:15:39.927: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 09:15:39.927
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:39.939
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:39.941
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 09:15:39.952
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:15:40.568
    STEP: Deploying the webhook pod 01/30/23 09:15:40.58
    STEP: Wait for the deployment to be ready 01/30/23 09:15:40.593
    Jan 30 09:15:40.598: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 09:15:42.604
    STEP: Verifying the service has paired with the endpoint 01/30/23 09:15:42.616
    Jan 30 09:15:43.616: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a mutating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:508
    STEP: Creating a mutating webhook configuration 01/30/23 09:15:43.619
    STEP: Updating a mutating webhook configuration's rules to not include the create operation 01/30/23 09:15:43.634
    STEP: Creating a configMap that should not be mutated 01/30/23 09:15:43.64
    STEP: Patching a mutating webhook configuration's rules to include the create operation 01/30/23 09:15:43.647
    STEP: Creating a configMap that should be mutated 01/30/23 09:15:43.653
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:43.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1614" for this suite. 01/30/23 09:15:43.711
    STEP: Destroying namespace "webhook-1614-markers" for this suite. 01/30/23 09:15:43.726
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:43.737
Jan 30 09:15:43.737: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 09:15:43.738
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:43.751
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:43.754
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
STEP: creating a collection of services 01/30/23 09:15:43.756
Jan 30 09:15:43.756: INFO: Creating e2e-svc-a-7jbkc
Jan 30 09:15:43.768: INFO: Creating e2e-svc-b-v8qtc
Jan 30 09:15:43.777: INFO: Creating e2e-svc-c-9s7mw
STEP: deleting service collection 01/30/23 09:15:43.794
Jan 30 09:15:43.821: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:43.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-3551" for this suite. 01/30/23 09:15:43.823
------------------------------
â€¢ [0.093 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:43.737
    Jan 30 09:15:43.737: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 09:15:43.738
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:43.751
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:43.754
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should delete a collection of services [Conformance]
      test/e2e/network/service.go:3654
    STEP: creating a collection of services 01/30/23 09:15:43.756
    Jan 30 09:15:43.756: INFO: Creating e2e-svc-a-7jbkc
    Jan 30 09:15:43.768: INFO: Creating e2e-svc-b-v8qtc
    Jan 30 09:15:43.777: INFO: Creating e2e-svc-c-9s7mw
    STEP: deleting service collection 01/30/23 09:15:43.794
    Jan 30 09:15:43.821: INFO: Collection of services has been deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:43.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-3551" for this suite. 01/30/23 09:15:43.823
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:43.832
Jan 30 09:15:43.832: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pod-network-test 01/30/23 09:15:43.833
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:43.843
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:43.846
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
STEP: Performing setup for networking test in namespace pod-network-test-4439 01/30/23 09:15:43.85
STEP: creating a selector 01/30/23 09:15:43.85
STEP: Creating the service pods in kubernetes 01/30/23 09:15:43.85
Jan 30 09:15:43.850: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 30 09:15:43.867: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-4439" to be "running and ready"
Jan 30 09:15:43.872: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.247103ms
Jan 30 09:15:43.873: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:15:45.876: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.00863792s
Jan 30 09:15:45.876: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:15:47.876: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.008670952s
Jan 30 09:15:47.876: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:15:49.877: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.009676801s
Jan 30 09:15:49.877: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:15:51.876: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009322121s
Jan 30 09:15:51.876: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:15:53.875: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.008168723s
Jan 30 09:15:53.875: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:15:55.876: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.00938305s
Jan 30 09:15:55.877: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Jan 30 09:15:55.877: INFO: Pod "netserver-0" satisfied condition "running and ready"
Jan 30 09:15:55.878: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-4439" to be "running and ready"
Jan 30 09:15:55.880: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.967336ms
Jan 30 09:15:55.880: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Jan 30 09:15:55.880: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 01/30/23 09:15:55.882
Jan 30 09:15:55.903: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-4439" to be "running"
Jan 30 09:15:55.910: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.437649ms
Jan 30 09:15:57.912: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.009039285s
Jan 30 09:15:57.913: INFO: Pod "test-container-pod" satisfied condition "running"
Jan 30 09:15:57.915: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-4439" to be "running"
Jan 30 09:15:57.917: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 1.743581ms
Jan 30 09:15:57.917: INFO: Pod "host-test-container-pod" satisfied condition "running"
Jan 30 09:15:57.919: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jan 30 09:15:57.919: INFO: Going to poll 10.244.2.246 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Jan 30 09:15:57.921: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.246:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4439 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:15:57.921: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:15:57.921: INFO: ExecWithOptions: Clientset creation
Jan 30 09:15:57.921: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4439/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.246%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 09:15:58.015: INFO: Found all 1 expected endpoints: [netserver-0]
Jan 30 09:15:58.015: INFO: Going to poll 10.244.1.151 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Jan 30 09:15:58.018: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.151:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4439 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:15:58.018: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:15:58.018: INFO: ExecWithOptions: Clientset creation
Jan 30 09:15:58.018: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4439/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.151%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 09:15:58.051: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Jan 30 09:15:58.051: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-4439" for this suite. 01/30/23 09:15:58.054
------------------------------
â€¢ [SLOW TEST] [14.236 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:43.832
    Jan 30 09:15:43.832: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pod-network-test 01/30/23 09:15:43.833
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:43.843
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:43.846
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:105
    STEP: Performing setup for networking test in namespace pod-network-test-4439 01/30/23 09:15:43.85
    STEP: creating a selector 01/30/23 09:15:43.85
    STEP: Creating the service pods in kubernetes 01/30/23 09:15:43.85
    Jan 30 09:15:43.850: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Jan 30 09:15:43.867: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-4439" to be "running and ready"
    Jan 30 09:15:43.872: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.247103ms
    Jan 30 09:15:43.873: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:15:45.876: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.00863792s
    Jan 30 09:15:45.876: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:15:47.876: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.008670952s
    Jan 30 09:15:47.876: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:15:49.877: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.009676801s
    Jan 30 09:15:49.877: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:15:51.876: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009322121s
    Jan 30 09:15:51.876: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:15:53.875: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.008168723s
    Jan 30 09:15:53.875: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:15:55.876: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.00938305s
    Jan 30 09:15:55.877: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Jan 30 09:15:55.877: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Jan 30 09:15:55.878: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-4439" to be "running and ready"
    Jan 30 09:15:55.880: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.967336ms
    Jan 30 09:15:55.880: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Jan 30 09:15:55.880: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 01/30/23 09:15:55.882
    Jan 30 09:15:55.903: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-4439" to be "running"
    Jan 30 09:15:55.910: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.437649ms
    Jan 30 09:15:57.912: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.009039285s
    Jan 30 09:15:57.913: INFO: Pod "test-container-pod" satisfied condition "running"
    Jan 30 09:15:57.915: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-4439" to be "running"
    Jan 30 09:15:57.917: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 1.743581ms
    Jan 30 09:15:57.917: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Jan 30 09:15:57.919: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Jan 30 09:15:57.919: INFO: Going to poll 10.244.2.246 on port 8083 at least 0 times, with a maximum of 34 tries before failing
    Jan 30 09:15:57.921: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.246:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4439 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:15:57.921: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:15:57.921: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:15:57.921: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4439/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.246%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 30 09:15:58.015: INFO: Found all 1 expected endpoints: [netserver-0]
    Jan 30 09:15:58.015: INFO: Going to poll 10.244.1.151 on port 8083 at least 0 times, with a maximum of 34 tries before failing
    Jan 30 09:15:58.018: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.151:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4439 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:15:58.018: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:15:58.018: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:15:58.018: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4439/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.151%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 30 09:15:58.051: INFO: Found all 1 expected endpoints: [netserver-1]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:15:58.051: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-4439" for this suite. 01/30/23 09:15:58.054
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:806
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:15:58.068
Jan 30 09:15:58.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-preemption 01/30/23 09:15:58.069
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:58.081
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:58.083
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Jan 30 09:15:58.097: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 09:16:58.112: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:16:58.114
Jan 30 09:16:58.114: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-preemption-path 01/30/23 09:16:58.115
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:16:58.125
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:16:58.127
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:763
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:806
Jan 30 09:16:58.140: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
Jan 30 09:16:58.142: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/node/init/init.go:32
Jan 30 09:16:58.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:779
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:16:58.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PriorityClass endpoints
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PriorityClass endpoints
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-1356" for this suite. 01/30/23 09:16:58.203
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-6705" for this suite. 01/30/23 09:16:58.209
------------------------------
â€¢ [SLOW TEST] [60.146 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:756
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/scheduling/preemption.go:806

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:15:58.068
    Jan 30 09:15:58.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-preemption 01/30/23 09:15:58.069
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:15:58.081
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:15:58.083
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Jan 30 09:15:58.097: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 30 09:16:58.112: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PriorityClass endpoints
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:16:58.114
    Jan 30 09:16:58.114: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-preemption-path 01/30/23 09:16:58.115
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:16:58.125
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:16:58.127
    [BeforeEach] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:763
    [It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
      test/e2e/scheduling/preemption.go:806
    Jan 30 09:16:58.140: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
    Jan 30 09:16:58.142: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
    [AfterEach] PriorityClass endpoints
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:16:58.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:779
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:16:58.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PriorityClass endpoints
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PriorityClass endpoints
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-1356" for this suite. 01/30/23 09:16:58.203
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-6705" for this suite. 01/30/23 09:16:58.209
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:16:58.22
Jan 30 09:16:58.220: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:16:58.221
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:16:58.232
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:16:58.235
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
STEP: Creating projection with secret that has name projected-secret-test-bb8fb105-6bfd-4441-9cbb-92196ce010e3 01/30/23 09:16:58.239
STEP: Creating a pod to test consume secrets 01/30/23 09:16:58.245
Jan 30 09:16:58.255: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510" in namespace "projected-7269" to be "Succeeded or Failed"
Jan 30 09:16:58.258: INFO: Pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510": Phase="Pending", Reason="", readiness=false. Elapsed: 3.189786ms
Jan 30 09:17:00.262: INFO: Pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006881753s
Jan 30 09:17:02.263: INFO: Pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007569936s
STEP: Saw pod success 01/30/23 09:17:02.263
Jan 30 09:17:02.263: INFO: Pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510" satisfied condition "Succeeded or Failed"
Jan 30 09:17:02.265: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510 container projected-secret-volume-test: <nil>
STEP: delete the pod 01/30/23 09:17:02.27
Jan 30 09:17:02.289: INFO: Waiting for pod pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510 to disappear
Jan 30 09:17:02.291: INFO: Pod pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 30 09:17:02.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7269" for this suite. 01/30/23 09:17:02.295
------------------------------
â€¢ [4.081 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:16:58.22
    Jan 30 09:16:58.220: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:16:58.221
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:16:58.232
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:16:58.235
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:67
    STEP: Creating projection with secret that has name projected-secret-test-bb8fb105-6bfd-4441-9cbb-92196ce010e3 01/30/23 09:16:58.239
    STEP: Creating a pod to test consume secrets 01/30/23 09:16:58.245
    Jan 30 09:16:58.255: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510" in namespace "projected-7269" to be "Succeeded or Failed"
    Jan 30 09:16:58.258: INFO: Pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510": Phase="Pending", Reason="", readiness=false. Elapsed: 3.189786ms
    Jan 30 09:17:00.262: INFO: Pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006881753s
    Jan 30 09:17:02.263: INFO: Pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007569936s
    STEP: Saw pod success 01/30/23 09:17:02.263
    Jan 30 09:17:02.263: INFO: Pod "pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510" satisfied condition "Succeeded or Failed"
    Jan 30 09:17:02.265: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510 container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 09:17:02.27
    Jan 30 09:17:02.289: INFO: Waiting for pod pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510 to disappear
    Jan 30 09:17:02.291: INFO: Pod pod-projected-secrets-e0bd2ff2-e178-400e-91e0-be47d7417510 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:17:02.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7269" for this suite. 01/30/23 09:17:02.295
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:17:02.302
Jan 30 09:17:02.302: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 09:17:02.303
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:02.316
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:02.318
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
STEP: Creating configMap configmap-3870/configmap-test-d9719cee-683c-42dd-98f3-86daa4f331fd 01/30/23 09:17:02.321
STEP: Creating a pod to test consume configMaps 01/30/23 09:17:02.326
Jan 30 09:17:02.332: INFO: Waiting up to 5m0s for pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c" in namespace "configmap-3870" to be "Succeeded or Failed"
Jan 30 09:17:02.336: INFO: Pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.278699ms
Jan 30 09:17:04.339: INFO: Pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006305622s
Jan 30 09:17:06.340: INFO: Pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007684732s
STEP: Saw pod success 01/30/23 09:17:06.34
Jan 30 09:17:06.340: INFO: Pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c" satisfied condition "Succeeded or Failed"
Jan 30 09:17:06.342: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c container env-test: <nil>
STEP: delete the pod 01/30/23 09:17:06.345
Jan 30 09:17:06.363: INFO: Waiting for pod pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c to disappear
Jan 30 09:17:06.364: INFO: Pod pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:17:06.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3870" for this suite. 01/30/23 09:17:06.367
------------------------------
â€¢ [4.069 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:17:02.302
    Jan 30 09:17:02.302: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 09:17:02.303
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:02.316
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:02.318
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via environment variable [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:45
    STEP: Creating configMap configmap-3870/configmap-test-d9719cee-683c-42dd-98f3-86daa4f331fd 01/30/23 09:17:02.321
    STEP: Creating a pod to test consume configMaps 01/30/23 09:17:02.326
    Jan 30 09:17:02.332: INFO: Waiting up to 5m0s for pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c" in namespace "configmap-3870" to be "Succeeded or Failed"
    Jan 30 09:17:02.336: INFO: Pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.278699ms
    Jan 30 09:17:04.339: INFO: Pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006305622s
    Jan 30 09:17:06.340: INFO: Pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007684732s
    STEP: Saw pod success 01/30/23 09:17:06.34
    Jan 30 09:17:06.340: INFO: Pod "pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c" satisfied condition "Succeeded or Failed"
    Jan 30 09:17:06.342: INFO: Trying to get logs from node tce-worker2 pod pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c container env-test: <nil>
    STEP: delete the pod 01/30/23 09:17:06.345
    Jan 30 09:17:06.363: INFO: Waiting for pod pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c to disappear
    Jan 30 09:17:06.364: INFO: Pod pod-configmaps-727e2a3e-cdfb-4e62-abe5-be17b1b28c0c no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:17:06.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3870" for this suite. 01/30/23 09:17:06.367
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:17:06.372
Jan 30 09:17:06.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pod-network-test 01/30/23 09:17:06.373
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:06.384
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:06.386
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
STEP: Performing setup for networking test in namespace pod-network-test-1095 01/30/23 09:17:06.388
STEP: creating a selector 01/30/23 09:17:06.388
STEP: Creating the service pods in kubernetes 01/30/23 09:17:06.388
Jan 30 09:17:06.389: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jan 30 09:17:06.403: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-1095" to be "running and ready"
Jan 30 09:17:06.409: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.121241ms
Jan 30 09:17:06.409: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:17:08.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.008520215s
Jan 30 09:17:08.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:10.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.00906094s
Jan 30 09:17:10.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:12.413: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.009559238s
Jan 30 09:17:12.413: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:14.413: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009563122s
Jan 30 09:17:14.413: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:16.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.009043122s
Jan 30 09:17:16.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:18.414: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.010314833s
Jan 30 09:17:18.414: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:20.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.008892616s
Jan 30 09:17:20.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:22.413: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.009675636s
Jan 30 09:17:22.413: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:24.418: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.014358013s
Jan 30 09:17:24.418: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:26.413: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.009587182s
Jan 30 09:17:26.413: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Jan 30 09:17:28.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.008703501s
Jan 30 09:17:28.412: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Jan 30 09:17:28.412: INFO: Pod "netserver-0" satisfied condition "running and ready"
Jan 30 09:17:28.414: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-1095" to be "running and ready"
Jan 30 09:17:28.416: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.589644ms
Jan 30 09:17:28.416: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Jan 30 09:17:28.416: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 01/30/23 09:17:28.417
Jan 30 09:17:28.421: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-1095" to be "running"
Jan 30 09:17:28.423: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.783801ms
Jan 30 09:17:30.425: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.003979988s
Jan 30 09:17:30.425: INFO: Pod "test-container-pod" satisfied condition "running"
Jan 30 09:17:30.427: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jan 30 09:17:30.427: INFO: Breadth first check of 10.244.2.247 on host 172.20.0.2...
Jan 30 09:17:30.429: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.156:9080/dial?request=hostname&protocol=http&host=10.244.2.247&port=8083&tries=1'] Namespace:pod-network-test-1095 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:17:30.429: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:17:30.429: INFO: ExecWithOptions: Clientset creation
Jan 30 09:17:30.429: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1095/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.156%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.247%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 09:17:30.508: INFO: Waiting for responses: map[]
Jan 30 09:17:30.508: INFO: reached 10.244.2.247 after 0/1 tries
Jan 30 09:17:30.508: INFO: Breadth first check of 10.244.1.155 on host 172.20.0.4...
Jan 30 09:17:30.510: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.156:9080/dial?request=hostname&protocol=http&host=10.244.1.155&port=8083&tries=1'] Namespace:pod-network-test-1095 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:17:30.510: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:17:30.511: INFO: ExecWithOptions: Clientset creation
Jan 30 09:17:30.511: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1095/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.156%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.155%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jan 30 09:17:30.545: INFO: Waiting for responses: map[]
Jan 30 09:17:30.545: INFO: reached 10.244.1.155 after 0/1 tries
Jan 30 09:17:30.545: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Jan 30 09:17:30.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-1095" for this suite. 01/30/23 09:17:30.549
------------------------------
â€¢ [SLOW TEST] [24.181 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:82

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:17:06.372
    Jan 30 09:17:06.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pod-network-test 01/30/23 09:17:06.373
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:06.384
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:06.386
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: http [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:82
    STEP: Performing setup for networking test in namespace pod-network-test-1095 01/30/23 09:17:06.388
    STEP: creating a selector 01/30/23 09:17:06.388
    STEP: Creating the service pods in kubernetes 01/30/23 09:17:06.388
    Jan 30 09:17:06.389: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Jan 30 09:17:06.403: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-1095" to be "running and ready"
    Jan 30 09:17:06.409: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.121241ms
    Jan 30 09:17:06.409: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:17:08.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.008520215s
    Jan 30 09:17:08.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:10.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.00906094s
    Jan 30 09:17:10.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:12.413: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.009559238s
    Jan 30 09:17:12.413: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:14.413: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009563122s
    Jan 30 09:17:14.413: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:16.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.009043122s
    Jan 30 09:17:16.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:18.414: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.010314833s
    Jan 30 09:17:18.414: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:20.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.008892616s
    Jan 30 09:17:20.412: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:22.413: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.009675636s
    Jan 30 09:17:22.413: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:24.418: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.014358013s
    Jan 30 09:17:24.418: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:26.413: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.009587182s
    Jan 30 09:17:26.413: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Jan 30 09:17:28.412: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.008703501s
    Jan 30 09:17:28.412: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Jan 30 09:17:28.412: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Jan 30 09:17:28.414: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-1095" to be "running and ready"
    Jan 30 09:17:28.416: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 1.589644ms
    Jan 30 09:17:28.416: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Jan 30 09:17:28.416: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 01/30/23 09:17:28.417
    Jan 30 09:17:28.421: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-1095" to be "running"
    Jan 30 09:17:28.423: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 1.783801ms
    Jan 30 09:17:30.425: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.003979988s
    Jan 30 09:17:30.425: INFO: Pod "test-container-pod" satisfied condition "running"
    Jan 30 09:17:30.427: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Jan 30 09:17:30.427: INFO: Breadth first check of 10.244.2.247 on host 172.20.0.2...
    Jan 30 09:17:30.429: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.156:9080/dial?request=hostname&protocol=http&host=10.244.2.247&port=8083&tries=1'] Namespace:pod-network-test-1095 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:17:30.429: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:17:30.429: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:17:30.429: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1095/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.156%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.247%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Jan 30 09:17:30.508: INFO: Waiting for responses: map[]
    Jan 30 09:17:30.508: INFO: reached 10.244.2.247 after 0/1 tries
    Jan 30 09:17:30.508: INFO: Breadth first check of 10.244.1.155 on host 172.20.0.4...
    Jan 30 09:17:30.510: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.156:9080/dial?request=hostname&protocol=http&host=10.244.1.155&port=8083&tries=1'] Namespace:pod-network-test-1095 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:17:30.510: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:17:30.511: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:17:30.511: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1095/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.156%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.155%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Jan 30 09:17:30.545: INFO: Waiting for responses: map[]
    Jan 30 09:17:30.545: INFO: reached 10.244.1.155 after 0/1 tries
    Jan 30 09:17:30.545: INFO: Going to retry 0 out of 2 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:17:30.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-1095" for this suite. 01/30/23 09:17:30.549
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:17:30.554
Jan 30 09:17:30.555: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 09:17:30.555
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:30.566
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:30.569
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
STEP: fetching services 01/30/23 09:17:30.571
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 09:17:30.576: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-426" for this suite. 01/30/23 09:17:30.582
------------------------------
â€¢ [0.033 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:17:30.554
    Jan 30 09:17:30.555: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 09:17:30.555
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:30.566
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:30.569
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should find a service from listing all namespaces [Conformance]
      test/e2e/network/service.go:3219
    STEP: fetching services 01/30/23 09:17:30.571
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:17:30.576: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-426" for this suite. 01/30/23 09:17:30.582
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:17:30.588
Jan 30 09:17:30.588: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:17:30.589
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:30.599
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:30.602
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
STEP: Creating projection with secret that has name projected-secret-test-map-4067d1f3-06ca-475c-b78d-19c5f46a4e44 01/30/23 09:17:30.605
STEP: Creating a pod to test consume secrets 01/30/23 09:17:30.612
Jan 30 09:17:30.618: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9" in namespace "projected-4676" to be "Succeeded or Failed"
Jan 30 09:17:30.622: INFO: Pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.770667ms
Jan 30 09:17:32.625: INFO: Pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9": Phase="Running", Reason="", readiness=false. Elapsed: 2.006484314s
Jan 30 09:17:34.626: INFO: Pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007280066s
STEP: Saw pod success 01/30/23 09:17:34.626
Jan 30 09:17:34.626: INFO: Pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9" satisfied condition "Succeeded or Failed"
Jan 30 09:17:34.628: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9 container projected-secret-volume-test: <nil>
STEP: delete the pod 01/30/23 09:17:34.632
Jan 30 09:17:34.651: INFO: Waiting for pod pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9 to disappear
Jan 30 09:17:34.653: INFO: Pod pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 30 09:17:34.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4676" for this suite. 01/30/23 09:17:34.656
------------------------------
â€¢ [4.072 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:17:30.588
    Jan 30 09:17:30.588: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:17:30.589
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:30.599
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:30.602
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:88
    STEP: Creating projection with secret that has name projected-secret-test-map-4067d1f3-06ca-475c-b78d-19c5f46a4e44 01/30/23 09:17:30.605
    STEP: Creating a pod to test consume secrets 01/30/23 09:17:30.612
    Jan 30 09:17:30.618: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9" in namespace "projected-4676" to be "Succeeded or Failed"
    Jan 30 09:17:30.622: INFO: Pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.770667ms
    Jan 30 09:17:32.625: INFO: Pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9": Phase="Running", Reason="", readiness=false. Elapsed: 2.006484314s
    Jan 30 09:17:34.626: INFO: Pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007280066s
    STEP: Saw pod success 01/30/23 09:17:34.626
    Jan 30 09:17:34.626: INFO: Pod "pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9" satisfied condition "Succeeded or Failed"
    Jan 30 09:17:34.628: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9 container projected-secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 09:17:34.632
    Jan 30 09:17:34.651: INFO: Waiting for pod pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9 to disappear
    Jan 30 09:17:34.653: INFO: Pod pod-projected-secrets-cc42eddb-86ec-4706-95ef-ca0787e090a9 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:17:34.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4676" for this suite. 01/30/23 09:17:34.656
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:17:34.663
Jan 30 09:17:34.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 09:17:34.664
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:34.678
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:34.68
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:17:34.682
Jan 30 09:17:34.690: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c" in namespace "downward-api-4630" to be "Succeeded or Failed"
Jan 30 09:17:34.692: INFO: Pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.12079ms
Jan 30 09:17:36.697: INFO: Pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006318089s
Jan 30 09:17:38.695: INFO: Pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004587946s
STEP: Saw pod success 01/30/23 09:17:38.695
Jan 30 09:17:38.695: INFO: Pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c" satisfied condition "Succeeded or Failed"
Jan 30 09:17:38.697: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c container client-container: <nil>
STEP: delete the pod 01/30/23 09:17:38.7
Jan 30 09:17:38.721: INFO: Waiting for pod downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c to disappear
Jan 30 09:17:38.723: INFO: Pod downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 09:17:38.723: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-4630" for this suite. 01/30/23 09:17:38.726
------------------------------
â€¢ [4.067 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:17:34.663
    Jan 30 09:17:34.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 09:17:34.664
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:34.678
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:34.68
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:53
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:17:34.682
    Jan 30 09:17:34.690: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c" in namespace "downward-api-4630" to be "Succeeded or Failed"
    Jan 30 09:17:34.692: INFO: Pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.12079ms
    Jan 30 09:17:36.697: INFO: Pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006318089s
    Jan 30 09:17:38.695: INFO: Pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004587946s
    STEP: Saw pod success 01/30/23 09:17:38.695
    Jan 30 09:17:38.695: INFO: Pod "downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c" satisfied condition "Succeeded or Failed"
    Jan 30 09:17:38.697: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c container client-container: <nil>
    STEP: delete the pod 01/30/23 09:17:38.7
    Jan 30 09:17:38.721: INFO: Waiting for pod downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c to disappear
    Jan 30 09:17:38.723: INFO: Pod downwardapi-volume-1c9557fb-f43e-4c16-ab06-4a54a9fda86c no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:17:38.723: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-4630" for this suite. 01/30/23 09:17:38.726
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:17:38.73
Jan 30 09:17:38.731: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-preemption 01/30/23 09:17:38.731
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:38.741
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:38.743
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Jan 30 09:17:38.757: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 09:18:38.769: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222
STEP: Create pods that use 4/5 of node resources. 01/30/23 09:18:38.771
Jan 30 09:18:38.831: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 30 09:18:38.838: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 30 09:18:38.855: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 30 09:18:38.864: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 01/30/23 09:18:38.864
Jan 30 09:18:38.864: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-268" to be "running"
Jan 30 09:18:38.868: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 3.713372ms
Jan 30 09:18:40.870: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006237954s
Jan 30 09:18:42.870: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.005684755s
Jan 30 09:18:42.870: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Jan 30 09:18:42.870: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-268" to be "running"
Jan 30 09:18:42.872: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.798655ms
Jan 30 09:18:42.872: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Jan 30 09:18:42.872: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-268" to be "running"
Jan 30 09:18:42.874: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.855037ms
Jan 30 09:18:42.874: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Jan 30 09:18:42.874: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-268" to be "running"
Jan 30 09:18:42.875: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.785762ms
Jan 30 09:18:42.875: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a critical pod that use same resources as that of a lower priority pod 01/30/23 09:18:42.875
Jan 30 09:18:42.892: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
Jan 30 09:18:42.894: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.317195ms
Jan 30 09:18:44.898: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006197726s
Jan 30 09:18:46.898: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.006575418s
Jan 30 09:18:48.897: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.005542381s
Jan 30 09:18:48.897: INFO: Pod "critical-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:18:48.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-268" for this suite. 01/30/23 09:18:48.955
------------------------------
â€¢ [SLOW TEST] [70.230 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:222

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:17:38.73
    Jan 30 09:17:38.731: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-preemption 01/30/23 09:17:38.731
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:17:38.741
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:17:38.743
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Jan 30 09:17:38.757: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 30 09:18:38.769: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates lower priority pod preemption by critical pod [Conformance]
      test/e2e/scheduling/preemption.go:222
    STEP: Create pods that use 4/5 of node resources. 01/30/23 09:18:38.771
    Jan 30 09:18:38.831: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Jan 30 09:18:38.838: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Jan 30 09:18:38.855: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Jan 30 09:18:38.864: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 01/30/23 09:18:38.864
    Jan 30 09:18:38.864: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-268" to be "running"
    Jan 30 09:18:38.868: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 3.713372ms
    Jan 30 09:18:40.870: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006237954s
    Jan 30 09:18:42.870: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.005684755s
    Jan 30 09:18:42.870: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Jan 30 09:18:42.870: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-268" to be "running"
    Jan 30 09:18:42.872: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.798655ms
    Jan 30 09:18:42.872: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Jan 30 09:18:42.872: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-268" to be "running"
    Jan 30 09:18:42.874: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.855037ms
    Jan 30 09:18:42.874: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Jan 30 09:18:42.874: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-268" to be "running"
    Jan 30 09:18:42.875: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.785762ms
    Jan 30 09:18:42.875: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a critical pod that use same resources as that of a lower priority pod 01/30/23 09:18:42.875
    Jan 30 09:18:42.892: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
    Jan 30 09:18:42.894: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.317195ms
    Jan 30 09:18:44.898: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006197726s
    Jan 30 09:18:46.898: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.006575418s
    Jan 30 09:18:48.897: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.005542381s
    Jan 30 09:18:48.897: INFO: Pod "critical-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:18:48.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-268" for this suite. 01/30/23 09:18:48.955
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:18:48.961
Jan 30 09:18:48.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 09:18:48.962
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:18:48.977
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:18:48.98
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
Jan 30 09:18:48.982: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:18:50.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-7863" for this suite. 01/30/23 09:18:50.003
------------------------------
â€¢ [1.060 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    creating/deleting custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:58

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:18:48.961
    Jan 30 09:18:48.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 09:18:48.962
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:18:48.977
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:18:48.98
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] creating/deleting custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:58
    Jan 30 09:18:48.982: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:18:50.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-7863" for this suite. 01/30/23 09:18:50.003
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:18:50.021
Jan 30 09:18:50.021: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename svcaccounts 01/30/23 09:18:50.022
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:18:50.034
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:18:50.036
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
Jan 30 09:18:50.052: INFO: created pod
Jan 30 09:18:50.052: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4279" to be "Succeeded or Failed"
Jan 30 09:18:50.055: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 3.597103ms
Jan 30 09:18:52.058: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006570615s
Jan 30 09:18:54.059: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006633265s
STEP: Saw pod success 01/30/23 09:18:54.059
Jan 30 09:18:54.059: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Jan 30 09:19:24.060: INFO: polling logs
Jan 30 09:19:24.068: INFO: Pod logs: 
I0130 09:18:50.621646       1 log.go:198] OK: Got token
I0130 09:18:50.621707       1 log.go:198] validating with in-cluster discovery
I0130 09:18:50.621946       1 log.go:198] OK: got issuer https://kubernetes.default.svc.cluster.local
I0130 09:18:50.621986       1 log.go:198] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4279:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675070930, NotBefore:1675070330, IssuedAt:1675070330, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4279", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9450203a-3cd5-4da4-867f-7700edd47751"}}}
I0130 09:18:50.629042       1 log.go:198] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
I0130 09:18:50.636013       1 log.go:198] OK: Validated signature on JWT
I0130 09:18:50.636118       1 log.go:198] OK: Got valid claims from token!
I0130 09:18:50.636152       1 log.go:198] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4279:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675070930, NotBefore:1675070330, IssuedAt:1675070330, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4279", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9450203a-3cd5-4da4-867f-7700edd47751"}}}

Jan 30 09:19:24.068: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 30 09:19:24.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4279" for this suite. 01/30/23 09:19:24.085
------------------------------
â€¢ [SLOW TEST] [34.068 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:18:50.021
    Jan 30 09:18:50.021: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename svcaccounts 01/30/23 09:18:50.022
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:18:50.034
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:18:50.036
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
      test/e2e/auth/service_accounts.go:531
    Jan 30 09:18:50.052: INFO: created pod
    Jan 30 09:18:50.052: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4279" to be "Succeeded or Failed"
    Jan 30 09:18:50.055: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 3.597103ms
    Jan 30 09:18:52.058: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006570615s
    Jan 30 09:18:54.059: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006633265s
    STEP: Saw pod success 01/30/23 09:18:54.059
    Jan 30 09:18:54.059: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
    Jan 30 09:19:24.060: INFO: polling logs
    Jan 30 09:19:24.068: INFO: Pod logs: 
    I0130 09:18:50.621646       1 log.go:198] OK: Got token
    I0130 09:18:50.621707       1 log.go:198] validating with in-cluster discovery
    I0130 09:18:50.621946       1 log.go:198] OK: got issuer https://kubernetes.default.svc.cluster.local
    I0130 09:18:50.621986       1 log.go:198] Full, not-validated claims: 
    openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4279:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675070930, NotBefore:1675070330, IssuedAt:1675070330, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4279", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9450203a-3cd5-4da4-867f-7700edd47751"}}}
    I0130 09:18:50.629042       1 log.go:198] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
    I0130 09:18:50.636013       1 log.go:198] OK: Validated signature on JWT
    I0130 09:18:50.636118       1 log.go:198] OK: Got valid claims from token!
    I0130 09:18:50.636152       1 log.go:198] Full, validated claims: 
    &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4279:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1675070930, NotBefore:1675070330, IssuedAt:1675070330, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4279", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9450203a-3cd5-4da4-867f-7700edd47751"}}}

    Jan 30 09:19:24.068: INFO: completed pod
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:19:24.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4279" for this suite. 01/30/23 09:19:24.085
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:19:24.089
Jan 30 09:19:24.089: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename namespaces 01/30/23 09:19:24.09
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:19:24.127
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:19:24.129
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
STEP: Updating Namespace "namespaces-1799" 01/30/23 09:19:24.132
Jan 30 09:19:24.140: INFO: Namespace "namespaces-1799" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"b6f505ae-8bd7-4dec-ae19-dd37380037d5", "kubernetes.io/metadata.name":"namespaces-1799", "namespaces-1799":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:19:24.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-1799" for this suite. 01/30/23 09:19:24.143
------------------------------
â€¢ [0.059 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:19:24.089
    Jan 30 09:19:24.089: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename namespaces 01/30/23 09:19:24.09
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:19:24.127
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:19:24.129
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply an update to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:366
    STEP: Updating Namespace "namespaces-1799" 01/30/23 09:19:24.132
    Jan 30 09:19:24.140: INFO: Namespace "namespaces-1799" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"b6f505ae-8bd7-4dec-ae19-dd37380037d5", "kubernetes.io/metadata.name":"namespaces-1799", "namespaces-1799":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:19:24.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-1799" for this suite. 01/30/23 09:19:24.143
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] Job
  should delete a job [Conformance]
  test/e2e/apps/job.go:481
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:19:24.148
Jan 30 09:19:24.148: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename job 01/30/23 09:19:24.151
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:19:24.163
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:19:24.165
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a job [Conformance]
  test/e2e/apps/job.go:481
STEP: Creating a job 01/30/23 09:19:24.168
STEP: Ensuring active pods == parallelism 01/30/23 09:19:24.176
STEP: delete a job 01/30/23 09:19:26.179
STEP: deleting Job.batch foo in namespace job-5145, will wait for the garbage collector to delete the pods 01/30/23 09:19:26.179
Jan 30 09:19:26.245: INFO: Deleting Job.batch foo took: 14.376671ms
Jan 30 09:19:26.346: INFO: Terminating Job.batch foo pods took: 101.013823ms
STEP: Ensuring job was deleted 01/30/23 09:19:58.647
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 30 09:19:58.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-5145" for this suite. 01/30/23 09:19:58.652
------------------------------
â€¢ [SLOW TEST] [34.533 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/apps/job.go:481

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:19:24.148
    Jan 30 09:19:24.148: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename job 01/30/23 09:19:24.151
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:19:24.163
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:19:24.165
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a job [Conformance]
      test/e2e/apps/job.go:481
    STEP: Creating a job 01/30/23 09:19:24.168
    STEP: Ensuring active pods == parallelism 01/30/23 09:19:24.176
    STEP: delete a job 01/30/23 09:19:26.179
    STEP: deleting Job.batch foo in namespace job-5145, will wait for the garbage collector to delete the pods 01/30/23 09:19:26.179
    Jan 30 09:19:26.245: INFO: Deleting Job.batch foo took: 14.376671ms
    Jan 30 09:19:26.346: INFO: Terminating Job.batch foo pods took: 101.013823ms
    STEP: Ensuring job was deleted 01/30/23 09:19:58.647
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:19:58.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-5145" for this suite. 01/30/23 09:19:58.652
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] PodTemplates
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:19:58.682
Jan 30 09:19:58.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename podtemplate 01/30/23 09:19:58.683
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:19:58.701
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:19:58.704
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
STEP: Create set of pod templates 01/30/23 09:19:58.706
Jan 30 09:19:58.710: INFO: created test-podtemplate-1
Jan 30 09:19:58.715: INFO: created test-podtemplate-2
Jan 30 09:19:58.719: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace 01/30/23 09:19:58.719
STEP: delete collection of pod templates 01/30/23 09:19:58.722
Jan 30 09:19:58.722: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity 01/30/23 09:19:58.733
Jan 30 09:19:58.734: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Jan 30 09:19:58.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-1900" for this suite. 01/30/23 09:19:58.739
------------------------------
â€¢ [0.061 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:19:58.682
    Jan 30 09:19:58.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename podtemplate 01/30/23 09:19:58.683
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:19:58.701
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:19:58.704
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of pod templates [Conformance]
      test/e2e/common/node/podtemplates.go:122
    STEP: Create set of pod templates 01/30/23 09:19:58.706
    Jan 30 09:19:58.710: INFO: created test-podtemplate-1
    Jan 30 09:19:58.715: INFO: created test-podtemplate-2
    Jan 30 09:19:58.719: INFO: created test-podtemplate-3
    STEP: get a list of pod templates with a label in the current namespace 01/30/23 09:19:58.719
    STEP: delete collection of pod templates 01/30/23 09:19:58.722
    Jan 30 09:19:58.722: INFO: requesting DeleteCollection of pod templates
    STEP: check that the list of pod templates matches the requested quantity 01/30/23 09:19:58.733
    Jan 30 09:19:58.734: INFO: requesting list of pod templates to confirm quantity
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:19:58.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-1900" for this suite. 01/30/23 09:19:58.739
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:19:58.744
Jan 30 09:19:58.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-lifecycle-hook 01/30/23 09:19:58.745
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:19:58.757
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:19:58.761
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 01/30/23 09:19:58.767
Jan 30 09:19:58.775: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2237" to be "running and ready"
Jan 30 09:19:58.778: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.462377ms
Jan 30 09:19:58.778: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:20:00.781: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.006028513s
Jan 30 09:20:00.781: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Jan 30 09:20:00.781: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
STEP: create the pod with lifecycle hook 01/30/23 09:20:00.783
Jan 30 09:20:00.788: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-2237" to be "running and ready"
Jan 30 09:20:00.790: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 1.48893ms
Jan 30 09:20:00.790: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:20:02.792: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.00350691s
Jan 30 09:20:02.792: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
Jan 30 09:20:02.792: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 01/30/23 09:20:02.793
Jan 30 09:20:02.799: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 30 09:20:02.801: INFO: Pod pod-with-prestop-http-hook still exists
Jan 30 09:20:04.802: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 30 09:20:04.806: INFO: Pod pod-with-prestop-http-hook still exists
Jan 30 09:20:06.803: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jan 30 09:20:06.806: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook 01/30/23 09:20:06.806
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Jan 30 09:20:06.814: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-2237" for this suite. 01/30/23 09:20:06.817
------------------------------
â€¢ [SLOW TEST] [8.087 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:212

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:19:58.744
    Jan 30 09:19:58.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-lifecycle-hook 01/30/23 09:19:58.745
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:19:58.757
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:19:58.761
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 01/30/23 09:19:58.767
    Jan 30 09:19:58.775: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-2237" to be "running and ready"
    Jan 30 09:19:58.778: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.462377ms
    Jan 30 09:19:58.778: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:20:00.781: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.006028513s
    Jan 30 09:20:00.781: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Jan 30 09:20:00.781: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:212
    STEP: create the pod with lifecycle hook 01/30/23 09:20:00.783
    Jan 30 09:20:00.788: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-2237" to be "running and ready"
    Jan 30 09:20:00.790: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 1.48893ms
    Jan 30 09:20:00.790: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:20:02.792: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.00350691s
    Jan 30 09:20:02.792: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
    Jan 30 09:20:02.792: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 01/30/23 09:20:02.793
    Jan 30 09:20:02.799: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Jan 30 09:20:02.801: INFO: Pod pod-with-prestop-http-hook still exists
    Jan 30 09:20:04.802: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Jan 30 09:20:04.806: INFO: Pod pod-with-prestop-http-hook still exists
    Jan 30 09:20:06.803: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Jan 30 09:20:06.806: INFO: Pod pod-with-prestop-http-hook no longer exists
    STEP: check prestop hook 01/30/23 09:20:06.806
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:20:06.814: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-2237" for this suite. 01/30/23 09:20:06.817
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
[BeforeEach] [sig-storage] Projected combined
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:20:06.833
Jan 30 09:20:06.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:20:06.834
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:20:06.844
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:20:06.849
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:31
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
STEP: Creating configMap with name configmap-projected-all-test-volume-7d957509-7c2a-45be-987d-03e11f4fd7b6 01/30/23 09:20:06.851
STEP: Creating secret with name secret-projected-all-test-volume-70def10e-fa66-48e8-9b25-76875ad6f9e6 01/30/23 09:20:06.855
STEP: Creating a pod to test Check all projections for projected volume plugin 01/30/23 09:20:06.863
Jan 30 09:20:06.872: INFO: Waiting up to 5m0s for pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2" in namespace "projected-6253" to be "Succeeded or Failed"
Jan 30 09:20:06.875: INFO: Pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.664876ms
Jan 30 09:20:08.878: INFO: Pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005596486s
Jan 30 09:20:10.879: INFO: Pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006526571s
STEP: Saw pod success 01/30/23 09:20:10.879
Jan 30 09:20:10.879: INFO: Pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2" satisfied condition "Succeeded or Failed"
Jan 30 09:20:10.884: INFO: Trying to get logs from node tce-worker2 pod projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2 container projected-all-volume-test: <nil>
STEP: delete the pod 01/30/23 09:20:10.888
Jan 30 09:20:10.897: INFO: Waiting for pod projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2 to disappear
Jan 30 09:20:10.899: INFO: Pod projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/node/init/init.go:32
Jan 30 09:20:10.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected combined
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected combined
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6253" for this suite. 01/30/23 09:20:10.902
------------------------------
â€¢ [4.073 seconds]
[sig-storage] Projected combined
test/e2e/common/storage/framework.go:23
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected combined
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:20:06.833
    Jan 30 09:20:06.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:20:06.834
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:20:06.844
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:20:06.849
    [BeforeEach] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:31
    [It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
      test/e2e/common/storage/projected_combined.go:44
    STEP: Creating configMap with name configmap-projected-all-test-volume-7d957509-7c2a-45be-987d-03e11f4fd7b6 01/30/23 09:20:06.851
    STEP: Creating secret with name secret-projected-all-test-volume-70def10e-fa66-48e8-9b25-76875ad6f9e6 01/30/23 09:20:06.855
    STEP: Creating a pod to test Check all projections for projected volume plugin 01/30/23 09:20:06.863
    Jan 30 09:20:06.872: INFO: Waiting up to 5m0s for pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2" in namespace "projected-6253" to be "Succeeded or Failed"
    Jan 30 09:20:06.875: INFO: Pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.664876ms
    Jan 30 09:20:08.878: INFO: Pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005596486s
    Jan 30 09:20:10.879: INFO: Pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006526571s
    STEP: Saw pod success 01/30/23 09:20:10.879
    Jan 30 09:20:10.879: INFO: Pod "projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2" satisfied condition "Succeeded or Failed"
    Jan 30 09:20:10.884: INFO: Trying to get logs from node tce-worker2 pod projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2 container projected-all-volume-test: <nil>
    STEP: delete the pod 01/30/23 09:20:10.888
    Jan 30 09:20:10.897: INFO: Waiting for pod projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2 to disappear
    Jan 30 09:20:10.899: INFO: Pod projected-volume-0e3ecdd8-919c-45d1-accd-a1591165cfd2 no longer exists
    [AfterEach] [sig-storage] Projected combined
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:20:10.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected combined
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected combined
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6253" for this suite. 01/30/23 09:20:10.902
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:20:10.907
Jan 30 09:20:10.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-webhook 01/30/23 09:20:10.908
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:20:10.922
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:20:10.925
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 01/30/23 09:20:10.927
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 01/30/23 09:20:11.33
STEP: Deploying the custom resource conversion webhook pod 01/30/23 09:20:11.336
STEP: Wait for the deployment to be ready 01/30/23 09:20:11.345
Jan 30 09:20:11.352: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 09:20:13.359
STEP: Verifying the service has paired with the endpoint 01/30/23 09:20:13.381
Jan 30 09:20:14.382: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
Jan 30 09:20:14.385: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Creating a v1 custom resource 01/30/23 09:20:16.974
STEP: Create a v2 custom resource 01/30/23 09:20:16.986
STEP: List CRs in v1 01/30/23 09:20:17.02
STEP: List CRs in v2 01/30/23 09:20:17.023
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:20:17.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-8260" for this suite. 01/30/23 09:20:17.581
------------------------------
â€¢ [SLOW TEST] [6.683 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:20:10.907
    Jan 30 09:20:10.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-webhook 01/30/23 09:20:10.908
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:20:10.922
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:20:10.925
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 01/30/23 09:20:10.927
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 01/30/23 09:20:11.33
    STEP: Deploying the custom resource conversion webhook pod 01/30/23 09:20:11.336
    STEP: Wait for the deployment to be ready 01/30/23 09:20:11.345
    Jan 30 09:20:11.352: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 09:20:13.359
    STEP: Verifying the service has paired with the endpoint 01/30/23 09:20:13.381
    Jan 30 09:20:14.382: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert a non homogeneous list of CRs [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:184
    Jan 30 09:20:14.385: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Creating a v1 custom resource 01/30/23 09:20:16.974
    STEP: Create a v2 custom resource 01/30/23 09:20:16.986
    STEP: List CRs in v1 01/30/23 09:20:17.02
    STEP: List CRs in v2 01/30/23 09:20:17.023
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:20:17.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-8260" for this suite. 01/30/23 09:20:17.581
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch
  watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:20:17.59
Jan 30 09:20:17.590: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-watch 01/30/23 09:20:17.591
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:20:17.613
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:20:17.616
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
Jan 30 09:20:17.619: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Creating first CR  01/30/23 09:20:20.164
Jan 30 09:20:20.169: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:20Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:20Z]] name:name1 resourceVersion:26146 uid:f0c0db5d-8dd4-4eb7-80eb-7d307763734e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR 01/30/23 09:20:30.172
Jan 30 09:20:30.188: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:30Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:30Z]] name:name2 resourceVersion:26173 uid:be9c8492-4a48-47af-b032-6e83c92ccdc7] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR 01/30/23 09:20:40.189
Jan 30 09:20:40.199: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:40Z]] name:name1 resourceVersion:26189 uid:f0c0db5d-8dd4-4eb7-80eb-7d307763734e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR 01/30/23 09:20:50.201
Jan 30 09:20:50.206: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:50Z]] name:name2 resourceVersion:26205 uid:be9c8492-4a48-47af-b032-6e83c92ccdc7] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR 01/30/23 09:21:00.209
Jan 30 09:21:00.224: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:40Z]] name:name1 resourceVersion:26221 uid:f0c0db5d-8dd4-4eb7-80eb-7d307763734e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR 01/30/23 09:21:10.225
Jan 30 09:21:10.240: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:50Z]] name:name2 resourceVersion:26237 uid:be9c8492-4a48-47af-b032-6e83c92ccdc7] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:20.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-watch-2947" for this suite. 01/30/23 09:21:20.753
------------------------------
â€¢ [SLOW TEST] [63.168 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/apimachinery/crd_watch.go:51

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:20:17.59
    Jan 30 09:20:17.590: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-watch 01/30/23 09:20:17.591
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:20:17.613
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:20:17.616
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] watch on custom resource definition objects [Conformance]
      test/e2e/apimachinery/crd_watch.go:51
    Jan 30 09:20:17.619: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Creating first CR  01/30/23 09:20:20.164
    Jan 30 09:20:20.169: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:20Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:20Z]] name:name1 resourceVersion:26146 uid:f0c0db5d-8dd4-4eb7-80eb-7d307763734e] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Creating second CR 01/30/23 09:20:30.172
    Jan 30 09:20:30.188: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:30Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:30Z]] name:name2 resourceVersion:26173 uid:be9c8492-4a48-47af-b032-6e83c92ccdc7] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying first CR 01/30/23 09:20:40.189
    Jan 30 09:20:40.199: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:40Z]] name:name1 resourceVersion:26189 uid:f0c0db5d-8dd4-4eb7-80eb-7d307763734e] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying second CR 01/30/23 09:20:50.201
    Jan 30 09:20:50.206: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:50Z]] name:name2 resourceVersion:26205 uid:be9c8492-4a48-47af-b032-6e83c92ccdc7] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting first CR 01/30/23 09:21:00.209
    Jan 30 09:21:00.224: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:40Z]] name:name1 resourceVersion:26221 uid:f0c0db5d-8dd4-4eb7-80eb-7d307763734e] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting second CR 01/30/23 09:21:10.225
    Jan 30 09:21:10.240: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-01-30T09:20:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-01-30T09:20:50Z]] name:name2 resourceVersion:26237 uid:be9c8492-4a48-47af-b032-6e83c92ccdc7] num:map[num1:9223372036854775807 num2:1000000]]}
    [AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:20.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-watch-2947" for this suite. 01/30/23 09:21:20.753
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] ConfigMap
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:20.759
Jan 30 09:21:20.759: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename configmap 01/30/23 09:21:20.76
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:20.77
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:20.772
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
STEP: creating a ConfigMap 01/30/23 09:21:20.774
STEP: fetching the ConfigMap 01/30/23 09:21:20.782
STEP: patching the ConfigMap 01/30/23 09:21:20.784
STEP: listing all ConfigMaps in all namespaces with a label selector 01/30/23 09:21:20.788
STEP: deleting the ConfigMap by collection with a label selector 01/30/23 09:21:20.792
STEP: listing all ConfigMaps in test namespace 01/30/23 09:21:20.797
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:20.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8594" for this suite. 01/30/23 09:21:20.803
------------------------------
â€¢ [0.051 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:20.759
    Jan 30 09:21:20.759: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename configmap 01/30/23 09:21:20.76
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:20.77
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:20.772
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through a ConfigMap lifecycle [Conformance]
      test/e2e/common/node/configmap.go:169
    STEP: creating a ConfigMap 01/30/23 09:21:20.774
    STEP: fetching the ConfigMap 01/30/23 09:21:20.782
    STEP: patching the ConfigMap 01/30/23 09:21:20.784
    STEP: listing all ConfigMaps in all namespaces with a label selector 01/30/23 09:21:20.788
    STEP: deleting the ConfigMap by collection with a label selector 01/30/23 09:21:20.792
    STEP: listing all ConfigMaps in test namespace 01/30/23 09:21:20.797
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:20.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8594" for this suite. 01/30/23 09:21:20.803
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:20.811
Jan 30 09:21:20.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 09:21:20.812
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:20.822
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:20.826
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
STEP: Creating a pod to test emptydir 0644 on node default medium 01/30/23 09:21:20.828
Jan 30 09:21:20.835: INFO: Waiting up to 5m0s for pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831" in namespace "emptydir-1124" to be "Succeeded or Failed"
Jan 30 09:21:20.838: INFO: Pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831": Phase="Pending", Reason="", readiness=false. Elapsed: 3.017798ms
Jan 30 09:21:22.841: INFO: Pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006003565s
Jan 30 09:21:24.842: INFO: Pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007428818s
STEP: Saw pod success 01/30/23 09:21:24.842
Jan 30 09:21:24.842: INFO: Pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831" satisfied condition "Succeeded or Failed"
Jan 30 09:21:24.845: INFO: Trying to get logs from node tce-worker2 pod pod-39fb248c-119d-4e4d-84f9-7b4e7264a831 container test-container: <nil>
STEP: delete the pod 01/30/23 09:21:24.848
Jan 30 09:21:24.858: INFO: Waiting for pod pod-39fb248c-119d-4e4d-84f9-7b4e7264a831 to disappear
Jan 30 09:21:24.860: INFO: Pod pod-39fb248c-119d-4e4d-84f9-7b4e7264a831 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:24.860: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-1124" for this suite. 01/30/23 09:21:24.863
------------------------------
â€¢ [4.058 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:20.811
    Jan 30 09:21:20.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 09:21:20.812
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:20.822
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:20.826
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:197
    STEP: Creating a pod to test emptydir 0644 on node default medium 01/30/23 09:21:20.828
    Jan 30 09:21:20.835: INFO: Waiting up to 5m0s for pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831" in namespace "emptydir-1124" to be "Succeeded or Failed"
    Jan 30 09:21:20.838: INFO: Pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831": Phase="Pending", Reason="", readiness=false. Elapsed: 3.017798ms
    Jan 30 09:21:22.841: INFO: Pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006003565s
    Jan 30 09:21:24.842: INFO: Pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007428818s
    STEP: Saw pod success 01/30/23 09:21:24.842
    Jan 30 09:21:24.842: INFO: Pod "pod-39fb248c-119d-4e4d-84f9-7b4e7264a831" satisfied condition "Succeeded or Failed"
    Jan 30 09:21:24.845: INFO: Trying to get logs from node tce-worker2 pod pod-39fb248c-119d-4e4d-84f9-7b4e7264a831 container test-container: <nil>
    STEP: delete the pod 01/30/23 09:21:24.848
    Jan 30 09:21:24.858: INFO: Waiting for pod pod-39fb248c-119d-4e4d-84f9-7b4e7264a831 to disappear
    Jan 30 09:21:24.860: INFO: Pod pod-39fb248c-119d-4e4d-84f9-7b4e7264a831 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:24.860: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-1124" for this suite. 01/30/23 09:21:24.863
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:24.871
Jan 30 09:21:24.871: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-webhook 01/30/23 09:21:24.872
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:24.882
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:24.885
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 01/30/23 09:21:24.89
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 01/30/23 09:21:25.173
STEP: Deploying the custom resource conversion webhook pod 01/30/23 09:21:25.191
STEP: Wait for the deployment to be ready 01/30/23 09:21:25.2
Jan 30 09:21:25.209: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 09:21:27.217
STEP: Verifying the service has paired with the endpoint 01/30/23 09:21:27.227
Jan 30 09:21:28.228: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
Jan 30 09:21:28.231: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Creating a v1 custom resource 01/30/23 09:21:30.81
STEP: v2 custom resource should be converted 01/30/23 09:21:30.817
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:31.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-1401" for this suite. 01/30/23 09:21:31.38
------------------------------
â€¢ [SLOW TEST] [6.532 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:24.871
    Jan 30 09:21:24.871: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-webhook 01/30/23 09:21:24.872
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:24.882
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:24.885
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 01/30/23 09:21:24.89
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 01/30/23 09:21:25.173
    STEP: Deploying the custom resource conversion webhook pod 01/30/23 09:21:25.191
    STEP: Wait for the deployment to be ready 01/30/23 09:21:25.2
    Jan 30 09:21:25.209: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 09:21:27.217
    STEP: Verifying the service has paired with the endpoint 01/30/23 09:21:27.227
    Jan 30 09:21:28.228: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert from CR v1 to CR v2 [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:149
    Jan 30 09:21:28.231: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Creating a v1 custom resource 01/30/23 09:21:30.81
    STEP: v2 custom resource should be converted 01/30/23 09:21:30.817
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:31.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-1401" for this suite. 01/30/23 09:21:31.38
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:31.416
Jan 30 09:21:31.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename tables 01/30/23 09:21:31.418
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:31.434
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:31.44
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:31.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  tear down framework | framework.go:193
STEP: Destroying namespace "tables-5471" for this suite. 01/30/23 09:21:31.459
------------------------------
â€¢ [0.061 seconds]
[sig-api-machinery] Servers with support for Table transformation
test/e2e/apimachinery/framework.go:23
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:31.416
    Jan 30 09:21:31.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename tables 01/30/23 09:21:31.418
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:31.434
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:31.44
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/apimachinery/table_conversion.go:49
    [It] should return a 406 for a backend which does not implement metadata [Conformance]
      test/e2e/apimachinery/table_conversion.go:154
    [AfterEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:31.452: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      tear down framework | framework.go:193
    STEP: Destroying namespace "tables-5471" for this suite. 01/30/23 09:21:31.459
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:31.485
Jan 30 09:21:31.486: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:21:31.487
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:31.5
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:31.503
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
STEP: set up a multi version CRD 01/30/23 09:21:31.505
Jan 30 09:21:31.506: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: mark a version not serverd 01/30/23 09:21:34.876
STEP: check the unserved version gets removed 01/30/23 09:21:34.908
STEP: check the other version is not changed 01/30/23 09:21:35.763
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:38.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-6218" for this suite. 01/30/23 09:21:38.471
------------------------------
â€¢ [SLOW TEST] [6.993 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:31.485
    Jan 30 09:21:31.486: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:21:31.487
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:31.5
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:31.503
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] removes definition from spec when one version gets changed to not be served [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:442
    STEP: set up a multi version CRD 01/30/23 09:21:31.505
    Jan 30 09:21:31.506: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: mark a version not serverd 01/30/23 09:21:34.876
    STEP: check the unserved version gets removed 01/30/23 09:21:34.908
    STEP: check the other version is not changed 01/30/23 09:21:35.763
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:38.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-6218" for this suite. 01/30/23 09:21:38.471
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:38.48
Jan 30 09:21:38.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename gc 01/30/23 09:21:38.481
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:38.492
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:38.494
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
Jan 30 09:21:38.533: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"a0c86022-2eec-451c-9664-0e96572dd19e", Controller:(*bool)(0xc0048b5126), BlockOwnerDeletion:(*bool)(0xc0048b5127)}}
Jan 30 09:21:38.545: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f7d5e9fb-dccd-47ce-a2f4-376be87402e1", Controller:(*bool)(0xc0048b53be), BlockOwnerDeletion:(*bool)(0xc0048b53bf)}}
Jan 30 09:21:38.555: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"d7637a1b-a9e1-4edb-9d18-00eab6e45bfd", Controller:(*bool)(0xc003f23aae), BlockOwnerDeletion:(*bool)(0xc003f23aaf)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:43.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-3676" for this suite. 01/30/23 09:21:43.567
------------------------------
â€¢ [SLOW TEST] [5.092 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:38.48
    Jan 30 09:21:38.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename gc 01/30/23 09:21:38.481
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:38.492
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:38.494
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be blocked by dependency circle [Conformance]
      test/e2e/apimachinery/garbage_collector.go:849
    Jan 30 09:21:38.533: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"a0c86022-2eec-451c-9664-0e96572dd19e", Controller:(*bool)(0xc0048b5126), BlockOwnerDeletion:(*bool)(0xc0048b5127)}}
    Jan 30 09:21:38.545: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f7d5e9fb-dccd-47ce-a2f4-376be87402e1", Controller:(*bool)(0xc0048b53be), BlockOwnerDeletion:(*bool)(0xc0048b53bf)}}
    Jan 30 09:21:38.555: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"d7637a1b-a9e1-4edb-9d18-00eab6e45bfd", Controller:(*bool)(0xc003f23aae), BlockOwnerDeletion:(*bool)(0xc003f23aaf)}}
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:43.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-3676" for this suite. 01/30/23 09:21:43.567
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:43.573
Jan 30 09:21:43.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename containers 01/30/23 09:21:43.573
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:43.584
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:43.586
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
STEP: Creating a pod to test override command 01/30/23 09:21:43.588
Jan 30 09:21:43.594: INFO: Waiting up to 5m0s for pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99" in namespace "containers-9314" to be "Succeeded or Failed"
Jan 30 09:21:43.596: INFO: Pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99": Phase="Pending", Reason="", readiness=false. Elapsed: 2.078768ms
Jan 30 09:21:45.599: INFO: Pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004729486s
Jan 30 09:21:47.598: INFO: Pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004654623s
STEP: Saw pod success 01/30/23 09:21:47.599
Jan 30 09:21:47.599: INFO: Pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99" satisfied condition "Succeeded or Failed"
Jan 30 09:21:47.601: INFO: Trying to get logs from node tce-worker2 pod client-containers-7e041048-d8b7-4248-9ec8-86c836495e99 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:21:47.604
Jan 30 09:21:47.623: INFO: Waiting for pod client-containers-7e041048-d8b7-4248-9ec8-86c836495e99 to disappear
Jan 30 09:21:47.625: INFO: Pod client-containers-7e041048-d8b7-4248-9ec8-86c836495e99 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:47.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-9314" for this suite. 01/30/23 09:21:47.628
------------------------------
â€¢ [4.060 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:43.573
    Jan 30 09:21:43.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename containers 01/30/23 09:21:43.573
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:43.584
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:43.586
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:73
    STEP: Creating a pod to test override command 01/30/23 09:21:43.588
    Jan 30 09:21:43.594: INFO: Waiting up to 5m0s for pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99" in namespace "containers-9314" to be "Succeeded or Failed"
    Jan 30 09:21:43.596: INFO: Pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99": Phase="Pending", Reason="", readiness=false. Elapsed: 2.078768ms
    Jan 30 09:21:45.599: INFO: Pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004729486s
    Jan 30 09:21:47.598: INFO: Pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004654623s
    STEP: Saw pod success 01/30/23 09:21:47.599
    Jan 30 09:21:47.599: INFO: Pod "client-containers-7e041048-d8b7-4248-9ec8-86c836495e99" satisfied condition "Succeeded or Failed"
    Jan 30 09:21:47.601: INFO: Trying to get logs from node tce-worker2 pod client-containers-7e041048-d8b7-4248-9ec8-86c836495e99 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:21:47.604
    Jan 30 09:21:47.623: INFO: Waiting for pod client-containers-7e041048-d8b7-4248-9ec8-86c836495e99 to disappear
    Jan 30 09:21:47.625: INFO: Pod client-containers-7e041048-d8b7-4248-9ec8-86c836495e99 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:47.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-9314" for this suite. 01/30/23 09:21:47.628
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:47.634
Jan 30 09:21:47.634: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename limitrange 01/30/23 09:21:47.634
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:47.647
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:47.649
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
STEP: Creating LimitRange "e2e-limitrange-785m9" in namespace "limitrange-9846" 01/30/23 09:21:47.652
STEP: Creating another limitRange in another namespace 01/30/23 09:21:47.656
Jan 30 09:21:47.664: INFO: Namespace "e2e-limitrange-785m9-6580" created
Jan 30 09:21:47.664: INFO: Creating LimitRange "e2e-limitrange-785m9" in namespace "e2e-limitrange-785m9-6580"
STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-785m9" 01/30/23 09:21:47.67
Jan 30 09:21:47.672: INFO: Found 2 limitRanges
STEP: Patching LimitRange "e2e-limitrange-785m9" in "limitrange-9846" namespace 01/30/23 09:21:47.672
Jan 30 09:21:47.677: INFO: LimitRange "e2e-limitrange-785m9" has been patched
STEP: Delete LimitRange "e2e-limitrange-785m9" by Collection with labelSelector: "e2e-limitrange-785m9=patched" 01/30/23 09:21:47.677
STEP: Confirm that the limitRange "e2e-limitrange-785m9" has been deleted 01/30/23 09:21:47.682
Jan 30 09:21:47.682: INFO: Requesting list of LimitRange to confirm quantity
Jan 30 09:21:47.685: INFO: Found 0 LimitRange with label "e2e-limitrange-785m9=patched"
Jan 30 09:21:47.685: INFO: LimitRange "e2e-limitrange-785m9" has been deleted.
STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-785m9" 01/30/23 09:21:47.685
Jan 30 09:21:47.688: INFO: Found 1 limitRange
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:47.688: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-9846" for this suite. 01/30/23 09:21:47.691
STEP: Destroying namespace "e2e-limitrange-785m9-6580" for this suite. 01/30/23 09:21:47.697
------------------------------
â€¢ [0.069 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:47.634
    Jan 30 09:21:47.634: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename limitrange 01/30/23 09:21:47.634
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:47.647
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:47.649
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should list, patch and delete a LimitRange by collection [Conformance]
      test/e2e/scheduling/limit_range.go:239
    STEP: Creating LimitRange "e2e-limitrange-785m9" in namespace "limitrange-9846" 01/30/23 09:21:47.652
    STEP: Creating another limitRange in another namespace 01/30/23 09:21:47.656
    Jan 30 09:21:47.664: INFO: Namespace "e2e-limitrange-785m9-6580" created
    Jan 30 09:21:47.664: INFO: Creating LimitRange "e2e-limitrange-785m9" in namespace "e2e-limitrange-785m9-6580"
    STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-785m9" 01/30/23 09:21:47.67
    Jan 30 09:21:47.672: INFO: Found 2 limitRanges
    STEP: Patching LimitRange "e2e-limitrange-785m9" in "limitrange-9846" namespace 01/30/23 09:21:47.672
    Jan 30 09:21:47.677: INFO: LimitRange "e2e-limitrange-785m9" has been patched
    STEP: Delete LimitRange "e2e-limitrange-785m9" by Collection with labelSelector: "e2e-limitrange-785m9=patched" 01/30/23 09:21:47.677
    STEP: Confirm that the limitRange "e2e-limitrange-785m9" has been deleted 01/30/23 09:21:47.682
    Jan 30 09:21:47.682: INFO: Requesting list of LimitRange to confirm quantity
    Jan 30 09:21:47.685: INFO: Found 0 LimitRange with label "e2e-limitrange-785m9=patched"
    Jan 30 09:21:47.685: INFO: LimitRange "e2e-limitrange-785m9" has been deleted.
    STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-785m9" 01/30/23 09:21:47.685
    Jan 30 09:21:47.688: INFO: Found 1 limitRange
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:47.688: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-9846" for this suite. 01/30/23 09:21:47.691
    STEP: Destroying namespace "e2e-limitrange-785m9-6580" for this suite. 01/30/23 09:21:47.697
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
[BeforeEach] [sig-api-machinery] Discovery
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:47.703
Jan 30 09:21:47.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename discovery 01/30/23 09:21:47.704
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:47.716
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:47.72
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert 01/30/23 09:21:47.724
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
Jan 30 09:21:47.906: INFO: Checking APIGroup: apiregistration.k8s.io
Jan 30 09:21:47.907: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Jan 30 09:21:47.907: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Jan 30 09:21:47.907: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Jan 30 09:21:47.907: INFO: Checking APIGroup: apps
Jan 30 09:21:47.907: INFO: PreferredVersion.GroupVersion: apps/v1
Jan 30 09:21:47.907: INFO: Versions found [{apps/v1 v1}]
Jan 30 09:21:47.907: INFO: apps/v1 matches apps/v1
Jan 30 09:21:47.907: INFO: Checking APIGroup: events.k8s.io
Jan 30 09:21:47.908: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Jan 30 09:21:47.908: INFO: Versions found [{events.k8s.io/v1 v1}]
Jan 30 09:21:47.908: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Jan 30 09:21:47.908: INFO: Checking APIGroup: authentication.k8s.io
Jan 30 09:21:47.909: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Jan 30 09:21:47.909: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Jan 30 09:21:47.909: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Jan 30 09:21:47.909: INFO: Checking APIGroup: authorization.k8s.io
Jan 30 09:21:47.910: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Jan 30 09:21:47.910: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Jan 30 09:21:47.910: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Jan 30 09:21:47.910: INFO: Checking APIGroup: autoscaling
Jan 30 09:21:47.910: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Jan 30 09:21:47.910: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
Jan 30 09:21:47.910: INFO: autoscaling/v2 matches autoscaling/v2
Jan 30 09:21:47.910: INFO: Checking APIGroup: batch
Jan 30 09:21:47.911: INFO: PreferredVersion.GroupVersion: batch/v1
Jan 30 09:21:47.911: INFO: Versions found [{batch/v1 v1}]
Jan 30 09:21:47.911: INFO: batch/v1 matches batch/v1
Jan 30 09:21:47.911: INFO: Checking APIGroup: certificates.k8s.io
Jan 30 09:21:47.912: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Jan 30 09:21:47.912: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Jan 30 09:21:47.912: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Jan 30 09:21:47.912: INFO: Checking APIGroup: networking.k8s.io
Jan 30 09:21:47.913: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Jan 30 09:21:47.913: INFO: Versions found [{networking.k8s.io/v1 v1}]
Jan 30 09:21:47.913: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Jan 30 09:21:47.913: INFO: Checking APIGroup: policy
Jan 30 09:21:47.913: INFO: PreferredVersion.GroupVersion: policy/v1
Jan 30 09:21:47.913: INFO: Versions found [{policy/v1 v1}]
Jan 30 09:21:47.913: INFO: policy/v1 matches policy/v1
Jan 30 09:21:47.913: INFO: Checking APIGroup: rbac.authorization.k8s.io
Jan 30 09:21:47.914: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Jan 30 09:21:47.914: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Jan 30 09:21:47.914: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Jan 30 09:21:47.914: INFO: Checking APIGroup: storage.k8s.io
Jan 30 09:21:47.915: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Jan 30 09:21:47.915: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Jan 30 09:21:47.915: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Jan 30 09:21:47.915: INFO: Checking APIGroup: admissionregistration.k8s.io
Jan 30 09:21:47.916: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Jan 30 09:21:47.916: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Jan 30 09:21:47.916: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Jan 30 09:21:47.916: INFO: Checking APIGroup: apiextensions.k8s.io
Jan 30 09:21:47.917: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Jan 30 09:21:47.917: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Jan 30 09:21:47.917: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Jan 30 09:21:47.917: INFO: Checking APIGroup: scheduling.k8s.io
Jan 30 09:21:47.918: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Jan 30 09:21:47.918: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Jan 30 09:21:47.918: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Jan 30 09:21:47.918: INFO: Checking APIGroup: coordination.k8s.io
Jan 30 09:21:47.919: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Jan 30 09:21:47.919: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Jan 30 09:21:47.919: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Jan 30 09:21:47.919: INFO: Checking APIGroup: node.k8s.io
Jan 30 09:21:47.920: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Jan 30 09:21:47.920: INFO: Versions found [{node.k8s.io/v1 v1}]
Jan 30 09:21:47.920: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Jan 30 09:21:47.920: INFO: Checking APIGroup: discovery.k8s.io
Jan 30 09:21:47.921: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Jan 30 09:21:47.921: INFO: Versions found [{discovery.k8s.io/v1 v1}]
Jan 30 09:21:47.921: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Jan 30 09:21:47.921: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Jan 30 09:21:47.922: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
Jan 30 09:21:47.922: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
Jan 30 09:21:47.922: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:47.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  tear down framework | framework.go:193
STEP: Destroying namespace "discovery-8858" for this suite. 01/30/23 09:21:47.925
------------------------------
â€¢ [0.226 seconds]
[sig-api-machinery] Discovery
test/e2e/apimachinery/framework.go:23
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Discovery
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:47.703
    Jan 30 09:21:47.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename discovery 01/30/23 09:21:47.704
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:47.716
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:47.72
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/apimachinery/discovery.go:43
    STEP: Setting up server cert 01/30/23 09:21:47.724
    [It] should validate PreferredVersion for each APIGroup [Conformance]
      test/e2e/apimachinery/discovery.go:122
    Jan 30 09:21:47.906: INFO: Checking APIGroup: apiregistration.k8s.io
    Jan 30 09:21:47.907: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
    Jan 30 09:21:47.907: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
    Jan 30 09:21:47.907: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
    Jan 30 09:21:47.907: INFO: Checking APIGroup: apps
    Jan 30 09:21:47.907: INFO: PreferredVersion.GroupVersion: apps/v1
    Jan 30 09:21:47.907: INFO: Versions found [{apps/v1 v1}]
    Jan 30 09:21:47.907: INFO: apps/v1 matches apps/v1
    Jan 30 09:21:47.907: INFO: Checking APIGroup: events.k8s.io
    Jan 30 09:21:47.908: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
    Jan 30 09:21:47.908: INFO: Versions found [{events.k8s.io/v1 v1}]
    Jan 30 09:21:47.908: INFO: events.k8s.io/v1 matches events.k8s.io/v1
    Jan 30 09:21:47.908: INFO: Checking APIGroup: authentication.k8s.io
    Jan 30 09:21:47.909: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
    Jan 30 09:21:47.909: INFO: Versions found [{authentication.k8s.io/v1 v1}]
    Jan 30 09:21:47.909: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
    Jan 30 09:21:47.909: INFO: Checking APIGroup: authorization.k8s.io
    Jan 30 09:21:47.910: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
    Jan 30 09:21:47.910: INFO: Versions found [{authorization.k8s.io/v1 v1}]
    Jan 30 09:21:47.910: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
    Jan 30 09:21:47.910: INFO: Checking APIGroup: autoscaling
    Jan 30 09:21:47.910: INFO: PreferredVersion.GroupVersion: autoscaling/v2
    Jan 30 09:21:47.910: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
    Jan 30 09:21:47.910: INFO: autoscaling/v2 matches autoscaling/v2
    Jan 30 09:21:47.910: INFO: Checking APIGroup: batch
    Jan 30 09:21:47.911: INFO: PreferredVersion.GroupVersion: batch/v1
    Jan 30 09:21:47.911: INFO: Versions found [{batch/v1 v1}]
    Jan 30 09:21:47.911: INFO: batch/v1 matches batch/v1
    Jan 30 09:21:47.911: INFO: Checking APIGroup: certificates.k8s.io
    Jan 30 09:21:47.912: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
    Jan 30 09:21:47.912: INFO: Versions found [{certificates.k8s.io/v1 v1}]
    Jan 30 09:21:47.912: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
    Jan 30 09:21:47.912: INFO: Checking APIGroup: networking.k8s.io
    Jan 30 09:21:47.913: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
    Jan 30 09:21:47.913: INFO: Versions found [{networking.k8s.io/v1 v1}]
    Jan 30 09:21:47.913: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
    Jan 30 09:21:47.913: INFO: Checking APIGroup: policy
    Jan 30 09:21:47.913: INFO: PreferredVersion.GroupVersion: policy/v1
    Jan 30 09:21:47.913: INFO: Versions found [{policy/v1 v1}]
    Jan 30 09:21:47.913: INFO: policy/v1 matches policy/v1
    Jan 30 09:21:47.913: INFO: Checking APIGroup: rbac.authorization.k8s.io
    Jan 30 09:21:47.914: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
    Jan 30 09:21:47.914: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
    Jan 30 09:21:47.914: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
    Jan 30 09:21:47.914: INFO: Checking APIGroup: storage.k8s.io
    Jan 30 09:21:47.915: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
    Jan 30 09:21:47.915: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
    Jan 30 09:21:47.915: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
    Jan 30 09:21:47.915: INFO: Checking APIGroup: admissionregistration.k8s.io
    Jan 30 09:21:47.916: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
    Jan 30 09:21:47.916: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
    Jan 30 09:21:47.916: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
    Jan 30 09:21:47.916: INFO: Checking APIGroup: apiextensions.k8s.io
    Jan 30 09:21:47.917: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
    Jan 30 09:21:47.917: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
    Jan 30 09:21:47.917: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
    Jan 30 09:21:47.917: INFO: Checking APIGroup: scheduling.k8s.io
    Jan 30 09:21:47.918: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
    Jan 30 09:21:47.918: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
    Jan 30 09:21:47.918: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
    Jan 30 09:21:47.918: INFO: Checking APIGroup: coordination.k8s.io
    Jan 30 09:21:47.919: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
    Jan 30 09:21:47.919: INFO: Versions found [{coordination.k8s.io/v1 v1}]
    Jan 30 09:21:47.919: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
    Jan 30 09:21:47.919: INFO: Checking APIGroup: node.k8s.io
    Jan 30 09:21:47.920: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
    Jan 30 09:21:47.920: INFO: Versions found [{node.k8s.io/v1 v1}]
    Jan 30 09:21:47.920: INFO: node.k8s.io/v1 matches node.k8s.io/v1
    Jan 30 09:21:47.920: INFO: Checking APIGroup: discovery.k8s.io
    Jan 30 09:21:47.921: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
    Jan 30 09:21:47.921: INFO: Versions found [{discovery.k8s.io/v1 v1}]
    Jan 30 09:21:47.921: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
    Jan 30 09:21:47.921: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
    Jan 30 09:21:47.922: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
    Jan 30 09:21:47.922: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
    Jan 30 09:21:47.922: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
    [AfterEach] [sig-api-machinery] Discovery
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:47.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      tear down framework | framework.go:193
    STEP: Destroying namespace "discovery-8858" for this suite. 01/30/23 09:21:47.925
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:47.933
Jan 30 09:21:47.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 09:21:47.935
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:47.948
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:47.95
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
Jan 30 09:21:47.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:21:54.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-8676" for this suite. 01/30/23 09:21:54.154
------------------------------
â€¢ [SLOW TEST] [6.235 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:85

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:47.933
    Jan 30 09:21:47.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename custom-resource-definition 01/30/23 09:21:47.935
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:47.948
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:47.95
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] listing custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:85
    Jan 30 09:21:47.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:21:54.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-8676" for this suite. 01/30/23 09:21:54.154
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] DNS
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:21:54.17
Jan 30 09:21:54.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename dns 01/30/23 09:21:54.172
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:54.18
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:54.182
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
STEP: Creating a test headless service 01/30/23 09:21:54.184
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5868 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5868;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5868 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5868;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5868.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5868.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5868.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5868.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5868.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5868.svc;check="$$(dig +notcp +noall +answer +search 160.6.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.6.160_udp@PTR;check="$$(dig +tcp +noall +answer +search 160.6.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.6.160_tcp@PTR;sleep 1; done
 01/30/23 09:21:54.2
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5868 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5868;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5868 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5868;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5868.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5868.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5868.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5868.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5868.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5868.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5868.svc;check="$$(dig +notcp +noall +answer +search 160.6.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.6.160_udp@PTR;check="$$(dig +tcp +noall +answer +search 160.6.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.6.160_tcp@PTR;sleep 1; done
 01/30/23 09:21:54.2
STEP: creating a pod to probe DNS 01/30/23 09:21:54.2
STEP: submitting the pod to kubernetes 01/30/23 09:21:54.2
Jan 30 09:21:54.213: INFO: Waiting up to 15m0s for pod "dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d" in namespace "dns-5868" to be "running"
Jan 30 09:21:54.219: INFO: Pod "dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.026543ms
Jan 30 09:21:56.222: INFO: Pod "dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d": Phase="Running", Reason="", readiness=true. Elapsed: 2.008946795s
Jan 30 09:21:56.222: INFO: Pod "dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d" satisfied condition "running"
STEP: retrieving the pod 01/30/23 09:21:56.222
STEP: looking for the results for each expected name from probers 01/30/23 09:21:56.224
Jan 30 09:21:56.227: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.229: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.231: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.232: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.234: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.237: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.239: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.241: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.250: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.253: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.254: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.257: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.259: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.261: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.265: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.268: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:21:56.277: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

Jan 30 09:22:01.281: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.284: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.286: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.287: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.289: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.291: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.293: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.295: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.306: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.309: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.311: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.314: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.317: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.319: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.322: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.324: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:01.332: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

Jan 30 09:22:06.280: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.284: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.289: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.291: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.293: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.295: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.297: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.298: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.307: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.310: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.312: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.314: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.317: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.319: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.321: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.323: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:06.334: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

Jan 30 09:22:11.280: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.282: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.284: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.287: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.289: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.291: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.293: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.295: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.305: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.306: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.308: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.310: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.312: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.314: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.318: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.320: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:11.328: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

Jan 30 09:22:16.281: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.283: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.286: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.288: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.290: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.292: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.293: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.296: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.305: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.307: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.309: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.311: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.313: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.316: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.319: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.321: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:16.340: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

Jan 30 09:22:21.281: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.285: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.288: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.290: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.293: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.295: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.298: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.305: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.320: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.322: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.325: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.328: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.331: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.334: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.336: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.338: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
Jan 30 09:22:21.348: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

Jan 30 09:22:26.336: INFO: DNS probes using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d succeeded

STEP: deleting the pod 01/30/23 09:22:26.337
STEP: deleting the test service 01/30/23 09:22:26.353
STEP: deleting the test headless service 01/30/23 09:22:26.395
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 30 09:22:26.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-5868" for this suite. 01/30/23 09:22:26.422
------------------------------
â€¢ [SLOW TEST] [32.264 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:21:54.17
    Jan 30 09:21:54.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename dns 01/30/23 09:21:54.172
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:21:54.18
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:21:54.182
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
      test/e2e/network/dns.go:193
    STEP: Creating a test headless service 01/30/23 09:21:54.184
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5868 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5868;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5868 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5868;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5868.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5868.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5868.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5868.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5868.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5868.svc;check="$$(dig +notcp +noall +answer +search 160.6.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.6.160_udp@PTR;check="$$(dig +tcp +noall +answer +search 160.6.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.6.160_tcp@PTR;sleep 1; done
     01/30/23 09:21:54.2
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5868 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5868;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5868 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5868;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5868.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5868.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5868.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5868.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5868.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5868.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5868.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5868.svc;check="$$(dig +notcp +noall +answer +search 160.6.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.6.160_udp@PTR;check="$$(dig +tcp +noall +answer +search 160.6.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.6.160_tcp@PTR;sleep 1; done
     01/30/23 09:21:54.2
    STEP: creating a pod to probe DNS 01/30/23 09:21:54.2
    STEP: submitting the pod to kubernetes 01/30/23 09:21:54.2
    Jan 30 09:21:54.213: INFO: Waiting up to 15m0s for pod "dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d" in namespace "dns-5868" to be "running"
    Jan 30 09:21:54.219: INFO: Pod "dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.026543ms
    Jan 30 09:21:56.222: INFO: Pod "dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d": Phase="Running", Reason="", readiness=true. Elapsed: 2.008946795s
    Jan 30 09:21:56.222: INFO: Pod "dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 09:21:56.222
    STEP: looking for the results for each expected name from probers 01/30/23 09:21:56.224
    Jan 30 09:21:56.227: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.229: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.231: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.232: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.234: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.237: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.239: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.241: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.250: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.253: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.254: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.257: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.259: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.261: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.265: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.268: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:21:56.277: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

    Jan 30 09:22:01.281: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.284: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.286: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.287: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.289: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.291: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.293: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.295: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.306: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.309: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.311: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.314: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.317: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.319: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.322: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.324: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:01.332: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

    Jan 30 09:22:06.280: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.284: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.289: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.291: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.293: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.295: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.297: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.298: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.307: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.310: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.312: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.314: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.317: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.319: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.321: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.323: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:06.334: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

    Jan 30 09:22:11.280: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.282: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.284: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.287: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.289: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.291: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.293: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.295: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.305: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.306: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.308: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.310: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.312: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.314: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.318: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.320: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:11.328: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

    Jan 30 09:22:16.281: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.283: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.286: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.288: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.290: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.292: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.293: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.296: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.305: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.307: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.309: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.311: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.313: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.316: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.319: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.321: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:16.340: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

    Jan 30 09:22:21.281: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.285: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.288: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.290: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.293: INFO: Unable to read wheezy_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.295: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.298: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.305: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.320: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.322: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.325: INFO: Unable to read jessie_udp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.328: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868 from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.331: INFO: Unable to read jessie_udp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.334: INFO: Unable to read jessie_tcp@dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.336: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.338: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc from pod dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d: the server could not find the requested resource (get pods dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d)
    Jan 30 09:22:21.348: INFO: Lookups using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5868 wheezy_tcp@dns-test-service.dns-5868 wheezy_udp@dns-test-service.dns-5868.svc wheezy_tcp@dns-test-service.dns-5868.svc wheezy_udp@_http._tcp.dns-test-service.dns-5868.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5868.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5868 jessie_tcp@dns-test-service.dns-5868 jessie_udp@dns-test-service.dns-5868.svc jessie_tcp@dns-test-service.dns-5868.svc jessie_udp@_http._tcp.dns-test-service.dns-5868.svc jessie_tcp@_http._tcp.dns-test-service.dns-5868.svc]

    Jan 30 09:22:26.336: INFO: DNS probes using dns-5868/dns-test-818a3af4-18b0-4e16-b1bc-d7e32536cf2d succeeded

    STEP: deleting the pod 01/30/23 09:22:26.337
    STEP: deleting the test service 01/30/23 09:22:26.353
    STEP: deleting the test headless service 01/30/23 09:22:26.395
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:22:26.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-5868" for this suite. 01/30/23 09:22:26.422
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:22:26.443
Jan 30 09:22:26.443: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:22:26.445
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:26.479
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:26.484
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
STEP: Creating configMap with name projected-configmap-test-volume-3ee45a28-6a6a-43d5-a500-ca8166a09fdf 01/30/23 09:22:26.488
STEP: Creating a pod to test consume configMaps 01/30/23 09:22:26.493
Jan 30 09:22:26.506: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84" in namespace "projected-2895" to be "Succeeded or Failed"
Jan 30 09:22:26.510: INFO: Pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84": Phase="Pending", Reason="", readiness=false. Elapsed: 3.914194ms
Jan 30 09:22:28.513: INFO: Pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007267845s
Jan 30 09:22:30.523: INFO: Pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016845784s
STEP: Saw pod success 01/30/23 09:22:30.523
Jan 30 09:22:30.523: INFO: Pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84" satisfied condition "Succeeded or Failed"
Jan 30 09:22:30.525: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:22:30.531
Jan 30 09:22:30.542: INFO: Waiting for pod pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84 to disappear
Jan 30 09:22:30.544: INFO: Pod pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:22:30.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2895" for this suite. 01/30/23 09:22:30.547
------------------------------
â€¢ [4.109 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:22:26.443
    Jan 30 09:22:26.443: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:22:26.445
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:26.479
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:26.484
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:57
    STEP: Creating configMap with name projected-configmap-test-volume-3ee45a28-6a6a-43d5-a500-ca8166a09fdf 01/30/23 09:22:26.488
    STEP: Creating a pod to test consume configMaps 01/30/23 09:22:26.493
    Jan 30 09:22:26.506: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84" in namespace "projected-2895" to be "Succeeded or Failed"
    Jan 30 09:22:26.510: INFO: Pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84": Phase="Pending", Reason="", readiness=false. Elapsed: 3.914194ms
    Jan 30 09:22:28.513: INFO: Pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007267845s
    Jan 30 09:22:30.523: INFO: Pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016845784s
    STEP: Saw pod success 01/30/23 09:22:30.523
    Jan 30 09:22:30.523: INFO: Pod "pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84" satisfied condition "Succeeded or Failed"
    Jan 30 09:22:30.525: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:22:30.531
    Jan 30 09:22:30.542: INFO: Waiting for pod pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84 to disappear
    Jan 30 09:22:30.544: INFO: Pod pod-projected-configmaps-fe508a70-0b33-454e-84f1-4e463a0abc84 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:22:30.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2895" for this suite. 01/30/23 09:22:30.547
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] ReplicationController
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:22:30.552
Jan 30 09:22:30.552: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replication-controller 01/30/23 09:22:30.553
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:30.566
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:30.569
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
STEP: Creating replication controller my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730 01/30/23 09:22:30.571
Jan 30 09:22:30.581: INFO: Pod name my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730: Found 0 pods out of 1
Jan 30 09:22:35.584: INFO: Pod name my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730: Found 1 pods out of 1
Jan 30 09:22:35.584: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730" are running
Jan 30 09:22:35.584: INFO: Waiting up to 5m0s for pod "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn" in namespace "replication-controller-5269" to be "running"
Jan 30 09:22:35.586: INFO: Pod "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn": Phase="Running", Reason="", readiness=true. Elapsed: 2.010267ms
Jan 30 09:22:35.586: INFO: Pod "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn" satisfied condition "running"
Jan 30 09:22:35.586: INFO: Pod "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:22:30 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:22:31 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:22:31 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:22:30 +0000 UTC Reason: Message:}])
Jan 30 09:22:35.586: INFO: Trying to dial the pod
Jan 30 09:22:40.593: INFO: Controller my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730: Got expected result from replica 1 [my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn]: "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 30 09:22:40.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-5269" for this suite. 01/30/23 09:22:40.596
------------------------------
â€¢ [SLOW TEST] [10.059 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:22:30.552
    Jan 30 09:22:30.552: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replication-controller 01/30/23 09:22:30.553
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:30.566
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:30.569
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/rc.go:67
    STEP: Creating replication controller my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730 01/30/23 09:22:30.571
    Jan 30 09:22:30.581: INFO: Pod name my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730: Found 0 pods out of 1
    Jan 30 09:22:35.584: INFO: Pod name my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730: Found 1 pods out of 1
    Jan 30 09:22:35.584: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730" are running
    Jan 30 09:22:35.584: INFO: Waiting up to 5m0s for pod "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn" in namespace "replication-controller-5269" to be "running"
    Jan 30 09:22:35.586: INFO: Pod "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn": Phase="Running", Reason="", readiness=true. Elapsed: 2.010267ms
    Jan 30 09:22:35.586: INFO: Pod "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn" satisfied condition "running"
    Jan 30 09:22:35.586: INFO: Pod "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:22:30 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:22:31 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:22:31 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-01-30 09:22:30 +0000 UTC Reason: Message:}])
    Jan 30 09:22:35.586: INFO: Trying to dial the pod
    Jan 30 09:22:40.593: INFO: Controller my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730: Got expected result from replica 1 [my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn]: "my-hostname-basic-b490fb0f-3f02-43f9-a81b-c51410fe2730-t7bvn", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:22:40.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-5269" for this suite. 01/30/23 09:22:40.596
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:22:40.612
Jan 30 09:22:40.613: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename containers 01/30/23 09:22:40.613
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:40.625
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:40.628
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
STEP: Creating a pod to test override all 01/30/23 09:22:40.632
Jan 30 09:22:40.641: INFO: Waiting up to 5m0s for pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef" in namespace "containers-2189" to be "Succeeded or Failed"
Jan 30 09:22:40.644: INFO: Pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.793932ms
Jan 30 09:22:42.646: INFO: Pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004962237s
Jan 30 09:22:44.647: INFO: Pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006023854s
STEP: Saw pod success 01/30/23 09:22:44.647
Jan 30 09:22:44.648: INFO: Pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef" satisfied condition "Succeeded or Failed"
Jan 30 09:22:44.649: INFO: Trying to get logs from node tce-worker2 pod client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:22:44.652
Jan 30 09:22:44.672: INFO: Waiting for pod client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef to disappear
Jan 30 09:22:44.674: INFO: Pod client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Jan 30 09:22:44.674: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-2189" for this suite. 01/30/23 09:22:44.677
------------------------------
â€¢ [4.069 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:22:40.612
    Jan 30 09:22:40.613: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename containers 01/30/23 09:22:40.613
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:40.625
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:40.628
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:87
    STEP: Creating a pod to test override all 01/30/23 09:22:40.632
    Jan 30 09:22:40.641: INFO: Waiting up to 5m0s for pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef" in namespace "containers-2189" to be "Succeeded or Failed"
    Jan 30 09:22:40.644: INFO: Pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.793932ms
    Jan 30 09:22:42.646: INFO: Pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004962237s
    Jan 30 09:22:44.647: INFO: Pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006023854s
    STEP: Saw pod success 01/30/23 09:22:44.647
    Jan 30 09:22:44.648: INFO: Pod "client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef" satisfied condition "Succeeded or Failed"
    Jan 30 09:22:44.649: INFO: Trying to get logs from node tce-worker2 pod client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:22:44.652
    Jan 30 09:22:44.672: INFO: Waiting for pod client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef to disappear
    Jan 30 09:22:44.674: INFO: Pod client-containers-d5e1fedc-d496-4228-92f2-d9f8bd6833ef no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:22:44.674: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-2189" for this suite. 01/30/23 09:22:44.677
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:22:44.682
Jan 30 09:22:44.682: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename daemonsets 01/30/23 09:22:44.683
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:44.698
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:44.7
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
Jan 30 09:22:44.716: INFO: Create a RollingUpdate DaemonSet
Jan 30 09:22:44.722: INFO: Check that daemon pods launch on every node of the cluster
Jan 30 09:22:44.724: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:22:44.726: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:22:44.726: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 09:22:45.728: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:22:45.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:22:45.731: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 09:22:46.729: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:22:46.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 09:22:46.731: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
Jan 30 09:22:46.731: INFO: Update the DaemonSet to trigger a rollout
Jan 30 09:22:46.738: INFO: Updating DaemonSet daemon-set
Jan 30 09:22:49.749: INFO: Roll back the DaemonSet before rollout is complete
Jan 30 09:22:49.756: INFO: Updating DaemonSet daemon-set
Jan 30 09:22:49.756: INFO: Make sure DaemonSet rollback is complete
Jan 30 09:22:49.758: INFO: Wrong image for pod: daemon-set-pb6mv. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
Jan 30 09:22:49.758: INFO: Pod daemon-set-pb6mv is not available
Jan 30 09:22:49.762: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:22:50.767: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:22:51.766: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:22:52.767: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:22:53.764: INFO: Pod daemon-set-qdpvr is not available
Jan 30 09:22:53.766: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/30/23 09:22:53.77
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4590, will wait for the garbage collector to delete the pods 01/30/23 09:22:53.77
Jan 30 09:22:53.837: INFO: Deleting DaemonSet.extensions daemon-set took: 14.566967ms
Jan 30 09:22:53.938: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.886236ms
Jan 30 09:22:57.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:22:57.040: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 09:22:57.042: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26918"},"items":null}

Jan 30 09:22:57.044: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26918"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:22:57.050: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4590" for this suite. 01/30/23 09:22:57.052
------------------------------
â€¢ [SLOW TEST] [12.375 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:22:44.682
    Jan 30 09:22:44.682: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename daemonsets 01/30/23 09:22:44.683
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:44.698
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:44.7
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should rollback without unnecessary restarts [Conformance]
      test/e2e/apps/daemon_set.go:432
    Jan 30 09:22:44.716: INFO: Create a RollingUpdate DaemonSet
    Jan 30 09:22:44.722: INFO: Check that daemon pods launch on every node of the cluster
    Jan 30 09:22:44.724: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:22:44.726: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 09:22:44.726: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 09:22:45.728: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:22:45.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 09:22:45.731: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 09:22:46.729: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:22:46.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 09:22:46.731: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    Jan 30 09:22:46.731: INFO: Update the DaemonSet to trigger a rollout
    Jan 30 09:22:46.738: INFO: Updating DaemonSet daemon-set
    Jan 30 09:22:49.749: INFO: Roll back the DaemonSet before rollout is complete
    Jan 30 09:22:49.756: INFO: Updating DaemonSet daemon-set
    Jan 30 09:22:49.756: INFO: Make sure DaemonSet rollback is complete
    Jan 30 09:22:49.758: INFO: Wrong image for pod: daemon-set-pb6mv. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
    Jan 30 09:22:49.758: INFO: Pod daemon-set-pb6mv is not available
    Jan 30 09:22:49.762: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:22:50.767: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:22:51.766: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:22:52.767: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:22:53.764: INFO: Pod daemon-set-qdpvr is not available
    Jan 30 09:22:53.766: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/30/23 09:22:53.77
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4590, will wait for the garbage collector to delete the pods 01/30/23 09:22:53.77
    Jan 30 09:22:53.837: INFO: Deleting DaemonSet.extensions daemon-set took: 14.566967ms
    Jan 30 09:22:53.938: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.886236ms
    Jan 30 09:22:57.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 09:22:57.040: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 30 09:22:57.042: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26918"},"items":null}

    Jan 30 09:22:57.044: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26918"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:22:57.050: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4590" for this suite. 01/30/23 09:22:57.052
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:22:57.057
Jan 30 09:22:57.057: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:22:57.058
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:57.068
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:57.07
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:22:57.073
Jan 30 09:22:57.080: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc" in namespace "projected-4488" to be "Succeeded or Failed"
Jan 30 09:22:57.082: INFO: Pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc": Phase="Pending", Reason="", readiness=false. Elapsed: 1.99597ms
Jan 30 09:22:59.086: INFO: Pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005755082s
Jan 30 09:23:01.087: INFO: Pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006186129s
STEP: Saw pod success 01/30/23 09:23:01.087
Jan 30 09:23:01.087: INFO: Pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc" satisfied condition "Succeeded or Failed"
Jan 30 09:23:01.089: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc container client-container: <nil>
STEP: delete the pod 01/30/23 09:23:01.092
Jan 30 09:23:01.103: INFO: Waiting for pod downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc to disappear
Jan 30 09:23:01.105: INFO: Pod downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 09:23:01.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4488" for this suite. 01/30/23 09:23:01.107
------------------------------
â€¢ [4.054 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:22:57.057
    Jan 30 09:22:57.057: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:22:57.058
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:22:57.068
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:22:57.07
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:84
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:22:57.073
    Jan 30 09:22:57.080: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc" in namespace "projected-4488" to be "Succeeded or Failed"
    Jan 30 09:22:57.082: INFO: Pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc": Phase="Pending", Reason="", readiness=false. Elapsed: 1.99597ms
    Jan 30 09:22:59.086: INFO: Pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005755082s
    Jan 30 09:23:01.087: INFO: Pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006186129s
    STEP: Saw pod success 01/30/23 09:23:01.087
    Jan 30 09:23:01.087: INFO: Pod "downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc" satisfied condition "Succeeded or Failed"
    Jan 30 09:23:01.089: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc container client-container: <nil>
    STEP: delete the pod 01/30/23 09:23:01.092
    Jan 30 09:23:01.103: INFO: Waiting for pod downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc to disappear
    Jan 30 09:23:01.105: INFO: Pod downwardapi-volume-f2f60eb3-5f90-4d4c-8541-eb0ffd21e6bc no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:23:01.105: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4488" for this suite. 01/30/23 09:23:01.107
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:23:01.112
Jan 30 09:23:01.113: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename proxy 01/30/23 09:23:01.113
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:01.124
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:01.127
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
Jan 30 09:23:01.130: INFO: Creating pod...
Jan 30 09:23:01.135: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-500" to be "running"
Jan 30 09:23:01.138: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 2.622351ms
Jan 30 09:23:03.141: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.005769938s
Jan 30 09:23:03.141: INFO: Pod "agnhost" satisfied condition "running"
Jan 30 09:23:03.141: INFO: Creating service...
Jan 30 09:23:03.149: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/DELETE
Jan 30 09:23:03.158: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 30 09:23:03.158: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/GET
Jan 30 09:23:03.161: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 30 09:23:03.161: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/HEAD
Jan 30 09:23:03.165: INFO: http.Client request:HEAD | StatusCode:200
Jan 30 09:23:03.165: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/OPTIONS
Jan 30 09:23:03.168: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 30 09:23:03.169: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/PATCH
Jan 30 09:23:03.172: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 30 09:23:03.172: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/POST
Jan 30 09:23:03.178: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 30 09:23:03.178: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/PUT
Jan 30 09:23:03.190: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jan 30 09:23:03.190: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/DELETE
Jan 30 09:23:03.195: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jan 30 09:23:03.195: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/GET
Jan 30 09:23:03.210: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jan 30 09:23:03.210: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/HEAD
Jan 30 09:23:03.214: INFO: http.Client request:HEAD | StatusCode:200
Jan 30 09:23:03.214: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/OPTIONS
Jan 30 09:23:03.218: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jan 30 09:23:03.218: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/PATCH
Jan 30 09:23:03.221: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jan 30 09:23:03.222: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/POST
Jan 30 09:23:03.226: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jan 30 09:23:03.226: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/PUT
Jan 30 09:23:03.231: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Jan 30 09:23:03.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-500" for this suite. 01/30/23 09:23:03.235
------------------------------
â€¢ [2.130 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
    test/e2e/network/proxy.go:286

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:23:01.112
    Jan 30 09:23:01.113: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename proxy 01/30/23 09:23:01.113
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:01.124
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:01.127
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
      test/e2e/network/proxy.go:286
    Jan 30 09:23:01.130: INFO: Creating pod...
    Jan 30 09:23:01.135: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-500" to be "running"
    Jan 30 09:23:01.138: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 2.622351ms
    Jan 30 09:23:03.141: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.005769938s
    Jan 30 09:23:03.141: INFO: Pod "agnhost" satisfied condition "running"
    Jan 30 09:23:03.141: INFO: Creating service...
    Jan 30 09:23:03.149: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/DELETE
    Jan 30 09:23:03.158: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Jan 30 09:23:03.158: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/GET
    Jan 30 09:23:03.161: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Jan 30 09:23:03.161: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/HEAD
    Jan 30 09:23:03.165: INFO: http.Client request:HEAD | StatusCode:200
    Jan 30 09:23:03.165: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/OPTIONS
    Jan 30 09:23:03.168: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Jan 30 09:23:03.169: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/PATCH
    Jan 30 09:23:03.172: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Jan 30 09:23:03.172: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/POST
    Jan 30 09:23:03.178: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Jan 30 09:23:03.178: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/pods/agnhost/proxy/some/path/with/PUT
    Jan 30 09:23:03.190: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Jan 30 09:23:03.190: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/DELETE
    Jan 30 09:23:03.195: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Jan 30 09:23:03.195: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/GET
    Jan 30 09:23:03.210: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Jan 30 09:23:03.210: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/HEAD
    Jan 30 09:23:03.214: INFO: http.Client request:HEAD | StatusCode:200
    Jan 30 09:23:03.214: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/OPTIONS
    Jan 30 09:23:03.218: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Jan 30 09:23:03.218: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/PATCH
    Jan 30 09:23:03.221: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Jan 30 09:23:03.222: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/POST
    Jan 30 09:23:03.226: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Jan 30 09:23:03.226: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-500/services/test-service/proxy/some/path/with/PUT
    Jan 30 09:23:03.231: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:23:03.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-500" for this suite. 01/30/23 09:23:03.235
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:23:03.244
Jan 30 09:23:03.244: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 09:23:03.244
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:03.256
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:03.26
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
STEP: creating a service externalname-service with the type=ExternalName in namespace services-6605 01/30/23 09:23:03.263
STEP: changing the ExternalName service to type=ClusterIP 01/30/23 09:23:03.268
STEP: creating replication controller externalname-service in namespace services-6605 01/30/23 09:23:03.289
I0130 09:23:03.297359      24 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6605, replica count: 2
I0130 09:23:06.349287      24 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 09:23:06.349: INFO: Creating new exec pod
Jan 30 09:23:06.353: INFO: Waiting up to 5m0s for pod "execpodhwkz4" in namespace "services-6605" to be "running"
Jan 30 09:23:06.355: INFO: Pod "execpodhwkz4": Phase="Pending", Reason="", readiness=false. Elapsed: 1.768817ms
Jan 30 09:23:08.360: INFO: Pod "execpodhwkz4": Phase="Running", Reason="", readiness=true. Elapsed: 2.006982033s
Jan 30 09:23:08.360: INFO: Pod "execpodhwkz4" satisfied condition "running"
Jan 30 09:23:09.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6605 exec execpodhwkz4 -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Jan 30 09:23:09.496: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jan 30 09:23:09.496: INFO: stdout: ""
Jan 30 09:23:09.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6605 exec execpodhwkz4 -- /bin/sh -x -c nc -v -z -w 2 10.96.231.209 80'
Jan 30 09:23:09.587: INFO: stderr: "+ nc -v -z -w 2 10.96.231.209 80\nConnection to 10.96.231.209 80 port [tcp/http] succeeded!\n"
Jan 30 09:23:09.587: INFO: stdout: ""
Jan 30 09:23:09.587: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 09:23:09.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6605" for this suite. 01/30/23 09:23:09.606
------------------------------
â€¢ [SLOW TEST] [6.370 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:23:03.244
    Jan 30 09:23:03.244: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 09:23:03.244
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:03.256
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:03.26
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to ClusterIP [Conformance]
      test/e2e/network/service.go:1438
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-6605 01/30/23 09:23:03.263
    STEP: changing the ExternalName service to type=ClusterIP 01/30/23 09:23:03.268
    STEP: creating replication controller externalname-service in namespace services-6605 01/30/23 09:23:03.289
    I0130 09:23:03.297359      24 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6605, replica count: 2
    I0130 09:23:06.349287      24 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 09:23:06.349: INFO: Creating new exec pod
    Jan 30 09:23:06.353: INFO: Waiting up to 5m0s for pod "execpodhwkz4" in namespace "services-6605" to be "running"
    Jan 30 09:23:06.355: INFO: Pod "execpodhwkz4": Phase="Pending", Reason="", readiness=false. Elapsed: 1.768817ms
    Jan 30 09:23:08.360: INFO: Pod "execpodhwkz4": Phase="Running", Reason="", readiness=true. Elapsed: 2.006982033s
    Jan 30 09:23:08.360: INFO: Pod "execpodhwkz4" satisfied condition "running"
    Jan 30 09:23:09.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6605 exec execpodhwkz4 -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Jan 30 09:23:09.496: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Jan 30 09:23:09.496: INFO: stdout: ""
    Jan 30 09:23:09.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-6605 exec execpodhwkz4 -- /bin/sh -x -c nc -v -z -w 2 10.96.231.209 80'
    Jan 30 09:23:09.587: INFO: stderr: "+ nc -v -z -w 2 10.96.231.209 80\nConnection to 10.96.231.209 80 port [tcp/http] succeeded!\n"
    Jan 30 09:23:09.587: INFO: stdout: ""
    Jan 30 09:23:09.587: INFO: Cleaning up the ExternalName to ClusterIP test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:23:09.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6605" for this suite. 01/30/23 09:23:09.606
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:23:09.614
Jan 30 09:23:09.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename var-expansion 01/30/23 09:23:09.615
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:09.633
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:09.635
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
Jan 30 09:23:09.647: INFO: Waiting up to 2m0s for pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2" in namespace "var-expansion-2297" to be "container 0 failed with reason CreateContainerConfigError"
Jan 30 09:23:09.650: INFO: Pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.59987ms
Jan 30 09:23:11.653: INFO: Pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00566931s
Jan 30 09:23:11.653: INFO: Pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Jan 30 09:23:11.653: INFO: Deleting pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2" in namespace "var-expansion-2297"
Jan 30 09:23:11.657: INFO: Wait up to 5m0s for pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 30 09:23:13.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-2297" for this suite. 01/30/23 09:23:13.666
------------------------------
â€¢ [4.056 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:23:09.614
    Jan 30 09:23:09.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename var-expansion 01/30/23 09:23:09.615
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:09.633
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:09.635
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
      test/e2e/common/node/expansion.go:186
    Jan 30 09:23:09.647: INFO: Waiting up to 2m0s for pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2" in namespace "var-expansion-2297" to be "container 0 failed with reason CreateContainerConfigError"
    Jan 30 09:23:09.650: INFO: Pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.59987ms
    Jan 30 09:23:11.653: INFO: Pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00566931s
    Jan 30 09:23:11.653: INFO: Pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Jan 30 09:23:11.653: INFO: Deleting pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2" in namespace "var-expansion-2297"
    Jan 30 09:23:11.657: INFO: Wait up to 5m0s for pod "var-expansion-6a636a5b-5ba2-4937-94ba-f18bf0692bc2" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:23:13.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-2297" for this suite. 01/30/23 09:23:13.666
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:23:13.671
Jan 30 09:23:13.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename dns 01/30/23 09:23:13.671
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:13.684
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:13.686
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 01/30/23 09:23:13.689
Jan 30 09:23:13.694: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5658  e7bde7f1-4cb1-4a30-9dea-60b8eec6b752 27098 0 2023-01-30 09:23:13 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-01-30 09:23:13 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dn6xx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dn6xx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jan 30 09:23:13.694: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-5658" to be "running and ready"
Jan 30 09:23:13.696: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 1.922917ms
Jan 30 09:23:13.696: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:23:15.702: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.007260131s
Jan 30 09:23:15.702: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
Jan 30 09:23:15.702: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
STEP: Verifying customized DNS suffix list is configured on pod... 01/30/23 09:23:15.702
Jan 30 09:23:15.702: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5658 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:23:15.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:23:15.702: INFO: ExecWithOptions: Clientset creation
Jan 30 09:23:15.702: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5658/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod... 01/30/23 09:23:15.859
Jan 30 09:23:15.859: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5658 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jan 30 09:23:15.859: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:23:15.860: INFO: ExecWithOptions: Clientset creation
Jan 30 09:23:15.860: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5658/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jan 30 09:23:15.925: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 30 09:23:15.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-5658" for this suite. 01/30/23 09:23:15.968
------------------------------
â€¢ [2.306 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:23:13.671
    Jan 30 09:23:13.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename dns 01/30/23 09:23:13.671
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:13.684
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:13.686
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should support configurable pod DNS nameservers [Conformance]
      test/e2e/network/dns.go:411
    STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 01/30/23 09:23:13.689
    Jan 30 09:23:13.694: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5658  e7bde7f1-4cb1-4a30-9dea-60b8eec6b752 27098 0 2023-01-30 09:23:13 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-01-30 09:23:13 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dn6xx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dn6xx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Jan 30 09:23:13.694: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-5658" to be "running and ready"
    Jan 30 09:23:13.696: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 1.922917ms
    Jan 30 09:23:13.696: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:23:15.702: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.007260131s
    Jan 30 09:23:15.702: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
    Jan 30 09:23:15.702: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
    STEP: Verifying customized DNS suffix list is configured on pod... 01/30/23 09:23:15.702
    Jan 30 09:23:15.702: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5658 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:23:15.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:23:15.702: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:23:15.702: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5658/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    STEP: Verifying customized DNS server is configured on pod... 01/30/23 09:23:15.859
    Jan 30 09:23:15.859: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5658 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Jan 30 09:23:15.859: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:23:15.860: INFO: ExecWithOptions: Clientset creation
    Jan 30 09:23:15.860: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5658/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Jan 30 09:23:15.925: INFO: Deleting pod test-dns-nameservers...
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:23:15.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-5658" for this suite. 01/30/23 09:23:15.968
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:23:15.977
Jan 30 09:23:15.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename job 01/30/23 09:23:15.978
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:16.015
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:16.019
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
STEP: Creating a suspended job 01/30/23 09:23:16.033
STEP: Patching the Job 01/30/23 09:23:16.043
STEP: Watching for Job to be patched 01/30/23 09:23:16.063
Jan 30 09:23:16.065: INFO: Event ADDED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking:]
Jan 30 09:23:16.065: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking:]
Jan 30 09:23:16.065: INFO: Event MODIFIED found for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking:]
STEP: Updating the job 01/30/23 09:23:16.065
STEP: Watching for Job to be updated 01/30/23 09:23:16.072
Jan 30 09:23:16.075: INFO: Event MODIFIED found for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 30 09:23:16.075: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
STEP: Listing all Jobs with LabelSelector 01/30/23 09:23:16.075
Jan 30 09:23:16.078: INFO: Job: e2e-57qwh as labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh]
STEP: Waiting for job to complete 01/30/23 09:23:16.078
STEP: Delete a job collection with a labelselector 01/30/23 09:23:24.081
STEP: Watching for Job to be deleted 01/30/23 09:23:24.086
Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Jan 30 09:23:24.088: INFO: Event DELETED found for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
STEP: Relist jobs to confirm deletion 01/30/23 09:23:24.088
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 30 09:23:24.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-4710" for this suite. 01/30/23 09:23:24.1
------------------------------
â€¢ [SLOW TEST] [8.131 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:23:15.977
    Jan 30 09:23:15.977: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename job 01/30/23 09:23:15.978
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:16.015
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:16.019
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a job [Conformance]
      test/e2e/apps/job.go:703
    STEP: Creating a suspended job 01/30/23 09:23:16.033
    STEP: Patching the Job 01/30/23 09:23:16.043
    STEP: Watching for Job to be patched 01/30/23 09:23:16.063
    Jan 30 09:23:16.065: INFO: Event ADDED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking:]
    Jan 30 09:23:16.065: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking:]
    Jan 30 09:23:16.065: INFO: Event MODIFIED found for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking:]
    STEP: Updating the job 01/30/23 09:23:16.065
    STEP: Watching for Job to be updated 01/30/23 09:23:16.072
    Jan 30 09:23:16.075: INFO: Event MODIFIED found for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 30 09:23:16.075: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
    STEP: Listing all Jobs with LabelSelector 01/30/23 09:23:16.075
    Jan 30 09:23:16.078: INFO: Job: e2e-57qwh as labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh]
    STEP: Waiting for job to complete 01/30/23 09:23:16.078
    STEP: Delete a job collection with a labelselector 01/30/23 09:23:24.081
    STEP: Watching for Job to be deleted 01/30/23 09:23:24.086
    Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 30 09:23:24.088: INFO: Event MODIFIED observed for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Jan 30 09:23:24.088: INFO: Event DELETED found for Job e2e-57qwh in namespace job-4710 with labels: map[e2e-57qwh:patched e2e-job-label:e2e-57qwh] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    STEP: Relist jobs to confirm deletion 01/30/23 09:23:24.088
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:23:24.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-4710" for this suite. 01/30/23 09:23:24.1
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:23:24.109
Jan 30 09:23:24.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:23:24.11
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:24.132
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:24.135
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 01/30/23 09:23:24.138
Jan 30 09:23:24.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:23:25.465: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:23:30.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-2397" for this suite. 01/30/23 09:23:30.748
------------------------------
â€¢ [SLOW TEST] [6.663 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:23:24.109
    Jan 30 09:23:24.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:23:24.11
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:24.132
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:24.135
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group and version but different kinds [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:357
    STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 01/30/23 09:23:24.138
    Jan 30 09:23:24.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:23:25.465: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:23:30.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-2397" for this suite. 01/30/23 09:23:30.748
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:23:30.773
Jan 30 09:23:30.773: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename subpath 01/30/23 09:23:30.774
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:30.784
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:30.786
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 01/30/23 09:23:30.79
[It] should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
STEP: Creating pod pod-subpath-test-projected-p496 01/30/23 09:23:30.801
STEP: Creating a pod to test atomic-volume-subpath 01/30/23 09:23:30.801
Jan 30 09:23:30.809: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-p496" in namespace "subpath-7685" to be "Succeeded or Failed"
Jan 30 09:23:30.811: INFO: Pod "pod-subpath-test-projected-p496": Phase="Pending", Reason="", readiness=false. Elapsed: 2.737154ms
Jan 30 09:23:32.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 2.005325655s
Jan 30 09:23:34.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 4.005415095s
Jan 30 09:23:36.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 6.005929645s
Jan 30 09:23:38.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 8.006254053s
Jan 30 09:23:40.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 10.006294627s
Jan 30 09:23:42.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 12.005416923s
Jan 30 09:23:44.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 14.006493238s
Jan 30 09:23:46.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 16.00521021s
Jan 30 09:23:48.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 18.006016671s
Jan 30 09:23:50.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 20.005960051s
Jan 30 09:23:52.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=false. Elapsed: 22.005423626s
Jan 30 09:23:54.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.006510823s
STEP: Saw pod success 01/30/23 09:23:54.815
Jan 30 09:23:54.815: INFO: Pod "pod-subpath-test-projected-p496" satisfied condition "Succeeded or Failed"
Jan 30 09:23:54.828: INFO: Trying to get logs from node tce-worker2 pod pod-subpath-test-projected-p496 container test-container-subpath-projected-p496: <nil>
STEP: delete the pod 01/30/23 09:23:54.832
Jan 30 09:23:54.842: INFO: Waiting for pod pod-subpath-test-projected-p496 to disappear
Jan 30 09:23:54.844: INFO: Pod pod-subpath-test-projected-p496 no longer exists
STEP: Deleting pod pod-subpath-test-projected-p496 01/30/23 09:23:54.844
Jan 30 09:23:54.844: INFO: Deleting pod "pod-subpath-test-projected-p496" in namespace "subpath-7685"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Jan 30 09:23:54.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-7685" for this suite. 01/30/23 09:23:54.848
------------------------------
â€¢ [SLOW TEST] [24.079 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/storage/subpath.go:106

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:23:30.773
    Jan 30 09:23:30.773: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename subpath 01/30/23 09:23:30.774
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:30.784
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:30.786
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 01/30/23 09:23:30.79
    [It] should support subpaths with projected pod [Conformance]
      test/e2e/storage/subpath.go:106
    STEP: Creating pod pod-subpath-test-projected-p496 01/30/23 09:23:30.801
    STEP: Creating a pod to test atomic-volume-subpath 01/30/23 09:23:30.801
    Jan 30 09:23:30.809: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-p496" in namespace "subpath-7685" to be "Succeeded or Failed"
    Jan 30 09:23:30.811: INFO: Pod "pod-subpath-test-projected-p496": Phase="Pending", Reason="", readiness=false. Elapsed: 2.737154ms
    Jan 30 09:23:32.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 2.005325655s
    Jan 30 09:23:34.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 4.005415095s
    Jan 30 09:23:36.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 6.005929645s
    Jan 30 09:23:38.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 8.006254053s
    Jan 30 09:23:40.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 10.006294627s
    Jan 30 09:23:42.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 12.005416923s
    Jan 30 09:23:44.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 14.006493238s
    Jan 30 09:23:46.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 16.00521021s
    Jan 30 09:23:48.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 18.006016671s
    Jan 30 09:23:50.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=true. Elapsed: 20.005960051s
    Jan 30 09:23:52.814: INFO: Pod "pod-subpath-test-projected-p496": Phase="Running", Reason="", readiness=false. Elapsed: 22.005423626s
    Jan 30 09:23:54.815: INFO: Pod "pod-subpath-test-projected-p496": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.006510823s
    STEP: Saw pod success 01/30/23 09:23:54.815
    Jan 30 09:23:54.815: INFO: Pod "pod-subpath-test-projected-p496" satisfied condition "Succeeded or Failed"
    Jan 30 09:23:54.828: INFO: Trying to get logs from node tce-worker2 pod pod-subpath-test-projected-p496 container test-container-subpath-projected-p496: <nil>
    STEP: delete the pod 01/30/23 09:23:54.832
    Jan 30 09:23:54.842: INFO: Waiting for pod pod-subpath-test-projected-p496 to disappear
    Jan 30 09:23:54.844: INFO: Pod pod-subpath-test-projected-p496 no longer exists
    STEP: Deleting pod pod-subpath-test-projected-p496 01/30/23 09:23:54.844
    Jan 30 09:23:54.844: INFO: Deleting pod "pod-subpath-test-projected-p496" in namespace "subpath-7685"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:23:54.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-7685" for this suite. 01/30/23 09:23:54.848
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:23:54.853
Jan 30 09:23:54.853: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename gc 01/30/23 09:23:54.855
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:54.868
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:54.871
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
STEP: create the rc 01/30/23 09:23:54.873
STEP: delete the rc 01/30/23 09:23:59.88
STEP: wait for all pods to be garbage collected 01/30/23 09:23:59.885
STEP: Gathering metrics 01/30/23 09:24:04.889
Jan 30 09:24:04.900: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
Jan 30 09:24:04.902: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.154145ms
Jan 30 09:24:04.902: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
Jan 30 09:24:04.902: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
Jan 30 09:24:04.945: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:04.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-2626" for this suite. 01/30/23 09:24:04.948
------------------------------
â€¢ [SLOW TEST] [10.101 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:23:54.853
    Jan 30 09:23:54.853: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename gc 01/30/23 09:23:54.855
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:23:54.868
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:23:54.871
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete pods created by rc when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:312
    STEP: create the rc 01/30/23 09:23:54.873
    STEP: delete the rc 01/30/23 09:23:59.88
    STEP: wait for all pods to be garbage collected 01/30/23 09:23:59.885
    STEP: Gathering metrics 01/30/23 09:24:04.889
    Jan 30 09:24:04.900: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
    Jan 30 09:24:04.902: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.154145ms
    Jan 30 09:24:04.902: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
    Jan 30 09:24:04.902: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
    Jan 30 09:24:04.945: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:04.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-2626" for this suite. 01/30/23 09:24:04.948
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:04.954
Jan 30 09:24:04.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 09:24:04.955
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:04.968
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:04.971
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
STEP: Creating a pod to test emptydir volume type on tmpfs 01/30/23 09:24:04.973
Jan 30 09:24:04.980: INFO: Waiting up to 5m0s for pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5" in namespace "emptydir-1982" to be "Succeeded or Failed"
Jan 30 09:24:04.984: INFO: Pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.844545ms
Jan 30 09:24:06.987: INFO: Pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006762096s
Jan 30 09:24:08.986: INFO: Pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006468502s
STEP: Saw pod success 01/30/23 09:24:08.986
Jan 30 09:24:08.987: INFO: Pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5" satisfied condition "Succeeded or Failed"
Jan 30 09:24:08.988: INFO: Trying to get logs from node tce-worker2 pod pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5 container test-container: <nil>
STEP: delete the pod 01/30/23 09:24:08.992
Jan 30 09:24:09.011: INFO: Waiting for pod pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5 to disappear
Jan 30 09:24:09.012: INFO: Pod pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:09.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-1982" for this suite. 01/30/23 09:24:09.015
------------------------------
â€¢ [4.067 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:04.954
    Jan 30 09:24:04.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 09:24:04.955
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:04.968
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:04.971
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:87
    STEP: Creating a pod to test emptydir volume type on tmpfs 01/30/23 09:24:04.973
    Jan 30 09:24:04.980: INFO: Waiting up to 5m0s for pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5" in namespace "emptydir-1982" to be "Succeeded or Failed"
    Jan 30 09:24:04.984: INFO: Pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.844545ms
    Jan 30 09:24:06.987: INFO: Pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006762096s
    Jan 30 09:24:08.986: INFO: Pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006468502s
    STEP: Saw pod success 01/30/23 09:24:08.986
    Jan 30 09:24:08.987: INFO: Pod "pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5" satisfied condition "Succeeded or Failed"
    Jan 30 09:24:08.988: INFO: Trying to get logs from node tce-worker2 pod pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5 container test-container: <nil>
    STEP: delete the pod 01/30/23 09:24:08.992
    Jan 30 09:24:09.011: INFO: Waiting for pod pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5 to disappear
    Jan 30 09:24:09.012: INFO: Pod pod-2202c259-ac38-4a2c-9ba9-7e49cb3879a5 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:09.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-1982" for this suite. 01/30/23 09:24:09.015
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:09.022
Jan 30 09:24:09.022: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-runtime 01/30/23 09:24:09.023
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:09.036
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:09.038
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
STEP: create the container 01/30/23 09:24:09.04
STEP: wait for the container to reach Succeeded 01/30/23 09:24:09.045
STEP: get the container status 01/30/23 09:24:13.058
STEP: the container should be terminated 01/30/23 09:24:13.06
STEP: the termination message should be set 01/30/23 09:24:13.06
Jan 30 09:24:13.060: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 01/30/23 09:24:13.06
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:13.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-2021" for this suite. 01/30/23 09:24:13.074
------------------------------
â€¢ [4.060 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:09.022
    Jan 30 09:24:09.022: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-runtime 01/30/23 09:24:09.023
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:09.036
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:09.038
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195
    STEP: create the container 01/30/23 09:24:09.04
    STEP: wait for the container to reach Succeeded 01/30/23 09:24:09.045
    STEP: get the container status 01/30/23 09:24:13.058
    STEP: the container should be terminated 01/30/23 09:24:13.06
    STEP: the termination message should be set 01/30/23 09:24:13.06
    Jan 30 09:24:13.060: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 01/30/23 09:24:13.06
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:13.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-2021" for this suite. 01/30/23 09:24:13.074
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:13.083
Jan 30 09:24:13.083: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 09:24:13.084
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:13.097
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:13.1
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1572
STEP: creating an pod 01/30/23 09:24:13.103
Jan 30 09:24:13.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Jan 30 09:24:13.190: INFO: stderr: ""
Jan 30 09:24:13.190: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
STEP: Waiting for log generator to start. 01/30/23 09:24:13.19
Jan 30 09:24:13.191: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Jan 30 09:24:13.191: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-7020" to be "running and ready, or succeeded"
Jan 30 09:24:13.195: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.324701ms
Jan 30 09:24:13.195: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'tce-worker2' to be 'Running' but was 'Pending'
Jan 30 09:24:15.198: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.006858266s
Jan 30 09:24:15.198: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Jan 30 09:24:15.198: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings 01/30/23 09:24:15.198
Jan 30 09:24:15.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator'
Jan 30 09:24:15.270: INFO: stderr: ""
Jan 30 09:24:15.270: INFO: stdout: "I0130 09:24:13.813157       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/4pjq 567\nI0130 09:24:14.013646       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/5ht 231\nI0130 09:24:14.214269       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/6sqp 469\nI0130 09:24:14.413690       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/h5vm 455\nI0130 09:24:14.614261       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/xrxs 234\nI0130 09:24:14.813662       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/h8sj 353\nI0130 09:24:15.014039       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/vks 377\nI0130 09:24:15.213346       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/rdp 398\n"
STEP: limiting log lines 01/30/23 09:24:15.27
Jan 30 09:24:15.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --tail=1'
Jan 30 09:24:15.342: INFO: stderr: ""
Jan 30 09:24:15.342: INFO: stdout: "I0130 09:24:15.213346       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/rdp 398\n"
Jan 30 09:24:15.342: INFO: got output "I0130 09:24:15.213346       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/rdp 398\n"
STEP: limiting log bytes 01/30/23 09:24:15.342
Jan 30 09:24:15.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --limit-bytes=1'
Jan 30 09:24:15.413: INFO: stderr: ""
Jan 30 09:24:15.413: INFO: stdout: "I"
Jan 30 09:24:15.413: INFO: got output "I"
STEP: exposing timestamps 01/30/23 09:24:15.413
Jan 30 09:24:15.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --tail=1 --timestamps'
Jan 30 09:24:15.474: INFO: stderr: ""
Jan 30 09:24:15.474: INFO: stdout: "2023-01-30T09:24:15.414090566Z I0130 09:24:15.413689       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/rkd 531\n"
Jan 30 09:24:15.474: INFO: got output "2023-01-30T09:24:15.414090566Z I0130 09:24:15.413689       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/rkd 531\n"
STEP: restricting to a time range 01/30/23 09:24:15.474
Jan 30 09:24:17.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --since=1s'
Jan 30 09:24:18.042: INFO: stderr: ""
Jan 30 09:24:18.042: INFO: stdout: "I0130 09:24:17.213793       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/27sl 453\nI0130 09:24:17.413209       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/tx2t 549\nI0130 09:24:17.613618       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/lzq 246\nI0130 09:24:17.813991       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/jx6 417\nI0130 09:24:18.013380       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/vztq 414\n"
Jan 30 09:24:18.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --since=24h'
Jan 30 09:24:18.123: INFO: stderr: ""
Jan 30 09:24:18.123: INFO: stdout: "I0130 09:24:13.813157       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/4pjq 567\nI0130 09:24:14.013646       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/5ht 231\nI0130 09:24:14.214269       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/6sqp 469\nI0130 09:24:14.413690       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/h5vm 455\nI0130 09:24:14.614261       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/xrxs 234\nI0130 09:24:14.813662       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/h8sj 353\nI0130 09:24:15.014039       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/vks 377\nI0130 09:24:15.213346       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/rdp 398\nI0130 09:24:15.413689       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/rkd 531\nI0130 09:24:15.614307       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/jzw 588\nI0130 09:24:15.813709       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/hdn 422\nI0130 09:24:16.014072       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/6mpr 365\nI0130 09:24:16.213446       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/gvjj 524\nI0130 09:24:16.413932       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/rhw7 238\nI0130 09:24:16.613304       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/5gwd 523\nI0130 09:24:16.813652       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/lg4n 240\nI0130 09:24:17.014271       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/zff 230\nI0130 09:24:17.213793       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/27sl 453\nI0130 09:24:17.413209       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/tx2t 549\nI0130 09:24:17.613618       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/lzq 246\nI0130 09:24:17.813991       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/jx6 417\nI0130 09:24:18.013380       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/vztq 414\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1577
Jan 30 09:24:18.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 delete pod logs-generator'
Jan 30 09:24:20.487: INFO: stderr: ""
Jan 30 09:24:20.487: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:20.487: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7020" for this suite. 01/30/23 09:24:20.49
------------------------------
â€¢ [SLOW TEST] [7.412 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1569
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/kubectl/kubectl.go:1592

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:13.083
    Jan 30 09:24:13.083: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 09:24:13.084
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:13.097
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:13.1
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1572
    STEP: creating an pod 01/30/23 09:24:13.103
    Jan 30 09:24:13.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
    Jan 30 09:24:13.190: INFO: stderr: ""
    Jan 30 09:24:13.190: INFO: stdout: "pod/logs-generator created\n"
    [It] should be able to retrieve and filter logs  [Conformance]
      test/e2e/kubectl/kubectl.go:1592
    STEP: Waiting for log generator to start. 01/30/23 09:24:13.19
    Jan 30 09:24:13.191: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
    Jan 30 09:24:13.191: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-7020" to be "running and ready, or succeeded"
    Jan 30 09:24:13.195: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.324701ms
    Jan 30 09:24:13.195: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'tce-worker2' to be 'Running' but was 'Pending'
    Jan 30 09:24:15.198: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.006858266s
    Jan 30 09:24:15.198: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
    Jan 30 09:24:15.198: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
    STEP: checking for a matching strings 01/30/23 09:24:15.198
    Jan 30 09:24:15.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator'
    Jan 30 09:24:15.270: INFO: stderr: ""
    Jan 30 09:24:15.270: INFO: stdout: "I0130 09:24:13.813157       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/4pjq 567\nI0130 09:24:14.013646       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/5ht 231\nI0130 09:24:14.214269       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/6sqp 469\nI0130 09:24:14.413690       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/h5vm 455\nI0130 09:24:14.614261       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/xrxs 234\nI0130 09:24:14.813662       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/h8sj 353\nI0130 09:24:15.014039       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/vks 377\nI0130 09:24:15.213346       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/rdp 398\n"
    STEP: limiting log lines 01/30/23 09:24:15.27
    Jan 30 09:24:15.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --tail=1'
    Jan 30 09:24:15.342: INFO: stderr: ""
    Jan 30 09:24:15.342: INFO: stdout: "I0130 09:24:15.213346       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/rdp 398\n"
    Jan 30 09:24:15.342: INFO: got output "I0130 09:24:15.213346       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/rdp 398\n"
    STEP: limiting log bytes 01/30/23 09:24:15.342
    Jan 30 09:24:15.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --limit-bytes=1'
    Jan 30 09:24:15.413: INFO: stderr: ""
    Jan 30 09:24:15.413: INFO: stdout: "I"
    Jan 30 09:24:15.413: INFO: got output "I"
    STEP: exposing timestamps 01/30/23 09:24:15.413
    Jan 30 09:24:15.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --tail=1 --timestamps'
    Jan 30 09:24:15.474: INFO: stderr: ""
    Jan 30 09:24:15.474: INFO: stdout: "2023-01-30T09:24:15.414090566Z I0130 09:24:15.413689       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/rkd 531\n"
    Jan 30 09:24:15.474: INFO: got output "2023-01-30T09:24:15.414090566Z I0130 09:24:15.413689       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/rkd 531\n"
    STEP: restricting to a time range 01/30/23 09:24:15.474
    Jan 30 09:24:17.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --since=1s'
    Jan 30 09:24:18.042: INFO: stderr: ""
    Jan 30 09:24:18.042: INFO: stdout: "I0130 09:24:17.213793       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/27sl 453\nI0130 09:24:17.413209       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/tx2t 549\nI0130 09:24:17.613618       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/lzq 246\nI0130 09:24:17.813991       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/jx6 417\nI0130 09:24:18.013380       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/vztq 414\n"
    Jan 30 09:24:18.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 logs logs-generator logs-generator --since=24h'
    Jan 30 09:24:18.123: INFO: stderr: ""
    Jan 30 09:24:18.123: INFO: stdout: "I0130 09:24:13.813157       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/4pjq 567\nI0130 09:24:14.013646       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/5ht 231\nI0130 09:24:14.214269       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/6sqp 469\nI0130 09:24:14.413690       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/h5vm 455\nI0130 09:24:14.614261       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/xrxs 234\nI0130 09:24:14.813662       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/h8sj 353\nI0130 09:24:15.014039       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/vks 377\nI0130 09:24:15.213346       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/rdp 398\nI0130 09:24:15.413689       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/rkd 531\nI0130 09:24:15.614307       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/jzw 588\nI0130 09:24:15.813709       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/hdn 422\nI0130 09:24:16.014072       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/6mpr 365\nI0130 09:24:16.213446       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/gvjj 524\nI0130 09:24:16.413932       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/rhw7 238\nI0130 09:24:16.613304       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/5gwd 523\nI0130 09:24:16.813652       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/lg4n 240\nI0130 09:24:17.014271       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/zff 230\nI0130 09:24:17.213793       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/27sl 453\nI0130 09:24:17.413209       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/tx2t 549\nI0130 09:24:17.613618       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/lzq 246\nI0130 09:24:17.813991       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/jx6 417\nI0130 09:24:18.013380       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/vztq 414\n"
    [AfterEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1577
    Jan 30 09:24:18.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-7020 delete pod logs-generator'
    Jan 30 09:24:20.487: INFO: stderr: ""
    Jan 30 09:24:20.487: INFO: stdout: "pod \"logs-generator\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:20.487: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7020" for this suite. 01/30/23 09:24:20.49
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] EndpointSlice
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:20.495
Jan 30 09:24:20.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename endpointslice 01/30/23 09:24:20.497
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:20.51
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:20.512
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:24.565: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-7553" for this suite. 01/30/23 09:24:24.568
------------------------------
â€¢ [4.078 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:20.495
    Jan 30 09:24:20.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename endpointslice 01/30/23 09:24:20.497
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:20.51
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:20.512
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
      test/e2e/network/endpointslice.go:102
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:24.565: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-7553" for this suite. 01/30/23 09:24:24.568
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:24.573
Jan 30 09:24:24.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename secrets 01/30/23 09:24:24.574
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:24.583
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:24.585
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
STEP: Creating secret with name secret-test-98741d6e-537b-4593-be50-1ae456127dd7 01/30/23 09:24:24.587
STEP: Creating a pod to test consume secrets 01/30/23 09:24:24.591
Jan 30 09:24:24.596: INFO: Waiting up to 5m0s for pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e" in namespace "secrets-4759" to be "Succeeded or Failed"
Jan 30 09:24:24.598: INFO: Pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.178259ms
Jan 30 09:24:26.601: INFO: Pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005597339s
Jan 30 09:24:28.601: INFO: Pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004705443s
STEP: Saw pod success 01/30/23 09:24:28.601
Jan 30 09:24:28.601: INFO: Pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e" satisfied condition "Succeeded or Failed"
Jan 30 09:24:28.602: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e container secret-volume-test: <nil>
STEP: delete the pod 01/30/23 09:24:28.605
Jan 30 09:24:28.625: INFO: Waiting for pod pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e to disappear
Jan 30 09:24:28.627: INFO: Pod pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:28.628: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4759" for this suite. 01/30/23 09:24:28.63
------------------------------
â€¢ [4.064 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:24.573
    Jan 30 09:24:24.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename secrets 01/30/23 09:24:24.574
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:24.583
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:24.585
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:68
    STEP: Creating secret with name secret-test-98741d6e-537b-4593-be50-1ae456127dd7 01/30/23 09:24:24.587
    STEP: Creating a pod to test consume secrets 01/30/23 09:24:24.591
    Jan 30 09:24:24.596: INFO: Waiting up to 5m0s for pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e" in namespace "secrets-4759" to be "Succeeded or Failed"
    Jan 30 09:24:24.598: INFO: Pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.178259ms
    Jan 30 09:24:26.601: INFO: Pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005597339s
    Jan 30 09:24:28.601: INFO: Pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.004705443s
    STEP: Saw pod success 01/30/23 09:24:28.601
    Jan 30 09:24:28.601: INFO: Pod "pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e" satisfied condition "Succeeded or Failed"
    Jan 30 09:24:28.602: INFO: Trying to get logs from node tce-worker2 pod pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e container secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 09:24:28.605
    Jan 30 09:24:28.625: INFO: Waiting for pod pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e to disappear
    Jan 30 09:24:28.627: INFO: Pod pod-secrets-64624bce-1610-40a6-aeb3-0b72d62cf14e no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:28.628: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4759" for this suite. 01/30/23 09:24:28.63
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:28.638
Jan 30 09:24:28.638: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-runtime 01/30/23 09:24:28.638
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:28.65
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:28.653
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
STEP: create the container 01/30/23 09:24:28.655
STEP: wait for the container to reach Failed 01/30/23 09:24:28.663
STEP: get the container status 01/30/23 09:24:32.678
STEP: the container should be terminated 01/30/23 09:24:32.68
STEP: the termination message should be set 01/30/23 09:24:32.68
Jan 30 09:24:32.680: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 01/30/23 09:24:32.68
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:32.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-284" for this suite. 01/30/23 09:24:32.695
------------------------------
â€¢ [4.062 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:28.638
    Jan 30 09:24:28.638: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-runtime 01/30/23 09:24:28.638
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:28.65
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:28.653
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216
    STEP: create the container 01/30/23 09:24:28.655
    STEP: wait for the container to reach Failed 01/30/23 09:24:28.663
    STEP: get the container status 01/30/23 09:24:32.678
    STEP: the container should be terminated 01/30/23 09:24:32.68
    STEP: the termination message should be set 01/30/23 09:24:32.68
    Jan 30 09:24:32.680: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 01/30/23 09:24:32.68
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:32.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-284" for this suite. 01/30/23 09:24:32.695
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:32.701
Jan 30 09:24:32.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 09:24:32.702
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:32.711
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:32.713
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
STEP: Creating the pod 01/30/23 09:24:32.715
Jan 30 09:24:32.721: INFO: Waiting up to 5m0s for pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9" in namespace "downward-api-1935" to be "running and ready"
Jan 30 09:24:32.725: INFO: Pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.108067ms
Jan 30 09:24:32.725: INFO: The phase of Pod labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:24:34.729: INFO: Pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9": Phase="Running", Reason="", readiness=true. Elapsed: 2.007381332s
Jan 30 09:24:34.729: INFO: The phase of Pod labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9 is Running (Ready = true)
Jan 30 09:24:34.729: INFO: Pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9" satisfied condition "running and ready"
Jan 30 09:24:35.244: INFO: Successfully updated pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:37.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-1935" for this suite. 01/30/23 09:24:37.26
------------------------------
â€¢ [4.563 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:32.701
    Jan 30 09:24:32.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 09:24:32.702
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:32.711
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:32.713
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:130
    STEP: Creating the pod 01/30/23 09:24:32.715
    Jan 30 09:24:32.721: INFO: Waiting up to 5m0s for pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9" in namespace "downward-api-1935" to be "running and ready"
    Jan 30 09:24:32.725: INFO: Pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.108067ms
    Jan 30 09:24:32.725: INFO: The phase of Pod labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:24:34.729: INFO: Pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9": Phase="Running", Reason="", readiness=true. Elapsed: 2.007381332s
    Jan 30 09:24:34.729: INFO: The phase of Pod labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9 is Running (Ready = true)
    Jan 30 09:24:34.729: INFO: Pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9" satisfied condition "running and ready"
    Jan 30 09:24:35.244: INFO: Successfully updated pod "labelsupdatedbf4a417-3182-4d21-b7ac-9a9abff1c3d9"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:37.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-1935" for this suite. 01/30/23 09:24:37.26
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:37.265
Jan 30 09:24:37.265: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:24:37.266
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:37.274
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:37.277
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
STEP: Creating configMap with name projected-configmap-test-volume-020eae61-707c-4410-a006-d4d9b939c1a4 01/30/23 09:24:37.279
STEP: Creating a pod to test consume configMaps 01/30/23 09:24:37.287
Jan 30 09:24:37.292: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840" in namespace "projected-4504" to be "Succeeded or Failed"
Jan 30 09:24:37.294: INFO: Pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840": Phase="Pending", Reason="", readiness=false. Elapsed: 1.837708ms
Jan 30 09:24:39.297: INFO: Pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004386029s
Jan 30 09:24:41.297: INFO: Pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00517067s
STEP: Saw pod success 01/30/23 09:24:41.298
Jan 30 09:24:41.298: INFO: Pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840" satisfied condition "Succeeded or Failed"
Jan 30 09:24:41.300: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:24:41.304
Jan 30 09:24:41.324: INFO: Waiting for pod pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840 to disappear
Jan 30 09:24:41.326: INFO: Pod pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:41.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4504" for this suite. 01/30/23 09:24:41.329
------------------------------
â€¢ [4.072 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:37.265
    Jan 30 09:24:37.265: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:24:37.266
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:37.274
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:37.277
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:47
    STEP: Creating configMap with name projected-configmap-test-volume-020eae61-707c-4410-a006-d4d9b939c1a4 01/30/23 09:24:37.279
    STEP: Creating a pod to test consume configMaps 01/30/23 09:24:37.287
    Jan 30 09:24:37.292: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840" in namespace "projected-4504" to be "Succeeded or Failed"
    Jan 30 09:24:37.294: INFO: Pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840": Phase="Pending", Reason="", readiness=false. Elapsed: 1.837708ms
    Jan 30 09:24:39.297: INFO: Pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004386029s
    Jan 30 09:24:41.297: INFO: Pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00517067s
    STEP: Saw pod success 01/30/23 09:24:41.298
    Jan 30 09:24:41.298: INFO: Pod "pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840" satisfied condition "Succeeded or Failed"
    Jan 30 09:24:41.300: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:24:41.304
    Jan 30 09:24:41.324: INFO: Waiting for pod pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840 to disappear
    Jan 30 09:24:41.326: INFO: Pod pod-projected-configmaps-bbbc59b4-f792-41a3-a5df-ee908e028840 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:41.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4504" for this suite. 01/30/23 09:24:41.329
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:41.338
Jan 30 09:24:41.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 09:24:41.339
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:41.352
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:41.354
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
STEP: Creating a pod to test downward api env vars 01/30/23 09:24:41.357
Jan 30 09:24:41.366: INFO: Waiting up to 5m0s for pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889" in namespace "downward-api-805" to be "Succeeded or Failed"
Jan 30 09:24:41.369: INFO: Pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889": Phase="Pending", Reason="", readiness=false. Elapsed: 2.554008ms
Jan 30 09:24:43.372: INFO: Pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005930492s
Jan 30 09:24:45.373: INFO: Pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006301475s
STEP: Saw pod success 01/30/23 09:24:45.373
Jan 30 09:24:45.373: INFO: Pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889" satisfied condition "Succeeded or Failed"
Jan 30 09:24:45.375: INFO: Trying to get logs from node tce-worker2 pod downward-api-ba243454-28f6-4858-8f25-bd67a1b69889 container dapi-container: <nil>
STEP: delete the pod 01/30/23 09:24:45.379
Jan 30 09:24:45.399: INFO: Waiting for pod downward-api-ba243454-28f6-4858-8f25-bd67a1b69889 to disappear
Jan 30 09:24:45.401: INFO: Pod downward-api-ba243454-28f6-4858-8f25-bd67a1b69889 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:45.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-805" for this suite. 01/30/23 09:24:45.403
------------------------------
â€¢ [4.070 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:41.338
    Jan 30 09:24:41.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 09:24:41.339
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:41.352
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:41.354
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:44
    STEP: Creating a pod to test downward api env vars 01/30/23 09:24:41.357
    Jan 30 09:24:41.366: INFO: Waiting up to 5m0s for pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889" in namespace "downward-api-805" to be "Succeeded or Failed"
    Jan 30 09:24:41.369: INFO: Pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889": Phase="Pending", Reason="", readiness=false. Elapsed: 2.554008ms
    Jan 30 09:24:43.372: INFO: Pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005930492s
    Jan 30 09:24:45.373: INFO: Pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006301475s
    STEP: Saw pod success 01/30/23 09:24:45.373
    Jan 30 09:24:45.373: INFO: Pod "downward-api-ba243454-28f6-4858-8f25-bd67a1b69889" satisfied condition "Succeeded or Failed"
    Jan 30 09:24:45.375: INFO: Trying to get logs from node tce-worker2 pod downward-api-ba243454-28f6-4858-8f25-bd67a1b69889 container dapi-container: <nil>
    STEP: delete the pod 01/30/23 09:24:45.379
    Jan 30 09:24:45.399: INFO: Waiting for pod downward-api-ba243454-28f6-4858-8f25-bd67a1b69889 to disappear
    Jan 30 09:24:45.401: INFO: Pod downward-api-ba243454-28f6-4858-8f25-bd67a1b69889 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:45.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-805" for this suite. 01/30/23 09:24:45.403
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:45.408
Jan 30 09:24:45.408: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename watch 01/30/23 09:24:45.41
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:45.42
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:45.422
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
STEP: getting a starting resourceVersion 01/30/23 09:24:45.424
STEP: starting a background goroutine to produce watch events 01/30/23 09:24:45.425
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 01/30/23 09:24:45.425
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:48.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-6020" for this suite. 01/30/23 09:24:48.264
------------------------------
â€¢ [2.918 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:45.408
    Jan 30 09:24:45.408: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename watch 01/30/23 09:24:45.41
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:45.42
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:45.422
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should receive events on concurrent watches in same order [Conformance]
      test/e2e/apimachinery/watch.go:334
    STEP: getting a starting resourceVersion 01/30/23 09:24:45.424
    STEP: starting a background goroutine to produce watch events 01/30/23 09:24:45.425
    STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 01/30/23 09:24:45.425
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:48.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-6020" for this suite. 01/30/23 09:24:48.264
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:48.328
Jan 30 09:24:48.328: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename daemonsets 01/30/23 09:24:48.329
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:48.343
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:48.346
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
STEP: Creating simple DaemonSet "daemon-set" 01/30/23 09:24:48.359
STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 09:24:48.366
Jan 30 09:24:48.369: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:24:48.372: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:24:48.372: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 09:24:49.375: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:24:49.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 09:24:49.377: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: listing all DeamonSets 01/30/23 09:24:49.379
STEP: DeleteCollection of the DaemonSets 01/30/23 09:24:49.381
STEP: Verify that ReplicaSets have been deleted 01/30/23 09:24:49.395
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
Jan 30 09:24:49.402: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27844"},"items":null}

Jan 30 09:24:49.404: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27844"},"items":[{"metadata":{"name":"daemon-set-7lvdc","generateName":"daemon-set-","namespace":"daemonsets-7051","uid":"bfc8f1d9-f52c-4679-9b6a-5eae0e506740","resourceVersion":"27839","creationTimestamp":"2023-01-30T09:24:48Z","labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"745fd077-4604-4731-b2c3-80946c1df24c","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:24:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"745fd077-4604-4731-b2c3-80946c1df24c\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:24:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.5\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wq54q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wq54q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"tce-worker","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["tce-worker"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:49Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:49Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:48Z"}],"hostIP":"172.20.0.2","podIP":"10.244.2.5","podIPs":[{"ip":"10.244.2.5"}],"startTime":"2023-01-30T09:24:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-30T09:24:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f","containerID":"containerd://60300d2ed08664854e7682834da1a8470f4ceed2daaceefecd58bf49a21e4f13","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-8crlv","generateName":"daemon-set-","namespace":"daemonsets-7051","uid":"1b55e879-838c-4fb9-b840-9aec15075df5","resourceVersion":"27841","creationTimestamp":"2023-01-30T09:24:48Z","labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"745fd077-4604-4731-b2c3-80946c1df24c","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:24:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"745fd077-4604-4731-b2c3-80946c1df24c\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:24:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.197\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p5x6k","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p5x6k","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"tce-worker2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["tce-worker2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:49Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:49Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:48Z"}],"hostIP":"172.20.0.4","podIP":"10.244.1.197","podIPs":[{"ip":"10.244.1.197"}],"startTime":"2023-01-30T09:24:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-30T09:24:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f","containerID":"containerd://907a991e4e183e7dcc3ebc280a26d687331d10f6509369f5b5097646ae74b9dd","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:49.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-7051" for this suite. 01/30/23 09:24:49.418
------------------------------
â€¢ [1.095 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:48.328
    Jan 30 09:24:48.328: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename daemonsets 01/30/23 09:24:48.329
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:48.343
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:48.346
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should list and delete a collection of DaemonSets [Conformance]
      test/e2e/apps/daemon_set.go:823
    STEP: Creating simple DaemonSet "daemon-set" 01/30/23 09:24:48.359
    STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 09:24:48.366
    Jan 30 09:24:48.369: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:24:48.372: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 09:24:48.372: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 09:24:49.375: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:24:49.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 09:24:49.377: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: listing all DeamonSets 01/30/23 09:24:49.379
    STEP: DeleteCollection of the DaemonSets 01/30/23 09:24:49.381
    STEP: Verify that ReplicaSets have been deleted 01/30/23 09:24:49.395
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    Jan 30 09:24:49.402: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27844"},"items":null}

    Jan 30 09:24:49.404: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27844"},"items":[{"metadata":{"name":"daemon-set-7lvdc","generateName":"daemon-set-","namespace":"daemonsets-7051","uid":"bfc8f1d9-f52c-4679-9b6a-5eae0e506740","resourceVersion":"27839","creationTimestamp":"2023-01-30T09:24:48Z","labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"745fd077-4604-4731-b2c3-80946c1df24c","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:24:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"745fd077-4604-4731-b2c3-80946c1df24c\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:24:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.5\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wq54q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wq54q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"tce-worker","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["tce-worker"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:49Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:49Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:48Z"}],"hostIP":"172.20.0.2","podIP":"10.244.2.5","podIPs":[{"ip":"10.244.2.5"}],"startTime":"2023-01-30T09:24:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-30T09:24:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f","containerID":"containerd://60300d2ed08664854e7682834da1a8470f4ceed2daaceefecd58bf49a21e4f13","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-8crlv","generateName":"daemon-set-","namespace":"daemonsets-7051","uid":"1b55e879-838c-4fb9-b840-9aec15075df5","resourceVersion":"27841","creationTimestamp":"2023-01-30T09:24:48Z","labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"745fd077-4604-4731-b2c3-80946c1df24c","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:24:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"745fd077-4604-4731-b2c3-80946c1df24c\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-01-30T09:24:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.197\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p5x6k","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p5x6k","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"tce-worker2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["tce-worker2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:49Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:49Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-01-30T09:24:48Z"}],"hostIP":"172.20.0.4","podIP":"10.244.1.197","podIPs":[{"ip":"10.244.1.197"}],"startTime":"2023-01-30T09:24:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-01-30T09:24:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker.io/library/import-2023-01-30@sha256:7d928810cd15a1b1551ad7649ffe53bdad5031b4855f57993388ea76f85f0f7f","containerID":"containerd://907a991e4e183e7dcc3ebc280a26d687331d10f6509369f5b5097646ae74b9dd","started":true}],"qosClass":"BestEffort"}}]}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:49.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-7051" for this suite. 01/30/23 09:24:49.418
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:49.423
Jan 30 09:24:49.423: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 09:24:49.424
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:49.44
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:49.459
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:24:49.468
Jan 30 09:24:49.479: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903" in namespace "downward-api-5262" to be "Succeeded or Failed"
Jan 30 09:24:49.482: INFO: Pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903": Phase="Pending", Reason="", readiness=false. Elapsed: 2.621926ms
Jan 30 09:24:51.485: INFO: Pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005454283s
Jan 30 09:24:53.485: INFO: Pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005371161s
STEP: Saw pod success 01/30/23 09:24:53.485
Jan 30 09:24:53.485: INFO: Pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903" satisfied condition "Succeeded or Failed"
Jan 30 09:24:53.487: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903 container client-container: <nil>
STEP: delete the pod 01/30/23 09:24:53.491
Jan 30 09:24:53.499: INFO: Waiting for pod downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903 to disappear
Jan 30 09:24:53.501: INFO: Pod downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 09:24:53.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5262" for this suite. 01/30/23 09:24:53.504
------------------------------
â€¢ [4.086 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:49.423
    Jan 30 09:24:49.423: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 09:24:49.424
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:49.44
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:49.459
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:221
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:24:49.468
    Jan 30 09:24:49.479: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903" in namespace "downward-api-5262" to be "Succeeded or Failed"
    Jan 30 09:24:49.482: INFO: Pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903": Phase="Pending", Reason="", readiness=false. Elapsed: 2.621926ms
    Jan 30 09:24:51.485: INFO: Pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005454283s
    Jan 30 09:24:53.485: INFO: Pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005371161s
    STEP: Saw pod success 01/30/23 09:24:53.485
    Jan 30 09:24:53.485: INFO: Pod "downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903" satisfied condition "Succeeded or Failed"
    Jan 30 09:24:53.487: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903 container client-container: <nil>
    STEP: delete the pod 01/30/23 09:24:53.491
    Jan 30 09:24:53.499: INFO: Waiting for pod downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903 to disappear
    Jan 30 09:24:53.501: INFO: Pod downwardapi-volume-8668b67f-fe49-428a-89de-bcf27dd51903 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:24:53.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5262" for this suite. 01/30/23 09:24:53.504
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Variable Expansion
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:24:53.509
Jan 30 09:24:53.509: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename var-expansion 01/30/23 09:24:53.51
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:53.52
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:53.523
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
STEP: creating the pod with failed condition 01/30/23 09:24:53.526
Jan 30 09:24:53.534: INFO: Waiting up to 2m0s for pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" in namespace "var-expansion-5368" to be "running"
Jan 30 09:24:53.537: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 2.173826ms
Jan 30 09:24:55.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005307757s
Jan 30 09:24:57.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 4.004489261s
Jan 30 09:24:59.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 6.005432697s
Jan 30 09:25:01.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 8.00507689s
Jan 30 09:25:03.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 10.005182423s
Jan 30 09:25:05.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 12.004341986s
Jan 30 09:25:07.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 14.006580115s
Jan 30 09:25:09.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 16.005320203s
Jan 30 09:25:11.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 18.005352496s
Jan 30 09:25:13.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 20.00583276s
Jan 30 09:25:15.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 22.004443217s
Jan 30 09:25:17.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 24.005786642s
Jan 30 09:25:19.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 26.006360456s
Jan 30 09:25:21.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 28.005970838s
Jan 30 09:25:23.553: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 30.018756706s
Jan 30 09:25:25.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 32.005410968s
Jan 30 09:25:27.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 34.005037803s
Jan 30 09:25:29.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 36.005649539s
Jan 30 09:25:31.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 38.005420408s
Jan 30 09:25:33.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 40.005068231s
Jan 30 09:25:35.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 42.004774117s
Jan 30 09:25:37.543: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 44.008109637s
Jan 30 09:25:39.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 46.004784877s
Jan 30 09:25:41.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 48.006478129s
Jan 30 09:25:43.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 50.005173841s
Jan 30 09:25:45.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 52.006306999s
Jan 30 09:25:47.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 54.004629283s
Jan 30 09:25:49.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 56.005625438s
Jan 30 09:25:51.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 58.005295166s
Jan 30 09:25:53.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.005126344s
Jan 30 09:25:55.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.005492484s
Jan 30 09:25:57.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.00571541s
Jan 30 09:25:59.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.006071473s
Jan 30 09:26:01.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.006331552s
Jan 30 09:26:03.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.005322835s
Jan 30 09:26:05.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.005060512s
Jan 30 09:26:07.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.006462295s
Jan 30 09:26:09.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.00499586s
Jan 30 09:26:11.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.006123401s
Jan 30 09:26:13.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.005330896s
Jan 30 09:26:15.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.004452331s
Jan 30 09:26:17.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.004991872s
Jan 30 09:26:19.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.005078307s
Jan 30 09:26:21.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.005960535s
Jan 30 09:26:23.550: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.015269082s
Jan 30 09:26:25.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.005773143s
Jan 30 09:26:27.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.006044836s
Jan 30 09:26:29.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.005986828s
Jan 30 09:26:31.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.006263353s
Jan 30 09:26:33.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.004776547s
Jan 30 09:26:35.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.005196324s
Jan 30 09:26:37.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.00640238s
Jan 30 09:26:39.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.004723166s
Jan 30 09:26:41.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.00515326s
Jan 30 09:26:43.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.004431016s
Jan 30 09:26:45.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.005400336s
Jan 30 09:26:47.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.004749568s
Jan 30 09:26:49.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.006011468s
Jan 30 09:26:51.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.00661526s
Jan 30 09:26:53.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.005673326s
Jan 30 09:26:53.542: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.008034877s
STEP: updating the pod 01/30/23 09:26:53.542
Jan 30 09:26:54.052: INFO: Successfully updated pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095"
STEP: waiting for pod running 01/30/23 09:26:54.052
Jan 30 09:26:54.052: INFO: Waiting up to 2m0s for pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" in namespace "var-expansion-5368" to be "running"
Jan 30 09:26:54.056: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 3.776146ms
Jan 30 09:26:56.058: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Running", Reason="", readiness=true. Elapsed: 2.006145066s
Jan 30 09:26:56.058: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" satisfied condition "running"
STEP: deleting the pod gracefully 01/30/23 09:26:56.058
Jan 30 09:26:56.058: INFO: Deleting pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" in namespace "var-expansion-5368"
Jan 30 09:26:56.065: INFO: Wait up to 5m0s for pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 30 09:27:28.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-5368" for this suite. 01/30/23 09:27:28.073
------------------------------
â€¢ [SLOW TEST] [154.578 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:24:53.509
    Jan 30 09:24:53.509: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename var-expansion 01/30/23 09:24:53.51
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:24:53.52
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:24:53.523
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:225
    STEP: creating the pod with failed condition 01/30/23 09:24:53.526
    Jan 30 09:24:53.534: INFO: Waiting up to 2m0s for pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" in namespace "var-expansion-5368" to be "running"
    Jan 30 09:24:53.537: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 2.173826ms
    Jan 30 09:24:55.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005307757s
    Jan 30 09:24:57.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 4.004489261s
    Jan 30 09:24:59.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 6.005432697s
    Jan 30 09:25:01.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 8.00507689s
    Jan 30 09:25:03.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 10.005182423s
    Jan 30 09:25:05.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 12.004341986s
    Jan 30 09:25:07.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 14.006580115s
    Jan 30 09:25:09.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 16.005320203s
    Jan 30 09:25:11.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 18.005352496s
    Jan 30 09:25:13.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 20.00583276s
    Jan 30 09:25:15.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 22.004443217s
    Jan 30 09:25:17.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 24.005786642s
    Jan 30 09:25:19.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 26.006360456s
    Jan 30 09:25:21.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 28.005970838s
    Jan 30 09:25:23.553: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 30.018756706s
    Jan 30 09:25:25.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 32.005410968s
    Jan 30 09:25:27.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 34.005037803s
    Jan 30 09:25:29.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 36.005649539s
    Jan 30 09:25:31.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 38.005420408s
    Jan 30 09:25:33.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 40.005068231s
    Jan 30 09:25:35.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 42.004774117s
    Jan 30 09:25:37.543: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 44.008109637s
    Jan 30 09:25:39.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 46.004784877s
    Jan 30 09:25:41.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 48.006478129s
    Jan 30 09:25:43.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 50.005173841s
    Jan 30 09:25:45.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 52.006306999s
    Jan 30 09:25:47.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 54.004629283s
    Jan 30 09:25:49.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 56.005625438s
    Jan 30 09:25:51.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 58.005295166s
    Jan 30 09:25:53.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.005126344s
    Jan 30 09:25:55.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.005492484s
    Jan 30 09:25:57.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.00571541s
    Jan 30 09:25:59.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.006071473s
    Jan 30 09:26:01.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.006331552s
    Jan 30 09:26:03.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.005322835s
    Jan 30 09:26:05.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.005060512s
    Jan 30 09:26:07.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.006462295s
    Jan 30 09:26:09.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.00499586s
    Jan 30 09:26:11.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.006123401s
    Jan 30 09:26:13.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.005330896s
    Jan 30 09:26:15.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.004452331s
    Jan 30 09:26:17.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.004991872s
    Jan 30 09:26:19.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.005078307s
    Jan 30 09:26:21.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.005960535s
    Jan 30 09:26:23.550: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.015269082s
    Jan 30 09:26:25.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.005773143s
    Jan 30 09:26:27.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.006044836s
    Jan 30 09:26:29.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.005986828s
    Jan 30 09:26:31.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.006263353s
    Jan 30 09:26:33.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.004776547s
    Jan 30 09:26:35.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.005196324s
    Jan 30 09:26:37.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.00640238s
    Jan 30 09:26:39.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.004723166s
    Jan 30 09:26:41.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.00515326s
    Jan 30 09:26:43.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.004431016s
    Jan 30 09:26:45.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.005400336s
    Jan 30 09:26:47.539: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.004749568s
    Jan 30 09:26:49.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.006011468s
    Jan 30 09:26:51.541: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.00661526s
    Jan 30 09:26:53.540: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.005673326s
    Jan 30 09:26:53.542: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.008034877s
    STEP: updating the pod 01/30/23 09:26:53.542
    Jan 30 09:26:54.052: INFO: Successfully updated pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095"
    STEP: waiting for pod running 01/30/23 09:26:54.052
    Jan 30 09:26:54.052: INFO: Waiting up to 2m0s for pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" in namespace "var-expansion-5368" to be "running"
    Jan 30 09:26:54.056: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Pending", Reason="", readiness=false. Elapsed: 3.776146ms
    Jan 30 09:26:56.058: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095": Phase="Running", Reason="", readiness=true. Elapsed: 2.006145066s
    Jan 30 09:26:56.058: INFO: Pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" satisfied condition "running"
    STEP: deleting the pod gracefully 01/30/23 09:26:56.058
    Jan 30 09:26:56.058: INFO: Deleting pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" in namespace "var-expansion-5368"
    Jan 30 09:26:56.065: INFO: Wait up to 5m0s for pod "var-expansion-bf5c2c99-48cb-4b0f-88cd-f8ed8d065095" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:27:28.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-5368" for this suite. 01/30/23 09:27:28.073
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:27:28.091
Jan 30 09:27:28.092: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename gc 01/30/23 09:27:28.092
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:28.102
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:28.104
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
STEP: create the deployment 01/30/23 09:27:28.107
STEP: Wait for the Deployment to create new ReplicaSet 01/30/23 09:27:28.112
STEP: delete the deployment 01/30/23 09:27:28.617
STEP: wait for all rs to be garbage collected 01/30/23 09:27:28.633
STEP: expected 0 rs, got 1 rs 01/30/23 09:27:28.635
STEP: expected 0 pods, got 2 pods 01/30/23 09:27:28.638
STEP: Gathering metrics 01/30/23 09:27:29.147
Jan 30 09:27:29.158: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
Jan 30 09:27:29.161: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.356234ms
Jan 30 09:27:29.161: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
Jan 30 09:27:29.161: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
Jan 30 09:27:29.210: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Jan 30 09:27:29.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-5883" for this suite. 01/30/23 09:27:29.213
------------------------------
â€¢ [1.128 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:27:28.091
    Jan 30 09:27:28.092: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename gc 01/30/23 09:27:28.092
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:28.102
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:28.104
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete RS created by deployment when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:491
    STEP: create the deployment 01/30/23 09:27:28.107
    STEP: Wait for the Deployment to create new ReplicaSet 01/30/23 09:27:28.112
    STEP: delete the deployment 01/30/23 09:27:28.617
    STEP: wait for all rs to be garbage collected 01/30/23 09:27:28.633
    STEP: expected 0 rs, got 1 rs 01/30/23 09:27:28.635
    STEP: expected 0 pods, got 2 pods 01/30/23 09:27:28.638
    STEP: Gathering metrics 01/30/23 09:27:29.147
    Jan 30 09:27:29.158: INFO: Waiting up to 5m0s for pod "kube-controller-manager-tce-control-plane" in namespace "kube-system" to be "running and ready"
    Jan 30 09:27:29.161: INFO: Pod "kube-controller-manager-tce-control-plane": Phase="Running", Reason="", readiness=true. Elapsed: 2.356234ms
    Jan 30 09:27:29.161: INFO: The phase of Pod kube-controller-manager-tce-control-plane is Running (Ready = true)
    Jan 30 09:27:29.161: INFO: Pod "kube-controller-manager-tce-control-plane" satisfied condition "running and ready"
    Jan 30 09:27:29.210: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:27:29.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-5883" for this suite. 01/30/23 09:27:29.213
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:27:29.219
Jan 30 09:27:29.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename container-runtime 01/30/23 09:27:29.22
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:29.239
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:29.242
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
STEP: create the container 01/30/23 09:27:29.244
STEP: wait for the container to reach Succeeded 01/30/23 09:27:29.251
STEP: get the container status 01/30/23 09:27:32.263
STEP: the container should be terminated 01/30/23 09:27:32.266
STEP: the termination message should be set 01/30/23 09:27:32.266
Jan 30 09:27:32.266: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container 01/30/23 09:27:32.266
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Jan 30 09:27:32.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-5463" for this suite. 01/30/23 09:27:32.281
------------------------------
â€¢ [3.067 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:27:29.219
    Jan 30 09:27:29.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename container-runtime 01/30/23 09:27:29.22
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:29.239
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:29.242
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232
    STEP: create the container 01/30/23 09:27:29.244
    STEP: wait for the container to reach Succeeded 01/30/23 09:27:29.251
    STEP: get the container status 01/30/23 09:27:32.263
    STEP: the container should be terminated 01/30/23 09:27:32.266
    STEP: the termination message should be set 01/30/23 09:27:32.266
    Jan 30 09:27:32.266: INFO: Expected: &{} to match Container's Termination Message:  --
    STEP: delete the container 01/30/23 09:27:32.266
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:27:32.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-5463" for this suite. 01/30/23 09:27:32.281
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:27:32.287
Jan 30 09:27:32.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename svcaccounts 01/30/23 09:27:32.288
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:32.3
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:32.302
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
STEP: Creating a pod to test service account token:  01/30/23 09:27:32.305
Jan 30 09:27:32.312: INFO: Waiting up to 5m0s for pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875" in namespace "svcaccounts-6753" to be "Succeeded or Failed"
Jan 30 09:27:32.321: INFO: Pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875": Phase="Pending", Reason="", readiness=false. Elapsed: 8.107491ms
Jan 30 09:27:34.323: INFO: Pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010776218s
Jan 30 09:27:36.324: INFO: Pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011135053s
STEP: Saw pod success 01/30/23 09:27:36.324
Jan 30 09:27:36.324: INFO: Pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875" satisfied condition "Succeeded or Failed"
Jan 30 09:27:36.325: INFO: Trying to get logs from node tce-worker2 pod test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:27:36.334
Jan 30 09:27:36.355: INFO: Waiting for pod test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875 to disappear
Jan 30 09:27:36.357: INFO: Pod test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 30 09:27:36.357: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-6753" for this suite. 01/30/23 09:27:36.359
------------------------------
â€¢ [4.078 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:27:32.287
    Jan 30 09:27:32.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename svcaccounts 01/30/23 09:27:32.288
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:32.3
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:32.302
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount projected service account token [Conformance]
      test/e2e/auth/service_accounts.go:275
    STEP: Creating a pod to test service account token:  01/30/23 09:27:32.305
    Jan 30 09:27:32.312: INFO: Waiting up to 5m0s for pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875" in namespace "svcaccounts-6753" to be "Succeeded or Failed"
    Jan 30 09:27:32.321: INFO: Pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875": Phase="Pending", Reason="", readiness=false. Elapsed: 8.107491ms
    Jan 30 09:27:34.323: INFO: Pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010776218s
    Jan 30 09:27:36.324: INFO: Pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011135053s
    STEP: Saw pod success 01/30/23 09:27:36.324
    Jan 30 09:27:36.324: INFO: Pod "test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875" satisfied condition "Succeeded or Failed"
    Jan 30 09:27:36.325: INFO: Trying to get logs from node tce-worker2 pod test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:27:36.334
    Jan 30 09:27:36.355: INFO: Waiting for pod test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875 to disappear
    Jan 30 09:27:36.357: INFO: Pod test-pod-07926c9d-1fb3-496a-a98a-96f90cdc7875 no longer exists
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:27:36.357: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-6753" for this suite. 01/30/23 09:27:36.359
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:27:36.366
Jan 30 09:27:36.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename daemonsets 01/30/23 09:27:36.367
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:36.378
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:36.38
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
STEP: Creating simple DaemonSet "daemon-set" 01/30/23 09:27:36.395
STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 09:27:36.402
Jan 30 09:27:36.405: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:27:36.408: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:27:36.408: INFO: Node tce-worker is running 0 daemon pod, expected 1
Jan 30 09:27:37.411: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:27:37.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jan 30 09:27:37.413: INFO: Node tce-worker2 is running 0 daemon pod, expected 1
Jan 30 09:27:38.411: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jan 30 09:27:38.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jan 30 09:27:38.413: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Getting /status 01/30/23 09:27:38.415
Jan 30 09:27:38.417: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status 01/30/23 09:27:38.417
Jan 30 09:27:38.432: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated 01/30/23 09:27:38.432
Jan 30 09:27:38.435: INFO: Observed &DaemonSet event: ADDED
Jan 30 09:27:38.435: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:27:38.435: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:27:38.436: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:27:38.436: INFO: Found daemon set daemon-set in namespace daemonsets-217 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 30 09:27:38.436: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status 01/30/23 09:27:38.436
STEP: watching for the daemon set status to be patched 01/30/23 09:27:38.444
Jan 30 09:27:38.445: INFO: Observed &DaemonSet event: ADDED
Jan 30 09:27:38.446: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:27:38.446: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:27:38.446: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:27:38.446: INFO: Observed daemon set daemon-set in namespace daemonsets-217 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 30 09:27:38.446: INFO: Observed &DaemonSet event: MODIFIED
Jan 30 09:27:38.446: INFO: Found daemon set daemon-set in namespace daemonsets-217 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Jan 30 09:27:38.446: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 01/30/23 09:27:38.45
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-217, will wait for the garbage collector to delete the pods 01/30/23 09:27:38.45
Jan 30 09:27:38.522: INFO: Deleting DaemonSet.extensions daemon-set took: 19.465509ms
Jan 30 09:27:38.623: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.20205ms
Jan 30 09:27:41.426: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jan 30 09:27:41.426: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jan 30 09:27:41.428: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28354"},"items":null}

Jan 30 09:27:41.429: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28354"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:27:41.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-217" for this suite. 01/30/23 09:27:41.436
------------------------------
â€¢ [SLOW TEST] [5.076 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:27:36.366
    Jan 30 09:27:36.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename daemonsets 01/30/23 09:27:36.367
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:36.378
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:36.38
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should verify changes to a daemon set status [Conformance]
      test/e2e/apps/daemon_set.go:862
    STEP: Creating simple DaemonSet "daemon-set" 01/30/23 09:27:36.395
    STEP: Check that daemon pods launch on every node of the cluster. 01/30/23 09:27:36.402
    Jan 30 09:27:36.405: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:27:36.408: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 09:27:36.408: INFO: Node tce-worker is running 0 daemon pod, expected 1
    Jan 30 09:27:37.411: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:27:37.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Jan 30 09:27:37.413: INFO: Node tce-worker2 is running 0 daemon pod, expected 1
    Jan 30 09:27:38.411: INFO: DaemonSet pods can't tolerate node tce-control-plane with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Jan 30 09:27:38.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Jan 30 09:27:38.413: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Getting /status 01/30/23 09:27:38.415
    Jan 30 09:27:38.417: INFO: Daemon Set daemon-set has Conditions: []
    STEP: updating the DaemonSet Status 01/30/23 09:27:38.417
    Jan 30 09:27:38.432: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the daemon set status to be updated 01/30/23 09:27:38.432
    Jan 30 09:27:38.435: INFO: Observed &DaemonSet event: ADDED
    Jan 30 09:27:38.435: INFO: Observed &DaemonSet event: MODIFIED
    Jan 30 09:27:38.435: INFO: Observed &DaemonSet event: MODIFIED
    Jan 30 09:27:38.436: INFO: Observed &DaemonSet event: MODIFIED
    Jan 30 09:27:38.436: INFO: Found daemon set daemon-set in namespace daemonsets-217 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Jan 30 09:27:38.436: INFO: Daemon set daemon-set has an updated status
    STEP: patching the DaemonSet Status 01/30/23 09:27:38.436
    STEP: watching for the daemon set status to be patched 01/30/23 09:27:38.444
    Jan 30 09:27:38.445: INFO: Observed &DaemonSet event: ADDED
    Jan 30 09:27:38.446: INFO: Observed &DaemonSet event: MODIFIED
    Jan 30 09:27:38.446: INFO: Observed &DaemonSet event: MODIFIED
    Jan 30 09:27:38.446: INFO: Observed &DaemonSet event: MODIFIED
    Jan 30 09:27:38.446: INFO: Observed daemon set daemon-set in namespace daemonsets-217 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Jan 30 09:27:38.446: INFO: Observed &DaemonSet event: MODIFIED
    Jan 30 09:27:38.446: INFO: Found daemon set daemon-set in namespace daemonsets-217 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
    Jan 30 09:27:38.446: INFO: Daemon set daemon-set has a patched status
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 01/30/23 09:27:38.45
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-217, will wait for the garbage collector to delete the pods 01/30/23 09:27:38.45
    Jan 30 09:27:38.522: INFO: Deleting DaemonSet.extensions daemon-set took: 19.465509ms
    Jan 30 09:27:38.623: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.20205ms
    Jan 30 09:27:41.426: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Jan 30 09:27:41.426: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Jan 30 09:27:41.428: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28354"},"items":null}

    Jan 30 09:27:41.429: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28354"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:27:41.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-217" for this suite. 01/30/23 09:27:41.436
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:27:41.442
Jan 30 09:27:41.442: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename dns 01/30/23 09:27:41.443
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:41.479
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:41.482
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
STEP: Creating a test headless service 01/30/23 09:27:41.484
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9086.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9086.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
 01/30/23 09:27:41.491
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9086.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9086.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
 01/30/23 09:27:41.491
STEP: creating a pod to probe DNS 01/30/23 09:27:41.491
STEP: submitting the pod to kubernetes 01/30/23 09:27:41.491
Jan 30 09:27:41.501: INFO: Waiting up to 15m0s for pod "dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4" in namespace "dns-9086" to be "running"
Jan 30 09:27:41.503: INFO: Pod "dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4": Phase="Pending", Reason="", readiness=false. Elapsed: 1.983263ms
Jan 30 09:27:43.505: INFO: Pod "dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4": Phase="Running", Reason="", readiness=true. Elapsed: 2.004667795s
Jan 30 09:27:43.505: INFO: Pod "dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4" satisfied condition "running"
STEP: retrieving the pod 01/30/23 09:27:43.505
STEP: looking for the results for each expected name from probers 01/30/23 09:27:43.507
Jan 30 09:27:43.519: INFO: DNS probes using dns-9086/dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4 succeeded

STEP: deleting the pod 01/30/23 09:27:43.519
STEP: deleting the test headless service 01/30/23 09:27:43.531
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Jan 30 09:27:43.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-9086" for this suite. 01/30/23 09:27:43.543
------------------------------
â€¢ [2.107 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:27:41.442
    Jan 30 09:27:41.442: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename dns 01/30/23 09:27:41.443
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:41.479
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:41.482
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Hostname [Conformance]
      test/e2e/network/dns.go:248
    STEP: Creating a test headless service 01/30/23 09:27:41.484
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9086.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9086.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
     01/30/23 09:27:41.491
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9086.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9086.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
     01/30/23 09:27:41.491
    STEP: creating a pod to probe DNS 01/30/23 09:27:41.491
    STEP: submitting the pod to kubernetes 01/30/23 09:27:41.491
    Jan 30 09:27:41.501: INFO: Waiting up to 15m0s for pod "dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4" in namespace "dns-9086" to be "running"
    Jan 30 09:27:41.503: INFO: Pod "dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4": Phase="Pending", Reason="", readiness=false. Elapsed: 1.983263ms
    Jan 30 09:27:43.505: INFO: Pod "dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4": Phase="Running", Reason="", readiness=true. Elapsed: 2.004667795s
    Jan 30 09:27:43.505: INFO: Pod "dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4" satisfied condition "running"
    STEP: retrieving the pod 01/30/23 09:27:43.505
    STEP: looking for the results for each expected name from probers 01/30/23 09:27:43.507
    Jan 30 09:27:43.519: INFO: DNS probes using dns-9086/dns-test-77f91199-f6b0-49b5-b1fc-244af58af6d4 succeeded

    STEP: deleting the pod 01/30/23 09:27:43.519
    STEP: deleting the test headless service 01/30/23 09:27:43.531
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:27:43.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-9086" for this suite. 01/30/23 09:27:43.543
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:27:43.55
Jan 30 09:27:43.550: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename endpointslice 01/30/23 09:27:43.551
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:43.56
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:43.562
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
STEP: getting /apis 01/30/23 09:27:43.564
STEP: getting /apis/discovery.k8s.io 01/30/23 09:27:43.567
STEP: getting /apis/discovery.k8s.iov1 01/30/23 09:27:43.569
STEP: creating 01/30/23 09:27:43.57
STEP: getting 01/30/23 09:27:43.583
STEP: listing 01/30/23 09:27:43.585
STEP: watching 01/30/23 09:27:43.587
Jan 30 09:27:43.587: INFO: starting watch
STEP: cluster-wide listing 01/30/23 09:27:43.588
STEP: cluster-wide watching 01/30/23 09:27:43.592
Jan 30 09:27:43.593: INFO: starting watch
STEP: patching 01/30/23 09:27:43.594
STEP: updating 01/30/23 09:27:43.6
Jan 30 09:27:43.608: INFO: waiting for watch events with expected annotations
Jan 30 09:27:43.608: INFO: saw patched and updated annotations
STEP: deleting 01/30/23 09:27:43.608
STEP: deleting a collection 01/30/23 09:27:43.616
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Jan 30 09:27:43.627: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-2872" for this suite. 01/30/23 09:27:43.63
------------------------------
â€¢ [0.085 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:27:43.55
    Jan 30 09:27:43.550: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename endpointslice 01/30/23 09:27:43.551
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:43.56
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:43.562
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should support creating EndpointSlice API operations [Conformance]
      test/e2e/network/endpointslice.go:353
    STEP: getting /apis 01/30/23 09:27:43.564
    STEP: getting /apis/discovery.k8s.io 01/30/23 09:27:43.567
    STEP: getting /apis/discovery.k8s.iov1 01/30/23 09:27:43.569
    STEP: creating 01/30/23 09:27:43.57
    STEP: getting 01/30/23 09:27:43.583
    STEP: listing 01/30/23 09:27:43.585
    STEP: watching 01/30/23 09:27:43.587
    Jan 30 09:27:43.587: INFO: starting watch
    STEP: cluster-wide listing 01/30/23 09:27:43.588
    STEP: cluster-wide watching 01/30/23 09:27:43.592
    Jan 30 09:27:43.593: INFO: starting watch
    STEP: patching 01/30/23 09:27:43.594
    STEP: updating 01/30/23 09:27:43.6
    Jan 30 09:27:43.608: INFO: waiting for watch events with expected annotations
    Jan 30 09:27:43.608: INFO: saw patched and updated annotations
    STEP: deleting 01/30/23 09:27:43.608
    STEP: deleting a collection 01/30/23 09:27:43.616
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:27:43.627: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-2872" for this suite. 01/30/23 09:27:43.63
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:27:43.636
Jan 30 09:27:43.636: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename cronjob 01/30/23 09:27:43.637
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:43.65
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:43.652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
STEP: Creating a ForbidConcurrent cronjob 01/30/23 09:27:43.654
STEP: Ensuring a job is scheduled 01/30/23 09:27:43.661
STEP: Ensuring exactly one is scheduled 01/30/23 09:28:01.663
STEP: Ensuring exactly one running job exists by listing jobs explicitly 01/30/23 09:28:01.665
STEP: Ensuring no more jobs are scheduled 01/30/23 09:28:01.667
STEP: Removing cronjob 01/30/23 09:33:01.671
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:01.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-1184" for this suite. 01/30/23 09:33:01.678
------------------------------
â€¢ [SLOW TEST] [318.047 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:27:43.636
    Jan 30 09:27:43.636: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename cronjob 01/30/23 09:27:43.637
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:27:43.65
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:27:43.652
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
      test/e2e/apps/cronjob.go:124
    STEP: Creating a ForbidConcurrent cronjob 01/30/23 09:27:43.654
    STEP: Ensuring a job is scheduled 01/30/23 09:27:43.661
    STEP: Ensuring exactly one is scheduled 01/30/23 09:28:01.663
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 01/30/23 09:28:01.665
    STEP: Ensuring no more jobs are scheduled 01/30/23 09:28:01.667
    STEP: Removing cronjob 01/30/23 09:33:01.671
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:01.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-1184" for this suite. 01/30/23 09:33:01.678
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:01.685
Jan 30 09:33:01.685: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename var-expansion 01/30/23 09:33:01.686
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:01.697
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:01.7
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
Jan 30 09:33:01.710: INFO: Waiting up to 2m0s for pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7" in namespace "var-expansion-8096" to be "container 0 failed with reason CreateContainerConfigError"
Jan 30 09:33:01.712: INFO: Pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.442886ms
Jan 30 09:33:03.715: INFO: Pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005156435s
Jan 30 09:33:03.715: INFO: Pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Jan 30 09:33:03.715: INFO: Deleting pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7" in namespace "var-expansion-8096"
Jan 30 09:33:03.722: INFO: Wait up to 5m0s for pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:05.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-8096" for this suite. 01/30/23 09:33:05.732
------------------------------
â€¢ [4.051 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:01.685
    Jan 30 09:33:01.685: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename var-expansion 01/30/23 09:33:01.686
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:01.697
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:01.7
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
      test/e2e/common/node/expansion.go:152
    Jan 30 09:33:01.710: INFO: Waiting up to 2m0s for pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7" in namespace "var-expansion-8096" to be "container 0 failed with reason CreateContainerConfigError"
    Jan 30 09:33:01.712: INFO: Pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.442886ms
    Jan 30 09:33:03.715: INFO: Pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005156435s
    Jan 30 09:33:03.715: INFO: Pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Jan 30 09:33:03.715: INFO: Deleting pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7" in namespace "var-expansion-8096"
    Jan 30 09:33:03.722: INFO: Wait up to 5m0s for pod "var-expansion-c93b441d-20a6-436e-b550-c63cba0727b7" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:05.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-8096" for this suite. 01/30/23 09:33:05.732
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:05.736
Jan 30 09:33:05.736: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename security-context-test 01/30/23 09:33:05.737
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:05.748
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:05.75
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
Jan 30 09:33:05.758: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee" in namespace "security-context-test-1436" to be "Succeeded or Failed"
Jan 30 09:33:05.760: INFO: Pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee": Phase="Pending", Reason="", readiness=false. Elapsed: 1.730338ms
Jan 30 09:33:07.763: INFO: Pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004816097s
Jan 30 09:33:09.762: INFO: Pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.003933918s
Jan 30 09:33:09.762: INFO: Pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:09.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-1436" for this suite. 01/30/23 09:33:09.764
------------------------------
â€¢ [4.035 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:430
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:486

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:05.736
    Jan 30 09:33:05.736: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename security-context-test 01/30/23 09:33:05.737
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:05.748
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:05.75
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:486
    Jan 30 09:33:05.758: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee" in namespace "security-context-test-1436" to be "Succeeded or Failed"
    Jan 30 09:33:05.760: INFO: Pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee": Phase="Pending", Reason="", readiness=false. Elapsed: 1.730338ms
    Jan 30 09:33:07.763: INFO: Pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004816097s
    Jan 30 09:33:09.762: INFO: Pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.003933918s
    Jan 30 09:33:09.762: INFO: Pod "busybox-readonly-false-45e8fe54-7706-4e1b-8b4a-f1e9aad315ee" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:09.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-1436" for this suite. 01/30/23 09:33:09.764
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:09.771
Jan 30 09:33:09.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename emptydir 01/30/23 09:33:09.772
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:09.782
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:09.784
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
STEP: Creating a pod to test emptydir 0666 on tmpfs 01/30/23 09:33:09.789
Jan 30 09:33:09.797: INFO: Waiting up to 5m0s for pod "pod-55c244be-3599-4775-8228-bddd90183107" in namespace "emptydir-9886" to be "Succeeded or Failed"
Jan 30 09:33:09.799: INFO: Pod "pod-55c244be-3599-4775-8228-bddd90183107": Phase="Pending", Reason="", readiness=false. Elapsed: 2.914745ms
Jan 30 09:33:11.803: INFO: Pod "pod-55c244be-3599-4775-8228-bddd90183107": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005986962s
Jan 30 09:33:13.802: INFO: Pod "pod-55c244be-3599-4775-8228-bddd90183107": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005916777s
STEP: Saw pod success 01/30/23 09:33:13.803
Jan 30 09:33:13.803: INFO: Pod "pod-55c244be-3599-4775-8228-bddd90183107" satisfied condition "Succeeded or Failed"
Jan 30 09:33:13.804: INFO: Trying to get logs from node tce-worker2 pod pod-55c244be-3599-4775-8228-bddd90183107 container test-container: <nil>
STEP: delete the pod 01/30/23 09:33:13.813
Jan 30 09:33:13.822: INFO: Waiting for pod pod-55c244be-3599-4775-8228-bddd90183107 to disappear
Jan 30 09:33:13.824: INFO: Pod pod-55c244be-3599-4775-8228-bddd90183107 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:13.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9886" for this suite. 01/30/23 09:33:13.827
------------------------------
â€¢ [4.060 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:09.771
    Jan 30 09:33:09.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename emptydir 01/30/23 09:33:09.772
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:09.782
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:09.784
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:107
    STEP: Creating a pod to test emptydir 0666 on tmpfs 01/30/23 09:33:09.789
    Jan 30 09:33:09.797: INFO: Waiting up to 5m0s for pod "pod-55c244be-3599-4775-8228-bddd90183107" in namespace "emptydir-9886" to be "Succeeded or Failed"
    Jan 30 09:33:09.799: INFO: Pod "pod-55c244be-3599-4775-8228-bddd90183107": Phase="Pending", Reason="", readiness=false. Elapsed: 2.914745ms
    Jan 30 09:33:11.803: INFO: Pod "pod-55c244be-3599-4775-8228-bddd90183107": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005986962s
    Jan 30 09:33:13.802: INFO: Pod "pod-55c244be-3599-4775-8228-bddd90183107": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005916777s
    STEP: Saw pod success 01/30/23 09:33:13.803
    Jan 30 09:33:13.803: INFO: Pod "pod-55c244be-3599-4775-8228-bddd90183107" satisfied condition "Succeeded or Failed"
    Jan 30 09:33:13.804: INFO: Trying to get logs from node tce-worker2 pod pod-55c244be-3599-4775-8228-bddd90183107 container test-container: <nil>
    STEP: delete the pod 01/30/23 09:33:13.813
    Jan 30 09:33:13.822: INFO: Waiting for pod pod-55c244be-3599-4775-8228-bddd90183107 to disappear
    Jan 30 09:33:13.824: INFO: Pod pod-55c244be-3599-4775-8228-bddd90183107 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:13.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9886" for this suite. 01/30/23 09:33:13.827
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:13.832
Jan 30 09:33:13.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 09:33:13.834
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:13.845
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:13.848
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
STEP: Counting existing ResourceQuota 01/30/23 09:33:13.85
STEP: Creating a ResourceQuota 01/30/23 09:33:18.853
STEP: Ensuring resource quota status is calculated 01/30/23 09:33:18.857
STEP: Creating a ReplicaSet 01/30/23 09:33:20.86
STEP: Ensuring resource quota status captures replicaset creation 01/30/23 09:33:20.869
STEP: Deleting a ReplicaSet 01/30/23 09:33:22.872
STEP: Ensuring resource quota status released usage 01/30/23 09:33:22.877
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:24.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8049" for this suite. 01/30/23 09:33:24.883
------------------------------
â€¢ [SLOW TEST] [11.056 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:13.832
    Jan 30 09:33:13.833: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 09:33:13.834
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:13.845
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:13.848
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
      test/e2e/apimachinery/resource_quota.go:448
    STEP: Counting existing ResourceQuota 01/30/23 09:33:13.85
    STEP: Creating a ResourceQuota 01/30/23 09:33:18.853
    STEP: Ensuring resource quota status is calculated 01/30/23 09:33:18.857
    STEP: Creating a ReplicaSet 01/30/23 09:33:20.86
    STEP: Ensuring resource quota status captures replicaset creation 01/30/23 09:33:20.869
    STEP: Deleting a ReplicaSet 01/30/23 09:33:22.872
    STEP: Ensuring resource quota status released usage 01/30/23 09:33:22.877
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:24.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8049" for this suite. 01/30/23 09:33:24.883
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] Pods
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:24.889
Jan 30 09:33:24.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 09:33:24.889
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:24.9
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:24.902
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
Jan 30 09:33:24.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: creating the pod 01/30/23 09:33:24.904
STEP: submitting the pod to kubernetes 01/30/23 09:33:24.904
Jan 30 09:33:24.910: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d" in namespace "pods-7525" to be "running and ready"
Jan 30 09:33:24.911: INFO: Pod "pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d": Phase="Pending", Reason="", readiness=false. Elapsed: 1.658711ms
Jan 30 09:33:24.911: INFO: The phase of Pod pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:33:26.914: INFO: Pod "pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d": Phase="Running", Reason="", readiness=true. Elapsed: 2.004749779s
Jan 30 09:33:26.914: INFO: The phase of Pod pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d is Running (Ready = true)
Jan 30 09:33:26.914: INFO: Pod "pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:27.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-7525" for this suite. 01/30/23 09:33:27.028
------------------------------
â€¢ [2.155 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:24.889
    Jan 30 09:33:24.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 09:33:24.889
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:24.9
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:24.902
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support remote command execution over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:536
    Jan 30 09:33:24.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: creating the pod 01/30/23 09:33:24.904
    STEP: submitting the pod to kubernetes 01/30/23 09:33:24.904
    Jan 30 09:33:24.910: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d" in namespace "pods-7525" to be "running and ready"
    Jan 30 09:33:24.911: INFO: Pod "pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d": Phase="Pending", Reason="", readiness=false. Elapsed: 1.658711ms
    Jan 30 09:33:24.911: INFO: The phase of Pod pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:33:26.914: INFO: Pod "pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d": Phase="Running", Reason="", readiness=true. Elapsed: 2.004749779s
    Jan 30 09:33:26.914: INFO: The phase of Pod pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d is Running (Ready = true)
    Jan 30 09:33:26.914: INFO: Pod "pod-exec-websocket-1847d1bd-7b65-422e-9a39-d07677b0e35d" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:27.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-7525" for this suite. 01/30/23 09:33:27.028
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:27.044
Jan 30 09:33:27.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 09:33:27.044
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:27.055
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:27.056
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:33:27.058
Jan 30 09:33:27.067: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db" in namespace "downward-api-9424" to be "Succeeded or Failed"
Jan 30 09:33:27.069: INFO: Pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.151348ms
Jan 30 09:33:29.072: INFO: Pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005511997s
Jan 30 09:33:31.072: INFO: Pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005248076s
STEP: Saw pod success 01/30/23 09:33:31.072
Jan 30 09:33:31.072: INFO: Pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db" satisfied condition "Succeeded or Failed"
Jan 30 09:33:31.074: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db container client-container: <nil>
STEP: delete the pod 01/30/23 09:33:31.077
Jan 30 09:33:31.085: INFO: Waiting for pod downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db to disappear
Jan 30 09:33:31.087: INFO: Pod downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:31.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9424" for this suite. 01/30/23 09:33:31.09
------------------------------
â€¢ [4.052 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:27.044
    Jan 30 09:33:27.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 09:33:27.044
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:27.055
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:27.056
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:235
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:33:27.058
    Jan 30 09:33:27.067: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db" in namespace "downward-api-9424" to be "Succeeded or Failed"
    Jan 30 09:33:27.069: INFO: Pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.151348ms
    Jan 30 09:33:29.072: INFO: Pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005511997s
    Jan 30 09:33:31.072: INFO: Pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005248076s
    STEP: Saw pod success 01/30/23 09:33:31.072
    Jan 30 09:33:31.072: INFO: Pod "downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db" satisfied condition "Succeeded or Failed"
    Jan 30 09:33:31.074: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db container client-container: <nil>
    STEP: delete the pod 01/30/23 09:33:31.077
    Jan 30 09:33:31.085: INFO: Waiting for pod downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db to disappear
    Jan 30 09:33:31.087: INFO: Pod downwardapi-volume-6b54b563-8d0e-482f-8c7e-afb76fe7b3db no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:31.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9424" for this suite. 01/30/23 09:33:31.09
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:31.096
Jan 30 09:33:31.096: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:33:31.098
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:31.11
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:31.113
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 01/30/23 09:33:31.115
Jan 30 09:33:31.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 01/30/23 09:33:37.096
Jan 30 09:33:37.097: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
Jan 30 09:33:38.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:43.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-2656" for this suite. 01/30/23 09:33:43.859
------------------------------
â€¢ [SLOW TEST] [12.784 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:31.096
    Jan 30 09:33:31.096: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename crd-publish-openapi 01/30/23 09:33:31.098
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:31.11
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:31.113
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group but different versions [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:309
    STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 01/30/23 09:33:31.115
    Jan 30 09:33:31.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 01/30/23 09:33:37.096
    Jan 30 09:33:37.097: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    Jan 30 09:33:38.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:43.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-2656" for this suite. 01/30/23 09:33:43.859
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:43.881
Jan 30 09:33:43.881: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename security-context-test 01/30/23 09:33:43.882
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:43.894
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:43.897
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
Jan 30 09:33:43.909: INFO: Waiting up to 5m0s for pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f" in namespace "security-context-test-7747" to be "Succeeded or Failed"
Jan 30 09:33:43.912: INFO: Pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.712372ms
Jan 30 09:33:45.916: INFO: Pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006922807s
Jan 30 09:33:47.915: INFO: Pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006233855s
Jan 30 09:33:47.915: INFO: Pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:47.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-7747" for this suite. 01/30/23 09:33:47.918
------------------------------
â€¢ [4.051 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:309
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:43.881
    Jan 30 09:33:43.881: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename security-context-test 01/30/23 09:33:43.882
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:43.894
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:43.897
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:347
    Jan 30 09:33:43.909: INFO: Waiting up to 5m0s for pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f" in namespace "security-context-test-7747" to be "Succeeded or Failed"
    Jan 30 09:33:43.912: INFO: Pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.712372ms
    Jan 30 09:33:45.916: INFO: Pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006922807s
    Jan 30 09:33:47.915: INFO: Pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006233855s
    Jan 30 09:33:47.915: INFO: Pod "busybox-user-65534-03b76f34-dacc-4445-80fe-ef79ff52962f" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:47.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-7747" for this suite. 01/30/23 09:33:47.918
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Pods
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:47.932
Jan 30 09:33:47.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 09:33:47.933
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:47.943
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:47.946
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
Jan 30 09:33:47.954: INFO: Waiting up to 5m0s for pod "server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a" in namespace "pods-3260" to be "running and ready"
Jan 30 09:33:47.957: INFO: Pod "server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.463497ms
Jan 30 09:33:47.957: INFO: The phase of Pod server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:33:49.960: INFO: Pod "server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a": Phase="Running", Reason="", readiness=true. Elapsed: 2.005741847s
Jan 30 09:33:49.960: INFO: The phase of Pod server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a is Running (Ready = true)
Jan 30 09:33:49.960: INFO: Pod "server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a" satisfied condition "running and ready"
Jan 30 09:33:49.976: INFO: Waiting up to 5m0s for pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9" in namespace "pods-3260" to be "Succeeded or Failed"
Jan 30 09:33:49.983: INFO: Pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9": Phase="Pending", Reason="", readiness=false. Elapsed: 7.308787ms
Jan 30 09:33:51.986: INFO: Pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01076289s
Jan 30 09:33:53.987: INFO: Pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01095622s
STEP: Saw pod success 01/30/23 09:33:53.987
Jan 30 09:33:53.987: INFO: Pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9" satisfied condition "Succeeded or Failed"
Jan 30 09:33:53.989: INFO: Trying to get logs from node tce-worker2 pod client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9 container env3cont: <nil>
STEP: delete the pod 01/30/23 09:33:53.992
Jan 30 09:33:54.001: INFO: Waiting for pod client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9 to disappear
Jan 30 09:33:54.002: INFO: Pod client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:54.003: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3260" for this suite. 01/30/23 09:33:54.005
------------------------------
â€¢ [SLOW TEST] [6.078 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:47.932
    Jan 30 09:33:47.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 09:33:47.933
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:47.943
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:47.946
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should contain environment variables for services [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:444
    Jan 30 09:33:47.954: INFO: Waiting up to 5m0s for pod "server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a" in namespace "pods-3260" to be "running and ready"
    Jan 30 09:33:47.957: INFO: Pod "server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.463497ms
    Jan 30 09:33:47.957: INFO: The phase of Pod server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:33:49.960: INFO: Pod "server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a": Phase="Running", Reason="", readiness=true. Elapsed: 2.005741847s
    Jan 30 09:33:49.960: INFO: The phase of Pod server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a is Running (Ready = true)
    Jan 30 09:33:49.960: INFO: Pod "server-envvars-69dc996e-5009-4adf-9abe-6fb203f9ab3a" satisfied condition "running and ready"
    Jan 30 09:33:49.976: INFO: Waiting up to 5m0s for pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9" in namespace "pods-3260" to be "Succeeded or Failed"
    Jan 30 09:33:49.983: INFO: Pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9": Phase="Pending", Reason="", readiness=false. Elapsed: 7.308787ms
    Jan 30 09:33:51.986: INFO: Pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01076289s
    Jan 30 09:33:53.987: INFO: Pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01095622s
    STEP: Saw pod success 01/30/23 09:33:53.987
    Jan 30 09:33:53.987: INFO: Pod "client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9" satisfied condition "Succeeded or Failed"
    Jan 30 09:33:53.989: INFO: Trying to get logs from node tce-worker2 pod client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9 container env3cont: <nil>
    STEP: delete the pod 01/30/23 09:33:53.992
    Jan 30 09:33:54.001: INFO: Waiting for pod client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9 to disappear
    Jan 30 09:33:54.002: INFO: Pod client-envvars-65352803-b43a-42c5-b0f6-5d908cb7ced9 no longer exists
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:54.003: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3260" for this suite. 01/30/23 09:33:54.005
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:54.011
Jan 30 09:33:54.011: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 09:33:54.013
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:54.023
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:54.025
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
STEP: Starting the proxy 01/30/23 09:33:54.027
Jan 30 09:33:54.029: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-5109 proxy --unix-socket=/tmp/kubectl-proxy-unix4023925525/test'
STEP: retrieving proxy /api/ output 01/30/23 09:33:54.075
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:54.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5109" for this suite. 01/30/23 09:33:54.079
------------------------------
â€¢ [0.092 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support --unix-socket=/path  [Conformance]
    test/e2e/kubectl/kubectl.go:1812

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:54.011
    Jan 30 09:33:54.011: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 09:33:54.013
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:54.023
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:54.025
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support --unix-socket=/path  [Conformance]
      test/e2e/kubectl/kubectl.go:1812
    STEP: Starting the proxy 01/30/23 09:33:54.027
    Jan 30 09:33:54.029: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-5109 proxy --unix-socket=/tmp/kubectl-proxy-unix4023925525/test'
    STEP: retrieving proxy /api/ output 01/30/23 09:33:54.075
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:54.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5109" for this suite. 01/30/23 09:33:54.079
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:54.103
Jan 30 09:33:54.103: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 09:33:54.104
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:54.114
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:54.117
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
Jan 30 09:33:54.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 create -f -'
Jan 30 09:33:54.591: INFO: stderr: ""
Jan 30 09:33:54.591: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Jan 30 09:33:54.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 create -f -'
Jan 30 09:33:54.756: INFO: stderr: ""
Jan 30 09:33:54.756: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 01/30/23 09:33:54.756
Jan 30 09:33:55.760: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 09:33:55.760: INFO: Found 1 / 1
Jan 30 09:33:55.760: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 30 09:33:55.762: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 09:33:55.762: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 30 09:33:55.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe pod agnhost-primary-ks8tq'
Jan 30 09:33:55.829: INFO: stderr: ""
Jan 30 09:33:55.829: INFO: stdout: "Name:             agnhost-primary-ks8tq\nNamespace:        kubectl-9494\nPriority:         0\nService Account:  default\nNode:             tce-worker2/172.20.0.4\nStart Time:       Mon, 30 Jan 2023 09:33:54 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.214\nIPs:\n  IP:           10.244.1.214\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://deebd7cf4b894c42531470c1948571284b655bd282159e2d93c3d1ca75c5377b\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 30 Jan 2023 09:33:55 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-89249 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-89249:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-9494/agnhost-primary-ks8tq to tce-worker2\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
Jan 30 09:33:55.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe rc agnhost-primary'
Jan 30 09:33:55.906: INFO: stderr: ""
Jan 30 09:33:55.906: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9494\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-ks8tq\n"
Jan 30 09:33:55.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe service agnhost-primary'
Jan 30 09:33:55.973: INFO: stderr: ""
Jan 30 09:33:55.973: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9494\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.96.66.219\nIPs:               10.96.66.219\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.214:6379\nSession Affinity:  None\nEvents:            <none>\n"
Jan 30 09:33:55.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe node tce-control-plane'
Jan 30 09:33:56.053: INFO: stderr: ""
Jan 30 09:33:56.053: INFO: stdout: "Name:               tce-control-plane\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=tce-control-plane\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"76:61:80:1c:eb:76\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.20.0.3\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 30 Jan 2023 08:07:43 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  tce-control-plane\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 30 Jan 2023 09:33:48 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 30 Jan 2023 08:08:16 +0000   Mon, 30 Jan 2023 08:08:16 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Mon, 30 Jan 2023 09:31:30 +0000   Mon, 30 Jan 2023 08:07:40 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 30 Jan 2023 09:31:30 +0000   Mon, 30 Jan 2023 08:07:40 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 30 Jan 2023 09:31:30 +0000   Mon, 30 Jan 2023 08:07:40 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 30 Jan 2023 09:31:30 +0000   Mon, 30 Jan 2023 08:08:14 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.20.0.3\n  Hostname:    tce-control-plane\nCapacity:\n  cpu:                8\n  ephemeral-storage:  263112772Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7968784Ki\n  pods:               110\nAllocatable:\n  cpu:                8\n  ephemeral-storage:  263112772Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7968784Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 b0cbf29c62fb4d8683687dac9a592252\n  System UUID:                b0cbf29c62fb4d8683687dac9a592252\n  Boot ID:                    071097fb-def2-4c98-853b-8a9cd5bd9562\n  Kernel Version:             5.15.83.1-microsoft-standard-WSL2+\n  OS Image:                   Ubuntu 22.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.12\n  Kubelet Version:            v1.26.0\n  Kube-Proxy Version:         v1.26.0\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nProviderID:                   kind://docker/tce/tce-control-plane\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-flannel                kube-flannel-ds-gj76s                                      100m (1%)     100m (1%)   50Mi (0%)        50Mi (0%)      85m\n  kube-system                 coredns-787d4945fb-9jj5g                                   100m (1%)     0 (0%)      70Mi (0%)        170Mi (2%)     33m\n  kube-system                 etcd-tce-control-plane                                     100m (1%)     0 (0%)      100Mi (1%)       0 (0%)         86m\n  kube-system                 kube-apiserver-tce-control-plane                           250m (3%)     0 (0%)      0 (0%)           0 (0%)         86m\n  kube-system                 kube-controller-manager-tce-control-plane                  200m (2%)     0 (0%)      0 (0%)           0 (0%)         86m\n  kube-system                 kube-proxy-shq8n                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         85m\n  kube-system                 kube-scheduler-tce-control-plane                           100m (1%)     0 (0%)      0 (0%)           0 (0%)         86m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-vts5m    0 (0%)        0 (0%)      0 (0%)           0 (0%)         82m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (10%)  100m (1%)\n  memory             220Mi (2%)  220Mi (2%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
Jan 30 09:33:56.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe namespace kubectl-9494'
Jan 30 09:33:56.121: INFO: stderr: ""
Jan 30 09:33:56.121: INFO: stdout: "Name:         kubectl-9494\nLabels:       e2e-framework=kubectl\n              e2e-run=b6f505ae-8bd7-4dec-ae19-dd37380037d5\n              kubernetes.io/metadata.name=kubectl-9494\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 09:33:56.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9494" for this suite. 01/30/23 09:33:56.124
------------------------------
â€¢ [2.026 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl describe
  test/e2e/kubectl/kubectl.go:1270
    should check if kubectl describe prints relevant information for rc and pods  [Conformance]
    test/e2e/kubectl/kubectl.go:1276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:54.103
    Jan 30 09:33:54.103: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 09:33:54.104
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:54.114
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:54.117
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
      test/e2e/kubectl/kubectl.go:1276
    Jan 30 09:33:54.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 create -f -'
    Jan 30 09:33:54.591: INFO: stderr: ""
    Jan 30 09:33:54.591: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    Jan 30 09:33:54.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 create -f -'
    Jan 30 09:33:54.756: INFO: stderr: ""
    Jan 30 09:33:54.756: INFO: stdout: "service/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 01/30/23 09:33:54.756
    Jan 30 09:33:55.760: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 30 09:33:55.760: INFO: Found 1 / 1
    Jan 30 09:33:55.760: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Jan 30 09:33:55.762: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 30 09:33:55.762: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Jan 30 09:33:55.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe pod agnhost-primary-ks8tq'
    Jan 30 09:33:55.829: INFO: stderr: ""
    Jan 30 09:33:55.829: INFO: stdout: "Name:             agnhost-primary-ks8tq\nNamespace:        kubectl-9494\nPriority:         0\nService Account:  default\nNode:             tce-worker2/172.20.0.4\nStart Time:       Mon, 30 Jan 2023 09:33:54 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.214\nIPs:\n  IP:           10.244.1.214\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://deebd7cf4b894c42531470c1948571284b655bd282159e2d93c3d1ca75c5377b\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 30 Jan 2023 09:33:55 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-89249 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-89249:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-9494/agnhost-primary-ks8tq to tce-worker2\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
    Jan 30 09:33:55.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe rc agnhost-primary'
    Jan 30 09:33:55.906: INFO: stderr: ""
    Jan 30 09:33:55.906: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9494\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-ks8tq\n"
    Jan 30 09:33:55.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe service agnhost-primary'
    Jan 30 09:33:55.973: INFO: stderr: ""
    Jan 30 09:33:55.973: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9494\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.96.66.219\nIPs:               10.96.66.219\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.214:6379\nSession Affinity:  None\nEvents:            <none>\n"
    Jan 30 09:33:55.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe node tce-control-plane'
    Jan 30 09:33:56.053: INFO: stderr: ""
    Jan 30 09:33:56.053: INFO: stdout: "Name:               tce-control-plane\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=tce-control-plane\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"76:61:80:1c:eb:76\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.20.0.3\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 30 Jan 2023 08:07:43 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  tce-control-plane\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 30 Jan 2023 09:33:48 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 30 Jan 2023 08:08:16 +0000   Mon, 30 Jan 2023 08:08:16 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Mon, 30 Jan 2023 09:31:30 +0000   Mon, 30 Jan 2023 08:07:40 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 30 Jan 2023 09:31:30 +0000   Mon, 30 Jan 2023 08:07:40 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 30 Jan 2023 09:31:30 +0000   Mon, 30 Jan 2023 08:07:40 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 30 Jan 2023 09:31:30 +0000   Mon, 30 Jan 2023 08:08:14 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.20.0.3\n  Hostname:    tce-control-plane\nCapacity:\n  cpu:                8\n  ephemeral-storage:  263112772Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7968784Ki\n  pods:               110\nAllocatable:\n  cpu:                8\n  ephemeral-storage:  263112772Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7968784Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 b0cbf29c62fb4d8683687dac9a592252\n  System UUID:                b0cbf29c62fb4d8683687dac9a592252\n  Boot ID:                    071097fb-def2-4c98-853b-8a9cd5bd9562\n  Kernel Version:             5.15.83.1-microsoft-standard-WSL2+\n  OS Image:                   Ubuntu 22.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.12\n  Kubelet Version:            v1.26.0\n  Kube-Proxy Version:         v1.26.0\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nProviderID:                   kind://docker/tce/tce-control-plane\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-flannel                kube-flannel-ds-gj76s                                      100m (1%)     100m (1%)   50Mi (0%)        50Mi (0%)      85m\n  kube-system                 coredns-787d4945fb-9jj5g                                   100m (1%)     0 (0%)      70Mi (0%)        170Mi (2%)     33m\n  kube-system                 etcd-tce-control-plane                                     100m (1%)     0 (0%)      100Mi (1%)       0 (0%)         86m\n  kube-system                 kube-apiserver-tce-control-plane                           250m (3%)     0 (0%)      0 (0%)           0 (0%)         86m\n  kube-system                 kube-controller-manager-tce-control-plane                  200m (2%)     0 (0%)      0 (0%)           0 (0%)         86m\n  kube-system                 kube-proxy-shq8n                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         85m\n  kube-system                 kube-scheduler-tce-control-plane                           100m (1%)     0 (0%)      0 (0%)           0 (0%)         86m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-cfcbbee1dcee4095-vts5m    0 (0%)        0 (0%)      0 (0%)           0 (0%)         82m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (10%)  100m (1%)\n  memory             220Mi (2%)  220Mi (2%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
    Jan 30 09:33:56.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9494 describe namespace kubectl-9494'
    Jan 30 09:33:56.121: INFO: stderr: ""
    Jan 30 09:33:56.121: INFO: stdout: "Name:         kubectl-9494\nLabels:       e2e-framework=kubectl\n              e2e-run=b6f505ae-8bd7-4dec-ae19-dd37380037d5\n              kubernetes.io/metadata.name=kubectl-9494\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:33:56.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9494" for this suite. 01/30/23 09:33:56.124
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Downward API
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:33:56.129
Jan 30 09:33:56.129: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename downward-api 01/30/23 09:33:56.13
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:56.142
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:56.144
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
STEP: Creating a pod to test downward api env vars 01/30/23 09:33:56.147
Jan 30 09:33:56.154: INFO: Waiting up to 5m0s for pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb" in namespace "downward-api-2347" to be "Succeeded or Failed"
Jan 30 09:33:56.158: INFO: Pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.244867ms
Jan 30 09:33:58.162: INFO: Pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008310531s
Jan 30 09:34:00.162: INFO: Pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007970594s
STEP: Saw pod success 01/30/23 09:34:00.162
Jan 30 09:34:00.162: INFO: Pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb" satisfied condition "Succeeded or Failed"
Jan 30 09:34:00.164: INFO: Trying to get logs from node tce-worker2 pod downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb container dapi-container: <nil>
STEP: delete the pod 01/30/23 09:34:00.168
Jan 30 09:34:00.186: INFO: Waiting for pod downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb to disappear
Jan 30 09:34:00.188: INFO: Pod downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:00.188: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-2347" for this suite. 01/30/23 09:34:00.19
------------------------------
â€¢ [4.069 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:33:56.129
    Jan 30 09:33:56.129: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename downward-api 01/30/23 09:33:56.13
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:33:56.142
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:33:56.144
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:217
    STEP: Creating a pod to test downward api env vars 01/30/23 09:33:56.147
    Jan 30 09:33:56.154: INFO: Waiting up to 5m0s for pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb" in namespace "downward-api-2347" to be "Succeeded or Failed"
    Jan 30 09:33:56.158: INFO: Pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.244867ms
    Jan 30 09:33:58.162: INFO: Pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008310531s
    Jan 30 09:34:00.162: INFO: Pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.007970594s
    STEP: Saw pod success 01/30/23 09:34:00.162
    Jan 30 09:34:00.162: INFO: Pod "downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb" satisfied condition "Succeeded or Failed"
    Jan 30 09:34:00.164: INFO: Trying to get logs from node tce-worker2 pod downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb container dapi-container: <nil>
    STEP: delete the pod 01/30/23 09:34:00.168
    Jan 30 09:34:00.186: INFO: Waiting for pod downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb to disappear
    Jan 30 09:34:00.188: INFO: Pod downward-api-9692802e-b06b-41d5-a6af-9117f547a4fb no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:00.188: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-2347" for this suite. 01/30/23 09:34:00.19
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions
  should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:00.198
Jan 30 09:34:00.198: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 09:34:00.199
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:00.212
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:00.214
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
STEP: validating api versions 01/30/23 09:34:00.216
Jan 30 09:34:00.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9469 api-versions'
Jan 30 09:34:00.291: INFO: stderr: ""
Jan 30 09:34:00.291: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:00.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9469" for this suite. 01/30/23 09:34:00.295
------------------------------
â€¢ [0.104 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl api-versions
  test/e2e/kubectl/kubectl.go:818
    should check if v1 is in available api versions  [Conformance]
    test/e2e/kubectl/kubectl.go:824

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:00.198
    Jan 30 09:34:00.198: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 09:34:00.199
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:00.212
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:00.214
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if v1 is in available api versions  [Conformance]
      test/e2e/kubectl/kubectl.go:824
    STEP: validating api versions 01/30/23 09:34:00.216
    Jan 30 09:34:00.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-9469 api-versions'
    Jan 30 09:34:00.291: INFO: stderr: ""
    Jan 30 09:34:00.291: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:00.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9469" for this suite. 01/30/23 09:34:00.295
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:00.304
Jan 30 09:34:00.305: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:34:00.307
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:00.334
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:00.338
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
STEP: Creating a pod to test downward API volume plugin 01/30/23 09:34:00.341
Jan 30 09:34:00.351: INFO: Waiting up to 5m0s for pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40" in namespace "projected-5580" to be "Succeeded or Failed"
Jan 30 09:34:00.354: INFO: Pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40": Phase="Pending", Reason="", readiness=false. Elapsed: 2.797045ms
Jan 30 09:34:02.356: INFO: Pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005362935s
Jan 30 09:34:04.356: INFO: Pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005090244s
STEP: Saw pod success 01/30/23 09:34:04.356
Jan 30 09:34:04.356: INFO: Pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40" satisfied condition "Succeeded or Failed"
Jan 30 09:34:04.358: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40 container client-container: <nil>
STEP: delete the pod 01/30/23 09:34:04.362
Jan 30 09:34:04.383: INFO: Waiting for pod downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40 to disappear
Jan 30 09:34:04.385: INFO: Pod downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:04.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5580" for this suite. 01/30/23 09:34:04.388
------------------------------
â€¢ [4.089 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:00.304
    Jan 30 09:34:00.305: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:34:00.307
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:00.334
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:00.338
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:207
    STEP: Creating a pod to test downward API volume plugin 01/30/23 09:34:00.341
    Jan 30 09:34:00.351: INFO: Waiting up to 5m0s for pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40" in namespace "projected-5580" to be "Succeeded or Failed"
    Jan 30 09:34:00.354: INFO: Pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40": Phase="Pending", Reason="", readiness=false. Elapsed: 2.797045ms
    Jan 30 09:34:02.356: INFO: Pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005362935s
    Jan 30 09:34:04.356: INFO: Pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005090244s
    STEP: Saw pod success 01/30/23 09:34:04.356
    Jan 30 09:34:04.356: INFO: Pod "downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40" satisfied condition "Succeeded or Failed"
    Jan 30 09:34:04.358: INFO: Trying to get logs from node tce-worker2 pod downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40 container client-container: <nil>
    STEP: delete the pod 01/30/23 09:34:04.362
    Jan 30 09:34:04.383: INFO: Waiting for pod downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40 to disappear
    Jan 30 09:34:04.385: INFO: Pod downwardapi-volume-412336b5-47da-4721-a418-72fdd36baa40 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:04.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5580" for this suite. 01/30/23 09:34:04.388
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:04.395
Jan 30 09:34:04.395: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename security-context 01/30/23 09:34:04.396
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:04.407
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:04.41
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 01/30/23 09:34:04.413
Jan 30 09:34:04.419: INFO: Waiting up to 5m0s for pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4" in namespace "security-context-9316" to be "Succeeded or Failed"
Jan 30 09:34:04.422: INFO: Pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.495537ms
Jan 30 09:34:06.424: INFO: Pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004433378s
Jan 30 09:34:08.424: INFO: Pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005074883s
STEP: Saw pod success 01/30/23 09:34:08.424
Jan 30 09:34:08.425: INFO: Pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4" satisfied condition "Succeeded or Failed"
Jan 30 09:34:08.426: INFO: Trying to get logs from node tce-worker2 pod security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4 container test-container: <nil>
STEP: delete the pod 01/30/23 09:34:08.43
Jan 30 09:34:08.440: INFO: Waiting for pod security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4 to disappear
Jan 30 09:34:08.442: INFO: Pod security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:08.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-9316" for this suite. 01/30/23 09:34:08.444
------------------------------
â€¢ [4.054 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:04.395
    Jan 30 09:34:04.395: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename security-context 01/30/23 09:34:04.396
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:04.407
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:04.41
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:164
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 01/30/23 09:34:04.413
    Jan 30 09:34:04.419: INFO: Waiting up to 5m0s for pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4" in namespace "security-context-9316" to be "Succeeded or Failed"
    Jan 30 09:34:04.422: INFO: Pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.495537ms
    Jan 30 09:34:06.424: INFO: Pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.004433378s
    Jan 30 09:34:08.424: INFO: Pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.005074883s
    STEP: Saw pod success 01/30/23 09:34:08.424
    Jan 30 09:34:08.425: INFO: Pod "security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4" satisfied condition "Succeeded or Failed"
    Jan 30 09:34:08.426: INFO: Trying to get logs from node tce-worker2 pod security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4 container test-container: <nil>
    STEP: delete the pod 01/30/23 09:34:08.43
    Jan 30 09:34:08.440: INFO: Waiting for pod security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4 to disappear
    Jan 30 09:34:08.442: INFO: Pod security-context-fa0fa62d-9a4f-4a55-a9c5-bd197579e4a4 no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:08.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-9316" for this suite. 01/30/23 09:34:08.444
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:08.449
Jan 30 09:34:08.449: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replication-controller 01/30/23 09:34:08.45
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:08.462
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:08.464
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
STEP: Creating ReplicationController "e2e-rc-h7nh5" 01/30/23 09:34:08.466
Jan 30 09:34:08.473: INFO: Get Replication Controller "e2e-rc-h7nh5" to confirm replicas
Jan 30 09:34:09.477: INFO: Get Replication Controller "e2e-rc-h7nh5" to confirm replicas
Jan 30 09:34:09.480: INFO: Found 1 replicas for "e2e-rc-h7nh5" replication controller
STEP: Getting scale subresource for ReplicationController "e2e-rc-h7nh5" 01/30/23 09:34:09.48
STEP: Updating a scale subresource 01/30/23 09:34:09.483
STEP: Verifying replicas where modified for replication controller "e2e-rc-h7nh5" 01/30/23 09:34:09.487
Jan 30 09:34:09.487: INFO: Get Replication Controller "e2e-rc-h7nh5" to confirm replicas
Jan 30 09:34:10.489: INFO: Get Replication Controller "e2e-rc-h7nh5" to confirm replicas
Jan 30 09:34:10.492: INFO: Found 2 replicas for "e2e-rc-h7nh5" replication controller
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:10.492: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-8283" for this suite. 01/30/23 09:34:10.494
------------------------------
â€¢ [2.051 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:08.449
    Jan 30 09:34:08.449: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replication-controller 01/30/23 09:34:08.45
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:08.462
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:08.464
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should get and update a ReplicationController scale [Conformance]
      test/e2e/apps/rc.go:402
    STEP: Creating ReplicationController "e2e-rc-h7nh5" 01/30/23 09:34:08.466
    Jan 30 09:34:08.473: INFO: Get Replication Controller "e2e-rc-h7nh5" to confirm replicas
    Jan 30 09:34:09.477: INFO: Get Replication Controller "e2e-rc-h7nh5" to confirm replicas
    Jan 30 09:34:09.480: INFO: Found 1 replicas for "e2e-rc-h7nh5" replication controller
    STEP: Getting scale subresource for ReplicationController "e2e-rc-h7nh5" 01/30/23 09:34:09.48
    STEP: Updating a scale subresource 01/30/23 09:34:09.483
    STEP: Verifying replicas where modified for replication controller "e2e-rc-h7nh5" 01/30/23 09:34:09.487
    Jan 30 09:34:09.487: INFO: Get Replication Controller "e2e-rc-h7nh5" to confirm replicas
    Jan 30 09:34:10.489: INFO: Get Replication Controller "e2e-rc-h7nh5" to confirm replicas
    Jan 30 09:34:10.492: INFO: Found 2 replicas for "e2e-rc-h7nh5" replication controller
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:10.492: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-8283" for this suite. 01/30/23 09:34:10.494
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:10.5
Jan 30 09:34:10.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sysctl 01/30/23 09:34:10.501
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:10.514
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:10.517
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
STEP: Creating a pod with one valid and two invalid sysctls 01/30/23 09:34:10.519
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:10.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-708" for this suite. 01/30/23 09:34:10.525
------------------------------
â€¢ [0.029 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:10.5
    Jan 30 09:34:10.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sysctl 01/30/23 09:34:10.501
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:10.514
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:10.517
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:123
    STEP: Creating a pod with one valid and two invalid sysctls 01/30/23 09:34:10.519
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:10.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-708" for this suite. 01/30/23 09:34:10.525
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
[BeforeEach] [sig-node] Pods Extended
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:10.53
Jan 30 09:34:10.530: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename pods 01/30/23 09:34:10.533
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:10.543
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:10.545
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
STEP: creating the pod 01/30/23 09:34:10.551
STEP: submitting the pod to kubernetes 01/30/23 09:34:10.551
STEP: verifying QOS class is set on the pod 01/30/23 09:34:10.559
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:10.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods Extended
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods Extended
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-5554" for this suite. 01/30/23 09:34:10.566
------------------------------
â€¢ [0.042 seconds]
[sig-node] Pods Extended
test/e2e/node/framework.go:23
  Pods Set QOS Class
  test/e2e/node/pods.go:150
    should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
    test/e2e/node/pods.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods Extended
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:10.53
    Jan 30 09:34:10.530: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename pods 01/30/23 09:34:10.533
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:10.543
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:10.545
    [BeforeEach] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Pods Set QOS Class
      test/e2e/node/pods.go:152
    [It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
      test/e2e/node/pods.go:161
    STEP: creating the pod 01/30/23 09:34:10.551
    STEP: submitting the pod to kubernetes 01/30/23 09:34:10.551
    STEP: verifying QOS class is set on the pod 01/30/23 09:34:10.559
    [AfterEach] [sig-node] Pods Extended
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:10.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods Extended
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods Extended
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-5554" for this suite. 01/30/23 09:34:10.566
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose
  should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:10.574
Jan 30 09:34:10.574: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename kubectl 01/30/23 09:34:10.575
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:10.586
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:10.588
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
STEP: creating Agnhost RC 01/30/23 09:34:10.592
Jan 30 09:34:10.592: INFO: namespace kubectl-8436
Jan 30 09:34:10.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8436 create -f -'
Jan 30 09:34:10.740: INFO: stderr: ""
Jan 30 09:34:10.740: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 01/30/23 09:34:10.74
Jan 30 09:34:11.743: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 09:34:11.743: INFO: Found 0 / 1
Jan 30 09:34:12.743: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 09:34:12.743: INFO: Found 1 / 1
Jan 30 09:34:12.743: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jan 30 09:34:12.745: INFO: Selector matched 1 pods for map[app:agnhost]
Jan 30 09:34:12.745: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jan 30 09:34:12.745: INFO: wait on agnhost-primary startup in kubectl-8436 
Jan 30 09:34:12.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8436 logs agnhost-primary-ft59l agnhost-primary'
Jan 30 09:34:12.803: INFO: stderr: ""
Jan 30 09:34:12.803: INFO: stdout: "Paused\n"
STEP: exposing RC 01/30/23 09:34:12.803
Jan 30 09:34:12.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8436 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Jan 30 09:34:12.882: INFO: stderr: ""
Jan 30 09:34:12.882: INFO: stdout: "service/rm2 exposed\n"
Jan 30 09:34:12.887: INFO: Service rm2 in namespace kubectl-8436 found.
STEP: exposing service 01/30/23 09:34:14.892
Jan 30 09:34:14.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8436 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Jan 30 09:34:14.957: INFO: stderr: ""
Jan 30 09:34:14.957: INFO: stdout: "service/rm3 exposed\n"
Jan 30 09:34:14.963: INFO: Service rm3 in namespace kubectl-8436 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:16.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8436" for this suite. 01/30/23 09:34:16.97
------------------------------
â€¢ [SLOW TEST] [6.411 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1409
    should create services for rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1415

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:10.574
    Jan 30 09:34:10.574: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename kubectl 01/30/23 09:34:10.575
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:10.586
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:10.588
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create services for rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1415
    STEP: creating Agnhost RC 01/30/23 09:34:10.592
    Jan 30 09:34:10.592: INFO: namespace kubectl-8436
    Jan 30 09:34:10.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8436 create -f -'
    Jan 30 09:34:10.740: INFO: stderr: ""
    Jan 30 09:34:10.740: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 01/30/23 09:34:10.74
    Jan 30 09:34:11.743: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 30 09:34:11.743: INFO: Found 0 / 1
    Jan 30 09:34:12.743: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 30 09:34:12.743: INFO: Found 1 / 1
    Jan 30 09:34:12.743: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Jan 30 09:34:12.745: INFO: Selector matched 1 pods for map[app:agnhost]
    Jan 30 09:34:12.745: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Jan 30 09:34:12.745: INFO: wait on agnhost-primary startup in kubectl-8436 
    Jan 30 09:34:12.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8436 logs agnhost-primary-ft59l agnhost-primary'
    Jan 30 09:34:12.803: INFO: stderr: ""
    Jan 30 09:34:12.803: INFO: stdout: "Paused\n"
    STEP: exposing RC 01/30/23 09:34:12.803
    Jan 30 09:34:12.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8436 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
    Jan 30 09:34:12.882: INFO: stderr: ""
    Jan 30 09:34:12.882: INFO: stdout: "service/rm2 exposed\n"
    Jan 30 09:34:12.887: INFO: Service rm2 in namespace kubectl-8436 found.
    STEP: exposing service 01/30/23 09:34:14.892
    Jan 30 09:34:14.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=kubectl-8436 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
    Jan 30 09:34:14.957: INFO: stderr: ""
    Jan 30 09:34:14.957: INFO: stdout: "service/rm3 exposed\n"
    Jan 30 09:34:14.963: INFO: Service rm3 in namespace kubectl-8436 found.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:16.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8436" for this suite. 01/30/23 09:34:16.97
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:16.987
Jan 30 09:34:16.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:34:16.99
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:17.011
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:17.013
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
STEP: Creating configMap with name projected-configmap-test-volume-map-42e56dad-2444-4ae2-b325-e849c979afc1 01/30/23 09:34:17.016
STEP: Creating a pod to test consume configMaps 01/30/23 09:34:17.021
Jan 30 09:34:17.032: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446" in namespace "projected-1085" to be "Succeeded or Failed"
Jan 30 09:34:17.035: INFO: Pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446": Phase="Pending", Reason="", readiness=false. Elapsed: 3.127605ms
Jan 30 09:34:19.038: INFO: Pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0066337s
Jan 30 09:34:21.038: INFO: Pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006359424s
STEP: Saw pod success 01/30/23 09:34:21.038
Jan 30 09:34:21.038: INFO: Pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446" satisfied condition "Succeeded or Failed"
Jan 30 09:34:21.040: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446 container agnhost-container: <nil>
STEP: delete the pod 01/30/23 09:34:21.044
Jan 30 09:34:21.064: INFO: Waiting for pod pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446 to disappear
Jan 30 09:34:21.066: INFO: Pod pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:21.066: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1085" for this suite. 01/30/23 09:34:21.068
------------------------------
â€¢ [4.095 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:16.987
    Jan 30 09:34:16.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:34:16.99
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:17.011
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:17.013
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:89
    STEP: Creating configMap with name projected-configmap-test-volume-map-42e56dad-2444-4ae2-b325-e849c979afc1 01/30/23 09:34:17.016
    STEP: Creating a pod to test consume configMaps 01/30/23 09:34:17.021
    Jan 30 09:34:17.032: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446" in namespace "projected-1085" to be "Succeeded or Failed"
    Jan 30 09:34:17.035: INFO: Pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446": Phase="Pending", Reason="", readiness=false. Elapsed: 3.127605ms
    Jan 30 09:34:19.038: INFO: Pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0066337s
    Jan 30 09:34:21.038: INFO: Pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.006359424s
    STEP: Saw pod success 01/30/23 09:34:21.038
    Jan 30 09:34:21.038: INFO: Pod "pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446" satisfied condition "Succeeded or Failed"
    Jan 30 09:34:21.040: INFO: Trying to get logs from node tce-worker2 pod pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446 container agnhost-container: <nil>
    STEP: delete the pod 01/30/23 09:34:21.044
    Jan 30 09:34:21.064: INFO: Waiting for pod pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446 to disappear
    Jan 30 09:34:21.066: INFO: Pod pod-projected-configmaps-2c5ec817-d3d9-4139-893a-89bec5cc2446 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:21.066: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1085" for this suite. 01/30/23 09:34:21.068
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:21.082
Jan 30 09:34:21.082: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 09:34:21.082
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:21.094
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:21.096
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
STEP: Discovering how many secrets are in namespace by default 01/30/23 09:34:21.098
STEP: Counting existing ResourceQuota 01/30/23 09:34:26.102
STEP: Creating a ResourceQuota 01/30/23 09:34:31.104
STEP: Ensuring resource quota status is calculated 01/30/23 09:34:31.118
STEP: Creating a Secret 01/30/23 09:34:33.122
STEP: Ensuring resource quota status captures secret creation 01/30/23 09:34:33.131
STEP: Deleting a secret 01/30/23 09:34:35.134
STEP: Ensuring resource quota status released usage 01/30/23 09:34:35.14
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 09:34:37.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6017" for this suite. 01/30/23 09:34:37.146
------------------------------
â€¢ [SLOW TEST] [16.069 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:21.082
    Jan 30 09:34:21.082: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 09:34:21.082
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:21.094
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:21.096
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a secret. [Conformance]
      test/e2e/apimachinery/resource_quota.go:160
    STEP: Discovering how many secrets are in namespace by default 01/30/23 09:34:21.098
    STEP: Counting existing ResourceQuota 01/30/23 09:34:26.102
    STEP: Creating a ResourceQuota 01/30/23 09:34:31.104
    STEP: Ensuring resource quota status is calculated 01/30/23 09:34:31.118
    STEP: Creating a Secret 01/30/23 09:34:33.122
    STEP: Ensuring resource quota status captures secret creation 01/30/23 09:34:33.131
    STEP: Deleting a secret 01/30/23 09:34:35.134
    STEP: Ensuring resource quota status released usage 01/30/23 09:34:35.14
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:34:37.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6017" for this suite. 01/30/23 09:34:37.146
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:34:37.151
Jan 30 09:34:37.151: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename init-container 01/30/23 09:34:37.152
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:37.165
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:37.167
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
STEP: creating the pod 01/30/23 09:34:37.169
Jan 30 09:34:37.169: INFO: PodSpec: initContainers in spec.initContainers
Jan 30 09:35:18.501: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-fc72616f-5205-4d50-afe2-466ebb7e98de", GenerateName:"", Namespace:"init-container-468", SelfLink:"", UID:"b5184cbe-ed41-4068-9b88-c911032d1b96", ResourceVersion:"29736", Generation:0, CreationTimestamp:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"169463518"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00619a5a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 30, 9, 35, 18, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00619a5d0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-klplj", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00414c4e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-klplj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-klplj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-klplj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004294cd8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"tce-worker2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000d523f0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004294d60)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004294d80)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004294d88), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004294d8c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00691d570), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.20.0.4", PodIP:"10.244.1.221", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.221"}}, StartTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000d524d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000d52540)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"docker.io/library/import-2023-01-30@sha256:81ee8c7f808b9e3e3d0eb3fa208bc6ed8dc2151c8f5d7ef29e3b4fddd5ac5898", ContainerID:"containerd://2335f61aeb3bcba0f72c91b6a284285ef86d78c80d3b6a2c8918beeab3a5f124", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00414c560), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00414c540), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc004294e2f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:35:18.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-468" for this suite. 01/30/23 09:35:18.504
------------------------------
â€¢ [SLOW TEST] [41.358 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:34:37.151
    Jan 30 09:34:37.151: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename init-container 01/30/23 09:34:37.152
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:34:37.165
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:34:37.167
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:334
    STEP: creating the pod 01/30/23 09:34:37.169
    Jan 30 09:34:37.169: INFO: PodSpec: initContainers in spec.initContainers
    Jan 30 09:35:18.501: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-fc72616f-5205-4d50-afe2-466ebb7e98de", GenerateName:"", Namespace:"init-container-468", SelfLink:"", UID:"b5184cbe-ed41-4068-9b88-c911032d1b96", ResourceVersion:"29736", Generation:0, CreationTimestamp:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"169463518"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00619a5a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.January, 30, 9, 35, 18, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00619a5d0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-klplj", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00414c4e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-klplj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-klplj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-klplj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004294cd8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"tce-worker2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000d523f0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004294d60)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004294d80)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004294d88), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004294d8c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00691d570), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.20.0.4", PodIP:"10.244.1.221", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.221"}}, StartTime:time.Date(2023, time.January, 30, 9, 34, 37, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000d524d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000d52540)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"docker.io/library/import-2023-01-30@sha256:81ee8c7f808b9e3e3d0eb3fa208bc6ed8dc2151c8f5d7ef29e3b4fddd5ac5898", ContainerID:"containerd://2335f61aeb3bcba0f72c91b6a284285ef86d78c80d3b6a2c8918beeab3a5f124", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00414c560), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00414c540), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc004294e2f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:35:18.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-468" for this suite. 01/30/23 09:35:18.504
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:35:18.51
Jan 30 09:35:18.510: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename projected 01/30/23 09:35:18.511
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:35:18.523
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:35:18.525
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
STEP: Creating secret with name projected-secret-test-90b3ecb6-7510-4521-a0e3-f4fe4007fef5 01/30/23 09:35:18.528
STEP: Creating a pod to test consume secrets 01/30/23 09:35:18.534
Jan 30 09:35:18.541: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612" in namespace "projected-5684" to be "Succeeded or Failed"
Jan 30 09:35:18.545: INFO: Pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612": Phase="Pending", Reason="", readiness=false. Elapsed: 3.955993ms
Jan 30 09:35:20.549: INFO: Pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007271195s
Jan 30 09:35:22.550: INFO: Pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008803159s
STEP: Saw pod success 01/30/23 09:35:22.55
Jan 30 09:35:22.550: INFO: Pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612" satisfied condition "Succeeded or Failed"
Jan 30 09:35:22.552: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612 container secret-volume-test: <nil>
STEP: delete the pod 01/30/23 09:35:22.556
Jan 30 09:35:22.568: INFO: Waiting for pod pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612 to disappear
Jan 30 09:35:22.570: INFO: Pod pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Jan 30 09:35:22.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5684" for this suite. 01/30/23 09:35:22.573
------------------------------
â€¢ [4.069 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:35:18.51
    Jan 30 09:35:18.510: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename projected 01/30/23 09:35:18.511
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:35:18.523
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:35:18.525
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:119
    STEP: Creating secret with name projected-secret-test-90b3ecb6-7510-4521-a0e3-f4fe4007fef5 01/30/23 09:35:18.528
    STEP: Creating a pod to test consume secrets 01/30/23 09:35:18.534
    Jan 30 09:35:18.541: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612" in namespace "projected-5684" to be "Succeeded or Failed"
    Jan 30 09:35:18.545: INFO: Pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612": Phase="Pending", Reason="", readiness=false. Elapsed: 3.955993ms
    Jan 30 09:35:20.549: INFO: Pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007271195s
    Jan 30 09:35:22.550: INFO: Pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008803159s
    STEP: Saw pod success 01/30/23 09:35:22.55
    Jan 30 09:35:22.550: INFO: Pod "pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612" satisfied condition "Succeeded or Failed"
    Jan 30 09:35:22.552: INFO: Trying to get logs from node tce-worker2 pod pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612 container secret-volume-test: <nil>
    STEP: delete the pod 01/30/23 09:35:22.556
    Jan 30 09:35:22.568: INFO: Waiting for pod pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612 to disappear
    Jan 30 09:35:22.570: INFO: Pod pod-projected-secrets-dfb8266d-b5db-411a-95c5-e57c61bcd612 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:35:22.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5684" for this suite. 01/30/23 09:35:22.573
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] CronJob
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:35:22.579
Jan 30 09:35:22.579: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename cronjob 01/30/23 09:35:22.58
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:35:22.59
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:35:22.592
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
STEP: Creating a suspended cronjob 01/30/23 09:35:22.593
STEP: Ensuring no jobs are scheduled 01/30/23 09:35:22.599
STEP: Ensuring no job exists by listing jobs explicitly 01/30/23 09:40:22.604
STEP: Removing cronjob 01/30/23 09:40:22.605
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Jan 30 09:40:22.619: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-2155" for this suite. 01/30/23 09:40:22.622
------------------------------
â€¢ [SLOW TEST] [300.047 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:35:22.579
    Jan 30 09:35:22.579: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename cronjob 01/30/23 09:35:22.58
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:35:22.59
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:35:22.592
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule jobs when suspended [Slow] [Conformance]
      test/e2e/apps/cronjob.go:96
    STEP: Creating a suspended cronjob 01/30/23 09:35:22.593
    STEP: Ensuring no jobs are scheduled 01/30/23 09:35:22.599
    STEP: Ensuring no job exists by listing jobs explicitly 01/30/23 09:40:22.604
    STEP: Removing cronjob 01/30/23 09:40:22.605
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:40:22.619: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-2155" for this suite. 01/30/23 09:40:22.622
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:40:22.628
Jan 30 09:40:22.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename statefulset 01/30/23 09:40:22.629
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:40:22.642
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:40:22.644
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-6733 01/30/23 09:40:22.646
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
STEP: Initializing watcher for selector baz=blah,foo=bar 01/30/23 09:40:22.65
STEP: Creating stateful set ss in namespace statefulset-6733 01/30/23 09:40:22.653
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6733 01/30/23 09:40:22.661
Jan 30 09:40:22.663: INFO: Found 0 stateful pods, waiting for 1
Jan 30 09:40:32.666: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 01/30/23 09:40:32.666
Jan 30 09:40:32.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 09:40:32.859: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 09:40:32.859: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 09:40:32.859: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 09:40:32.863: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jan 30 09:40:42.866: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 09:40:42.866: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 09:40:42.885: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999708s
Jan 30 09:40:43.888: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997008556s
Jan 30 09:40:44.891: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.994036838s
Jan 30 09:40:45.893: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.991438849s
Jan 30 09:40:46.897: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.988456259s
Jan 30 09:40:47.900: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.985111831s
Jan 30 09:40:48.903: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.982367187s
Jan 30 09:40:49.906: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.979213136s
Jan 30 09:40:50.909: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.976367375s
Jan 30 09:40:51.912: INFO: Verifying statefulset ss doesn't scale past 1 for another 973.641ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6733 01/30/23 09:40:52.912
Jan 30 09:40:52.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 09:40:53.095: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 09:40:53.095: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 09:40:53.095: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 09:40:53.098: INFO: Found 1 stateful pods, waiting for 3
Jan 30 09:41:03.101: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:41:03.101: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jan 30 09:41:03.101: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order 01/30/23 09:41:03.101
STEP: Scale down will halt with unhealthy stateful pod 01/30/23 09:41:03.101
Jan 30 09:41:03.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 09:41:03.246: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 09:41:03.246: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 09:41:03.246: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 09:41:03.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 09:41:03.347: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 09:41:03.347: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 09:41:03.347: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 09:41:03.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jan 30 09:41:03.502: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jan 30 09:41:03.502: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jan 30 09:41:03.502: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jan 30 09:41:03.502: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 09:41:03.505: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Jan 30 09:41:13.510: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 09:41:13.510: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 09:41:13.510: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jan 30 09:41:13.517: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999847s
Jan 30 09:41:14.521: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997222115s
Jan 30 09:41:15.524: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.994432938s
Jan 30 09:41:16.527: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.991076121s
Jan 30 09:41:17.530: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.987877184s
Jan 30 09:41:18.533: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.985355973s
Jan 30 09:41:19.536: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.982096148s
Jan 30 09:41:20.539: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.979304605s
Jan 30 09:41:21.541: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.976677704s
Jan 30 09:41:22.544: INFO: Verifying statefulset ss doesn't scale past 3 for another 973.866465ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6733 01/30/23 09:41:23.545
Jan 30 09:41:23.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 09:41:23.707: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 09:41:23.707: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 09:41:23.707: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 09:41:23.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 09:41:23.802: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 09:41:23.802: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 09:41:23.802: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 09:41:23.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jan 30 09:41:23.898: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jan 30 09:41:23.898: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jan 30 09:41:23.898: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jan 30 09:41:23.898: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order 01/30/23 09:41:33.908
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Jan 30 09:41:33.908: INFO: Deleting all statefulset in ns statefulset-6733
Jan 30 09:41:33.910: INFO: Scaling statefulset ss to 0
Jan 30 09:41:33.916: INFO: Waiting for statefulset status.replicas updated to 0
Jan 30 09:41:33.918: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Jan 30 09:41:33.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-6733" for this suite. 01/30/23 09:41:33.931
------------------------------
â€¢ [SLOW TEST] [71.310 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/apps/statefulset.go:587

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:40:22.628
    Jan 30 09:40:22.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename statefulset 01/30/23 09:40:22.629
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:40:22.642
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:40:22.644
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-6733 01/30/23 09:40:22.646
    [It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
      test/e2e/apps/statefulset.go:587
    STEP: Initializing watcher for selector baz=blah,foo=bar 01/30/23 09:40:22.65
    STEP: Creating stateful set ss in namespace statefulset-6733 01/30/23 09:40:22.653
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6733 01/30/23 09:40:22.661
    Jan 30 09:40:22.663: INFO: Found 0 stateful pods, waiting for 1
    Jan 30 09:40:32.666: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 01/30/23 09:40:32.666
    Jan 30 09:40:32.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 09:40:32.859: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 09:40:32.859: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 09:40:32.859: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 09:40:32.863: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Jan 30 09:40:42.866: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Jan 30 09:40:42.866: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 09:40:42.885: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999708s
    Jan 30 09:40:43.888: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997008556s
    Jan 30 09:40:44.891: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.994036838s
    Jan 30 09:40:45.893: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.991438849s
    Jan 30 09:40:46.897: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.988456259s
    Jan 30 09:40:47.900: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.985111831s
    Jan 30 09:40:48.903: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.982367187s
    Jan 30 09:40:49.906: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.979213136s
    Jan 30 09:40:50.909: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.976367375s
    Jan 30 09:40:51.912: INFO: Verifying statefulset ss doesn't scale past 1 for another 973.641ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6733 01/30/23 09:40:52.912
    Jan 30 09:40:52.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 09:40:53.095: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 30 09:40:53.095: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 09:40:53.095: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 30 09:40:53.098: INFO: Found 1 stateful pods, waiting for 3
    Jan 30 09:41:03.101: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 09:41:03.101: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Jan 30 09:41:03.101: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Verifying that stateful set ss was scaled up in order 01/30/23 09:41:03.101
    STEP: Scale down will halt with unhealthy stateful pod 01/30/23 09:41:03.101
    Jan 30 09:41:03.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 09:41:03.246: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 09:41:03.246: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 09:41:03.246: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 09:41:03.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 09:41:03.347: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 09:41:03.347: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 09:41:03.347: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 09:41:03.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Jan 30 09:41:03.502: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Jan 30 09:41:03.502: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Jan 30 09:41:03.502: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Jan 30 09:41:03.502: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 09:41:03.505: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
    Jan 30 09:41:13.510: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Jan 30 09:41:13.510: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Jan 30 09:41:13.510: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Jan 30 09:41:13.517: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999847s
    Jan 30 09:41:14.521: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997222115s
    Jan 30 09:41:15.524: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.994432938s
    Jan 30 09:41:16.527: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.991076121s
    Jan 30 09:41:17.530: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.987877184s
    Jan 30 09:41:18.533: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.985355973s
    Jan 30 09:41:19.536: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.982096148s
    Jan 30 09:41:20.539: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.979304605s
    Jan 30 09:41:21.541: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.976677704s
    Jan 30 09:41:22.544: INFO: Verifying statefulset ss doesn't scale past 3 for another 973.866465ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6733 01/30/23 09:41:23.545
    Jan 30 09:41:23.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 09:41:23.707: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 30 09:41:23.707: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 09:41:23.707: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 30 09:41:23.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 09:41:23.802: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 30 09:41:23.802: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 09:41:23.802: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 30 09:41:23.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=statefulset-6733 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Jan 30 09:41:23.898: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Jan 30 09:41:23.898: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Jan 30 09:41:23.898: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Jan 30 09:41:23.898: INFO: Scaling statefulset ss to 0
    STEP: Verifying that stateful set ss was scaled down in reverse order 01/30/23 09:41:33.908
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Jan 30 09:41:33.908: INFO: Deleting all statefulset in ns statefulset-6733
    Jan 30 09:41:33.910: INFO: Scaling statefulset ss to 0
    Jan 30 09:41:33.916: INFO: Waiting for statefulset status.replicas updated to 0
    Jan 30 09:41:33.918: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:41:33.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-6733" for this suite. 01/30/23 09:41:33.931
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:41:33.938
Jan 30 09:41:33.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename init-container 01/30/23 09:41:33.939
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:33.96
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:33.963
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
STEP: creating the pod 01/30/23 09:41:33.965
Jan 30 09:41:33.965: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:41:37.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-3142" for this suite. 01/30/23 09:41:37.134
------------------------------
â€¢ [3.202 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:41:33.938
    Jan 30 09:41:33.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename init-container 01/30/23 09:41:33.939
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:33.96
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:33.963
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:255
    STEP: creating the pod 01/30/23 09:41:33.965
    Jan 30 09:41:33.965: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:41:37.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-3142" for this suite. 01/30/23 09:41:37.134
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:41:37.14
Jan 30 09:41:37.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename svcaccounts 01/30/23 09:41:37.143
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:37.153
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:37.156
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
STEP: Creating ServiceAccount "e2e-sa-w4rt6"  01/30/23 09:41:37.158
Jan 30 09:41:37.163: INFO: AutomountServiceAccountToken: false
STEP: Updating ServiceAccount "e2e-sa-w4rt6"  01/30/23 09:41:37.163
Jan 30 09:41:37.171: INFO: AutomountServiceAccountToken: true
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Jan 30 09:41:37.171: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-5623" for this suite. 01/30/23 09:41:37.174
------------------------------
â€¢ [0.038 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:41:37.14
    Jan 30 09:41:37.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename svcaccounts 01/30/23 09:41:37.143
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:37.153
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:37.156
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should update a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:810
    STEP: Creating ServiceAccount "e2e-sa-w4rt6"  01/30/23 09:41:37.158
    Jan 30 09:41:37.163: INFO: AutomountServiceAccountToken: false
    STEP: Updating ServiceAccount "e2e-sa-w4rt6"  01/30/23 09:41:37.163
    Jan 30 09:41:37.171: INFO: AutomountServiceAccountToken: true
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:41:37.171: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-5623" for this suite. 01/30/23 09:41:37.174
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:41:37.179
Jan 30 09:41:37.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename deployment 01/30/23 09:41:37.18
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:37.191
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:37.193
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
Jan 30 09:41:37.196: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Jan 30 09:41:37.205: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 30 09:41:42.208: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/30/23 09:41:42.208
Jan 30 09:41:42.208: INFO: Creating deployment "test-rolling-update-deployment"
Jan 30 09:41:42.214: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Jan 30 09:41:42.218: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Jan 30 09:41:44.224: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Jan 30 09:41:44.225: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jan 30 09:41:44.230: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-6543  d9688997-2a06-4d93-bdbc-a9ea7345e1f5 30685 1 2023-01-30 09:41:42 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-01-30 09:41:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00431b1d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 09:41:42 +0000 UTC,LastTransitionTime:2023-01-30 09:41:42 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-01-30 09:41:43 +0000 UTC,LastTransitionTime:2023-01-30 09:41:42 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jan 30 09:41:44.232: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-6543  f529bba8-7de9-4816-8dd6-9ed393fe6e4c 30675 1 2023-01-30 09:41:42 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment d9688997-2a06-4d93-bdbc-a9ea7345e1f5 0xc003ab09d7 0xc003ab09d8}] [] [{kube-controller-manager Update apps/v1 2023-01-30 09:41:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d9688997-2a06-4d93-bdbc-a9ea7345e1f5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ab0a88 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jan 30 09:41:44.232: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Jan 30 09:41:44.232: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-6543  f5d5cb8e-e61d-461c-b63d-ec1416357d6a 30684 2 2023-01-30 09:41:37 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment d9688997-2a06-4d93-bdbc-a9ea7345e1f5 0xc003ab08a7 0xc003ab08a8}] [] [{e2e.test Update apps/v1 2023-01-30 09:41:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d9688997-2a06-4d93-bdbc-a9ea7345e1f5\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003ab0968 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jan 30 09:41:44.234: INFO: Pod "test-rolling-update-deployment-7549d9f46d-82tbl" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-82tbl test-rolling-update-deployment-7549d9f46d- deployment-6543  d9865af0-01e8-47f3-a6ce-f3939763a469 30674 0 2023-01-30 09:41:42 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d f529bba8-7de9-4816-8dd6-9ed393fe6e4c 0xc00431b5a7 0xc00431b5a8}] [] [{kube-controller-manager Update v1 2023-01-30 09:41:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f529bba8-7de9-4816-8dd6-9ed393fe6e4c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.227\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8srbg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8srbg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:41:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:41:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:41:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:41:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.227,StartTime:2023-01-30 09:41:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 09:41:42 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a,ContainerID:containerd://173a10a3c870e622512874b1597ba4b232335a1c080ab0dc32422bdfa08d3dce,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.227,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Jan 30 09:41:44.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-6543" for this suite. 01/30/23 09:41:44.237
------------------------------
â€¢ [SLOW TEST] [7.066 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:41:37.179
    Jan 30 09:41:37.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename deployment 01/30/23 09:41:37.18
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:37.191
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:37.193
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:105
    Jan 30 09:41:37.196: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
    Jan 30 09:41:37.205: INFO: Pod name sample-pod: Found 0 pods out of 1
    Jan 30 09:41:42.208: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/30/23 09:41:42.208
    Jan 30 09:41:42.208: INFO: Creating deployment "test-rolling-update-deployment"
    Jan 30 09:41:42.214: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
    Jan 30 09:41:42.218: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
    Jan 30 09:41:44.224: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
    Jan 30 09:41:44.225: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Jan 30 09:41:44.230: INFO: Deployment "test-rolling-update-deployment":
    &Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-6543  d9688997-2a06-4d93-bdbc-a9ea7345e1f5 30685 1 2023-01-30 09:41:42 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-01-30 09:41:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00431b1d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-01-30 09:41:42 +0000 UTC,LastTransitionTime:2023-01-30 09:41:42 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-01-30 09:41:43 +0000 UTC,LastTransitionTime:2023-01-30 09:41:42 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Jan 30 09:41:44.232: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
    &ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-6543  f529bba8-7de9-4816-8dd6-9ed393fe6e4c 30675 1 2023-01-30 09:41:42 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment d9688997-2a06-4d93-bdbc-a9ea7345e1f5 0xc003ab09d7 0xc003ab09d8}] [] [{kube-controller-manager Update apps/v1 2023-01-30 09:41:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d9688997-2a06-4d93-bdbc-a9ea7345e1f5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ab0a88 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 09:41:44.232: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
    Jan 30 09:41:44.232: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-6543  f5d5cb8e-e61d-461c-b63d-ec1416357d6a 30684 2 2023-01-30 09:41:37 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment d9688997-2a06-4d93-bdbc-a9ea7345e1f5 0xc003ab08a7 0xc003ab08a8}] [] [{e2e.test Update apps/v1 2023-01-30 09:41:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d9688997-2a06-4d93-bdbc-a9ea7345e1f5\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003ab0968 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Jan 30 09:41:44.234: INFO: Pod "test-rolling-update-deployment-7549d9f46d-82tbl" is available:
    &Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-82tbl test-rolling-update-deployment-7549d9f46d- deployment-6543  d9865af0-01e8-47f3-a6ce-f3939763a469 30674 0 2023-01-30 09:41:42 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d f529bba8-7de9-4816-8dd6-9ed393fe6e4c 0xc00431b5a7 0xc00431b5a8}] [] [{kube-controller-manager Update v1 2023-01-30 09:41:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f529bba8-7de9-4816-8dd6-9ed393fe6e4c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-01-30 09:41:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.227\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8srbg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8srbg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:tce-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:41:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:41:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:41:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-01-30 09:41:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.20.0.4,PodIP:10.244.1.227,StartTime:2023-01-30 09:41:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-01-30 09:41:42 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:docker.io/library/import-2023-01-30@sha256:b41e2f3849a905c93231a9451bf33ee18285519dc156da77e6276adcd2cbc45a,ContainerID:containerd://173a10a3c870e622512874b1597ba4b232335a1c080ab0dc32422bdfa08d3dce,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.244.1.227,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:41:44.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-6543" for this suite. 01/30/23 09:41:44.237
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:41:44.251
Jan 30 09:41:44.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename job 01/30/23 09:41:44.252
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:44.263
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:44.268
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
STEP: Creating a job 01/30/23 09:41:44.27
STEP: Ensure pods equal to parallelism count is attached to the job 01/30/23 09:41:44.279
STEP: patching /status 01/30/23 09:41:46.282
STEP: updating /status 01/30/23 09:41:46.288
STEP: get /status 01/30/23 09:41:46.312
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Jan 30 09:41:46.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-4168" for this suite. 01/30/23 09:41:46.317
------------------------------
â€¢ [2.070 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:41:44.251
    Jan 30 09:41:44.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename job 01/30/23 09:41:44.252
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:44.263
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:44.268
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a job status [Conformance]
      test/e2e/apps/job.go:636
    STEP: Creating a job 01/30/23 09:41:44.27
    STEP: Ensure pods equal to parallelism count is attached to the job 01/30/23 09:41:44.279
    STEP: patching /status 01/30/23 09:41:46.282
    STEP: updating /status 01/30/23 09:41:46.288
    STEP: get /status 01/30/23 09:41:46.312
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:41:46.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-4168" for this suite. 01/30/23 09:41:46.317
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:41:46.322
Jan 30 09:41:46.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename sched-preemption 01/30/23 09:41:46.322
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:46.332
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:46.334
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:96
Jan 30 09:41:46.346: INFO: Waiting up to 1m0s for all nodes to be ready
Jan 30 09:42:46.361: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129
STEP: Create pods that use 4/5 of node resources. 01/30/23 09:42:46.363
Jan 30 09:42:46.388: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jan 30 09:42:46.392: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jan 30 09:42:46.407: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jan 30 09:42:46.413: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 01/30/23 09:42:46.413
Jan 30 09:42:46.414: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-2884" to be "running"
Jan 30 09:42:46.417: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 3.00201ms
Jan 30 09:42:48.419: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.00543771s
Jan 30 09:42:48.419: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Jan 30 09:42:48.419: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-2884" to be "running"
Jan 30 09:42:48.421: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.800447ms
Jan 30 09:42:48.421: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Jan 30 09:42:48.421: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-2884" to be "running"
Jan 30 09:42:48.423: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.823037ms
Jan 30 09:42:48.423: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Jan 30 09:42:48.423: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-2884" to be "running"
Jan 30 09:42:48.424: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.672022ms
Jan 30 09:42:48.424: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a high priority pod that has same requirements as that of lower priority pod 01/30/23 09:42:48.424
Jan 30 09:42:48.438: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-2884" to be "running"
Jan 30 09:42:48.440: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.089486ms
Jan 30 09:42:50.444: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005526669s
Jan 30 09:42:52.444: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.005958161s
Jan 30 09:42:54.444: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.00549597s
Jan 30 09:42:54.444: INFO: Pod "preemptor-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:42:54.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-2884" for this suite. 01/30/23 09:42:54.492
------------------------------
â€¢ [SLOW TEST] [68.175 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:41:46.322
    Jan 30 09:41:46.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename sched-preemption 01/30/23 09:41:46.322
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:41:46.332
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:41:46.334
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:96
    Jan 30 09:41:46.346: INFO: Waiting up to 1m0s for all nodes to be ready
    Jan 30 09:42:46.361: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates basic preemption works [Conformance]
      test/e2e/scheduling/preemption.go:129
    STEP: Create pods that use 4/5 of node resources. 01/30/23 09:42:46.363
    Jan 30 09:42:46.388: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Jan 30 09:42:46.392: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Jan 30 09:42:46.407: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Jan 30 09:42:46.413: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 01/30/23 09:42:46.413
    Jan 30 09:42:46.414: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-2884" to be "running"
    Jan 30 09:42:46.417: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 3.00201ms
    Jan 30 09:42:48.419: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.00543771s
    Jan 30 09:42:48.419: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Jan 30 09:42:48.419: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-2884" to be "running"
    Jan 30 09:42:48.421: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.800447ms
    Jan 30 09:42:48.421: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Jan 30 09:42:48.421: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-2884" to be "running"
    Jan 30 09:42:48.423: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.823037ms
    Jan 30 09:42:48.423: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Jan 30 09:42:48.423: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-2884" to be "running"
    Jan 30 09:42:48.424: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 1.672022ms
    Jan 30 09:42:48.424: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a high priority pod that has same requirements as that of lower priority pod 01/30/23 09:42:48.424
    Jan 30 09:42:48.438: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-2884" to be "running"
    Jan 30 09:42:48.440: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.089486ms
    Jan 30 09:42:50.444: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005526669s
    Jan 30 09:42:52.444: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.005958161s
    Jan 30 09:42:54.444: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.00549597s
    Jan 30 09:42:54.444: INFO: Pod "preemptor-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:42:54.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-2884" for this suite. 01/30/23 09:42:54.492
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:42:54.498
Jan 30 09:42:54.498: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename resourcequota 01/30/23 09:42:54.499
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:42:54.51
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:42:54.512
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
STEP: Counting existing ResourceQuota 01/30/23 09:43:11.517
STEP: Creating a ResourceQuota 01/30/23 09:43:16.52
STEP: Ensuring resource quota status is calculated 01/30/23 09:43:16.524
STEP: Creating a ConfigMap 01/30/23 09:43:18.528
STEP: Ensuring resource quota status captures configMap creation 01/30/23 09:43:18.542
STEP: Deleting a ConfigMap 01/30/23 09:43:20.544
STEP: Ensuring resource quota status released usage 01/30/23 09:43:20.558
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Jan 30 09:43:22.560: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8547" for this suite. 01/30/23 09:43:22.562
------------------------------
â€¢ [SLOW TEST] [28.070 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:42:54.498
    Jan 30 09:42:54.498: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename resourcequota 01/30/23 09:42:54.499
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:42:54.51
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:42:54.512
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
      test/e2e/apimachinery/resource_quota.go:326
    STEP: Counting existing ResourceQuota 01/30/23 09:43:11.517
    STEP: Creating a ResourceQuota 01/30/23 09:43:16.52
    STEP: Ensuring resource quota status is calculated 01/30/23 09:43:16.524
    STEP: Creating a ConfigMap 01/30/23 09:43:18.528
    STEP: Ensuring resource quota status captures configMap creation 01/30/23 09:43:18.542
    STEP: Deleting a ConfigMap 01/30/23 09:43:20.544
    STEP: Ensuring resource quota status released usage 01/30/23 09:43:20.558
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:43:22.560: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8547" for this suite. 01/30/23 09:43:22.562
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:43:22.568
Jan 30 09:43:22.569: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename replicaset 01/30/23 09:43:22.569
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:22.578
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:22.58
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
STEP: Create a Replicaset 01/30/23 09:43:22.584
STEP: Verify that the required pods have come up. 01/30/23 09:43:22.589
Jan 30 09:43:22.591: INFO: Pod name sample-pod: Found 0 pods out of 1
Jan 30 09:43:27.594: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 01/30/23 09:43:27.594
STEP: Getting /status 01/30/23 09:43:27.594
Jan 30 09:43:27.598: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status 01/30/23 09:43:27.598
Jan 30 09:43:27.603: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated 01/30/23 09:43:27.603
Jan 30 09:43:27.605: INFO: Observed &ReplicaSet event: ADDED
Jan 30 09:43:27.605: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 09:43:27.605: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 09:43:27.605: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 09:43:27.605: INFO: Found replicaset test-rs in namespace replicaset-8147 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jan 30 09:43:27.605: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status 01/30/23 09:43:27.605
Jan 30 09:43:27.605: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jan 30 09:43:27.612: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched 01/30/23 09:43:27.612
Jan 30 09:43:27.614: INFO: Observed &ReplicaSet event: ADDED
Jan 30 09:43:27.614: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 09:43:27.615: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 09:43:27.615: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 09:43:27.615: INFO: Observed replicaset test-rs in namespace replicaset-8147 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jan 30 09:43:27.616: INFO: Observed &ReplicaSet event: MODIFIED
Jan 30 09:43:27.616: INFO: Found replicaset test-rs in namespace replicaset-8147 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Jan 30 09:43:27.616: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Jan 30 09:43:27.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-8147" for this suite. 01/30/23 09:43:27.619
------------------------------
â€¢ [SLOW TEST] [5.058 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:43:22.568
    Jan 30 09:43:22.569: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename replicaset 01/30/23 09:43:22.569
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:22.578
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:22.58
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should validate Replicaset Status endpoints [Conformance]
      test/e2e/apps/replica_set.go:176
    STEP: Create a Replicaset 01/30/23 09:43:22.584
    STEP: Verify that the required pods have come up. 01/30/23 09:43:22.589
    Jan 30 09:43:22.591: INFO: Pod name sample-pod: Found 0 pods out of 1
    Jan 30 09:43:27.594: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 01/30/23 09:43:27.594
    STEP: Getting /status 01/30/23 09:43:27.594
    Jan 30 09:43:27.598: INFO: Replicaset test-rs has Conditions: []
    STEP: updating the Replicaset Status 01/30/23 09:43:27.598
    Jan 30 09:43:27.603: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the ReplicaSet status to be updated 01/30/23 09:43:27.603
    Jan 30 09:43:27.605: INFO: Observed &ReplicaSet event: ADDED
    Jan 30 09:43:27.605: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 30 09:43:27.605: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 30 09:43:27.605: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 30 09:43:27.605: INFO: Found replicaset test-rs in namespace replicaset-8147 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Jan 30 09:43:27.605: INFO: Replicaset test-rs has an updated status
    STEP: patching the Replicaset Status 01/30/23 09:43:27.605
    Jan 30 09:43:27.605: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Jan 30 09:43:27.612: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Replicaset status to be patched 01/30/23 09:43:27.612
    Jan 30 09:43:27.614: INFO: Observed &ReplicaSet event: ADDED
    Jan 30 09:43:27.614: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 30 09:43:27.615: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 30 09:43:27.615: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 30 09:43:27.615: INFO: Observed replicaset test-rs in namespace replicaset-8147 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Jan 30 09:43:27.616: INFO: Observed &ReplicaSet event: MODIFIED
    Jan 30 09:43:27.616: INFO: Found replicaset test-rs in namespace replicaset-8147 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
    Jan 30 09:43:27.616: INFO: Replicaset test-rs has a patched status
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:43:27.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-8147" for this suite. 01/30/23 09:43:27.619
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:43:27.629
Jan 30 09:43:27.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename services 01/30/23 09:43:27.63
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:27.642
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:27.645
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
STEP: creating service multi-endpoint-test in namespace services-1056 01/30/23 09:43:27.647
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[] 01/30/23 09:43:27.658
Jan 30 09:43:27.666: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Jan 30 09:43:28.671: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-1056 01/30/23 09:43:28.671
Jan 30 09:43:28.679: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-1056" to be "running and ready"
Jan 30 09:43:28.681: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 1.775297ms
Jan 30 09:43:28.681: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:43:30.684: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.005107108s
Jan 30 09:43:30.684: INFO: The phase of Pod pod1 is Running (Ready = true)
Jan 30 09:43:30.684: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[pod1:[100]] 01/30/23 09:43:30.686
Jan 30 09:43:30.691: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-1056 01/30/23 09:43:30.691
Jan 30 09:43:30.712: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-1056" to be "running and ready"
Jan 30 09:43:30.714: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.432015ms
Jan 30 09:43:30.714: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jan 30 09:43:32.718: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.006198866s
Jan 30 09:43:32.718: INFO: The phase of Pod pod2 is Running (Ready = true)
Jan 30 09:43:32.718: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[pod1:[100] pod2:[101]] 01/30/23 09:43:32.721
Jan 30 09:43:32.728: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods 01/30/23 09:43:32.728
Jan 30 09:43:32.728: INFO: Creating new exec pod
Jan 30 09:43:32.733: INFO: Waiting up to 5m0s for pod "execpodhc28q" in namespace "services-1056" to be "running"
Jan 30 09:43:32.735: INFO: Pod "execpodhc28q": Phase="Pending", Reason="", readiness=false. Elapsed: 2.253845ms
Jan 30 09:43:34.739: INFO: Pod "execpodhc28q": Phase="Running", Reason="", readiness=true. Elapsed: 2.005378842s
Jan 30 09:43:34.739: INFO: Pod "execpodhc28q" satisfied condition "running"
Jan 30 09:43:35.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1056 exec execpodhc28q -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
Jan 30 09:43:35.871: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Jan 30 09:43:35.871: INFO: stdout: ""
Jan 30 09:43:35.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1056 exec execpodhc28q -- /bin/sh -x -c nc -v -z -w 2 10.96.181.38 80'
Jan 30 09:43:35.966: INFO: stderr: "+ nc -v -z -w 2 10.96.181.38 80\nConnection to 10.96.181.38 80 port [tcp/http] succeeded!\n"
Jan 30 09:43:35.966: INFO: stdout: ""
Jan 30 09:43:35.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1056 exec execpodhc28q -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
Jan 30 09:43:36.106: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Jan 30 09:43:36.106: INFO: stdout: ""
Jan 30 09:43:36.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1056 exec execpodhc28q -- /bin/sh -x -c nc -v -z -w 2 10.96.181.38 81'
Jan 30 09:43:36.266: INFO: stderr: "+ nc -v -z -w 2 10.96.181.38 81\nConnection to 10.96.181.38 81 port [tcp/*] succeeded!\n"
Jan 30 09:43:36.266: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-1056 01/30/23 09:43:36.266
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[pod2:[101]] 01/30/23 09:43:36.289
Jan 30 09:43:36.321: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-1056 01/30/23 09:43:36.321
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[] 01/30/23 09:43:36.37
Jan 30 09:43:36.396: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Jan 30 09:43:36.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1056" for this suite. 01/30/23 09:43:36.423
------------------------------
â€¢ [SLOW TEST] [8.800 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:43:27.629
    Jan 30 09:43:27.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename services 01/30/23 09:43:27.63
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:27.642
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:27.645
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve multiport endpoints from pods  [Conformance]
      test/e2e/network/service.go:848
    STEP: creating service multi-endpoint-test in namespace services-1056 01/30/23 09:43:27.647
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[] 01/30/23 09:43:27.658
    Jan 30 09:43:27.666: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
    Jan 30 09:43:28.671: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-1056 01/30/23 09:43:28.671
    Jan 30 09:43:28.679: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-1056" to be "running and ready"
    Jan 30 09:43:28.681: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 1.775297ms
    Jan 30 09:43:28.681: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:43:30.684: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.005107108s
    Jan 30 09:43:30.684: INFO: The phase of Pod pod1 is Running (Ready = true)
    Jan 30 09:43:30.684: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[pod1:[100]] 01/30/23 09:43:30.686
    Jan 30 09:43:30.691: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[pod1:[100]]
    STEP: Creating pod pod2 in namespace services-1056 01/30/23 09:43:30.691
    Jan 30 09:43:30.712: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-1056" to be "running and ready"
    Jan 30 09:43:30.714: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.432015ms
    Jan 30 09:43:30.714: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Jan 30 09:43:32.718: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.006198866s
    Jan 30 09:43:32.718: INFO: The phase of Pod pod2 is Running (Ready = true)
    Jan 30 09:43:32.718: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[pod1:[100] pod2:[101]] 01/30/23 09:43:32.721
    Jan 30 09:43:32.728: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[pod1:[100] pod2:[101]]
    STEP: Checking if the Service forwards traffic to pods 01/30/23 09:43:32.728
    Jan 30 09:43:32.728: INFO: Creating new exec pod
    Jan 30 09:43:32.733: INFO: Waiting up to 5m0s for pod "execpodhc28q" in namespace "services-1056" to be "running"
    Jan 30 09:43:32.735: INFO: Pod "execpodhc28q": Phase="Pending", Reason="", readiness=false. Elapsed: 2.253845ms
    Jan 30 09:43:34.739: INFO: Pod "execpodhc28q": Phase="Running", Reason="", readiness=true. Elapsed: 2.005378842s
    Jan 30 09:43:34.739: INFO: Pod "execpodhc28q" satisfied condition "running"
    Jan 30 09:43:35.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1056 exec execpodhc28q -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
    Jan 30 09:43:35.871: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
    Jan 30 09:43:35.871: INFO: stdout: ""
    Jan 30 09:43:35.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1056 exec execpodhc28q -- /bin/sh -x -c nc -v -z -w 2 10.96.181.38 80'
    Jan 30 09:43:35.966: INFO: stderr: "+ nc -v -z -w 2 10.96.181.38 80\nConnection to 10.96.181.38 80 port [tcp/http] succeeded!\n"
    Jan 30 09:43:35.966: INFO: stdout: ""
    Jan 30 09:43:35.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1056 exec execpodhc28q -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
    Jan 30 09:43:36.106: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
    Jan 30 09:43:36.106: INFO: stdout: ""
    Jan 30 09:43:36.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1653868973 --namespace=services-1056 exec execpodhc28q -- /bin/sh -x -c nc -v -z -w 2 10.96.181.38 81'
    Jan 30 09:43:36.266: INFO: stderr: "+ nc -v -z -w 2 10.96.181.38 81\nConnection to 10.96.181.38 81 port [tcp/*] succeeded!\n"
    Jan 30 09:43:36.266: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-1056 01/30/23 09:43:36.266
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[pod2:[101]] 01/30/23 09:43:36.289
    Jan 30 09:43:36.321: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[pod2:[101]]
    STEP: Deleting pod pod2 in namespace services-1056 01/30/23 09:43:36.321
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1056 to expose endpoints map[] 01/30/23 09:43:36.37
    Jan 30 09:43:36.396: INFO: successfully validated that service multi-endpoint-test in namespace services-1056 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:43:36.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1056" for this suite. 01/30/23 09:43:36.423
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:43:36.43
Jan 30 09:43:36.430: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 09:43:36.431
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:36.449
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:36.452
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 09:43:36.464
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:43:37.041
STEP: Deploying the webhook pod 01/30/23 09:43:37.048
STEP: Wait for the deployment to be ready 01/30/23 09:43:37.058
Jan 30 09:43:37.062: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service 01/30/23 09:43:39.07
STEP: Verifying the service has paired with the endpoint 01/30/23 09:43:39.078
Jan 30 09:43:40.079: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
Jan 30 09:43:40.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Registering the custom resource webhook via the AdmissionRegistration API 01/30/23 09:43:40.599
STEP: Creating a custom resource that should be denied by the webhook 01/30/23 09:43:40.623
STEP: Creating a custom resource whose deletion would be denied by the webhook 01/30/23 09:43:42.648
STEP: Updating the custom resource with disallowed data should be denied 01/30/23 09:43:42.666
STEP: Deleting the custom resource should be denied 01/30/23 09:43:42.673
STEP: Remove the offending key and value from the custom resource data 01/30/23 09:43:42.679
STEP: Deleting the updated custom resource should be successful 01/30/23 09:43:42.686
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:43:43.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4138" for this suite. 01/30/23 09:43:43.267
STEP: Destroying namespace "webhook-4138-markers" for this suite. 01/30/23 09:43:43.285
------------------------------
â€¢ [SLOW TEST] [6.862 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:43:36.43
    Jan 30 09:43:36.430: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 09:43:36.431
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:36.449
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:36.452
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 09:43:36.464
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:43:37.041
    STEP: Deploying the webhook pod 01/30/23 09:43:37.048
    STEP: Wait for the deployment to be ready 01/30/23 09:43:37.058
    Jan 30 09:43:37.062: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
    STEP: Deploying the webhook service 01/30/23 09:43:39.07
    STEP: Verifying the service has paired with the endpoint 01/30/23 09:43:39.078
    Jan 30 09:43:40.079: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny custom resource creation, update and deletion [Conformance]
      test/e2e/apimachinery/webhook.go:221
    Jan 30 09:43:40.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Registering the custom resource webhook via the AdmissionRegistration API 01/30/23 09:43:40.599
    STEP: Creating a custom resource that should be denied by the webhook 01/30/23 09:43:40.623
    STEP: Creating a custom resource whose deletion would be denied by the webhook 01/30/23 09:43:42.648
    STEP: Updating the custom resource with disallowed data should be denied 01/30/23 09:43:42.666
    STEP: Deleting the custom resource should be denied 01/30/23 09:43:42.673
    STEP: Remove the offending key and value from the custom resource data 01/30/23 09:43:42.679
    STEP: Deleting the updated custom resource should be successful 01/30/23 09:43:42.686
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:43:43.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4138" for this suite. 01/30/23 09:43:43.267
    STEP: Destroying namespace "webhook-4138-markers" for this suite. 01/30/23 09:43:43.285
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:43:43.308
Jan 30 09:43:43.308: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename webhook 01/30/23 09:43:43.31
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:43.332
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:43.336
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 01/30/23 09:43:43.36
STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:43:43.84
STEP: Deploying the webhook pod 01/30/23 09:43:43.852
STEP: Wait for the deployment to be ready 01/30/23 09:43:43.863
Jan 30 09:43:43.870: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 01/30/23 09:43:45.876
STEP: Verifying the service has paired with the endpoint 01/30/23 09:43:45.902
Jan 30 09:43:46.902: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 01/30/23 09:43:46.905
STEP: create a namespace for the webhook 01/30/23 09:43:46.917
STEP: create a configmap should be unconditionally rejected by the webhook 01/30/23 09:43:46.922
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Jan 30 09:43:46.943: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-4178" for this suite. 01/30/23 09:43:46.978
STEP: Destroying namespace "webhook-4178-markers" for this suite. 01/30/23 09:43:46.985
------------------------------
â€¢ [3.685 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:43:43.308
    Jan 30 09:43:43.308: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename webhook 01/30/23 09:43:43.31
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:43.332
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:43.336
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 01/30/23 09:43:43.36
    STEP: Create role binding to let webhook read extension-apiserver-authentication 01/30/23 09:43:43.84
    STEP: Deploying the webhook pod 01/30/23 09:43:43.852
    STEP: Wait for the deployment to be ready 01/30/23 09:43:43.863
    Jan 30 09:43:43.870: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 01/30/23 09:43:45.876
    STEP: Verifying the service has paired with the endpoint 01/30/23 09:43:45.902
    Jan 30 09:43:46.902: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should unconditionally reject operations on fail closed webhook [Conformance]
      test/e2e/apimachinery/webhook.go:239
    STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 01/30/23 09:43:46.905
    STEP: create a namespace for the webhook 01/30/23 09:43:46.917
    STEP: create a configmap should be unconditionally rejected by the webhook 01/30/23 09:43:46.922
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:43:46.943: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-4178" for this suite. 01/30/23 09:43:46.978
    STEP: Destroying namespace "webhook-4178-markers" for this suite. 01/30/23 09:43:46.985
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 01/30/23 09:43:46.994
Jan 30 09:43:46.994: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
STEP: Building a namespace api object, basename proxy 01/30/23 09:43:46.995
STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:47.008
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:47.01
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
STEP: starting an echo server on multiple ports 01/30/23 09:43:47.024
STEP: creating replication controller proxy-service-v5fkv in namespace proxy-302 01/30/23 09:43:47.024
I0130 09:43:47.032263      24 runners.go:193] Created replication controller with name: proxy-service-v5fkv, namespace: proxy-302, replica count: 1
I0130 09:43:48.083329      24 runners.go:193] proxy-service-v5fkv Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0130 09:43:49.083459      24 runners.go:193] proxy-service-v5fkv Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jan 30 09:43:49.086: INFO: setup took 2.073324042s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts 01/30/23 09:43:49.086
Jan 30 09:43:49.089: INFO: (0) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.393501ms)
Jan 30 09:43:49.089: INFO: (0) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.443768ms)
Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 5.63933ms)
Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 5.5521ms)
Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 5.50908ms)
Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 5.570635ms)
Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 5.608739ms)
Jan 30 09:43:49.092: INFO: (0) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.710696ms)
Jan 30 09:43:49.092: INFO: (0) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.613661ms)
Jan 30 09:43:49.092: INFO: (0) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 5.629171ms)
Jan 30 09:43:49.100: INFO: (0) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 14.353239ms)
Jan 30 09:43:49.102: INFO: (0) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 16.593527ms)
Jan 30 09:43:49.103: INFO: (0) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 16.569406ms)
Jan 30 09:43:49.103: INFO: (0) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 16.61637ms)
Jan 30 09:43:49.103: INFO: (0) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 16.655869ms)
Jan 30 09:43:49.103: INFO: (0) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 16.717486ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.364982ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 3.560328ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.723211ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 3.644194ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 3.774445ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.913539ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.957137ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 3.793596ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 3.83ms)
Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 3.897544ms)
Jan 30 09:43:49.108: INFO: (1) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 5.375688ms)
Jan 30 09:43:49.108: INFO: (1) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 5.184741ms)
Jan 30 09:43:49.109: INFO: (1) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 5.345613ms)
Jan 30 09:43:49.109: INFO: (1) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 5.731313ms)
Jan 30 09:43:49.109: INFO: (1) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 6.286609ms)
Jan 30 09:43:49.109: INFO: (1) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 6.141967ms)
Jan 30 09:43:49.112: INFO: (2) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 2.085694ms)
Jan 30 09:43:49.113: INFO: (2) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 2.953731ms)
Jan 30 09:43:49.113: INFO: (2) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 3.789263ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 3.914986ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 4.04993ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 4.205419ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 4.482633ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 4.475054ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 4.509973ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 4.550374ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 4.731647ms)
Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 4.619422ms)
Jan 30 09:43:49.116: INFO: (2) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 6.011566ms)
Jan 30 09:43:49.116: INFO: (2) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 5.818462ms)
Jan 30 09:43:49.116: INFO: (2) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 6.201609ms)
Jan 30 09:43:49.116: INFO: (2) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 6.449237ms)
Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 5.602701ms)
Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.393581ms)
Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 5.537335ms)
Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 5.828945ms)
Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.925616ms)
Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 5.490376ms)
Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 6.464471ms)
Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.933212ms)
Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 6.227167ms)
Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 6.940602ms)
Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 6.513036ms)
Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 6.612233ms)
Jan 30 09:43:49.124: INFO: (3) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 7.627218ms)
Jan 30 09:43:49.126: INFO: (3) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 9.171985ms)
Jan 30 09:43:49.126: INFO: (3) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 9.355621ms)
Jan 30 09:43:49.126: INFO: (3) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 9.420517ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.562284ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.681731ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.799126ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 3.901281ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 3.987015ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 4.302623ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 4.055173ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 3.844309ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.983127ms)
Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 3.98096ms)
Jan 30 09:43:49.131: INFO: (4) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 4.173359ms)
Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 7.191905ms)
Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 7.032504ms)
Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 6.966883ms)
Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 6.863241ms)
Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 6.823459ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 5.289596ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 5.297126ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 5.307717ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 5.314105ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.349109ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.300278ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 5.461047ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.366691ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.479732ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 5.366681ms)
Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 5.635807ms)
Jan 30 09:43:49.141: INFO: (5) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 7.566269ms)
Jan 30 09:43:49.141: INFO: (5) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 7.540793ms)
Jan 30 09:43:49.141: INFO: (5) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 7.586807ms)
Jan 30 09:43:49.141: INFO: (5) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 7.607905ms)
Jan 30 09:43:49.142: INFO: (5) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 7.978815ms)
Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.032025ms)
Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.445079ms)
Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 2.991271ms)
Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 3.27146ms)
Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 3.104437ms)
Jan 30 09:43:49.146: INFO: (6) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 4.053104ms)
Jan 30 09:43:49.147: INFO: (6) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 4.636757ms)
Jan 30 09:43:49.147: INFO: (6) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 4.567189ms)
Jan 30 09:43:49.147: INFO: (6) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 4.953561ms)
Jan 30 09:43:49.147: INFO: (6) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 5.724947ms)
Jan 30 09:43:49.148: INFO: (6) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.553894ms)
Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 9.008373ms)
Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 8.855944ms)
Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 8.656296ms)
Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 8.878129ms)
Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 8.938488ms)
Jan 30 09:43:49.158: INFO: (7) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 6.723394ms)
Jan 30 09:43:49.158: INFO: (7) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 6.902729ms)
Jan 30 09:43:49.158: INFO: (7) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.836502ms)
Jan 30 09:43:49.158: INFO: (7) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 7.203058ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 9.565338ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 9.767239ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 9.855955ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 9.899567ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 9.937774ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 9.947858ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 9.996598ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 10.261167ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 10.354575ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.505231ms)
Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 10.628504ms)
Jan 30 09:43:49.163: INFO: (7) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 12.289793ms)
Jan 30 09:43:49.166: INFO: (8) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 3.06499ms)
Jan 30 09:43:49.166: INFO: (8) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 2.677517ms)
Jan 30 09:43:49.166: INFO: (8) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 2.643128ms)
Jan 30 09:43:49.170: INFO: (8) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 6.574741ms)
Jan 30 09:43:49.170: INFO: (8) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 6.266771ms)
Jan 30 09:43:49.170: INFO: (8) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 6.442559ms)
Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 7.510344ms)
Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 7.128371ms)
Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.959667ms)
Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 7.011ms)
Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 7.056734ms)
Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 7.136213ms)
Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 7.390805ms)
Jan 30 09:43:49.173: INFO: (8) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 8.788589ms)
Jan 30 09:43:49.173: INFO: (8) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 9.326158ms)
Jan 30 09:43:49.174: INFO: (8) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 9.419568ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 4.080566ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 4.410574ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 4.252765ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 4.46617ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 4.738668ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 4.20368ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 4.53432ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 4.313237ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 4.144853ms)
Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 4.489761ms)
Jan 30 09:43:49.179: INFO: (9) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 5.251378ms)
Jan 30 09:43:49.180: INFO: (9) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.037252ms)
Jan 30 09:43:49.181: INFO: (9) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 6.4843ms)
Jan 30 09:43:49.181: INFO: (9) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 6.640343ms)
Jan 30 09:43:49.181: INFO: (9) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 7.171232ms)
Jan 30 09:43:49.181: INFO: (9) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 6.725015ms)
Jan 30 09:43:49.186: INFO: (10) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 4.724098ms)
Jan 30 09:43:49.186: INFO: (10) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 4.522797ms)
Jan 30 09:43:49.187: INFO: (10) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 5.890929ms)
Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.918286ms)
Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 6.180433ms)
Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 6.583676ms)
Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.290128ms)
Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 6.580851ms)
Jan 30 09:43:49.189: INFO: (10) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 6.55201ms)
Jan 30 09:43:49.189: INFO: (10) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.982085ms)
Jan 30 09:43:49.190: INFO: (10) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 8.077982ms)
Jan 30 09:43:49.191: INFO: (10) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 8.733623ms)
Jan 30 09:43:49.191: INFO: (10) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 9.344011ms)
Jan 30 09:43:49.191: INFO: (10) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 9.380053ms)
Jan 30 09:43:49.191: INFO: (10) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 9.395703ms)
Jan 30 09:43:49.192: INFO: (10) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.096914ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.581686ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 7.858018ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 7.95762ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 8.415792ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 8.192172ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 7.970398ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 8.317656ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 8.595615ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 8.082902ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.143698ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 8.327345ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 8.591182ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.25313ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 8.437515ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.502492ms)
Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 8.265004ms)
Jan 30 09:43:49.207: INFO: (12) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 5.954112ms)
Jan 30 09:43:49.207: INFO: (12) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 6.566815ms)
Jan 30 09:43:49.210: INFO: (12) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 9.598599ms)
Jan 30 09:43:49.210: INFO: (12) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 9.674704ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 9.723131ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 9.623182ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 9.675417ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 9.720949ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 9.767992ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 9.817298ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 9.901114ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 9.968714ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 10.281835ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 10.423537ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.367839ms)
Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 10.198293ms)
Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.870464ms)
Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.994886ms)
Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.909375ms)
Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 9.104643ms)
Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 8.984523ms)
Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 9.092777ms)
Jan 30 09:43:49.222: INFO: (13) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 10.798668ms)
Jan 30 09:43:49.222: INFO: (13) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 10.789571ms)
Jan 30 09:43:49.222: INFO: (13) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 10.842324ms)
Jan 30 09:43:49.222: INFO: (13) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.793899ms)
Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 11.643975ms)
Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 11.44337ms)
Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 11.448239ms)
Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 11.460219ms)
Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 11.553053ms)
Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 12.046664ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 9.052517ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.929481ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 10.091584ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 9.784733ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 9.833571ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 9.391521ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 9.325096ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 9.241635ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 9.572629ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 9.210114ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 9.556618ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 9.883045ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 10.460553ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 7.603464ms)
Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 9.848845ms)
Jan 30 09:43:49.235: INFO: (14) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.487537ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.368015ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 8.435093ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 8.489959ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.599595ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 8.599209ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 8.673223ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 8.71089ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 8.766526ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 8.896985ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 8.862676ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 8.910102ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 9.160724ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.859069ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.890096ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 9.017786ms)
Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 9.076766ms)
Jan 30 09:43:49.253: INFO: (16) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 8.575512ms)
Jan 30 09:43:49.255: INFO: (16) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 10.415978ms)
Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 15.077065ms)
Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 14.815868ms)
Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 14.881297ms)
Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 14.971721ms)
Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 15.181777ms)
Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 15.024253ms)
Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 15.01106ms)
Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 15.250343ms)
Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 15.291213ms)
Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 15.161132ms)
Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 14.965167ms)
Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 14.926661ms)
Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 15.365243ms)
Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 15.377756ms)
Jan 30 09:43:49.280: INFO: (17) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 19.459271ms)
Jan 30 09:43:49.280: INFO: (17) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 19.86219ms)
Jan 30 09:43:49.280: INFO: (17) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 19.82574ms)
Jan 30 09:43:49.281: INFO: (17) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 20.35127ms)
Jan 30 09:43:49.282: INFO: (17) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 21.573909ms)
Jan 30 09:43:49.282: INFO: (17) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 21.599386ms)
Jan 30 09:43:49.282: INFO: (17) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 21.437239ms)
Jan 30 09:43:49.282: INFO: (17) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 21.618186ms)
Jan 30 09:43:49.283: INFO: (17) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 22.275415ms)
Jan 30 09:43:49.283: INFO: (17) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 22.376639ms)
Jan 30 09:43:49.283: INFO: (17) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 22.973063ms)
Jan 30 09:43:49.283: INFO: (17) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 22.713782ms)
Jan 30 09:43:49.284: INFO: (17) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 23.266662ms)
Jan 30 09:43:49.284: INFO: (17) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 23.804521ms)
Jan 30 09:43:49.284: INFO: (17) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 23.893562ms)
Jan 30 09:43:49.287: INFO: (17) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 26.271797ms)
Jan 30 09:43:49.301: INFO: (18) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 13.04819ms)
Jan 30 09:43:49.301: INFO: (18) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 13.463754ms)
Jan 30 09:43:49.302: INFO: (18) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 14.478525ms)
Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 14.94877ms)
Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 15.262476ms)
Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 14.998216ms)
Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 15.138093ms)
Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 15.772547ms)
Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 16.537822ms)
Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 16.711725ms)
Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 16.760732ms)
Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 16.624101ms)
Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 16.402897ms)
Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 16.455494ms)
Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 17.036555ms)
Jan 30 09:43:49.306: INFO: (18) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 18.664558ms)
Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 5.033961ms)
Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 5.147369ms)
Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.207032ms)
Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.486425ms)
Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 5.342936ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 7.061983ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 7.398612ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 6.578202ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 6.870873ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 7.183046ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 7.252837ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 7.098695ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 6.793821ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.775201ms)
Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 6.939832ms)
Jan 30 09:43:49.317: INFO: (19) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 10.073578ms)
STEP: deleting ReplicationController proxy-service-v5fkv in namespace proxy-302, will wait for the garbage collector to delete the pods 01/30/23 09:43:49.317
Jan 30 09:43:49.388: INFO: Deleting ReplicationController proxy-service-v5fkv took: 17.810906ms
Jan 30 09:43:49.489: INFO: Terminating ReplicationController proxy-service-v5fkv pods took: 101.21716ms
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Jan 30 09:43:51.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-302" for this suite. 01/30/23 09:43:51.493
------------------------------
â€¢ [4.503 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/network/proxy.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 01/30/23 09:43:46.994
    Jan 30 09:43:46.994: INFO: >>> kubeConfig: /tmp/kubeconfig-1653868973
    STEP: Building a namespace api object, basename proxy 01/30/23 09:43:46.995
    STEP: Waiting for a default service account to be provisioned in namespace 01/30/23 09:43:47.008
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 01/30/23 09:43:47.01
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] should proxy through a service and a pod  [Conformance]
      test/e2e/network/proxy.go:101
    STEP: starting an echo server on multiple ports 01/30/23 09:43:47.024
    STEP: creating replication controller proxy-service-v5fkv in namespace proxy-302 01/30/23 09:43:47.024
    I0130 09:43:47.032263      24 runners.go:193] Created replication controller with name: proxy-service-v5fkv, namespace: proxy-302, replica count: 1
    I0130 09:43:48.083329      24 runners.go:193] proxy-service-v5fkv Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0130 09:43:49.083459      24 runners.go:193] proxy-service-v5fkv Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Jan 30 09:43:49.086: INFO: setup took 2.073324042s, starting test cases
    STEP: running 16 cases, 20 attempts per case, 320 total attempts 01/30/23 09:43:49.086
    Jan 30 09:43:49.089: INFO: (0) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.393501ms)
    Jan 30 09:43:49.089: INFO: (0) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.443768ms)
    Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 5.63933ms)
    Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 5.5521ms)
    Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 5.50908ms)
    Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 5.570635ms)
    Jan 30 09:43:49.091: INFO: (0) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 5.608739ms)
    Jan 30 09:43:49.092: INFO: (0) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.710696ms)
    Jan 30 09:43:49.092: INFO: (0) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.613661ms)
    Jan 30 09:43:49.092: INFO: (0) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 5.629171ms)
    Jan 30 09:43:49.100: INFO: (0) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 14.353239ms)
    Jan 30 09:43:49.102: INFO: (0) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 16.593527ms)
    Jan 30 09:43:49.103: INFO: (0) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 16.569406ms)
    Jan 30 09:43:49.103: INFO: (0) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 16.61637ms)
    Jan 30 09:43:49.103: INFO: (0) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 16.655869ms)
    Jan 30 09:43:49.103: INFO: (0) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 16.717486ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.364982ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 3.560328ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.723211ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 3.644194ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 3.774445ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.913539ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.957137ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 3.793596ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 3.83ms)
    Jan 30 09:43:49.107: INFO: (1) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 3.897544ms)
    Jan 30 09:43:49.108: INFO: (1) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 5.375688ms)
    Jan 30 09:43:49.108: INFO: (1) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 5.184741ms)
    Jan 30 09:43:49.109: INFO: (1) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 5.345613ms)
    Jan 30 09:43:49.109: INFO: (1) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 5.731313ms)
    Jan 30 09:43:49.109: INFO: (1) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 6.286609ms)
    Jan 30 09:43:49.109: INFO: (1) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 6.141967ms)
    Jan 30 09:43:49.112: INFO: (2) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 2.085694ms)
    Jan 30 09:43:49.113: INFO: (2) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 2.953731ms)
    Jan 30 09:43:49.113: INFO: (2) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 3.789263ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 3.914986ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 4.04993ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 4.205419ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 4.482633ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 4.475054ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 4.509973ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 4.550374ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 4.731647ms)
    Jan 30 09:43:49.114: INFO: (2) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 4.619422ms)
    Jan 30 09:43:49.116: INFO: (2) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 6.011566ms)
    Jan 30 09:43:49.116: INFO: (2) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 5.818462ms)
    Jan 30 09:43:49.116: INFO: (2) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 6.201609ms)
    Jan 30 09:43:49.116: INFO: (2) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 6.449237ms)
    Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 5.602701ms)
    Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.393581ms)
    Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 5.537335ms)
    Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 5.828945ms)
    Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.925616ms)
    Jan 30 09:43:49.122: INFO: (3) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 5.490376ms)
    Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 6.464471ms)
    Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.933212ms)
    Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 6.227167ms)
    Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 6.940602ms)
    Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 6.513036ms)
    Jan 30 09:43:49.123: INFO: (3) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 6.612233ms)
    Jan 30 09:43:49.124: INFO: (3) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 7.627218ms)
    Jan 30 09:43:49.126: INFO: (3) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 9.171985ms)
    Jan 30 09:43:49.126: INFO: (3) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 9.355621ms)
    Jan 30 09:43:49.126: INFO: (3) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 9.420517ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.562284ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.681731ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.799126ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 3.901281ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 3.987015ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 4.302623ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 4.055173ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 3.844309ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 3.983127ms)
    Jan 30 09:43:49.130: INFO: (4) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 3.98096ms)
    Jan 30 09:43:49.131: INFO: (4) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 4.173359ms)
    Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 7.191905ms)
    Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 7.032504ms)
    Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 6.966883ms)
    Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 6.863241ms)
    Jan 30 09:43:49.133: INFO: (4) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 6.823459ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 5.289596ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 5.297126ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 5.307717ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 5.314105ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.349109ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.300278ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 5.461047ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.366691ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.479732ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 5.366681ms)
    Jan 30 09:43:49.139: INFO: (5) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 5.635807ms)
    Jan 30 09:43:49.141: INFO: (5) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 7.566269ms)
    Jan 30 09:43:49.141: INFO: (5) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 7.540793ms)
    Jan 30 09:43:49.141: INFO: (5) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 7.586807ms)
    Jan 30 09:43:49.141: INFO: (5) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 7.607905ms)
    Jan 30 09:43:49.142: INFO: (5) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 7.978815ms)
    Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.032025ms)
    Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 3.445079ms)
    Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 2.991271ms)
    Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 3.27146ms)
    Jan 30 09:43:49.145: INFO: (6) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 3.104437ms)
    Jan 30 09:43:49.146: INFO: (6) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 4.053104ms)
    Jan 30 09:43:49.147: INFO: (6) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 4.636757ms)
    Jan 30 09:43:49.147: INFO: (6) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 4.567189ms)
    Jan 30 09:43:49.147: INFO: (6) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 4.953561ms)
    Jan 30 09:43:49.147: INFO: (6) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 5.724947ms)
    Jan 30 09:43:49.148: INFO: (6) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.553894ms)
    Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 9.008373ms)
    Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 8.855944ms)
    Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 8.656296ms)
    Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 8.878129ms)
    Jan 30 09:43:49.151: INFO: (6) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 8.938488ms)
    Jan 30 09:43:49.158: INFO: (7) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 6.723394ms)
    Jan 30 09:43:49.158: INFO: (7) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 6.902729ms)
    Jan 30 09:43:49.158: INFO: (7) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.836502ms)
    Jan 30 09:43:49.158: INFO: (7) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 7.203058ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 9.565338ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 9.767239ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 9.855955ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 9.899567ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 9.937774ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 9.947858ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 9.996598ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 10.261167ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 10.354575ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.505231ms)
    Jan 30 09:43:49.161: INFO: (7) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 10.628504ms)
    Jan 30 09:43:49.163: INFO: (7) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 12.289793ms)
    Jan 30 09:43:49.166: INFO: (8) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 3.06499ms)
    Jan 30 09:43:49.166: INFO: (8) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 2.677517ms)
    Jan 30 09:43:49.166: INFO: (8) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 2.643128ms)
    Jan 30 09:43:49.170: INFO: (8) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 6.574741ms)
    Jan 30 09:43:49.170: INFO: (8) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 6.266771ms)
    Jan 30 09:43:49.170: INFO: (8) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 6.442559ms)
    Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 7.510344ms)
    Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 7.128371ms)
    Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.959667ms)
    Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 7.011ms)
    Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 7.056734ms)
    Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 7.136213ms)
    Jan 30 09:43:49.171: INFO: (8) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 7.390805ms)
    Jan 30 09:43:49.173: INFO: (8) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 8.788589ms)
    Jan 30 09:43:49.173: INFO: (8) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 9.326158ms)
    Jan 30 09:43:49.174: INFO: (8) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 9.419568ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 4.080566ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 4.410574ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 4.252765ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 4.46617ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 4.738668ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 4.20368ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 4.53432ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 4.313237ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 4.144853ms)
    Jan 30 09:43:49.178: INFO: (9) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 4.489761ms)
    Jan 30 09:43:49.179: INFO: (9) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 5.251378ms)
    Jan 30 09:43:49.180: INFO: (9) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.037252ms)
    Jan 30 09:43:49.181: INFO: (9) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 6.4843ms)
    Jan 30 09:43:49.181: INFO: (9) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 6.640343ms)
    Jan 30 09:43:49.181: INFO: (9) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 7.171232ms)
    Jan 30 09:43:49.181: INFO: (9) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 6.725015ms)
    Jan 30 09:43:49.186: INFO: (10) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 4.724098ms)
    Jan 30 09:43:49.186: INFO: (10) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 4.522797ms)
    Jan 30 09:43:49.187: INFO: (10) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 5.890929ms)
    Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.918286ms)
    Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 6.180433ms)
    Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 6.583676ms)
    Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.290128ms)
    Jan 30 09:43:49.188: INFO: (10) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 6.580851ms)
    Jan 30 09:43:49.189: INFO: (10) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 6.55201ms)
    Jan 30 09:43:49.189: INFO: (10) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.982085ms)
    Jan 30 09:43:49.190: INFO: (10) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 8.077982ms)
    Jan 30 09:43:49.191: INFO: (10) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 8.733623ms)
    Jan 30 09:43:49.191: INFO: (10) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 9.344011ms)
    Jan 30 09:43:49.191: INFO: (10) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 9.380053ms)
    Jan 30 09:43:49.191: INFO: (10) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 9.395703ms)
    Jan 30 09:43:49.192: INFO: (10) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.096914ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.581686ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 7.858018ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 7.95762ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 8.415792ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 8.192172ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 7.970398ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 8.317656ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 8.595615ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 8.082902ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.143698ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 8.327345ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 8.591182ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.25313ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 8.437515ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.502492ms)
    Jan 30 09:43:49.200: INFO: (11) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 8.265004ms)
    Jan 30 09:43:49.207: INFO: (12) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 5.954112ms)
    Jan 30 09:43:49.207: INFO: (12) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 6.566815ms)
    Jan 30 09:43:49.210: INFO: (12) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 9.598599ms)
    Jan 30 09:43:49.210: INFO: (12) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 9.674704ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 9.723131ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 9.623182ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 9.675417ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 9.720949ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 9.767992ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 9.817298ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 9.901114ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 9.968714ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 10.281835ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 10.423537ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.367839ms)
    Jan 30 09:43:49.211: INFO: (12) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 10.198293ms)
    Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.870464ms)
    Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.994886ms)
    Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.909375ms)
    Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 9.104643ms)
    Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 8.984523ms)
    Jan 30 09:43:49.220: INFO: (13) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 9.092777ms)
    Jan 30 09:43:49.222: INFO: (13) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 10.798668ms)
    Jan 30 09:43:49.222: INFO: (13) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 10.789571ms)
    Jan 30 09:43:49.222: INFO: (13) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 10.842324ms)
    Jan 30 09:43:49.222: INFO: (13) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.793899ms)
    Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 11.643975ms)
    Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 11.44337ms)
    Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 11.448239ms)
    Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 11.460219ms)
    Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 11.553053ms)
    Jan 30 09:43:49.223: INFO: (13) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 12.046664ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 9.052517ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.929481ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 10.091584ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 9.784733ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 9.833571ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 9.391521ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 9.325096ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 9.241635ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 9.572629ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 9.210114ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 9.556618ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 9.883045ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 10.460553ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 7.603464ms)
    Jan 30 09:43:49.234: INFO: (14) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 9.848845ms)
    Jan 30 09:43:49.235: INFO: (14) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 10.487537ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.368015ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 8.435093ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 8.489959ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 8.599595ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 8.599209ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 8.673223ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 8.71089ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 8.766526ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 8.896985ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 8.862676ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 8.910102ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 9.160724ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.859069ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 8.890096ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 9.017786ms)
    Jan 30 09:43:49.244: INFO: (15) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 9.076766ms)
    Jan 30 09:43:49.253: INFO: (16) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 8.575512ms)
    Jan 30 09:43:49.255: INFO: (16) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 10.415978ms)
    Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 15.077065ms)
    Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 14.815868ms)
    Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 14.881297ms)
    Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 14.971721ms)
    Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 15.181777ms)
    Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 15.024253ms)
    Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 15.01106ms)
    Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 15.250343ms)
    Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 15.291213ms)
    Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 15.161132ms)
    Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 14.965167ms)
    Jan 30 09:43:49.259: INFO: (16) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 14.926661ms)
    Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 15.365243ms)
    Jan 30 09:43:49.260: INFO: (16) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 15.377756ms)
    Jan 30 09:43:49.280: INFO: (17) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 19.459271ms)
    Jan 30 09:43:49.280: INFO: (17) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 19.86219ms)
    Jan 30 09:43:49.280: INFO: (17) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 19.82574ms)
    Jan 30 09:43:49.281: INFO: (17) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 20.35127ms)
    Jan 30 09:43:49.282: INFO: (17) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 21.573909ms)
    Jan 30 09:43:49.282: INFO: (17) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 21.599386ms)
    Jan 30 09:43:49.282: INFO: (17) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 21.437239ms)
    Jan 30 09:43:49.282: INFO: (17) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 21.618186ms)
    Jan 30 09:43:49.283: INFO: (17) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 22.275415ms)
    Jan 30 09:43:49.283: INFO: (17) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 22.376639ms)
    Jan 30 09:43:49.283: INFO: (17) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 22.973063ms)
    Jan 30 09:43:49.283: INFO: (17) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 22.713782ms)
    Jan 30 09:43:49.284: INFO: (17) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 23.266662ms)
    Jan 30 09:43:49.284: INFO: (17) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 23.804521ms)
    Jan 30 09:43:49.284: INFO: (17) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 23.893562ms)
    Jan 30 09:43:49.287: INFO: (17) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 26.271797ms)
    Jan 30 09:43:49.301: INFO: (18) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 13.04819ms)
    Jan 30 09:43:49.301: INFO: (18) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 13.463754ms)
    Jan 30 09:43:49.302: INFO: (18) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 14.478525ms)
    Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 14.94877ms)
    Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 15.262476ms)
    Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 14.998216ms)
    Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 15.138093ms)
    Jan 30 09:43:49.303: INFO: (18) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 15.772547ms)
    Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 16.537822ms)
    Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 16.711725ms)
    Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 16.760732ms)
    Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 16.624101ms)
    Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 16.402897ms)
    Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 16.455494ms)
    Jan 30 09:43:49.304: INFO: (18) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 17.036555ms)
    Jan 30 09:43:49.306: INFO: (18) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 18.664558ms)
    Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b/proxy/rewriteme">test</a> (200; 5.033961ms)
    Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:443/proxy/tlsrewriteme... (200; 5.147369ms)
    Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 5.207032ms)
    Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 5.486425ms)
    Jan 30 09:43:49.312: INFO: (19) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:462/proxy/: tls qux (200; 5.342936ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname1/proxy/: tls baz (200; 7.061983ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">t... (200; 7.398612ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname2/proxy/: bar (200; 6.578202ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/https:proxy-service-v5fkv:tlsportname2/proxy/: tls qux (200; 6.870873ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname1/proxy/: foo (200; 7.183046ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/services/proxy-service-v5fkv:portname1/proxy/: foo (200; 7.252837ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:162/proxy/: bar (200; 7.098695ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/: <a href="/api/v1/namespaces/proxy-302/pods/proxy-service-v5fkv-lkm4b:1080/proxy/rewriteme">test</... (200; 6.793821ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/http:proxy-service-v5fkv-lkm4b:160/proxy/: foo (200; 6.775201ms)
    Jan 30 09:43:49.313: INFO: (19) /api/v1/namespaces/proxy-302/pods/https:proxy-service-v5fkv-lkm4b:460/proxy/: tls baz (200; 6.939832ms)
    Jan 30 09:43:49.317: INFO: (19) /api/v1/namespaces/proxy-302/services/http:proxy-service-v5fkv:portname2/proxy/: bar (200; 10.073578ms)
    STEP: deleting ReplicationController proxy-service-v5fkv in namespace proxy-302, will wait for the garbage collector to delete the pods 01/30/23 09:43:49.317
    Jan 30 09:43:49.388: INFO: Deleting ReplicationController proxy-service-v5fkv took: 17.810906ms
    Jan 30 09:43:49.489: INFO: Terminating ReplicationController proxy-service-v5fkv pods took: 101.21716ms
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Jan 30 09:43:51.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-302" for this suite. 01/30/23 09:43:51.493
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
Jan 30 09:43:51.498: INFO: Running AfterSuite actions on node 1
Jan 30 09:43:51.498: INFO: Skipping dumping logs from cluster
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88

  Begin Captured GinkgoWriter Output >>
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    Jan 30 09:43:51.498: INFO: Running AfterSuite actions on node 1
    Jan 30 09:43:51.498: INFO: Skipping dumping logs from cluster
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153
[ReportAfterSuite] TOP-LEVEL
  test/e2e/e2e_test.go:153
------------------------------
[ReportAfterSuite] PASSED [0.000 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/e2e_test.go:153
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529
[ReportAfterSuite] TOP-LEVEL
  test/e2e/framework/test_context.go:529
------------------------------
[ReportAfterSuite] PASSED [0.073 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/framework/test_context.go:529
  << End Captured GinkgoWriter Output
------------------------------

Ran 368 of 7069 Specs in 5548.584 seconds
SUCCESS! -- 368 Passed | 0 Failed | 0 Pending | 6701 Skipped
PASS

Ginkgo ran 1 suite in 1h32m28.899734908s
Test Suite Passed
[38;5;228mYou're using deprecated Ginkgo functionality:[0m
[38;5;228m=============================================[0m
  [38;5;11m--noColor is deprecated, use --no-color instead[0m
  [1mLearn more at:[0m [38;5;14m[4mhttps://onsi.github.io/ginkgo/MIGRATING_TO_V2#changed-command-line-flags[0m

[38;5;243mTo silence deprecations that can be silenced set the following environment variable:[0m
  [38;5;243mACK_GINKGO_DEPRECATIONS=2.4.0[0m

