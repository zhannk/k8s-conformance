I0309 07:56:49.869602      23 e2e.go:126] Starting e2e run "ac892d85-34a4-4743-9959-6e8abcea2ae2" on Ginkgo node 1
Mar  9 07:56:49.926: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1678348609 - will randomize all specs

Will run 368 of 7069 specs
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Mar  9 07:56:50.153: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 07:56:50.155: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Mar  9 07:56:50.183: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Mar  9 07:56:50.236: INFO: 13 / 13 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Mar  9 07:56:50.236: INFO: expected 3 pod replicas in namespace 'kube-system', 3 are Running and Ready.
Mar  9 07:56:50.236: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Mar  9 07:56:50.245: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
Mar  9 07:56:50.245: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
Mar  9 07:56:50.245: INFO: e2e test version: v1.26.2
Mar  9 07:56:50.247: INFO: kube-apiserver version: v1.26.2
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Mar  9 07:56:50.247: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 07:56:50.252: INFO: Cluster IP family: ipv4
------------------------------
[SynchronizedBeforeSuite] PASSED [0.099 seconds]
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77

  Begin Captured GinkgoWriter Output >>
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Mar  9 07:56:50.153: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 07:56:50.155: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
    Mar  9 07:56:50.183: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
    Mar  9 07:56:50.236: INFO: 13 / 13 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
    Mar  9 07:56:50.236: INFO: expected 3 pod replicas in namespace 'kube-system', 3 are Running and Ready.
    Mar  9 07:56:50.236: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
    Mar  9 07:56:50.245: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
    Mar  9 07:56:50.245: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
    Mar  9 07:56:50.245: INFO: e2e test version: v1.26.2
    Mar  9 07:56:50.247: INFO: kube-apiserver version: v1.26.2
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Mar  9 07:56:50.247: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 07:56:50.252: INFO: Cluster IP family: ipv4
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch
  watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:56:50.276
Mar  9 07:56:50.276: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-watch 03/09/23 07:56:50.277
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:56:50.294
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:56:50.3
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
Mar  9 07:56:50.306: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Creating first CR  03/09/23 07:56:52.924
Mar  9 07:56:52.931: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:56:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:56:52Z]] name:name1 resourceVersion:247831 uid:4db4eaaa-09c3-413b-908e-db95b8246352] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR 03/09/23 07:57:02.932
Mar  9 07:57:02.942: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:57:02Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:02Z]] name:name2 resourceVersion:247850 uid:071574f1-42db-476a-bc16-1f4864531f7b] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR 03/09/23 07:57:12.945
Mar  9 07:57:12.955: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:56:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:12Z]] name:name1 resourceVersion:247868 uid:4db4eaaa-09c3-413b-908e-db95b8246352] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR 03/09/23 07:57:22.955
Mar  9 07:57:22.965: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:57:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:22Z]] name:name2 resourceVersion:247885 uid:071574f1-42db-476a-bc16-1f4864531f7b] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR 03/09/23 07:57:32.968
Mar  9 07:57:32.979: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:56:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:12Z]] name:name1 resourceVersion:247901 uid:4db4eaaa-09c3-413b-908e-db95b8246352] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR 03/09/23 07:57:42.981
Mar  9 07:57:42.992: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:57:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:22Z]] name:name2 resourceVersion:247917 uid:071574f1-42db-476a-bc16-1f4864531f7b] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 07:57:53.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-watch-336" for this suite. 03/09/23 07:57:53.519
------------------------------
â€¢ [SLOW TEST] [63.251 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/apimachinery/crd_watch.go:51

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:56:50.276
    Mar  9 07:56:50.276: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-watch 03/09/23 07:56:50.277
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:56:50.294
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:56:50.3
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] watch on custom resource definition objects [Conformance]
      test/e2e/apimachinery/crd_watch.go:51
    Mar  9 07:56:50.306: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Creating first CR  03/09/23 07:56:52.924
    Mar  9 07:56:52.931: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:56:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:56:52Z]] name:name1 resourceVersion:247831 uid:4db4eaaa-09c3-413b-908e-db95b8246352] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Creating second CR 03/09/23 07:57:02.932
    Mar  9 07:57:02.942: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:57:02Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:02Z]] name:name2 resourceVersion:247850 uid:071574f1-42db-476a-bc16-1f4864531f7b] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying first CR 03/09/23 07:57:12.945
    Mar  9 07:57:12.955: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:56:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:12Z]] name:name1 resourceVersion:247868 uid:4db4eaaa-09c3-413b-908e-db95b8246352] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying second CR 03/09/23 07:57:22.955
    Mar  9 07:57:22.965: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:57:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:22Z]] name:name2 resourceVersion:247885 uid:071574f1-42db-476a-bc16-1f4864531f7b] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting first CR 03/09/23 07:57:32.968
    Mar  9 07:57:32.979: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:56:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:12Z]] name:name1 resourceVersion:247901 uid:4db4eaaa-09c3-413b-908e-db95b8246352] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting second CR 03/09/23 07:57:42.981
    Mar  9 07:57:42.992: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-03-09T07:57:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-03-09T07:57:22Z]] name:name2 resourceVersion:247917 uid:071574f1-42db-476a-bc16-1f4864531f7b] num:map[num1:9223372036854775807 num2:1000000]]}
    [AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:57:53.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-watch-336" for this suite. 03/09/23 07:57:53.519
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:57:53.53
Mar  9 07:57:53.530: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 07:57:53.532
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:57:53.546
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:57:53.551
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
STEP: Creating projection with secret that has name projected-secret-test-aa807d78-65a4-48ab-b7b7-68084ab8cdac 03/09/23 07:57:53.556
STEP: Creating a pod to test consume secrets 03/09/23 07:57:53.563
Mar  9 07:57:53.577: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e" in namespace "projected-3905" to be "Succeeded or Failed"
Mar  9 07:57:53.582: INFO: Pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.193295ms
Mar  9 07:57:55.587: INFO: Pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009544203s
Mar  9 07:57:57.588: INFO: Pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010796456s
STEP: Saw pod success 03/09/23 07:57:57.588
Mar  9 07:57:57.589: INFO: Pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e" satisfied condition "Succeeded or Failed"
Mar  9 07:57:57.593: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e container projected-secret-volume-test: <nil>
STEP: delete the pod 03/09/23 07:57:57.63
Mar  9 07:57:57.643: INFO: Waiting for pod pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e to disappear
Mar  9 07:57:57.646: INFO: Pod pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar  9 07:57:57.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3905" for this suite. 03/09/23 07:57:57.653
------------------------------
â€¢ [4.130 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:57:53.53
    Mar  9 07:57:53.530: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 07:57:53.532
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:57:53.546
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:57:53.551
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:56
    STEP: Creating projection with secret that has name projected-secret-test-aa807d78-65a4-48ab-b7b7-68084ab8cdac 03/09/23 07:57:53.556
    STEP: Creating a pod to test consume secrets 03/09/23 07:57:53.563
    Mar  9 07:57:53.577: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e" in namespace "projected-3905" to be "Succeeded or Failed"
    Mar  9 07:57:53.582: INFO: Pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.193295ms
    Mar  9 07:57:55.587: INFO: Pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009544203s
    Mar  9 07:57:57.588: INFO: Pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010796456s
    STEP: Saw pod success 03/09/23 07:57:57.588
    Mar  9 07:57:57.589: INFO: Pod "pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e" satisfied condition "Succeeded or Failed"
    Mar  9 07:57:57.593: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 07:57:57.63
    Mar  9 07:57:57.643: INFO: Waiting for pod pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e to disappear
    Mar  9 07:57:57.646: INFO: Pod pod-projected-secrets-5ca9b1cf-1ba9-4061-ab53-3040fe7c905e no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:57:57.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3905" for this suite. 03/09/23 07:57:57.653
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:57:57.661
Mar  9 07:57:57.661: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 07:57:57.663
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:57:57.679
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:57:57.687
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
STEP: Creating a pod to test emptydir 0777 on node default medium 03/09/23 07:57:57.692
Mar  9 07:57:57.703: INFO: Waiting up to 5m0s for pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6" in namespace "emptydir-91" to be "Succeeded or Failed"
Mar  9 07:57:57.708: INFO: Pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.454384ms
Mar  9 07:57:59.713: INFO: Pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01009726s
Mar  9 07:58:01.714: INFO: Pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011060813s
STEP: Saw pod success 03/09/23 07:58:01.714
Mar  9 07:58:01.715: INFO: Pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6" satisfied condition "Succeeded or Failed"
Mar  9 07:58:01.718: INFO: Trying to get logs from node k8s-worker1 pod pod-767d6ad7-d872-449d-9eb7-5b40618920d6 container test-container: <nil>
STEP: delete the pod 03/09/23 07:58:01.726
Mar  9 07:58:01.741: INFO: Waiting for pod pod-767d6ad7-d872-449d-9eb7-5b40618920d6 to disappear
Mar  9 07:58:01.745: INFO: Pod pod-767d6ad7-d872-449d-9eb7-5b40618920d6 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:01.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-91" for this suite. 03/09/23 07:58:01.751
------------------------------
â€¢ [4.098 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:57:57.661
    Mar  9 07:57:57.661: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 07:57:57.663
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:57:57.679
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:57:57.687
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:217
    STEP: Creating a pod to test emptydir 0777 on node default medium 03/09/23 07:57:57.692
    Mar  9 07:57:57.703: INFO: Waiting up to 5m0s for pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6" in namespace "emptydir-91" to be "Succeeded or Failed"
    Mar  9 07:57:57.708: INFO: Pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.454384ms
    Mar  9 07:57:59.713: INFO: Pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01009726s
    Mar  9 07:58:01.714: INFO: Pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011060813s
    STEP: Saw pod success 03/09/23 07:58:01.714
    Mar  9 07:58:01.715: INFO: Pod "pod-767d6ad7-d872-449d-9eb7-5b40618920d6" satisfied condition "Succeeded or Failed"
    Mar  9 07:58:01.718: INFO: Trying to get logs from node k8s-worker1 pod pod-767d6ad7-d872-449d-9eb7-5b40618920d6 container test-container: <nil>
    STEP: delete the pod 03/09/23 07:58:01.726
    Mar  9 07:58:01.741: INFO: Waiting for pod pod-767d6ad7-d872-449d-9eb7-5b40618920d6 to disappear
    Mar  9 07:58:01.745: INFO: Pod pod-767d6ad7-d872-449d-9eb7-5b40618920d6 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:01.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-91" for this suite. 03/09/23 07:58:01.751
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:01.761
Mar  9 07:58:01.761: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 07:58:01.763
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:01.779
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:01.784
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
STEP: creating a Pod with a static label 03/09/23 07:58:01.798
STEP: watching for Pod to be ready 03/09/23 07:58:01.81
Mar  9 07:58:01.815: INFO: observed Pod pod-test in namespace pods-3568 in phase Pending with labels: map[test-pod-static:true] & conditions []
Mar  9 07:58:01.817: INFO: observed Pod pod-test in namespace pods-3568 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:01 +0000 UTC  }]
Mar  9 07:58:01.835: INFO: observed Pod pod-test in namespace pods-3568 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:01 +0000 UTC  }]
Mar  9 07:58:02.540: INFO: observed Pod pod-test in namespace pods-3568 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:01 +0000 UTC  }]
Mar  9 07:58:04.079: INFO: Found Pod pod-test in namespace pods-3568 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:02 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:02 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:01 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data 03/09/23 07:58:04.084
STEP: getting the Pod and ensuring that it's patched 03/09/23 07:58:04.104
STEP: replacing the Pod's status Ready condition to False 03/09/23 07:58:04.108
STEP: check the Pod again to ensure its Ready conditions are False 03/09/23 07:58:04.126
STEP: deleting the Pod via a Collection with a LabelSelector 03/09/23 07:58:04.126
STEP: watching for the Pod to be deleted 03/09/23 07:58:04.139
Mar  9 07:58:04.143: INFO: observed event type MODIFIED
Mar  9 07:58:05.710: INFO: observed event type MODIFIED
Mar  9 07:58:06.473: INFO: observed event type MODIFIED
Mar  9 07:58:07.091: INFO: observed event type MODIFIED
Mar  9 07:58:07.099: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:07.111: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3568" for this suite. 03/09/23 07:58:07.117
------------------------------
â€¢ [SLOW TEST] [5.363 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:01.761
    Mar  9 07:58:01.761: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 07:58:01.763
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:01.779
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:01.784
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should run through the lifecycle of Pods and PodStatus [Conformance]
      test/e2e/common/node/pods.go:896
    STEP: creating a Pod with a static label 03/09/23 07:58:01.798
    STEP: watching for Pod to be ready 03/09/23 07:58:01.81
    Mar  9 07:58:01.815: INFO: observed Pod pod-test in namespace pods-3568 in phase Pending with labels: map[test-pod-static:true] & conditions []
    Mar  9 07:58:01.817: INFO: observed Pod pod-test in namespace pods-3568 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:01 +0000 UTC  }]
    Mar  9 07:58:01.835: INFO: observed Pod pod-test in namespace pods-3568 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:01 +0000 UTC  }]
    Mar  9 07:58:02.540: INFO: observed Pod pod-test in namespace pods-3568 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:01 +0000 UTC  }]
    Mar  9 07:58:04.079: INFO: Found Pod pod-test in namespace pods-3568 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:00 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:02 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:02 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 07:58:01 +0000 UTC  }]
    STEP: patching the Pod with a new Label and updated data 03/09/23 07:58:04.084
    STEP: getting the Pod and ensuring that it's patched 03/09/23 07:58:04.104
    STEP: replacing the Pod's status Ready condition to False 03/09/23 07:58:04.108
    STEP: check the Pod again to ensure its Ready conditions are False 03/09/23 07:58:04.126
    STEP: deleting the Pod via a Collection with a LabelSelector 03/09/23 07:58:04.126
    STEP: watching for the Pod to be deleted 03/09/23 07:58:04.139
    Mar  9 07:58:04.143: INFO: observed event type MODIFIED
    Mar  9 07:58:05.710: INFO: observed event type MODIFIED
    Mar  9 07:58:06.473: INFO: observed event type MODIFIED
    Mar  9 07:58:07.091: INFO: observed event type MODIFIED
    Mar  9 07:58:07.099: INFO: observed event type MODIFIED
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:07.111: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3568" for this suite. 03/09/23 07:58:07.117
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:07.127
Mar  9 07:58:07.127: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 07:58:07.129
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:07.144
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:07.149
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
STEP: Creating a pod to test downward API volume plugin 03/09/23 07:58:07.154
Mar  9 07:58:07.166: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711" in namespace "downward-api-8595" to be "Succeeded or Failed"
Mar  9 07:58:07.170: INFO: Pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711": Phase="Pending", Reason="", readiness=false. Elapsed: 4.134704ms
Mar  9 07:58:09.175: INFO: Pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00917897s
Mar  9 07:58:11.175: INFO: Pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009675989s
STEP: Saw pod success 03/09/23 07:58:11.175
Mar  9 07:58:11.176: INFO: Pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711" satisfied condition "Succeeded or Failed"
Mar  9 07:58:11.180: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711 container client-container: <nil>
STEP: delete the pod 03/09/23 07:58:11.188
Mar  9 07:58:11.201: INFO: Waiting for pod downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711 to disappear
Mar  9 07:58:11.205: INFO: Pod downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:11.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-8595" for this suite. 03/09/23 07:58:11.221
------------------------------
â€¢ [4.101 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:07.127
    Mar  9 07:58:07.127: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 07:58:07.129
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:07.144
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:07.149
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:84
    STEP: Creating a pod to test downward API volume plugin 03/09/23 07:58:07.154
    Mar  9 07:58:07.166: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711" in namespace "downward-api-8595" to be "Succeeded or Failed"
    Mar  9 07:58:07.170: INFO: Pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711": Phase="Pending", Reason="", readiness=false. Elapsed: 4.134704ms
    Mar  9 07:58:09.175: INFO: Pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00917897s
    Mar  9 07:58:11.175: INFO: Pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009675989s
    STEP: Saw pod success 03/09/23 07:58:11.175
    Mar  9 07:58:11.176: INFO: Pod "downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711" satisfied condition "Succeeded or Failed"
    Mar  9 07:58:11.180: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711 container client-container: <nil>
    STEP: delete the pod 03/09/23 07:58:11.188
    Mar  9 07:58:11.201: INFO: Waiting for pod downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711 to disappear
    Mar  9 07:58:11.205: INFO: Pod downwardapi-volume-7466d52d-9266-400f-92a4-e14528dbd711 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:11.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-8595" for this suite. 03/09/23 07:58:11.221
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:11.232
Mar  9 07:58:11.232: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-lifecycle-hook 03/09/23 07:58:11.234
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:11.253
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:11.258
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 03/09/23 07:58:11.269
Mar  9 07:58:11.293: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-7183" to be "running and ready"
Mar  9 07:58:11.300: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 7.006711ms
Mar  9 07:58:11.300: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar  9 07:58:13.304: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.011441767s
Mar  9 07:58:13.304: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Mar  9 07:58:13.304: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
STEP: create the pod with lifecycle hook 03/09/23 07:58:13.308
Mar  9 07:58:13.317: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-7183" to be "running and ready"
Mar  9 07:58:13.321: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 4.25419ms
Mar  9 07:58:13.321: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Mar  9 07:58:15.326: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009684598s
Mar  9 07:58:15.326: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Mar  9 07:58:17.326: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 4.009170425s
Mar  9 07:58:17.326: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
Mar  9 07:58:17.326: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
STEP: check poststart hook 03/09/23 07:58:17.33
STEP: delete the pod with lifecycle hook 03/09/23 07:58:17.338
Mar  9 07:58:17.347: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Mar  9 07:58:17.352: INFO: Pod pod-with-poststart-exec-hook still exists
Mar  9 07:58:19.353: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Mar  9 07:58:19.357: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:19.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-7183" for this suite. 03/09/23 07:58:19.364
------------------------------
â€¢ [SLOW TEST] [8.145 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:134

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:11.232
    Mar  9 07:58:11.232: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-lifecycle-hook 03/09/23 07:58:11.234
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:11.253
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:11.258
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 03/09/23 07:58:11.269
    Mar  9 07:58:11.293: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-7183" to be "running and ready"
    Mar  9 07:58:11.300: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 7.006711ms
    Mar  9 07:58:11.300: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 07:58:13.304: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.011441767s
    Mar  9 07:58:13.304: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Mar  9 07:58:13.304: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:134
    STEP: create the pod with lifecycle hook 03/09/23 07:58:13.308
    Mar  9 07:58:13.317: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-7183" to be "running and ready"
    Mar  9 07:58:13.321: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 4.25419ms
    Mar  9 07:58:13.321: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 07:58:15.326: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009684598s
    Mar  9 07:58:15.326: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 07:58:17.326: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 4.009170425s
    Mar  9 07:58:17.326: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
    Mar  9 07:58:17.326: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
    STEP: check poststart hook 03/09/23 07:58:17.33
    STEP: delete the pod with lifecycle hook 03/09/23 07:58:17.338
    Mar  9 07:58:17.347: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Mar  9 07:58:17.352: INFO: Pod pod-with-poststart-exec-hook still exists
    Mar  9 07:58:19.353: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Mar  9 07:58:19.357: INFO: Pod pod-with-poststart-exec-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:19.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-7183" for this suite. 03/09/23 07:58:19.364
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:19.378
Mar  9 07:58:19.378: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 07:58:19.38
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:19.395
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:19.401
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 07:58:19.422
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 07:58:20.858
STEP: Deploying the webhook pod 03/09/23 07:58:20.869
STEP: Wait for the deployment to be ready 03/09/23 07:58:20.885
Mar  9 07:58:20.895: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 07:58:22.907
STEP: Verifying the service has paired with the endpoint 03/09/23 07:58:22.922
Mar  9 07:58:23.923: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
STEP: Registering the crd webhook via the AdmissionRegistration API 03/09/23 07:58:23.927
STEP: Creating a custom resource definition that should be denied by the webhook 03/09/23 07:58:23.959
Mar  9 07:58:23.959: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:23.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-8741" for this suite. 03/09/23 07:58:24.053
STEP: Destroying namespace "webhook-8741-markers" for this suite. 03/09/23 07:58:24.069
------------------------------
â€¢ [4.699 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:19.378
    Mar  9 07:58:19.378: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 07:58:19.38
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:19.395
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:19.401
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 07:58:19.422
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 07:58:20.858
    STEP: Deploying the webhook pod 03/09/23 07:58:20.869
    STEP: Wait for the deployment to be ready 03/09/23 07:58:20.885
    Mar  9 07:58:20.895: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 07:58:22.907
    STEP: Verifying the service has paired with the endpoint 03/09/23 07:58:22.922
    Mar  9 07:58:23.923: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should deny crd creation [Conformance]
      test/e2e/apimachinery/webhook.go:308
    STEP: Registering the crd webhook via the AdmissionRegistration API 03/09/23 07:58:23.927
    STEP: Creating a custom resource definition that should be denied by the webhook 03/09/23 07:58:23.959
    Mar  9 07:58:23.959: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:23.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-8741" for this suite. 03/09/23 07:58:24.053
    STEP: Destroying namespace "webhook-8741-markers" for this suite. 03/09/23 07:58:24.069
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:24.079
Mar  9 07:58:24.079: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename var-expansion 03/09/23 07:58:24.081
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:24.111
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:24.116
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
STEP: Creating a pod to test substitution in container's args 03/09/23 07:58:24.121
Mar  9 07:58:24.130: INFO: Waiting up to 5m0s for pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95" in namespace "var-expansion-9529" to be "Succeeded or Failed"
Mar  9 07:58:24.139: INFO: Pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95": Phase="Pending", Reason="", readiness=false. Elapsed: 8.702498ms
Mar  9 07:58:26.144: INFO: Pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014079029s
Mar  9 07:58:28.144: INFO: Pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014043782s
STEP: Saw pod success 03/09/23 07:58:28.144
Mar  9 07:58:28.145: INFO: Pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95" satisfied condition "Succeeded or Failed"
Mar  9 07:58:28.148: INFO: Trying to get logs from node k8s-worker2 pod var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95 container dapi-container: <nil>
STEP: delete the pod 03/09/23 07:58:28.181
Mar  9 07:58:28.195: INFO: Waiting for pod var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95 to disappear
Mar  9 07:58:28.198: INFO: Pod var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:28.198: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-9529" for this suite. 03/09/23 07:58:28.207
------------------------------
â€¢ [4.135 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:24.079
    Mar  9 07:58:24.079: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename var-expansion 03/09/23 07:58:24.081
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:24.111
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:24.116
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's args [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:92
    STEP: Creating a pod to test substitution in container's args 03/09/23 07:58:24.121
    Mar  9 07:58:24.130: INFO: Waiting up to 5m0s for pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95" in namespace "var-expansion-9529" to be "Succeeded or Failed"
    Mar  9 07:58:24.139: INFO: Pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95": Phase="Pending", Reason="", readiness=false. Elapsed: 8.702498ms
    Mar  9 07:58:26.144: INFO: Pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014079029s
    Mar  9 07:58:28.144: INFO: Pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014043782s
    STEP: Saw pod success 03/09/23 07:58:28.144
    Mar  9 07:58:28.145: INFO: Pod "var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95" satisfied condition "Succeeded or Failed"
    Mar  9 07:58:28.148: INFO: Trying to get logs from node k8s-worker2 pod var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95 container dapi-container: <nil>
    STEP: delete the pod 03/09/23 07:58:28.181
    Mar  9 07:58:28.195: INFO: Waiting for pod var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95 to disappear
    Mar  9 07:58:28.198: INFO: Pod var-expansion-d06a6949-cf6f-49b1-89ee-e8c222205f95 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:28.198: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-9529" for this suite. 03/09/23 07:58:28.207
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:28.216
Mar  9 07:58:28.216: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-lifecycle-hook 03/09/23 07:58:28.218
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:28.232
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:28.237
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 03/09/23 07:58:28.247
Mar  9 07:58:28.258: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-7314" to be "running and ready"
Mar  9 07:58:28.262: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 4.070744ms
Mar  9 07:58:28.262: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar  9 07:58:30.267: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009252008s
Mar  9 07:58:30.268: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar  9 07:58:32.267: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.00878208s
Mar  9 07:58:32.267: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Mar  9 07:58:32.267: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
STEP: create the pod with lifecycle hook 03/09/23 07:58:32.271
Mar  9 07:58:32.279: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-7314" to be "running and ready"
Mar  9 07:58:32.282: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 3.297449ms
Mar  9 07:58:32.282: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Mar  9 07:58:34.288: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.008671075s
Mar  9 07:58:34.288: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
Mar  9 07:58:34.288: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 03/09/23 07:58:34.292
Mar  9 07:58:34.300: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Mar  9 07:58:34.305: INFO: Pod pod-with-prestop-exec-hook still exists
Mar  9 07:58:36.306: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Mar  9 07:58:36.311: INFO: Pod pod-with-prestop-exec-hook still exists
Mar  9 07:58:38.305: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Mar  9 07:58:38.310: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook 03/09/23 07:58:38.31
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:38.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-7314" for this suite. 03/09/23 07:58:38.325
------------------------------
â€¢ [SLOW TEST] [10.117 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:151

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:28.216
    Mar  9 07:58:28.216: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-lifecycle-hook 03/09/23 07:58:28.218
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:28.232
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:28.237
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 03/09/23 07:58:28.247
    Mar  9 07:58:28.258: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-7314" to be "running and ready"
    Mar  9 07:58:28.262: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 4.070744ms
    Mar  9 07:58:28.262: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 07:58:30.267: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009252008s
    Mar  9 07:58:30.268: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 07:58:32.267: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.00878208s
    Mar  9 07:58:32.267: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Mar  9 07:58:32.267: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:151
    STEP: create the pod with lifecycle hook 03/09/23 07:58:32.271
    Mar  9 07:58:32.279: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-7314" to be "running and ready"
    Mar  9 07:58:32.282: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 3.297449ms
    Mar  9 07:58:32.282: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 07:58:34.288: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.008671075s
    Mar  9 07:58:34.288: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
    Mar  9 07:58:34.288: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 03/09/23 07:58:34.292
    Mar  9 07:58:34.300: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Mar  9 07:58:34.305: INFO: Pod pod-with-prestop-exec-hook still exists
    Mar  9 07:58:36.306: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Mar  9 07:58:36.311: INFO: Pod pod-with-prestop-exec-hook still exists
    Mar  9 07:58:38.305: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Mar  9 07:58:38.310: INFO: Pod pod-with-prestop-exec-hook no longer exists
    STEP: check prestop hook 03/09/23 07:58:38.31
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:38.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-7314" for this suite. 03/09/23 07:58:38.325
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:38.336
Mar  9 07:58:38.336: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename var-expansion 03/09/23 07:58:38.337
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:38.355
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:38.36
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
Mar  9 07:58:38.379: INFO: Waiting up to 2m0s for pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4" in namespace "var-expansion-8402" to be "container 0 failed with reason CreateContainerConfigError"
Mar  9 07:58:38.383: INFO: Pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.251636ms
Mar  9 07:58:40.388: INFO: Pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009055942s
Mar  9 07:58:42.389: INFO: Pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010394413s
Mar  9 07:58:42.389: INFO: Pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Mar  9 07:58:42.389: INFO: Deleting pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4" in namespace "var-expansion-8402"
Mar  9 07:58:42.397: INFO: Wait up to 5m0s for pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:44.407: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-8402" for this suite. 03/09/23 07:58:44.414
------------------------------
â€¢ [SLOW TEST] [6.086 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:38.336
    Mar  9 07:58:38.336: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename var-expansion 03/09/23 07:58:38.337
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:38.355
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:38.36
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
      test/e2e/common/node/expansion.go:186
    Mar  9 07:58:38.379: INFO: Waiting up to 2m0s for pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4" in namespace "var-expansion-8402" to be "container 0 failed with reason CreateContainerConfigError"
    Mar  9 07:58:38.383: INFO: Pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.251636ms
    Mar  9 07:58:40.388: INFO: Pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009055942s
    Mar  9 07:58:42.389: INFO: Pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010394413s
    Mar  9 07:58:42.389: INFO: Pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Mar  9 07:58:42.389: INFO: Deleting pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4" in namespace "var-expansion-8402"
    Mar  9 07:58:42.397: INFO: Wait up to 5m0s for pod "var-expansion-b416ef32-df2c-4aa2-b661-c51ad726dce4" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:44.407: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-8402" for this suite. 03/09/23 07:58:44.414
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:44.423
Mar  9 07:58:44.423: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename endpointslice 03/09/23 07:58:44.425
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:44.441
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:44.446
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
Mar  9 07:58:44.465: INFO: Endpoints addresses: [192.168.0.101] , ports: [6443]
Mar  9 07:58:44.466: INFO: EndpointSlices addresses: [192.168.0.101] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:44.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-2773" for this suite. 03/09/23 07:58:44.471
------------------------------
â€¢ [0.055 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:44.423
    Mar  9 07:58:44.423: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename endpointslice 03/09/23 07:58:44.425
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:44.441
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:44.446
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
      test/e2e/network/endpointslice.go:66
    Mar  9 07:58:44.465: INFO: Endpoints addresses: [192.168.0.101] , ports: [6443]
    Mar  9 07:58:44.466: INFO: EndpointSlices addresses: [192.168.0.101] , ports: [6443]
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:44.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-2773" for this suite. 03/09/23 07:58:44.471
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:44.485
Mar  9 07:58:44.485: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename watch 03/09/23 07:58:44.487
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:44.501
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:44.506
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
STEP: creating a watch on configmaps with a certain label 03/09/23 07:58:44.511
STEP: creating a new configmap 03/09/23 07:58:44.514
STEP: modifying the configmap once 03/09/23 07:58:44.519
STEP: changing the label value of the configmap 03/09/23 07:58:44.528
STEP: Expecting to observe a delete notification for the watched object 03/09/23 07:58:44.536
Mar  9 07:58:44.536: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248403 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 07:58:44.537: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248404 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 07:58:44.537: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248405 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time 03/09/23 07:58:44.537
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 03/09/23 07:58:44.546
STEP: changing the label value of the configmap back 03/09/23 07:58:54.547
STEP: modifying the configmap a third time 03/09/23 07:58:54.556
STEP: deleting the configmap 03/09/23 07:58:54.566
STEP: Expecting to observe an add notification for the watched object when the label value was restored 03/09/23 07:58:54.573
Mar  9 07:58:54.573: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248437 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 07:58:54.574: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248438 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 07:58:54.574: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248439 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:54.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-4797" for this suite. 03/09/23 07:58:54.58
------------------------------
â€¢ [SLOW TEST] [10.103 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:44.485
    Mar  9 07:58:44.485: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename watch 03/09/23 07:58:44.487
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:44.501
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:44.506
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
      test/e2e/apimachinery/watch.go:257
    STEP: creating a watch on configmaps with a certain label 03/09/23 07:58:44.511
    STEP: creating a new configmap 03/09/23 07:58:44.514
    STEP: modifying the configmap once 03/09/23 07:58:44.519
    STEP: changing the label value of the configmap 03/09/23 07:58:44.528
    STEP: Expecting to observe a delete notification for the watched object 03/09/23 07:58:44.536
    Mar  9 07:58:44.536: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248403 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 07:58:44.537: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248404 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 07:58:44.537: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248405 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time 03/09/23 07:58:44.537
    STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 03/09/23 07:58:44.546
    STEP: changing the label value of the configmap back 03/09/23 07:58:54.547
    STEP: modifying the configmap a third time 03/09/23 07:58:54.556
    STEP: deleting the configmap 03/09/23 07:58:54.566
    STEP: Expecting to observe an add notification for the watched object when the label value was restored 03/09/23 07:58:54.573
    Mar  9 07:58:54.573: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248437 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 07:58:54.574: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248438 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 07:58:54.574: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4797  0151fd53-4b8b-479c-adbd-2e2f66bbedea 248439 0 2023-03-09 07:58:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-03-09 07:58:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:54.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-4797" for this suite. 03/09/23 07:58:54.58
  << End Captured GinkgoWriter Output
------------------------------
[sig-auth] ServiceAccounts
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:54.588
Mar  9 07:58:54.589: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename svcaccounts 03/09/23 07:58:54.591
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:54.607
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:54.612
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
Mar  9 07:58:54.633: INFO: Waiting up to 5m0s for pod "pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67" in namespace "svcaccounts-6800" to be "running"
Mar  9 07:58:54.637: INFO: Pod "pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67": Phase="Pending", Reason="", readiness=false. Elapsed: 4.310086ms
Mar  9 07:58:56.643: INFO: Pod "pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67": Phase="Running", Reason="", readiness=true. Elapsed: 2.010151646s
Mar  9 07:58:56.643: INFO: Pod "pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67" satisfied condition "running"
STEP: reading a file in the container 03/09/23 07:58:56.643
Mar  9 07:58:56.643: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6800 pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container 03/09/23 07:58:56.988
Mar  9 07:58:56.988: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6800 pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container 03/09/23 07:58:57.269
Mar  9 07:58:57.269: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6800 pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Mar  9 07:58:57.577: INFO: Got root ca configmap in namespace "svcaccounts-6800"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar  9 07:58:57.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-6800" for this suite. 03/09/23 07:58:57.587
------------------------------
â€¢ [3.006 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:54.588
    Mar  9 07:58:54.589: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename svcaccounts 03/09/23 07:58:54.591
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:54.607
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:54.612
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount an API token into pods  [Conformance]
      test/e2e/auth/service_accounts.go:78
    Mar  9 07:58:54.633: INFO: Waiting up to 5m0s for pod "pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67" in namespace "svcaccounts-6800" to be "running"
    Mar  9 07:58:54.637: INFO: Pod "pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67": Phase="Pending", Reason="", readiness=false. Elapsed: 4.310086ms
    Mar  9 07:58:56.643: INFO: Pod "pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67": Phase="Running", Reason="", readiness=true. Elapsed: 2.010151646s
    Mar  9 07:58:56.643: INFO: Pod "pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67" satisfied condition "running"
    STEP: reading a file in the container 03/09/23 07:58:56.643
    Mar  9 07:58:56.643: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6800 pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
    STEP: reading a file in the container 03/09/23 07:58:56.988
    Mar  9 07:58:56.988: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6800 pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
    STEP: reading a file in the container 03/09/23 07:58:57.269
    Mar  9 07:58:57.269: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6800 pod-service-account-e402d47b-9e88-418f-912b-26829a0c8f67 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
    Mar  9 07:58:57.577: INFO: Got root ca configmap in namespace "svcaccounts-6800"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:58:57.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-6800" for this suite. 03/09/23 07:58:57.587
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:58:57.595
Mar  9 07:58:57.595: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 07:58:57.597
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:57.614
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:57.621
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
STEP: Creating secret with name secret-test-5fbef8cc-0028-46fb-a453-5c8a591875a9 03/09/23 07:58:57.626
STEP: Creating a pod to test consume secrets 03/09/23 07:58:57.632
Mar  9 07:58:57.644: INFO: Waiting up to 5m0s for pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb" in namespace "secrets-1233" to be "Succeeded or Failed"
Mar  9 07:58:57.648: INFO: Pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.875532ms
Mar  9 07:58:59.652: INFO: Pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008417613s
Mar  9 07:59:01.655: INFO: Pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011057804s
STEP: Saw pod success 03/09/23 07:59:01.655
Mar  9 07:59:01.655: INFO: Pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb" satisfied condition "Succeeded or Failed"
Mar  9 07:59:01.659: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb container secret-volume-test: <nil>
STEP: delete the pod 03/09/23 07:59:01.668
Mar  9 07:59:01.678: INFO: Waiting for pod pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb to disappear
Mar  9 07:59:01.682: INFO: Pod pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 07:59:01.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-1233" for this suite. 03/09/23 07:59:01.688
------------------------------
â€¢ [4.102 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:58:57.595
    Mar  9 07:58:57.595: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 07:58:57.597
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:58:57.614
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:58:57.621
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:57
    STEP: Creating secret with name secret-test-5fbef8cc-0028-46fb-a453-5c8a591875a9 03/09/23 07:58:57.626
    STEP: Creating a pod to test consume secrets 03/09/23 07:58:57.632
    Mar  9 07:58:57.644: INFO: Waiting up to 5m0s for pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb" in namespace "secrets-1233" to be "Succeeded or Failed"
    Mar  9 07:58:57.648: INFO: Pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.875532ms
    Mar  9 07:58:59.652: INFO: Pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008417613s
    Mar  9 07:59:01.655: INFO: Pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011057804s
    STEP: Saw pod success 03/09/23 07:59:01.655
    Mar  9 07:59:01.655: INFO: Pod "pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb" satisfied condition "Succeeded or Failed"
    Mar  9 07:59:01.659: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb container secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 07:59:01.668
    Mar  9 07:59:01.678: INFO: Waiting for pod pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb to disappear
    Mar  9 07:59:01.682: INFO: Pod pod-secrets-46caf83c-6a32-40b1-954b-bd8a7ea689eb no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:59:01.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-1233" for this suite. 03/09/23 07:59:01.688
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:59:01.698
Mar  9 07:59:01.698: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 07:59:01.7
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:59:01.714
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:59:01.718
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 07:59:01.74
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 07:59:02.99
STEP: Deploying the webhook pod 03/09/23 07:59:02.999
STEP: Wait for the deployment to be ready 03/09/23 07:59:03.014
Mar  9 07:59:03.023: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Mar  9 07:59:05.036: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 7, 59, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 7, 59, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 7, 59, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 7, 59, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/09/23 07:59:07.041
STEP: Verifying the service has paired with the endpoint 03/09/23 07:59:07.058
Mar  9 07:59:08.059: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
Mar  9 07:59:08.064: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9033-crds.webhook.example.com via the AdmissionRegistration API 03/09/23 07:59:08.578
STEP: Creating a custom resource that should be mutated by the webhook 03/09/23 07:59:08.605
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 07:59:11.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1358" for this suite. 03/09/23 07:59:11.269
STEP: Destroying namespace "webhook-1358-markers" for this suite. 03/09/23 07:59:11.278
------------------------------
â€¢ [SLOW TEST] [9.598 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:59:01.698
    Mar  9 07:59:01.698: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 07:59:01.7
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:59:01.714
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:59:01.718
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 07:59:01.74
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 07:59:02.99
    STEP: Deploying the webhook pod 03/09/23 07:59:02.999
    STEP: Wait for the deployment to be ready 03/09/23 07:59:03.014
    Mar  9 07:59:03.023: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Mar  9 07:59:05.036: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 7, 59, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 7, 59, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 7, 59, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 7, 59, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/09/23 07:59:07.041
    STEP: Verifying the service has paired with the endpoint 03/09/23 07:59:07.058
    Mar  9 07:59:08.059: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource [Conformance]
      test/e2e/apimachinery/webhook.go:291
    Mar  9 07:59:08.064: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9033-crds.webhook.example.com via the AdmissionRegistration API 03/09/23 07:59:08.578
    STEP: Creating a custom resource that should be mutated by the webhook 03/09/23 07:59:08.605
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 07:59:11.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1358" for this suite. 03/09/23 07:59:11.269
    STEP: Destroying namespace "webhook-1358-markers" for this suite. 03/09/23 07:59:11.278
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 07:59:11.299
Mar  9 07:59:11.299: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 07:59:11.301
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:59:11.319
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:59:11.324
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
STEP: Creating resourceQuota "e2e-rq-status-2lh5h" 03/09/23 07:59:11.333
Mar  9 07:59:11.344: INFO: Resource quota "e2e-rq-status-2lh5h" reports spec: hard cpu limit of 500m
Mar  9 07:59:11.344: INFO: Resource quota "e2e-rq-status-2lh5h" reports spec: hard memory limit of 500Mi
STEP: Updating resourceQuota "e2e-rq-status-2lh5h" /status 03/09/23 07:59:11.344
STEP: Confirm /status for "e2e-rq-status-2lh5h" resourceQuota via watch 03/09/23 07:59:11.355
Mar  9 07:59:11.358: INFO: observed resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList(nil)
Mar  9 07:59:11.358: INFO: Found resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Mar  9 07:59:11.358: INFO: ResourceQuota "e2e-rq-status-2lh5h" /status was updated
STEP: Patching hard spec values for cpu & memory 03/09/23 07:59:11.362
Mar  9 07:59:11.369: INFO: Resource quota "e2e-rq-status-2lh5h" reports spec: hard cpu limit of 1
Mar  9 07:59:11.369: INFO: Resource quota "e2e-rq-status-2lh5h" reports spec: hard memory limit of 1Gi
STEP: Patching "e2e-rq-status-2lh5h" /status 03/09/23 07:59:11.369
STEP: Confirm /status for "e2e-rq-status-2lh5h" resourceQuota via watch 03/09/23 07:59:11.378
Mar  9 07:59:11.381: INFO: observed resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Mar  9 07:59:11.381: INFO: Found resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
Mar  9 07:59:11.381: INFO: ResourceQuota "e2e-rq-status-2lh5h" /status was patched
STEP: Get "e2e-rq-status-2lh5h" /status 03/09/23 07:59:11.381
Mar  9 07:59:11.386: INFO: Resourcequota "e2e-rq-status-2lh5h" reports status: hard cpu of 1
Mar  9 07:59:11.386: INFO: Resourcequota "e2e-rq-status-2lh5h" reports status: hard memory of 1Gi
STEP: Repatching "e2e-rq-status-2lh5h" /status before checking Spec is unchanged 03/09/23 07:59:11.39
Mar  9 07:59:11.399: INFO: Resourcequota "e2e-rq-status-2lh5h" reports status: hard cpu of 2
Mar  9 07:59:11.399: INFO: Resourcequota "e2e-rq-status-2lh5h" reports status: hard memory of 2Gi
Mar  9 07:59:11.401: INFO: Found resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
Mar  9 08:02:41.410: INFO: ResourceQuota "e2e-rq-status-2lh5h" Spec was unchanged and /status reset
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 08:02:41.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-9508" for this suite. 03/09/23 08:02:41.418
------------------------------
â€¢ [SLOW TEST] [210.130 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 07:59:11.299
    Mar  9 07:59:11.299: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 07:59:11.301
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 07:59:11.319
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 07:59:11.324
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a resourcequota status [Conformance]
      test/e2e/apimachinery/resource_quota.go:1010
    STEP: Creating resourceQuota "e2e-rq-status-2lh5h" 03/09/23 07:59:11.333
    Mar  9 07:59:11.344: INFO: Resource quota "e2e-rq-status-2lh5h" reports spec: hard cpu limit of 500m
    Mar  9 07:59:11.344: INFO: Resource quota "e2e-rq-status-2lh5h" reports spec: hard memory limit of 500Mi
    STEP: Updating resourceQuota "e2e-rq-status-2lh5h" /status 03/09/23 07:59:11.344
    STEP: Confirm /status for "e2e-rq-status-2lh5h" resourceQuota via watch 03/09/23 07:59:11.355
    Mar  9 07:59:11.358: INFO: observed resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList(nil)
    Mar  9 07:59:11.358: INFO: Found resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Mar  9 07:59:11.358: INFO: ResourceQuota "e2e-rq-status-2lh5h" /status was updated
    STEP: Patching hard spec values for cpu & memory 03/09/23 07:59:11.362
    Mar  9 07:59:11.369: INFO: Resource quota "e2e-rq-status-2lh5h" reports spec: hard cpu limit of 1
    Mar  9 07:59:11.369: INFO: Resource quota "e2e-rq-status-2lh5h" reports spec: hard memory limit of 1Gi
    STEP: Patching "e2e-rq-status-2lh5h" /status 03/09/23 07:59:11.369
    STEP: Confirm /status for "e2e-rq-status-2lh5h" resourceQuota via watch 03/09/23 07:59:11.378
    Mar  9 07:59:11.381: INFO: observed resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Mar  9 07:59:11.381: INFO: Found resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
    Mar  9 07:59:11.381: INFO: ResourceQuota "e2e-rq-status-2lh5h" /status was patched
    STEP: Get "e2e-rq-status-2lh5h" /status 03/09/23 07:59:11.381
    Mar  9 07:59:11.386: INFO: Resourcequota "e2e-rq-status-2lh5h" reports status: hard cpu of 1
    Mar  9 07:59:11.386: INFO: Resourcequota "e2e-rq-status-2lh5h" reports status: hard memory of 1Gi
    STEP: Repatching "e2e-rq-status-2lh5h" /status before checking Spec is unchanged 03/09/23 07:59:11.39
    Mar  9 07:59:11.399: INFO: Resourcequota "e2e-rq-status-2lh5h" reports status: hard cpu of 2
    Mar  9 07:59:11.399: INFO: Resourcequota "e2e-rq-status-2lh5h" reports status: hard memory of 2Gi
    Mar  9 07:59:11.401: INFO: Found resourceQuota "e2e-rq-status-2lh5h" in namespace "resourcequota-9508" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
    Mar  9 08:02:41.410: INFO: ResourceQuota "e2e-rq-status-2lh5h" Spec was unchanged and /status reset
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:02:41.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-9508" for this suite. 03/09/23 08:02:41.418
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:02:41.432
Mar  9 08:02:41.432: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:02:41.433
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:02:41.452
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:02:41.457
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:02:41.479
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:02:42.021
STEP: Deploying the webhook pod 03/09/23 08:02:42.031
STEP: Wait for the deployment to be ready 03/09/23 08:02:42.045
Mar  9 08:02:42.056: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:02:44.069
STEP: Verifying the service has paired with the endpoint 03/09/23 08:02:44.084
Mar  9 08:02:45.085: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
Mar  9 08:02:45.089: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5320-crds.webhook.example.com via the AdmissionRegistration API 03/09/23 08:02:45.605
STEP: Creating a custom resource while v1 is storage version 03/09/23 08:02:45.635
STEP: Patching Custom Resource Definition to set v2 as storage 03/09/23 08:02:47.776
STEP: Patching the custom resource while v2 is storage version 03/09/23 08:02:47.787
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:02:48.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6079" for this suite. 03/09/23 08:02:48.538
STEP: Destroying namespace "webhook-6079-markers" for this suite. 03/09/23 08:02:48.545
------------------------------
â€¢ [SLOW TEST] [7.121 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:02:41.432
    Mar  9 08:02:41.432: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:02:41.433
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:02:41.452
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:02:41.457
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:02:41.479
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:02:42.021
    STEP: Deploying the webhook pod 03/09/23 08:02:42.031
    STEP: Wait for the deployment to be ready 03/09/23 08:02:42.045
    Mar  9 08:02:42.056: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:02:44.069
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:02:44.084
    Mar  9 08:02:45.085: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with different stored version [Conformance]
      test/e2e/apimachinery/webhook.go:323
    Mar  9 08:02:45.089: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5320-crds.webhook.example.com via the AdmissionRegistration API 03/09/23 08:02:45.605
    STEP: Creating a custom resource while v1 is storage version 03/09/23 08:02:45.635
    STEP: Patching Custom Resource Definition to set v2 as storage 03/09/23 08:02:47.776
    STEP: Patching the custom resource while v2 is storage version 03/09/23 08:02:47.787
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:02:48.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6079" for this suite. 03/09/23 08:02:48.538
    STEP: Destroying namespace "webhook-6079-markers" for this suite. 03/09/23 08:02:48.545
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:02:48.559
Mar  9 08:02:48.559: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename cronjob 03/09/23 08:02:48.561
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:02:48.574
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:02:48.578
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
STEP: Creating a ReplaceConcurrent cronjob 03/09/23 08:02:48.582
STEP: Ensuring a job is scheduled 03/09/23 08:02:48.588
STEP: Ensuring exactly one is scheduled 03/09/23 08:03:00.593
STEP: Ensuring exactly one running job exists by listing jobs explicitly 03/09/23 08:03:00.597
STEP: Ensuring the job is replaced with a new one 03/09/23 08:03:00.601
STEP: Removing cronjob 03/09/23 08:04:00.606
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar  9 08:04:00.613: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-9214" for this suite. 03/09/23 08:04:00.619
------------------------------
â€¢ [SLOW TEST] [72.067 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:02:48.559
    Mar  9 08:02:48.559: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename cronjob 03/09/23 08:02:48.561
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:02:48.574
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:02:48.578
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace jobs when ReplaceConcurrent [Conformance]
      test/e2e/apps/cronjob.go:160
    STEP: Creating a ReplaceConcurrent cronjob 03/09/23 08:02:48.582
    STEP: Ensuring a job is scheduled 03/09/23 08:02:48.588
    STEP: Ensuring exactly one is scheduled 03/09/23 08:03:00.593
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 03/09/23 08:03:00.597
    STEP: Ensuring the job is replaced with a new one 03/09/23 08:03:00.601
    STEP: Removing cronjob 03/09/23 08:04:00.606
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:04:00.613: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-9214" for this suite. 03/09/23 08:04:00.619
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:04:00.627
Mar  9 08:04:00.627: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename runtimeclass 03/09/23 08:04:00.629
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:04:00.661
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:04:00.666
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
STEP: Deleting RuntimeClass runtimeclass-8714-delete-me 03/09/23 08:04:00.678
STEP: Waiting for the RuntimeClass to disappear 03/09/23 08:04:00.684
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar  9 08:04:00.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-8714" for this suite. 03/09/23 08:04:00.703
------------------------------
â€¢ [0.083 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:04:00.627
    Mar  9 08:04:00.627: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename runtimeclass 03/09/23 08:04:00.629
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:04:00.661
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:04:00.666
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:156
    STEP: Deleting RuntimeClass runtimeclass-8714-delete-me 03/09/23 08:04:00.678
    STEP: Waiting for the RuntimeClass to disappear 03/09/23 08:04:00.684
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:04:00.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-8714" for this suite. 03/09/23 08:04:00.703
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions
  should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:04:00.715
Mar  9 08:04:00.715: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:04:00.717
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:04:00.73
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:04:00.735
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
STEP: validating api versions 03/09/23 08:04:00.74
Mar  9 08:04:00.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-2624 api-versions'
Mar  9 08:04:00.937: INFO: stderr: ""
Mar  9 08:04:00.937: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\nwebhook.example.com/v1\nwebhook.example.com/v2\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:04:00.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2624" for this suite. 03/09/23 08:04:00.943
------------------------------
â€¢ [0.235 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl api-versions
  test/e2e/kubectl/kubectl.go:818
    should check if v1 is in available api versions  [Conformance]
    test/e2e/kubectl/kubectl.go:824

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:04:00.715
    Mar  9 08:04:00.715: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:04:00.717
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:04:00.73
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:04:00.735
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if v1 is in available api versions  [Conformance]
      test/e2e/kubectl/kubectl.go:824
    STEP: validating api versions 03/09/23 08:04:00.74
    Mar  9 08:04:00.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-2624 api-versions'
    Mar  9 08:04:00.937: INFO: stderr: ""
    Mar  9 08:04:00.937: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\nwebhook.example.com/v1\nwebhook.example.com/v2\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:04:00.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2624" for this suite. 03/09/23 08:04:00.943
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:04:00.953
Mar  9 08:04:00.953: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename csiinlinevolumes 03/09/23 08:04:00.955
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:04:00.971
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:04:00.976
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
STEP: creating 03/09/23 08:04:00.981
STEP: getting 03/09/23 08:04:00.998
STEP: listing 03/09/23 08:04:01.005
STEP: deleting 03/09/23 08:04:01.008
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:04:01.026: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-4871" for this suite. 03/09/23 08:04:01.031
------------------------------
â€¢ [0.084 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:04:00.953
    Mar  9 08:04:00.953: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename csiinlinevolumes 03/09/23 08:04:00.955
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:04:00.971
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:04:00.976
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
      test/e2e/storage/csi_inline.go:46
    STEP: creating 03/09/23 08:04:00.981
    STEP: getting 03/09/23 08:04:00.998
    STEP: listing 03/09/23 08:04:01.005
    STEP: deleting 03/09/23 08:04:01.008
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:04:01.026: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-4871" for this suite. 03/09/23 08:04:01.031
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:04:01.038
Mar  9 08:04:01.038: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-probe 03/09/23 08:04:01.04
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:04:01.055
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:04:01.059
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
STEP: Creating pod busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f in namespace container-probe-5699 03/09/23 08:04:01.064
Mar  9 08:04:01.073: INFO: Waiting up to 5m0s for pod "busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f" in namespace "container-probe-5699" to be "not pending"
Mar  9 08:04:01.077: INFO: Pod "busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.68507ms
Mar  9 08:04:03.082: INFO: Pod "busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f": Phase="Running", Reason="", readiness=true. Elapsed: 2.008911014s
Mar  9 08:04:03.082: INFO: Pod "busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f" satisfied condition "not pending"
Mar  9 08:04:03.082: INFO: Started pod busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f in namespace container-probe-5699
STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 08:04:03.082
Mar  9 08:04:03.086: INFO: Initial restart count of pod busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f is 0
STEP: deleting the pod 03/09/23 08:08:03.746
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:03.767: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-5699" for this suite. 03/09/23 08:08:03.774
------------------------------
â€¢ [SLOW TEST] [242.743 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:04:01.038
    Mar  9 08:04:01.038: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-probe 03/09/23 08:04:01.04
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:04:01.055
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:04:01.059
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:152
    STEP: Creating pod busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f in namespace container-probe-5699 03/09/23 08:04:01.064
    Mar  9 08:04:01.073: INFO: Waiting up to 5m0s for pod "busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f" in namespace "container-probe-5699" to be "not pending"
    Mar  9 08:04:01.077: INFO: Pod "busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.68507ms
    Mar  9 08:04:03.082: INFO: Pod "busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f": Phase="Running", Reason="", readiness=true. Elapsed: 2.008911014s
    Mar  9 08:04:03.082: INFO: Pod "busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f" satisfied condition "not pending"
    Mar  9 08:04:03.082: INFO: Started pod busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f in namespace container-probe-5699
    STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 08:04:03.082
    Mar  9 08:04:03.086: INFO: Initial restart count of pod busybox-0e3523b9-f7c7-487a-bb8d-507857118b4f is 0
    STEP: deleting the pod 03/09/23 08:08:03.746
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:03.767: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-5699" for this suite. 03/09/23 08:08:03.774
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:03.787
Mar  9 08:08:03.787: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:08:03.789
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:03.809
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:03.814
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
STEP: creating a ConfigMap 03/09/23 08:08:03.819
STEP: fetching the ConfigMap 03/09/23 08:08:03.825
STEP: patching the ConfigMap 03/09/23 08:08:03.829
STEP: listing all ConfigMaps in all namespaces with a label selector 03/09/23 08:08:03.836
STEP: deleting the ConfigMap by collection with a label selector 03/09/23 08:08:03.842
STEP: listing all ConfigMaps in test namespace 03/09/23 08:08:03.85
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:03.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2936" for this suite. 03/09/23 08:08:03.86
------------------------------
â€¢ [0.081 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:03.787
    Mar  9 08:08:03.787: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:08:03.789
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:03.809
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:03.814
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through a ConfigMap lifecycle [Conformance]
      test/e2e/common/node/configmap.go:169
    STEP: creating a ConfigMap 03/09/23 08:08:03.819
    STEP: fetching the ConfigMap 03/09/23 08:08:03.825
    STEP: patching the ConfigMap 03/09/23 08:08:03.829
    STEP: listing all ConfigMaps in all namespaces with a label selector 03/09/23 08:08:03.836
    STEP: deleting the ConfigMap by collection with a label selector 03/09/23 08:08:03.842
    STEP: listing all ConfigMaps in test namespace 03/09/23 08:08:03.85
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:03.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2936" for this suite. 03/09/23 08:08:03.86
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:03.869
Mar  9 08:08:03.870: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:08:03.871
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:03.902
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:03.907
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
STEP: creating a service externalname-service with the type=ExternalName in namespace services-5128 03/09/23 08:08:03.915
STEP: changing the ExternalName service to type=ClusterIP 03/09/23 08:08:03.922
STEP: creating replication controller externalname-service in namespace services-5128 03/09/23 08:08:03.945
I0309 08:08:03.953628      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5128, replica count: 2
I0309 08:08:07.004258      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 08:08:07.004: INFO: Creating new exec pod
Mar  9 08:08:07.012: INFO: Waiting up to 5m0s for pod "execpodlc56p" in namespace "services-5128" to be "running"
Mar  9 08:08:07.016: INFO: Pod "execpodlc56p": Phase="Pending", Reason="", readiness=false. Elapsed: 3.968556ms
Mar  9 08:08:09.023: INFO: Pod "execpodlc56p": Phase="Running", Reason="", readiness=true. Elapsed: 2.010851084s
Mar  9 08:08:09.023: INFO: Pod "execpodlc56p" satisfied condition "running"
Mar  9 08:08:10.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-5128 exec execpodlc56p -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Mar  9 08:08:10.311: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Mar  9 08:08:10.311: INFO: stdout: ""
Mar  9 08:08:10.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-5128 exec execpodlc56p -- /bin/sh -x -c nc -v -z -w 2 10.110.160.177 80'
Mar  9 08:08:10.605: INFO: stderr: "+ nc -v -z -w 2 10.110.160.177 80\nConnection to 10.110.160.177 80 port [tcp/http] succeeded!\n"
Mar  9 08:08:10.605: INFO: stdout: ""
Mar  9 08:08:10.605: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:10.629: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5128" for this suite. 03/09/23 08:08:10.635
------------------------------
â€¢ [SLOW TEST] [6.775 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:03.869
    Mar  9 08:08:03.870: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:08:03.871
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:03.902
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:03.907
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to ClusterIP [Conformance]
      test/e2e/network/service.go:1438
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-5128 03/09/23 08:08:03.915
    STEP: changing the ExternalName service to type=ClusterIP 03/09/23 08:08:03.922
    STEP: creating replication controller externalname-service in namespace services-5128 03/09/23 08:08:03.945
    I0309 08:08:03.953628      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5128, replica count: 2
    I0309 08:08:07.004258      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 08:08:07.004: INFO: Creating new exec pod
    Mar  9 08:08:07.012: INFO: Waiting up to 5m0s for pod "execpodlc56p" in namespace "services-5128" to be "running"
    Mar  9 08:08:07.016: INFO: Pod "execpodlc56p": Phase="Pending", Reason="", readiness=false. Elapsed: 3.968556ms
    Mar  9 08:08:09.023: INFO: Pod "execpodlc56p": Phase="Running", Reason="", readiness=true. Elapsed: 2.010851084s
    Mar  9 08:08:09.023: INFO: Pod "execpodlc56p" satisfied condition "running"
    Mar  9 08:08:10.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-5128 exec execpodlc56p -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Mar  9 08:08:10.311: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Mar  9 08:08:10.311: INFO: stdout: ""
    Mar  9 08:08:10.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-5128 exec execpodlc56p -- /bin/sh -x -c nc -v -z -w 2 10.110.160.177 80'
    Mar  9 08:08:10.605: INFO: stderr: "+ nc -v -z -w 2 10.110.160.177 80\nConnection to 10.110.160.177 80 port [tcp/http] succeeded!\n"
    Mar  9 08:08:10.605: INFO: stdout: ""
    Mar  9 08:08:10.605: INFO: Cleaning up the ExternalName to ClusterIP test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:10.629: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5128" for this suite. 03/09/23 08:08:10.635
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:10.647
Mar  9 08:08:10.647: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename security-context 03/09/23 08:08:10.648
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:10.661
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:10.666
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 03/09/23 08:08:10.672
Mar  9 08:08:10.683: INFO: Waiting up to 5m0s for pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a" in namespace "security-context-5990" to be "Succeeded or Failed"
Mar  9 08:08:10.686: INFO: Pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.757157ms
Mar  9 08:08:12.692: INFO: Pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009465255s
Mar  9 08:08:14.691: INFO: Pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008387553s
STEP: Saw pod success 03/09/23 08:08:14.691
Mar  9 08:08:14.691: INFO: Pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a" satisfied condition "Succeeded or Failed"
Mar  9 08:08:14.695: INFO: Trying to get logs from node k8s-worker2 pod security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a container test-container: <nil>
STEP: delete the pod 03/09/23 08:08:14.73
Mar  9 08:08:14.754: INFO: Waiting for pod security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a to disappear
Mar  9 08:08:14.758: INFO: Pod security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:14.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-5990" for this suite. 03/09/23 08:08:14.764
------------------------------
â€¢ [4.126 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:10.647
    Mar  9 08:08:10.647: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename security-context 03/09/23 08:08:10.648
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:10.661
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:10.666
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:164
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 03/09/23 08:08:10.672
    Mar  9 08:08:10.683: INFO: Waiting up to 5m0s for pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a" in namespace "security-context-5990" to be "Succeeded or Failed"
    Mar  9 08:08:10.686: INFO: Pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.757157ms
    Mar  9 08:08:12.692: INFO: Pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009465255s
    Mar  9 08:08:14.691: INFO: Pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008387553s
    STEP: Saw pod success 03/09/23 08:08:14.691
    Mar  9 08:08:14.691: INFO: Pod "security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a" satisfied condition "Succeeded or Failed"
    Mar  9 08:08:14.695: INFO: Trying to get logs from node k8s-worker2 pod security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a container test-container: <nil>
    STEP: delete the pod 03/09/23 08:08:14.73
    Mar  9 08:08:14.754: INFO: Waiting for pod security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a to disappear
    Mar  9 08:08:14.758: INFO: Pod security-context-d3c6ea20-0fec-4b94-b028-2b7376e5961a no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:14.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-5990" for this suite. 03/09/23 08:08:14.764
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:14.775
Mar  9 08:08:14.775: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:08:14.776
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:14.796
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:14.802
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:08:14.824
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:08:15.993
STEP: Deploying the webhook pod 03/09/23 08:08:16.001
STEP: Wait for the deployment to be ready 03/09/23 08:08:16.021
Mar  9 08:08:16.032: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:08:18.047
STEP: Verifying the service has paired with the endpoint 03/09/23 08:08:18.064
Mar  9 08:08:19.065: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 03/09/23 08:08:19.07
STEP: create a namespace for the webhook 03/09/23 08:08:19.1
STEP: create a configmap should be unconditionally rejected by the webhook 03/09/23 08:08:19.109
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:19.142: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-8556" for this suite. 03/09/23 08:08:19.195
STEP: Destroying namespace "webhook-8556-markers" for this suite. 03/09/23 08:08:19.203
------------------------------
â€¢ [4.438 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:14.775
    Mar  9 08:08:14.775: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:08:14.776
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:14.796
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:14.802
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:08:14.824
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:08:15.993
    STEP: Deploying the webhook pod 03/09/23 08:08:16.001
    STEP: Wait for the deployment to be ready 03/09/23 08:08:16.021
    Mar  9 08:08:16.032: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:08:18.047
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:08:18.064
    Mar  9 08:08:19.065: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should unconditionally reject operations on fail closed webhook [Conformance]
      test/e2e/apimachinery/webhook.go:239
    STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 03/09/23 08:08:19.07
    STEP: create a namespace for the webhook 03/09/23 08:08:19.1
    STEP: create a configmap should be unconditionally rejected by the webhook 03/09/23 08:08:19.109
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:19.142: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-8556" for this suite. 03/09/23 08:08:19.195
    STEP: Destroying namespace "webhook-8556-markers" for this suite. 03/09/23 08:08:19.203
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:19.219
Mar  9 08:08:19.219: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename gc 03/09/23 08:08:19.221
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:19.24
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:19.245
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
STEP: create the rc 03/09/23 08:08:19.258
STEP: delete the rc 03/09/23 08:08:24.271
STEP: wait for the rc to be deleted 03/09/23 08:08:24.279
Mar  9 08:08:25.309: INFO: 80 pods remaining
Mar  9 08:08:25.309: INFO: 80 pods has nil DeletionTimestamp
Mar  9 08:08:25.309: INFO: 
Mar  9 08:08:26.310: INFO: 71 pods remaining
Mar  9 08:08:26.310: INFO: 70 pods has nil DeletionTimestamp
Mar  9 08:08:26.310: INFO: 
Mar  9 08:08:27.299: INFO: 60 pods remaining
Mar  9 08:08:27.299: INFO: 60 pods has nil DeletionTimestamp
Mar  9 08:08:27.299: INFO: 
Mar  9 08:08:28.295: INFO: 40 pods remaining
Mar  9 08:08:28.295: INFO: 40 pods has nil DeletionTimestamp
Mar  9 08:08:28.295: INFO: 
Mar  9 08:08:29.295: INFO: 31 pods remaining
Mar  9 08:08:29.295: INFO: 30 pods has nil DeletionTimestamp
Mar  9 08:08:29.295: INFO: 
Mar  9 08:08:30.295: INFO: 20 pods remaining
Mar  9 08:08:30.295: INFO: 20 pods has nil DeletionTimestamp
Mar  9 08:08:30.295: INFO: 
STEP: Gathering metrics 03/09/23 08:08:31.288
Mar  9 08:08:31.331: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
Mar  9 08:08:31.334: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 3.450362ms
Mar  9 08:08:31.334: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
Mar  9 08:08:31.335: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
Mar  9 08:08:31.505: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:31.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-3061" for this suite. 03/09/23 08:08:31.511
------------------------------
â€¢ [SLOW TEST] [12.302 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:19.219
    Mar  9 08:08:19.219: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename gc 03/09/23 08:08:19.221
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:19.24
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:19.245
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:650
    STEP: create the rc 03/09/23 08:08:19.258
    STEP: delete the rc 03/09/23 08:08:24.271
    STEP: wait for the rc to be deleted 03/09/23 08:08:24.279
    Mar  9 08:08:25.309: INFO: 80 pods remaining
    Mar  9 08:08:25.309: INFO: 80 pods has nil DeletionTimestamp
    Mar  9 08:08:25.309: INFO: 
    Mar  9 08:08:26.310: INFO: 71 pods remaining
    Mar  9 08:08:26.310: INFO: 70 pods has nil DeletionTimestamp
    Mar  9 08:08:26.310: INFO: 
    Mar  9 08:08:27.299: INFO: 60 pods remaining
    Mar  9 08:08:27.299: INFO: 60 pods has nil DeletionTimestamp
    Mar  9 08:08:27.299: INFO: 
    Mar  9 08:08:28.295: INFO: 40 pods remaining
    Mar  9 08:08:28.295: INFO: 40 pods has nil DeletionTimestamp
    Mar  9 08:08:28.295: INFO: 
    Mar  9 08:08:29.295: INFO: 31 pods remaining
    Mar  9 08:08:29.295: INFO: 30 pods has nil DeletionTimestamp
    Mar  9 08:08:29.295: INFO: 
    Mar  9 08:08:30.295: INFO: 20 pods remaining
    Mar  9 08:08:30.295: INFO: 20 pods has nil DeletionTimestamp
    Mar  9 08:08:30.295: INFO: 
    STEP: Gathering metrics 03/09/23 08:08:31.288
    Mar  9 08:08:31.331: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
    Mar  9 08:08:31.334: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 3.450362ms
    Mar  9 08:08:31.334: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
    Mar  9 08:08:31.335: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
    Mar  9 08:08:31.505: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:31.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-3061" for this suite. 03/09/23 08:08:31.511
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:31.522
Mar  9 08:08:31.522: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:08:31.524
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:31.538
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:31.541
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
Mar  9 08:08:31.546: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 03/09/23 08:08:33.45
Mar  9 08:08:33.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
Mar  9 08:08:34.693: INFO: stderr: ""
Mar  9 08:08:34.693: INFO: stdout: "e2e-test-crd-publish-openapi-9193-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Mar  9 08:08:34.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 delete e2e-test-crd-publish-openapi-9193-crds test-foo'
Mar  9 08:08:34.873: INFO: stderr: ""
Mar  9 08:08:34.873: INFO: stdout: "e2e-test-crd-publish-openapi-9193-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Mar  9 08:08:34.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 apply -f -'
Mar  9 08:08:35.388: INFO: stderr: ""
Mar  9 08:08:35.388: INFO: stdout: "e2e-test-crd-publish-openapi-9193-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Mar  9 08:08:35.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 delete e2e-test-crd-publish-openapi-9193-crds test-foo'
Mar  9 08:08:35.560: INFO: stderr: ""
Mar  9 08:08:35.560: INFO: stdout: "e2e-test-crd-publish-openapi-9193-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 03/09/23 08:08:35.56
Mar  9 08:08:35.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
Mar  9 08:08:36.053: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 03/09/23 08:08:36.053
Mar  9 08:08:36.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
Mar  9 08:08:36.468: INFO: rc: 1
Mar  9 08:08:36.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 apply -f -'
Mar  9 08:08:36.920: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties 03/09/23 08:08:36.92
Mar  9 08:08:36.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
Mar  9 08:08:37.355: INFO: rc: 1
Mar  9 08:08:37.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 apply -f -'
Mar  9 08:08:37.857: INFO: rc: 1
STEP: kubectl explain works to explain CR properties 03/09/23 08:08:37.857
Mar  9 08:08:37.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds'
Mar  9 08:08:38.281: INFO: stderr: ""
Mar  9 08:08:38.281: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9193-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively 03/09/23 08:08:38.281
Mar  9 08:08:38.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds.metadata'
Mar  9 08:08:38.760: INFO: stderr: ""
Mar  9 08:08:38.760: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9193-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Mar  9 08:08:38.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds.spec'
Mar  9 08:08:39.217: INFO: stderr: ""
Mar  9 08:08:39.217: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9193-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Mar  9 08:08:39.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds.spec.bars'
Mar  9 08:08:39.670: INFO: stderr: ""
Mar  9 08:08:39.670: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9193-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist 03/09/23 08:08:39.67
Mar  9 08:08:39.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds.spec.bars2'
Mar  9 08:08:40.123: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:42.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-6440" for this suite. 03/09/23 08:08:42.097
------------------------------
â€¢ [SLOW TEST] [10.583 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:31.522
    Mar  9 08:08:31.522: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:08:31.524
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:31.538
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:31.541
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD with validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:69
    Mar  9 08:08:31.546: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 03/09/23 08:08:33.45
    Mar  9 08:08:33.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
    Mar  9 08:08:34.693: INFO: stderr: ""
    Mar  9 08:08:34.693: INFO: stdout: "e2e-test-crd-publish-openapi-9193-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Mar  9 08:08:34.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 delete e2e-test-crd-publish-openapi-9193-crds test-foo'
    Mar  9 08:08:34.873: INFO: stderr: ""
    Mar  9 08:08:34.873: INFO: stdout: "e2e-test-crd-publish-openapi-9193-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    Mar  9 08:08:34.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 apply -f -'
    Mar  9 08:08:35.388: INFO: stderr: ""
    Mar  9 08:08:35.388: INFO: stdout: "e2e-test-crd-publish-openapi-9193-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Mar  9 08:08:35.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 delete e2e-test-crd-publish-openapi-9193-crds test-foo'
    Mar  9 08:08:35.560: INFO: stderr: ""
    Mar  9 08:08:35.560: INFO: stdout: "e2e-test-crd-publish-openapi-9193-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 03/09/23 08:08:35.56
    Mar  9 08:08:35.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
    Mar  9 08:08:36.053: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 03/09/23 08:08:36.053
    Mar  9 08:08:36.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
    Mar  9 08:08:36.468: INFO: rc: 1
    Mar  9 08:08:36.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 apply -f -'
    Mar  9 08:08:36.920: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request without required properties 03/09/23 08:08:36.92
    Mar  9 08:08:36.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 create -f -'
    Mar  9 08:08:37.355: INFO: rc: 1
    Mar  9 08:08:37.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 --namespace=crd-publish-openapi-6440 apply -f -'
    Mar  9 08:08:37.857: INFO: rc: 1
    STEP: kubectl explain works to explain CR properties 03/09/23 08:08:37.857
    Mar  9 08:08:37.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds'
    Mar  9 08:08:38.281: INFO: stderr: ""
    Mar  9 08:08:38.281: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9193-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
    STEP: kubectl explain works to explain CR properties recursively 03/09/23 08:08:38.281
    Mar  9 08:08:38.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds.metadata'
    Mar  9 08:08:38.760: INFO: stderr: ""
    Mar  9 08:08:38.760: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9193-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
    Mar  9 08:08:38.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds.spec'
    Mar  9 08:08:39.217: INFO: stderr: ""
    Mar  9 08:08:39.217: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9193-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
    Mar  9 08:08:39.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds.spec.bars'
    Mar  9 08:08:39.670: INFO: stderr: ""
    Mar  9 08:08:39.670: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9193-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
    STEP: kubectl explain works to return error when explain is called on property that doesn't exist 03/09/23 08:08:39.67
    Mar  9 08:08:39.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-6440 explain e2e-test-crd-publish-openapi-9193-crds.spec.bars2'
    Mar  9 08:08:40.123: INFO: rc: 1
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:42.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-6440" for this suite. 03/09/23 08:08:42.097
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:42.107
Mar  9 08:08:42.107: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:08:42.109
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:42.127
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:42.131
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
STEP: Creating a pod to test emptydir 0644 on node default medium 03/09/23 08:08:42.136
Mar  9 08:08:42.146: INFO: Waiting up to 5m0s for pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1" in namespace "emptydir-8019" to be "Succeeded or Failed"
Mar  9 08:08:42.149: INFO: Pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.558651ms
Mar  9 08:08:44.153: INFO: Pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007599678s
Mar  9 08:08:46.154: INFO: Pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008132805s
STEP: Saw pod success 03/09/23 08:08:46.154
Mar  9 08:08:46.154: INFO: Pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1" satisfied condition "Succeeded or Failed"
Mar  9 08:08:46.158: INFO: Trying to get logs from node k8s-worker1 pod pod-83b65225-f753-4c5b-a885-0418c3ee3bd1 container test-container: <nil>
STEP: delete the pod 03/09/23 08:08:46.194
Mar  9 08:08:46.208: INFO: Waiting for pod pod-83b65225-f753-4c5b-a885-0418c3ee3bd1 to disappear
Mar  9 08:08:46.211: INFO: Pod pod-83b65225-f753-4c5b-a885-0418c3ee3bd1 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:46.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8019" for this suite. 03/09/23 08:08:46.218
------------------------------
â€¢ [4.118 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:42.107
    Mar  9 08:08:42.107: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:08:42.109
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:42.127
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:42.131
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:167
    STEP: Creating a pod to test emptydir 0644 on node default medium 03/09/23 08:08:42.136
    Mar  9 08:08:42.146: INFO: Waiting up to 5m0s for pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1" in namespace "emptydir-8019" to be "Succeeded or Failed"
    Mar  9 08:08:42.149: INFO: Pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.558651ms
    Mar  9 08:08:44.153: INFO: Pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007599678s
    Mar  9 08:08:46.154: INFO: Pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008132805s
    STEP: Saw pod success 03/09/23 08:08:46.154
    Mar  9 08:08:46.154: INFO: Pod "pod-83b65225-f753-4c5b-a885-0418c3ee3bd1" satisfied condition "Succeeded or Failed"
    Mar  9 08:08:46.158: INFO: Trying to get logs from node k8s-worker1 pod pod-83b65225-f753-4c5b-a885-0418c3ee3bd1 container test-container: <nil>
    STEP: delete the pod 03/09/23 08:08:46.194
    Mar  9 08:08:46.208: INFO: Waiting for pod pod-83b65225-f753-4c5b-a885-0418c3ee3bd1 to disappear
    Mar  9 08:08:46.211: INFO: Pod pod-83b65225-f753-4c5b-a885-0418c3ee3bd1 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:46.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8019" for this suite. 03/09/23 08:08:46.218
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:46.226
Mar  9 08:08:46.226: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename var-expansion 03/09/23 08:08:46.228
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:46.245
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:46.251
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
STEP: Creating a pod to test substitution in container's command 03/09/23 08:08:46.256
Mar  9 08:08:46.267: INFO: Waiting up to 5m0s for pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37" in namespace "var-expansion-1900" to be "Succeeded or Failed"
Mar  9 08:08:46.271: INFO: Pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37": Phase="Pending", Reason="", readiness=false. Elapsed: 4.105339ms
Mar  9 08:08:48.276: INFO: Pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009178904s
Mar  9 08:08:50.276: INFO: Pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009235521s
STEP: Saw pod success 03/09/23 08:08:50.276
Mar  9 08:08:50.276: INFO: Pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37" satisfied condition "Succeeded or Failed"
Mar  9 08:08:50.280: INFO: Trying to get logs from node k8s-worker1 pod var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37 container dapi-container: <nil>
STEP: delete the pod 03/09/23 08:08:50.288
Mar  9 08:08:50.327: INFO: Waiting for pod var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37 to disappear
Mar  9 08:08:50.331: INFO: Pod var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:50.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-1900" for this suite. 03/09/23 08:08:50.338
------------------------------
â€¢ [4.121 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:46.226
    Mar  9 08:08:46.226: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename var-expansion 03/09/23 08:08:46.228
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:46.245
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:46.251
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's command [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:73
    STEP: Creating a pod to test substitution in container's command 03/09/23 08:08:46.256
    Mar  9 08:08:46.267: INFO: Waiting up to 5m0s for pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37" in namespace "var-expansion-1900" to be "Succeeded or Failed"
    Mar  9 08:08:46.271: INFO: Pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37": Phase="Pending", Reason="", readiness=false. Elapsed: 4.105339ms
    Mar  9 08:08:48.276: INFO: Pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009178904s
    Mar  9 08:08:50.276: INFO: Pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009235521s
    STEP: Saw pod success 03/09/23 08:08:50.276
    Mar  9 08:08:50.276: INFO: Pod "var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37" satisfied condition "Succeeded or Failed"
    Mar  9 08:08:50.280: INFO: Trying to get logs from node k8s-worker1 pod var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37 container dapi-container: <nil>
    STEP: delete the pod 03/09/23 08:08:50.288
    Mar  9 08:08:50.327: INFO: Waiting for pod var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37 to disappear
    Mar  9 08:08:50.331: INFO: Pod var-expansion-46c9fabd-0a5f-44bc-babc-6e5f85f27d37 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:50.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-1900" for this suite. 03/09/23 08:08:50.338
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:50.351
Mar  9 08:08:50.351: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename var-expansion 03/09/23 08:08:50.353
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:50.367
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:50.372
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
STEP: Creating a pod to test substitution in volume subpath 03/09/23 08:08:50.377
Mar  9 08:08:50.389: INFO: Waiting up to 5m0s for pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da" in namespace "var-expansion-3059" to be "Succeeded or Failed"
Mar  9 08:08:50.394: INFO: Pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da": Phase="Pending", Reason="", readiness=false. Elapsed: 5.212749ms
Mar  9 08:08:52.399: INFO: Pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010136045s
Mar  9 08:08:54.399: INFO: Pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009944762s
STEP: Saw pod success 03/09/23 08:08:54.399
Mar  9 08:08:54.399: INFO: Pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da" satisfied condition "Succeeded or Failed"
Mar  9 08:08:54.403: INFO: Trying to get logs from node k8s-worker1 pod var-expansion-e357059f-5f77-4525-951c-f6af775fc2da container dapi-container: <nil>
STEP: delete the pod 03/09/23 08:08:54.411
Mar  9 08:08:54.423: INFO: Waiting for pod var-expansion-e357059f-5f77-4525-951c-f6af775fc2da to disappear
Mar  9 08:08:54.427: INFO: Pod var-expansion-e357059f-5f77-4525-951c-f6af775fc2da no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:54.427: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-3059" for this suite. 03/09/23 08:08:54.433
------------------------------
â€¢ [4.090 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:50.351
    Mar  9 08:08:50.351: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename var-expansion 03/09/23 08:08:50.353
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:50.367
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:50.372
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a volume subpath [Conformance]
      test/e2e/common/node/expansion.go:112
    STEP: Creating a pod to test substitution in volume subpath 03/09/23 08:08:50.377
    Mar  9 08:08:50.389: INFO: Waiting up to 5m0s for pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da" in namespace "var-expansion-3059" to be "Succeeded or Failed"
    Mar  9 08:08:50.394: INFO: Pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da": Phase="Pending", Reason="", readiness=false. Elapsed: 5.212749ms
    Mar  9 08:08:52.399: INFO: Pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010136045s
    Mar  9 08:08:54.399: INFO: Pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009944762s
    STEP: Saw pod success 03/09/23 08:08:54.399
    Mar  9 08:08:54.399: INFO: Pod "var-expansion-e357059f-5f77-4525-951c-f6af775fc2da" satisfied condition "Succeeded or Failed"
    Mar  9 08:08:54.403: INFO: Trying to get logs from node k8s-worker1 pod var-expansion-e357059f-5f77-4525-951c-f6af775fc2da container dapi-container: <nil>
    STEP: delete the pod 03/09/23 08:08:54.411
    Mar  9 08:08:54.423: INFO: Waiting for pod var-expansion-e357059f-5f77-4525-951c-f6af775fc2da to disappear
    Mar  9 08:08:54.427: INFO: Pod var-expansion-e357059f-5f77-4525-951c-f6af775fc2da no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:54.427: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-3059" for this suite. 03/09/23 08:08:54.433
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:54.444
Mar  9 08:08:54.444: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:08:54.446
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:54.466
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:54.471
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:08:54.476
Mar  9 08:08:54.489: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20" in namespace "projected-5838" to be "Succeeded or Failed"
Mar  9 08:08:54.493: INFO: Pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20": Phase="Pending", Reason="", readiness=false. Elapsed: 4.237946ms
Mar  9 08:08:56.497: INFO: Pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008380275s
Mar  9 08:08:58.499: INFO: Pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010467474s
STEP: Saw pod success 03/09/23 08:08:58.499
Mar  9 08:08:58.499: INFO: Pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20" satisfied condition "Succeeded or Failed"
Mar  9 08:08:58.503: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20 container client-container: <nil>
STEP: delete the pod 03/09/23 08:08:58.512
Mar  9 08:08:58.530: INFO: Waiting for pod downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20 to disappear
Mar  9 08:08:58.534: INFO: Pod downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:08:58.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5838" for this suite. 03/09/23 08:08:58.541
------------------------------
â€¢ [4.104 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:54.444
    Mar  9 08:08:54.444: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:08:54.446
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:54.466
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:54.471
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:53
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:08:54.476
    Mar  9 08:08:54.489: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20" in namespace "projected-5838" to be "Succeeded or Failed"
    Mar  9 08:08:54.493: INFO: Pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20": Phase="Pending", Reason="", readiness=false. Elapsed: 4.237946ms
    Mar  9 08:08:56.497: INFO: Pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008380275s
    Mar  9 08:08:58.499: INFO: Pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010467474s
    STEP: Saw pod success 03/09/23 08:08:58.499
    Mar  9 08:08:58.499: INFO: Pod "downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20" satisfied condition "Succeeded or Failed"
    Mar  9 08:08:58.503: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:08:58.512
    Mar  9 08:08:58.530: INFO: Waiting for pod downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20 to disappear
    Mar  9 08:08:58.534: INFO: Pod downwardapi-volume-d0ddc291-4ccf-418e-829f-15ce7b596e20 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:08:58.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5838" for this suite. 03/09/23 08:08:58.541
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:08:58.551
Mar  9 08:08:58.551: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename watch 03/09/23 08:08:58.553
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:58.571
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:58.576
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
STEP: creating a watch on configmaps with label A 03/09/23 08:08:58.581
STEP: creating a watch on configmaps with label B 03/09/23 08:08:58.584
STEP: creating a watch on configmaps with label A or B 03/09/23 08:08:58.586
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 03/09/23 08:08:58.588
Mar  9 08:08:58.594: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251459 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:08:58.594: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251459 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification 03/09/23 08:08:58.594
Mar  9 08:08:58.605: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251460 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:08:58.605: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251460 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification 03/09/23 08:08:58.605
Mar  9 08:08:58.615: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251461 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:08:58.615: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251461 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification 03/09/23 08:08:58.615
Mar  9 08:08:58.622: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251462 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:08:58.622: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251462 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 03/09/23 08:08:58.622
Mar  9 08:08:58.629: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-505  c0c0f4a4-bff7-4847-b7ad-44444a88a4c4 251463 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:08:58.629: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-505  c0c0f4a4-bff7-4847-b7ad-44444a88a4c4 251463 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification 03/09/23 08:09:08.63
Mar  9 08:09:08.637: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-505  c0c0f4a4-bff7-4847-b7ad-44444a88a4c4 251492 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:09:08.638: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-505  c0c0f4a4-bff7-4847-b7ad-44444a88a4c4 251492 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:18.639: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-505" for this suite. 03/09/23 08:09:18.646
------------------------------
â€¢ [SLOW TEST] [20.105 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:08:58.551
    Mar  9 08:08:58.551: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename watch 03/09/23 08:08:58.553
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:08:58.571
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:08:58.576
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe add, update, and delete watch notifications on configmaps [Conformance]
      test/e2e/apimachinery/watch.go:60
    STEP: creating a watch on configmaps with label A 03/09/23 08:08:58.581
    STEP: creating a watch on configmaps with label B 03/09/23 08:08:58.584
    STEP: creating a watch on configmaps with label A or B 03/09/23 08:08:58.586
    STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 03/09/23 08:08:58.588
    Mar  9 08:08:58.594: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251459 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:08:58.594: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251459 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A and ensuring the correct watchers observe the notification 03/09/23 08:08:58.594
    Mar  9 08:08:58.605: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251460 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:08:58.605: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251460 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A again and ensuring the correct watchers observe the notification 03/09/23 08:08:58.605
    Mar  9 08:08:58.615: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251461 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:08:58.615: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251461 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap A and ensuring the correct watchers observe the notification 03/09/23 08:08:58.615
    Mar  9 08:08:58.622: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251462 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:08:58.622: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-505  fd6f3337-ffc5-4c58-ba0d-747c9379062c 251462 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 03/09/23 08:08:58.622
    Mar  9 08:08:58.629: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-505  c0c0f4a4-bff7-4847-b7ad-44444a88a4c4 251463 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:08:58.629: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-505  c0c0f4a4-bff7-4847-b7ad-44444a88a4c4 251463 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap B and ensuring the correct watchers observe the notification 03/09/23 08:09:08.63
    Mar  9 08:09:08.637: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-505  c0c0f4a4-bff7-4847-b7ad-44444a88a4c4 251492 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:09:08.638: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-505  c0c0f4a4-bff7-4847-b7ad-44444a88a4c4 251492 0 2023-03-09 08:08:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-03-09 08:08:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:18.639: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-505" for this suite. 03/09/23 08:09:18.646
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:18.658
Mar  9 08:09:18.658: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:09:18.66
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:18.681
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:18.686
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:09:18.691
Mar  9 08:09:18.703: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306" in namespace "projected-8998" to be "Succeeded or Failed"
Mar  9 08:09:18.707: INFO: Pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306": Phase="Pending", Reason="", readiness=false. Elapsed: 4.161977ms
Mar  9 08:09:20.712: INFO: Pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008743996s
Mar  9 08:09:22.712: INFO: Pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009233252s
STEP: Saw pod success 03/09/23 08:09:22.713
Mar  9 08:09:22.713: INFO: Pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306" satisfied condition "Succeeded or Failed"
Mar  9 08:09:22.716: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306 container client-container: <nil>
STEP: delete the pod 03/09/23 08:09:22.724
Mar  9 08:09:22.739: INFO: Waiting for pod downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306 to disappear
Mar  9 08:09:22.742: INFO: Pod downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:22.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8998" for this suite. 03/09/23 08:09:22.748
------------------------------
â€¢ [4.097 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:18.658
    Mar  9 08:09:18.658: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:09:18.66
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:18.681
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:18.686
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:249
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:09:18.691
    Mar  9 08:09:18.703: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306" in namespace "projected-8998" to be "Succeeded or Failed"
    Mar  9 08:09:18.707: INFO: Pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306": Phase="Pending", Reason="", readiness=false. Elapsed: 4.161977ms
    Mar  9 08:09:20.712: INFO: Pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008743996s
    Mar  9 08:09:22.712: INFO: Pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009233252s
    STEP: Saw pod success 03/09/23 08:09:22.713
    Mar  9 08:09:22.713: INFO: Pod "downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306" satisfied condition "Succeeded or Failed"
    Mar  9 08:09:22.716: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:09:22.724
    Mar  9 08:09:22.739: INFO: Waiting for pod downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306 to disappear
    Mar  9 08:09:22.742: INFO: Pod downwardapi-volume-8bc3b12e-1559-4918-bfee-75b0888ce306 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:22.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8998" for this suite. 03/09/23 08:09:22.748
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Lease
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[BeforeEach] [sig-node] Lease
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:22.757
Mar  9 08:09:22.757: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename lease-test 03/09/23 08:09:22.758
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:22.777
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:22.783
[BeforeEach] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:31
[It] lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[AfterEach] [sig-node] Lease
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:22.856: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Lease
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Lease
  tear down framework | framework.go:193
STEP: Destroying namespace "lease-test-3171" for this suite. 03/09/23 08:09:22.861
------------------------------
â€¢ [0.113 seconds]
[sig-node] Lease
test/e2e/common/node/framework.go:23
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Lease
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:22.757
    Mar  9 08:09:22.757: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename lease-test 03/09/23 08:09:22.758
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:22.777
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:22.783
    [BeforeEach] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:31
    [It] lease API should be available [Conformance]
      test/e2e/common/node/lease.go:72
    [AfterEach] [sig-node] Lease
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:22.856: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Lease
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Lease
      tear down framework | framework.go:193
    STEP: Destroying namespace "lease-test-3171" for this suite. 03/09/23 08:09:22.861
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:22.871
Mar  9 08:09:22.871: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename svcaccounts 03/09/23 08:09:22.872
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:22.894
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:22.899
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
STEP: creating a ServiceAccount 03/09/23 08:09:22.904
STEP: watching for the ServiceAccount to be added 03/09/23 08:09:22.913
STEP: patching the ServiceAccount 03/09/23 08:09:22.916
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 03/09/23 08:09:22.923
STEP: deleting the ServiceAccount 03/09/23 08:09:22.928
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:22.942: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-698" for this suite. 03/09/23 08:09:22.947
------------------------------
â€¢ [0.085 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:22.871
    Mar  9 08:09:22.871: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename svcaccounts 03/09/23 08:09:22.872
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:22.894
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:22.899
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through the lifecycle of a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:649
    STEP: creating a ServiceAccount 03/09/23 08:09:22.904
    STEP: watching for the ServiceAccount to be added 03/09/23 08:09:22.913
    STEP: patching the ServiceAccount 03/09/23 08:09:22.916
    STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 03/09/23 08:09:22.923
    STEP: deleting the ServiceAccount 03/09/23 08:09:22.928
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:22.942: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-698" for this suite. 03/09/23 08:09:22.947
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:22.957
Mar  9 08:09:22.957: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename gc 03/09/23 08:09:22.959
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:22.973
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:22.978
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
STEP: create the deployment 03/09/23 08:09:22.983
STEP: Wait for the Deployment to create new ReplicaSet 03/09/23 08:09:22.992
STEP: delete the deployment 03/09/23 08:09:23.5
STEP: wait for all rs to be garbage collected 03/09/23 08:09:23.507
STEP: expected 0 rs, got 1 rs 03/09/23 08:09:23.515
STEP: expected 0 pods, got 2 pods 03/09/23 08:09:23.522
STEP: Gathering metrics 03/09/23 08:09:24.037
Mar  9 08:09:24.056: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
Mar  9 08:09:24.061: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 4.44943ms
Mar  9 08:09:24.061: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
Mar  9 08:09:24.061: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
Mar  9 08:09:24.196: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:24.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-5430" for this suite. 03/09/23 08:09:24.202
------------------------------
â€¢ [1.254 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:22.957
    Mar  9 08:09:22.957: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename gc 03/09/23 08:09:22.959
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:22.973
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:22.978
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete RS created by deployment when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:491
    STEP: create the deployment 03/09/23 08:09:22.983
    STEP: Wait for the Deployment to create new ReplicaSet 03/09/23 08:09:22.992
    STEP: delete the deployment 03/09/23 08:09:23.5
    STEP: wait for all rs to be garbage collected 03/09/23 08:09:23.507
    STEP: expected 0 rs, got 1 rs 03/09/23 08:09:23.515
    STEP: expected 0 pods, got 2 pods 03/09/23 08:09:23.522
    STEP: Gathering metrics 03/09/23 08:09:24.037
    Mar  9 08:09:24.056: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
    Mar  9 08:09:24.061: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 4.44943ms
    Mar  9 08:09:24.061: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
    Mar  9 08:09:24.061: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
    Mar  9 08:09:24.196: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:24.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-5430" for this suite. 03/09/23 08:09:24.202
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:24.212
Mar  9 08:09:24.213: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-runtime 03/09/23 08:09:24.215
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:24.228
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:24.233
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
STEP: create the container 03/09/23 08:09:24.237
STEP: wait for the container to reach Succeeded 03/09/23 08:09:24.249
STEP: get the container status 03/09/23 08:09:29.279
STEP: the container should be terminated 03/09/23 08:09:29.283
STEP: the termination message should be set 03/09/23 08:09:29.283
Mar  9 08:09:29.283: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 03/09/23 08:09:29.283
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:29.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-9241" for this suite. 03/09/23 08:09:29.34
------------------------------
â€¢ [SLOW TEST] [5.148 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:24.212
    Mar  9 08:09:24.213: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-runtime 03/09/23 08:09:24.215
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:24.228
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:24.233
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195
    STEP: create the container 03/09/23 08:09:24.237
    STEP: wait for the container to reach Succeeded 03/09/23 08:09:24.249
    STEP: get the container status 03/09/23 08:09:29.279
    STEP: the container should be terminated 03/09/23 08:09:29.283
    STEP: the termination message should be set 03/09/23 08:09:29.283
    Mar  9 08:09:29.283: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 03/09/23 08:09:29.283
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:29.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-9241" for this suite. 03/09/23 08:09:29.34
  << End Captured GinkgoWriter Output
------------------------------
[sig-cli] Kubectl client Guestbook application
  should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:29.361
Mar  9 08:09:29.361: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:09:29.362
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:29.381
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:29.385
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
STEP: creating all guestbook components 03/09/23 08:09:29.39
Mar  9 08:09:29.390: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Mar  9 08:09:29.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
Mar  9 08:09:30.598: INFO: stderr: ""
Mar  9 08:09:30.598: INFO: stdout: "service/agnhost-replica created\n"
Mar  9 08:09:30.598: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Mar  9 08:09:30.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
Mar  9 08:09:31.031: INFO: stderr: ""
Mar  9 08:09:31.031: INFO: stdout: "service/agnhost-primary created\n"
Mar  9 08:09:31.031: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Mar  9 08:09:31.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
Mar  9 08:09:31.486: INFO: stderr: ""
Mar  9 08:09:31.486: INFO: stdout: "service/frontend created\n"
Mar  9 08:09:31.487: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Mar  9 08:09:31.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
Mar  9 08:09:32.014: INFO: stderr: ""
Mar  9 08:09:32.014: INFO: stdout: "deployment.apps/frontend created\n"
Mar  9 08:09:32.014: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Mar  9 08:09:32.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
Mar  9 08:09:32.490: INFO: stderr: ""
Mar  9 08:09:32.490: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Mar  9 08:09:32.491: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Mar  9 08:09:32.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
Mar  9 08:09:32.972: INFO: stderr: ""
Mar  9 08:09:32.972: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app 03/09/23 08:09:32.972
Mar  9 08:09:32.972: INFO: Waiting for all frontend pods to be Running.
Mar  9 08:09:38.024: INFO: Waiting for frontend to serve content.
Mar  9 08:09:38.037: INFO: Trying to add a new entry to the guestbook.
Mar  9 08:09:38.053: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources 03/09/23 08:09:38.066
Mar  9 08:09:38.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
Mar  9 08:09:38.255: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 08:09:38.255: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources 03/09/23 08:09:38.255
Mar  9 08:09:38.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
Mar  9 08:09:38.433: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 08:09:38.433: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 03/09/23 08:09:38.434
Mar  9 08:09:38.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
Mar  9 08:09:38.630: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 08:09:38.630: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources 03/09/23 08:09:38.63
Mar  9 08:09:38.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
Mar  9 08:09:38.790: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 08:09:38.790: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources 03/09/23 08:09:38.79
Mar  9 08:09:38.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
Mar  9 08:09:38.967: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 08:09:38.968: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 03/09/23 08:09:38.968
Mar  9 08:09:38.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
Mar  9 08:09:39.139: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 08:09:39.139: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:39.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9157" for this suite. 03/09/23 08:09:39.145
------------------------------
â€¢ [SLOW TEST] [9.791 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:369
    should create and stop a working application  [Conformance]
    test/e2e/kubectl/kubectl.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:29.361
    Mar  9 08:09:29.361: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:09:29.362
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:29.381
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:29.385
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create and stop a working application  [Conformance]
      test/e2e/kubectl/kubectl.go:394
    STEP: creating all guestbook components 03/09/23 08:09:29.39
    Mar  9 08:09:29.390: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-replica
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      ports:
      - port: 6379
      selector:
        app: agnhost
        role: replica
        tier: backend

    Mar  9 08:09:29.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
    Mar  9 08:09:30.598: INFO: stderr: ""
    Mar  9 08:09:30.598: INFO: stdout: "service/agnhost-replica created\n"
    Mar  9 08:09:30.598: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-primary
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      ports:
      - port: 6379
        targetPort: 6379
      selector:
        app: agnhost
        role: primary
        tier: backend

    Mar  9 08:09:30.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
    Mar  9 08:09:31.031: INFO: stderr: ""
    Mar  9 08:09:31.031: INFO: stdout: "service/agnhost-primary created\n"
    Mar  9 08:09:31.031: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: frontend
      labels:
        app: guestbook
        tier: frontend
    spec:
      # if your cluster supports it, uncomment the following to automatically create
      # an external load-balanced IP for the frontend service.
      # type: LoadBalancer
      ports:
      - port: 80
      selector:
        app: guestbook
        tier: frontend

    Mar  9 08:09:31.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
    Mar  9 08:09:31.486: INFO: stderr: ""
    Mar  9 08:09:31.486: INFO: stdout: "service/frontend created\n"
    Mar  9 08:09:31.487: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: guestbook
          tier: frontend
      template:
        metadata:
          labels:
            app: guestbook
            tier: frontend
        spec:
          containers:
          - name: guestbook-frontend
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--backend-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 80

    Mar  9 08:09:31.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
    Mar  9 08:09:32.014: INFO: stderr: ""
    Mar  9 08:09:32.014: INFO: stdout: "deployment.apps/frontend created\n"
    Mar  9 08:09:32.014: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-primary
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: agnhost
          role: primary
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: primary
            tier: backend
        spec:
          containers:
          - name: primary
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Mar  9 08:09:32.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
    Mar  9 08:09:32.490: INFO: stderr: ""
    Mar  9 08:09:32.490: INFO: stdout: "deployment.apps/agnhost-primary created\n"
    Mar  9 08:09:32.491: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-replica
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: agnhost
          role: replica
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: replica
            tier: backend
        spec:
          containers:
          - name: replica
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Mar  9 08:09:32.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 create -f -'
    Mar  9 08:09:32.972: INFO: stderr: ""
    Mar  9 08:09:32.972: INFO: stdout: "deployment.apps/agnhost-replica created\n"
    STEP: validating guestbook app 03/09/23 08:09:32.972
    Mar  9 08:09:32.972: INFO: Waiting for all frontend pods to be Running.
    Mar  9 08:09:38.024: INFO: Waiting for frontend to serve content.
    Mar  9 08:09:38.037: INFO: Trying to add a new entry to the guestbook.
    Mar  9 08:09:38.053: INFO: Verifying that added entry can be retrieved.
    STEP: using delete to clean up resources 03/09/23 08:09:38.066
    Mar  9 08:09:38.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
    Mar  9 08:09:38.255: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 08:09:38.255: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
    STEP: using delete to clean up resources 03/09/23 08:09:38.255
    Mar  9 08:09:38.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
    Mar  9 08:09:38.433: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 08:09:38.433: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 03/09/23 08:09:38.434
    Mar  9 08:09:38.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
    Mar  9 08:09:38.630: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 08:09:38.630: INFO: stdout: "service \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 03/09/23 08:09:38.63
    Mar  9 08:09:38.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
    Mar  9 08:09:38.790: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 08:09:38.790: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 03/09/23 08:09:38.79
    Mar  9 08:09:38.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
    Mar  9 08:09:38.967: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 08:09:38.968: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 03/09/23 08:09:38.968
    Mar  9 08:09:38.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9157 delete --grace-period=0 --force -f -'
    Mar  9 08:09:39.139: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 08:09:39.139: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:39.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9157" for this suite. 03/09/23 08:09:39.145
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:39.156
Mar  9 08:09:39.156: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:09:39.157
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:39.174
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:39.18
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
STEP: Creating a pod to test emptydir volume type on node default medium 03/09/23 08:09:39.186
Mar  9 08:09:39.196: INFO: Waiting up to 5m0s for pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e" in namespace "emptydir-3230" to be "Succeeded or Failed"
Mar  9 08:09:39.201: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.121941ms
Mar  9 08:09:41.206: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009862801s
Mar  9 08:09:43.207: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010710076s
Mar  9 08:09:45.206: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009771056s
STEP: Saw pod success 03/09/23 08:09:45.206
Mar  9 08:09:45.206: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e" satisfied condition "Succeeded or Failed"
Mar  9 08:09:45.210: INFO: Trying to get logs from node k8s-worker1 pod pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e container test-container: <nil>
STEP: delete the pod 03/09/23 08:09:45.218
Mar  9 08:09:45.236: INFO: Waiting for pod pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e to disappear
Mar  9 08:09:45.239: INFO: Pod pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:45.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3230" for this suite. 03/09/23 08:09:45.246
------------------------------
â€¢ [SLOW TEST] [6.097 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:39.156
    Mar  9 08:09:39.156: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:09:39.157
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:39.174
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:39.18
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:157
    STEP: Creating a pod to test emptydir volume type on node default medium 03/09/23 08:09:39.186
    Mar  9 08:09:39.196: INFO: Waiting up to 5m0s for pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e" in namespace "emptydir-3230" to be "Succeeded or Failed"
    Mar  9 08:09:39.201: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.121941ms
    Mar  9 08:09:41.206: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009862801s
    Mar  9 08:09:43.207: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010710076s
    Mar  9 08:09:45.206: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009771056s
    STEP: Saw pod success 03/09/23 08:09:45.206
    Mar  9 08:09:45.206: INFO: Pod "pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e" satisfied condition "Succeeded or Failed"
    Mar  9 08:09:45.210: INFO: Trying to get logs from node k8s-worker1 pod pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e container test-container: <nil>
    STEP: delete the pod 03/09/23 08:09:45.218
    Mar  9 08:09:45.236: INFO: Waiting for pod pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e to disappear
    Mar  9 08:09:45.239: INFO: Pod pod-4a6cd1c2-83c3-44fa-ac8e-05d0cbc1c06e no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:45.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3230" for this suite. 03/09/23 08:09:45.246
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Downward API
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:45.253
Mar  9 08:09:45.254: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:09:45.255
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:45.277
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:45.282
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
STEP: Creating a pod to test downward api env vars 03/09/23 08:09:45.288
Mar  9 08:09:45.300: INFO: Waiting up to 5m0s for pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61" in namespace "downward-api-8281" to be "Succeeded or Failed"
Mar  9 08:09:45.307: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61": Phase="Pending", Reason="", readiness=false. Elapsed: 6.471442ms
Mar  9 08:09:47.312: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011489505s
Mar  9 08:09:49.312: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01154208s
Mar  9 08:09:51.313: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.012925264s
STEP: Saw pod success 03/09/23 08:09:51.313
Mar  9 08:09:51.314: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61" satisfied condition "Succeeded or Failed"
Mar  9 08:09:51.318: INFO: Trying to get logs from node k8s-worker1 pod downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61 container dapi-container: <nil>
STEP: delete the pod 03/09/23 08:09:51.327
Mar  9 08:09:51.343: INFO: Waiting for pod downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61 to disappear
Mar  9 08:09:51.347: INFO: Pod downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:51.347: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-8281" for this suite. 03/09/23 08:09:51.353
------------------------------
â€¢ [SLOW TEST] [6.108 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:45.253
    Mar  9 08:09:45.254: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:09:45.255
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:45.277
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:45.282
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:166
    STEP: Creating a pod to test downward api env vars 03/09/23 08:09:45.288
    Mar  9 08:09:45.300: INFO: Waiting up to 5m0s for pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61" in namespace "downward-api-8281" to be "Succeeded or Failed"
    Mar  9 08:09:45.307: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61": Phase="Pending", Reason="", readiness=false. Elapsed: 6.471442ms
    Mar  9 08:09:47.312: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011489505s
    Mar  9 08:09:49.312: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01154208s
    Mar  9 08:09:51.313: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.012925264s
    STEP: Saw pod success 03/09/23 08:09:51.313
    Mar  9 08:09:51.314: INFO: Pod "downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61" satisfied condition "Succeeded or Failed"
    Mar  9 08:09:51.318: INFO: Trying to get logs from node k8s-worker1 pod downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61 container dapi-container: <nil>
    STEP: delete the pod 03/09/23 08:09:51.327
    Mar  9 08:09:51.343: INFO: Waiting for pod downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61 to disappear
    Mar  9 08:09:51.347: INFO: Pod downward-api-c3e6f280-eaee-43a4-9be1-844e411f2e61 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:51.347: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-8281" for this suite. 03/09/23 08:09:51.353
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:51.369
Mar  9 08:09:51.369: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir-wrapper 03/09/23 08:09:51.37
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:51.387
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:51.392
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
Mar  9 08:09:51.420: INFO: Waiting up to 5m0s for pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724" in namespace "emptydir-wrapper-444" to be "running and ready"
Mar  9 08:09:51.423: INFO: Pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724": Phase="Pending", Reason="", readiness=false. Elapsed: 3.865207ms
Mar  9 08:09:51.424: INFO: The phase of Pod pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:09:53.435: INFO: Pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0153649s
Mar  9 08:09:53.435: INFO: The phase of Pod pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:09:55.429: INFO: Pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724": Phase="Running", Reason="", readiness=true. Elapsed: 4.009538385s
Mar  9 08:09:55.429: INFO: The phase of Pod pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724 is Running (Ready = true)
Mar  9 08:09:55.429: INFO: Pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724" satisfied condition "running and ready"
STEP: Cleaning up the secret 03/09/23 08:09:55.433
STEP: Cleaning up the configmap 03/09/23 08:09:55.44
STEP: Cleaning up the pod 03/09/23 08:09:55.447
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:09:55.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-444" for this suite. 03/09/23 08:09:55.465
------------------------------
â€¢ [4.105 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:51.369
    Mar  9 08:09:51.369: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir-wrapper 03/09/23 08:09:51.37
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:51.387
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:51.392
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not conflict [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:67
    Mar  9 08:09:51.420: INFO: Waiting up to 5m0s for pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724" in namespace "emptydir-wrapper-444" to be "running and ready"
    Mar  9 08:09:51.423: INFO: Pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724": Phase="Pending", Reason="", readiness=false. Elapsed: 3.865207ms
    Mar  9 08:09:51.424: INFO: The phase of Pod pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:09:53.435: INFO: Pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0153649s
    Mar  9 08:09:53.435: INFO: The phase of Pod pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:09:55.429: INFO: Pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724": Phase="Running", Reason="", readiness=true. Elapsed: 4.009538385s
    Mar  9 08:09:55.429: INFO: The phase of Pod pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724 is Running (Ready = true)
    Mar  9 08:09:55.429: INFO: Pod "pod-secrets-14da3d9f-687e-4c54-8e01-e73ad3d6c724" satisfied condition "running and ready"
    STEP: Cleaning up the secret 03/09/23 08:09:55.433
    STEP: Cleaning up the configmap 03/09/23 08:09:55.44
    STEP: Cleaning up the pod 03/09/23 08:09:55.447
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:09:55.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-444" for this suite. 03/09/23 08:09:55.465
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:09:55.475
Mar  9 08:09:55.476: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename security-context-test 03/09/23 08:09:55.477
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:55.491
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:55.495
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
Mar  9 08:09:55.511: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1" in namespace "security-context-test-2418" to be "Succeeded or Failed"
Mar  9 08:09:55.515: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.842157ms
Mar  9 08:09:57.520: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00885972s
Mar  9 08:09:59.519: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008451473s
Mar  9 08:10:01.520: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009609171s
Mar  9 08:10:01.520: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar  9 08:10:01.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-2418" for this suite. 03/09/23 08:10:01.527
------------------------------
â€¢ [SLOW TEST] [6.060 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:430
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:486

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:09:55.475
    Mar  9 08:09:55.476: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename security-context-test 03/09/23 08:09:55.477
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:09:55.491
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:09:55.495
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:486
    Mar  9 08:09:55.511: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1" in namespace "security-context-test-2418" to be "Succeeded or Failed"
    Mar  9 08:09:55.515: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.842157ms
    Mar  9 08:09:57.520: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00885972s
    Mar  9 08:09:59.519: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008451473s
    Mar  9 08:10:01.520: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009609171s
    Mar  9 08:10:01.520: INFO: Pod "busybox-readonly-false-435ea6b4-f917-4115-af41-98659ff4c7b1" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:10:01.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-2418" for this suite. 03/09/23 08:10:01.527
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:10:01.537
Mar  9 08:10:01.537: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:10:01.539
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:10:01.554
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:10:01.559
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
STEP: creating a service externalname-service with the type=ExternalName in namespace services-466 03/09/23 08:10:01.564
STEP: changing the ExternalName service to type=NodePort 03/09/23 08:10:01.571
STEP: creating replication controller externalname-service in namespace services-466 03/09/23 08:10:01.602
I0309 08:10:01.610349      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-466, replica count: 2
I0309 08:10:04.662564      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 08:10:04.662: INFO: Creating new exec pod
Mar  9 08:10:04.670: INFO: Waiting up to 5m0s for pod "execpodjbm5s" in namespace "services-466" to be "running"
Mar  9 08:10:04.674: INFO: Pod "execpodjbm5s": Phase="Pending", Reason="", readiness=false. Elapsed: 4.120113ms
Mar  9 08:10:06.681: INFO: Pod "execpodjbm5s": Phase="Running", Reason="", readiness=true. Elapsed: 2.011005509s
Mar  9 08:10:06.681: INFO: Pod "execpodjbm5s" satisfied condition "running"
Mar  9 08:10:07.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-466 exec execpodjbm5s -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Mar  9 08:10:07.981: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Mar  9 08:10:07.981: INFO: stdout: ""
Mar  9 08:10:07.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-466 exec execpodjbm5s -- /bin/sh -x -c nc -v -z -w 2 10.110.250.164 80'
Mar  9 08:10:08.267: INFO: stderr: "+ nc -v -z -w 2 10.110.250.164 80\nConnection to 10.110.250.164 80 port [tcp/http] succeeded!\n"
Mar  9 08:10:08.267: INFO: stdout: ""
Mar  9 08:10:08.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-466 exec execpodjbm5s -- /bin/sh -x -c nc -v -z -w 2 192.168.0.102 32052'
Mar  9 08:10:08.554: INFO: stderr: "+ nc -v -z -w 2 192.168.0.102 32052\nConnection to 192.168.0.102 32052 port [tcp/*] succeeded!\n"
Mar  9 08:10:08.554: INFO: stdout: ""
Mar  9 08:10:08.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-466 exec execpodjbm5s -- /bin/sh -x -c nc -v -z -w 2 192.168.0.103 32052'
Mar  9 08:10:08.839: INFO: stderr: "+ nc -v -z -w 2 192.168.0.103 32052\nConnection to 192.168.0.103 32052 port [tcp/*] succeeded!\n"
Mar  9 08:10:08.839: INFO: stdout: ""
Mar  9 08:10:08.839: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:10:08.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-466" for this suite. 03/09/23 08:10:08.881
------------------------------
â€¢ [SLOW TEST] [7.354 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:10:01.537
    Mar  9 08:10:01.537: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:10:01.539
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:10:01.554
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:10:01.559
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to NodePort [Conformance]
      test/e2e/network/service.go:1477
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-466 03/09/23 08:10:01.564
    STEP: changing the ExternalName service to type=NodePort 03/09/23 08:10:01.571
    STEP: creating replication controller externalname-service in namespace services-466 03/09/23 08:10:01.602
    I0309 08:10:01.610349      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-466, replica count: 2
    I0309 08:10:04.662564      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 08:10:04.662: INFO: Creating new exec pod
    Mar  9 08:10:04.670: INFO: Waiting up to 5m0s for pod "execpodjbm5s" in namespace "services-466" to be "running"
    Mar  9 08:10:04.674: INFO: Pod "execpodjbm5s": Phase="Pending", Reason="", readiness=false. Elapsed: 4.120113ms
    Mar  9 08:10:06.681: INFO: Pod "execpodjbm5s": Phase="Running", Reason="", readiness=true. Elapsed: 2.011005509s
    Mar  9 08:10:06.681: INFO: Pod "execpodjbm5s" satisfied condition "running"
    Mar  9 08:10:07.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-466 exec execpodjbm5s -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Mar  9 08:10:07.981: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Mar  9 08:10:07.981: INFO: stdout: ""
    Mar  9 08:10:07.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-466 exec execpodjbm5s -- /bin/sh -x -c nc -v -z -w 2 10.110.250.164 80'
    Mar  9 08:10:08.267: INFO: stderr: "+ nc -v -z -w 2 10.110.250.164 80\nConnection to 10.110.250.164 80 port [tcp/http] succeeded!\n"
    Mar  9 08:10:08.267: INFO: stdout: ""
    Mar  9 08:10:08.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-466 exec execpodjbm5s -- /bin/sh -x -c nc -v -z -w 2 192.168.0.102 32052'
    Mar  9 08:10:08.554: INFO: stderr: "+ nc -v -z -w 2 192.168.0.102 32052\nConnection to 192.168.0.102 32052 port [tcp/*] succeeded!\n"
    Mar  9 08:10:08.554: INFO: stdout: ""
    Mar  9 08:10:08.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-466 exec execpodjbm5s -- /bin/sh -x -c nc -v -z -w 2 192.168.0.103 32052'
    Mar  9 08:10:08.839: INFO: stderr: "+ nc -v -z -w 2 192.168.0.103 32052\nConnection to 192.168.0.103 32052 port [tcp/*] succeeded!\n"
    Mar  9 08:10:08.839: INFO: stdout: ""
    Mar  9 08:10:08.839: INFO: Cleaning up the ExternalName to NodePort test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:10:08.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-466" for this suite. 03/09/23 08:10:08.881
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:10:08.894
Mar  9 08:10:08.894: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-probe 03/09/23 08:10:08.896
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:10:08.911
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:10:08.916
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar  9 08:11:08.939: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-223" for this suite. 03/09/23 08:11:08.945
------------------------------
â€¢ [SLOW TEST] [60.061 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:10:08.894
    Mar  9 08:10:08.894: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-probe 03/09/23 08:10:08.896
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:10:08.911
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:10:08.916
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:108
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:11:08.939: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-223" for this suite. 03/09/23 08:11:08.945
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:11:08.956
Mar  9 08:11:08.956: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:11:08.958
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:08.977
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:08.982
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
STEP: Creating configMap with name configmap-test-volume-c93a1f05-24f7-42f0-81a4-de5496dc4b7d 03/09/23 08:11:08.987
STEP: Creating a pod to test consume configMaps 03/09/23 08:11:08.993
Mar  9 08:11:09.004: INFO: Waiting up to 5m0s for pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171" in namespace "configmap-8823" to be "Succeeded or Failed"
Mar  9 08:11:09.008: INFO: Pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171": Phase="Pending", Reason="", readiness=false. Elapsed: 3.743967ms
Mar  9 08:11:11.013: INFO: Pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008842796s
Mar  9 08:11:13.013: INFO: Pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009107884s
STEP: Saw pod success 03/09/23 08:11:13.013
Mar  9 08:11:13.014: INFO: Pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171" satisfied condition "Succeeded or Failed"
Mar  9 08:11:13.018: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-ca42e568-be90-4061-b439-6db20d267171 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:11:13.026
Mar  9 08:11:13.040: INFO: Waiting for pod pod-configmaps-ca42e568-be90-4061-b439-6db20d267171 to disappear
Mar  9 08:11:13.043: INFO: Pod pod-configmaps-ca42e568-be90-4061-b439-6db20d267171 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:11:13.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8823" for this suite. 03/09/23 08:11:13.049
------------------------------
â€¢ [4.101 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:11:08.956
    Mar  9 08:11:08.956: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:11:08.958
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:08.977
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:08.982
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:57
    STEP: Creating configMap with name configmap-test-volume-c93a1f05-24f7-42f0-81a4-de5496dc4b7d 03/09/23 08:11:08.987
    STEP: Creating a pod to test consume configMaps 03/09/23 08:11:08.993
    Mar  9 08:11:09.004: INFO: Waiting up to 5m0s for pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171" in namespace "configmap-8823" to be "Succeeded or Failed"
    Mar  9 08:11:09.008: INFO: Pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171": Phase="Pending", Reason="", readiness=false. Elapsed: 3.743967ms
    Mar  9 08:11:11.013: INFO: Pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008842796s
    Mar  9 08:11:13.013: INFO: Pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009107884s
    STEP: Saw pod success 03/09/23 08:11:13.013
    Mar  9 08:11:13.014: INFO: Pod "pod-configmaps-ca42e568-be90-4061-b439-6db20d267171" satisfied condition "Succeeded or Failed"
    Mar  9 08:11:13.018: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-ca42e568-be90-4061-b439-6db20d267171 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:11:13.026
    Mar  9 08:11:13.040: INFO: Waiting for pod pod-configmaps-ca42e568-be90-4061-b439-6db20d267171 to disappear
    Mar  9 08:11:13.043: INFO: Pod pod-configmaps-ca42e568-be90-4061-b439-6db20d267171 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:11:13.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8823" for this suite. 03/09/23 08:11:13.049
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:11:13.061
Mar  9 08:11:13.061: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:11:13.063
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:13.079
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:13.084
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
STEP: Creating configMap with name projected-configmap-test-volume-a8d21ae7-2ab9-498e-88be-4545f038bfbc 03/09/23 08:11:13.09
STEP: Creating a pod to test consume configMaps 03/09/23 08:11:13.097
Mar  9 08:11:13.107: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b" in namespace "projected-5151" to be "Succeeded or Failed"
Mar  9 08:11:13.112: INFO: Pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.362351ms
Mar  9 08:11:15.117: INFO: Pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00933935s
Mar  9 08:11:17.118: INFO: Pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010562377s
STEP: Saw pod success 03/09/23 08:11:17.118
Mar  9 08:11:17.118: INFO: Pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b" satisfied condition "Succeeded or Failed"
Mar  9 08:11:17.123: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:11:17.132
Mar  9 08:11:17.144: INFO: Waiting for pod pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b to disappear
Mar  9 08:11:17.148: INFO: Pod pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:11:17.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5151" for this suite. 03/09/23 08:11:17.155
------------------------------
â€¢ [4.102 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:11:13.061
    Mar  9 08:11:13.061: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:11:13.063
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:13.079
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:13.084
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:74
    STEP: Creating configMap with name projected-configmap-test-volume-a8d21ae7-2ab9-498e-88be-4545f038bfbc 03/09/23 08:11:13.09
    STEP: Creating a pod to test consume configMaps 03/09/23 08:11:13.097
    Mar  9 08:11:13.107: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b" in namespace "projected-5151" to be "Succeeded or Failed"
    Mar  9 08:11:13.112: INFO: Pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.362351ms
    Mar  9 08:11:15.117: INFO: Pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00933935s
    Mar  9 08:11:17.118: INFO: Pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010562377s
    STEP: Saw pod success 03/09/23 08:11:17.118
    Mar  9 08:11:17.118: INFO: Pod "pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b" satisfied condition "Succeeded or Failed"
    Mar  9 08:11:17.123: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:11:17.132
    Mar  9 08:11:17.144: INFO: Waiting for pod pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b to disappear
    Mar  9 08:11:17.148: INFO: Pod pod-projected-configmaps-8eed2801-72de-4bfb-8bb4-de2f1db1883b no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:11:17.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5151" for this suite. 03/09/23 08:11:17.155
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected secret
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:11:17.163
Mar  9 08:11:17.164: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:11:17.166
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:17.18
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:17.185
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
STEP: Creating secret with name projected-secret-test-95b7dac3-7e55-4854-b4b5-d8ac86ddc723 03/09/23 08:11:17.19
STEP: Creating a pod to test consume secrets 03/09/23 08:11:17.196
Mar  9 08:11:17.208: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f" in namespace "projected-9730" to be "Succeeded or Failed"
Mar  9 08:11:17.212: INFO: Pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.97959ms
Mar  9 08:11:19.217: INFO: Pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008845725s
Mar  9 08:11:21.217: INFO: Pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009080739s
STEP: Saw pod success 03/09/23 08:11:21.217
Mar  9 08:11:21.218: INFO: Pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f" satisfied condition "Succeeded or Failed"
Mar  9 08:11:21.222: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f container secret-volume-test: <nil>
STEP: delete the pod 03/09/23 08:11:21.23
Mar  9 08:11:21.243: INFO: Waiting for pod pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f to disappear
Mar  9 08:11:21.247: INFO: Pod pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar  9 08:11:21.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9730" for this suite. 03/09/23 08:11:21.253
------------------------------
â€¢ [4.097 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:11:17.163
    Mar  9 08:11:17.164: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:11:17.166
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:17.18
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:17.185
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:119
    STEP: Creating secret with name projected-secret-test-95b7dac3-7e55-4854-b4b5-d8ac86ddc723 03/09/23 08:11:17.19
    STEP: Creating a pod to test consume secrets 03/09/23 08:11:17.196
    Mar  9 08:11:17.208: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f" in namespace "projected-9730" to be "Succeeded or Failed"
    Mar  9 08:11:17.212: INFO: Pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.97959ms
    Mar  9 08:11:19.217: INFO: Pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008845725s
    Mar  9 08:11:21.217: INFO: Pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009080739s
    STEP: Saw pod success 03/09/23 08:11:21.217
    Mar  9 08:11:21.218: INFO: Pod "pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f" satisfied condition "Succeeded or Failed"
    Mar  9 08:11:21.222: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f container secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 08:11:21.23
    Mar  9 08:11:21.243: INFO: Waiting for pod pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f to disappear
    Mar  9 08:11:21.247: INFO: Pod pod-projected-secrets-b7a63513-e8a3-4268-8dc3-eed06ff7ab2f no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:11:21.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9730" for this suite. 03/09/23 08:11:21.253
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:11:21.265
Mar  9 08:11:21.265: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubelet-test 03/09/23 08:11:21.267
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:21.283
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:21.288
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:11:25.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-3589" for this suite. 03/09/23 08:11:25.319
------------------------------
â€¢ [4.061 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should have an terminated reason [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:11:21.265
    Mar  9 08:11:21.265: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubelet-test 03/09/23 08:11:21.267
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:21.283
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:21.288
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should have an terminated reason [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:110
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:11:25.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-3589" for this suite. 03/09/23 08:11:25.319
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:11:25.329
Mar  9 08:11:25.329: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:11:25.331
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:25.346
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:25.351
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1572
STEP: creating an pod 03/09/23 08:11:25.356
Mar  9 08:11:25.359: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Mar  9 08:11:25.529: INFO: stderr: ""
Mar  9 08:11:25.529: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
STEP: Waiting for log generator to start. 03/09/23 08:11:25.53
Mar  9 08:11:25.530: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Mar  9 08:11:25.530: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-5" to be "running and ready, or succeeded"
Mar  9 08:11:25.534: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.359221ms
Mar  9 08:11:25.534: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'k8s-worker1' to be 'Running' but was 'Pending'
Mar  9 08:11:27.540: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.009956438s
Mar  9 08:11:27.540: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Mar  9 08:11:27.540: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings 03/09/23 08:11:27.54
Mar  9 08:11:27.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator'
Mar  9 08:11:27.726: INFO: stderr: ""
Mar  9 08:11:27.726: INFO: stdout: "I0309 08:11:25.534231       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/5lt 305\nI0309 08:11:25.734735       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/k65 218\nI0309 08:11:25.935187       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/79t 381\nI0309 08:11:26.134630       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/xr4n 516\nI0309 08:11:26.335095       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/w78j 570\nI0309 08:11:26.534342       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/fnq 459\n"
STEP: limiting log lines 03/09/23 08:11:27.726
Mar  9 08:11:27.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --tail=1'
Mar  9 08:11:27.904: INFO: stderr: ""
Mar  9 08:11:27.904: INFO: stdout: "I0309 08:11:26.734810       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/rcmr 571\n"
Mar  9 08:11:27.904: INFO: got output "I0309 08:11:26.734810       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/rcmr 571\n"
STEP: limiting log bytes 03/09/23 08:11:27.904
Mar  9 08:11:27.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --limit-bytes=1'
Mar  9 08:11:28.084: INFO: stderr: ""
Mar  9 08:11:28.084: INFO: stdout: "I"
Mar  9 08:11:28.084: INFO: got output "I"
STEP: exposing timestamps 03/09/23 08:11:28.084
Mar  9 08:11:28.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --tail=1 --timestamps'
Mar  9 08:11:28.254: INFO: stderr: ""
Mar  9 08:11:28.255: INFO: stdout: "2023-03-09T17:11:26.935445742+09:00 I0309 08:11:26.935249       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/sgnn 498\n"
Mar  9 08:11:28.255: INFO: got output "2023-03-09T17:11:26.935445742+09:00 I0309 08:11:26.935249       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/sgnn 498\n"
STEP: restricting to a time range 03/09/23 08:11:28.255
Mar  9 08:11:30.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --since=1s'
Mar  9 08:11:30.934: INFO: stderr: ""
Mar  9 08:11:30.934: INFO: stdout: "I0309 08:11:28.935265       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/5gs4 555\nI0309 08:11:29.134581       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/l4c 218\nI0309 08:11:29.334943       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/2mz 256\nI0309 08:11:29.534329       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/c6j 277\nI0309 08:11:29.734559       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/8jn 373\n"
Mar  9 08:11:30.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --since=24h'
Mar  9 08:11:31.088: INFO: stderr: ""
Mar  9 08:11:31.088: INFO: stdout: "I0309 08:11:25.534231       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/5lt 305\nI0309 08:11:25.734735       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/k65 218\nI0309 08:11:25.935187       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/79t 381\nI0309 08:11:26.134630       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/xr4n 516\nI0309 08:11:26.335095       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/w78j 570\nI0309 08:11:26.534342       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/fnq 459\nI0309 08:11:26.734810       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/rcmr 571\nI0309 08:11:26.935249       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/sgnn 498\nI0309 08:11:27.134602       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/jnnm 317\nI0309 08:11:27.335050       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/m8c 405\nI0309 08:11:27.534362       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/xq82 284\nI0309 08:11:27.734758       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/7stc 524\nI0309 08:11:27.935210       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/rtq 244\nI0309 08:11:28.134666       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/pm9 378\nI0309 08:11:28.335068       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/kdz5 408\nI0309 08:11:28.534431       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/fw4 234\nI0309 08:11:28.734797       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/pwwv 231\nI0309 08:11:28.935265       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/5gs4 555\nI0309 08:11:29.134581       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/l4c 218\nI0309 08:11:29.334943       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/2mz 256\nI0309 08:11:29.534329       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/c6j 277\nI0309 08:11:29.734559       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/8jn 373\nI0309 08:11:29.935015       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/2dq 597\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1577
Mar  9 08:11:31.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 delete pod logs-generator'
Mar  9 08:11:32.838: INFO: stderr: ""
Mar  9 08:11:32.838: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:11:32.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5" for this suite. 03/09/23 08:11:32.845
------------------------------
â€¢ [SLOW TEST] [7.525 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1569
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/kubectl/kubectl.go:1592

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:11:25.329
    Mar  9 08:11:25.329: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:11:25.331
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:25.346
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:25.351
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1572
    STEP: creating an pod 03/09/23 08:11:25.356
    Mar  9 08:11:25.359: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
    Mar  9 08:11:25.529: INFO: stderr: ""
    Mar  9 08:11:25.529: INFO: stdout: "pod/logs-generator created\n"
    [It] should be able to retrieve and filter logs  [Conformance]
      test/e2e/kubectl/kubectl.go:1592
    STEP: Waiting for log generator to start. 03/09/23 08:11:25.53
    Mar  9 08:11:25.530: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
    Mar  9 08:11:25.530: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-5" to be "running and ready, or succeeded"
    Mar  9 08:11:25.534: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.359221ms
    Mar  9 08:11:25.534: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'k8s-worker1' to be 'Running' but was 'Pending'
    Mar  9 08:11:27.540: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.009956438s
    Mar  9 08:11:27.540: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
    Mar  9 08:11:27.540: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
    STEP: checking for a matching strings 03/09/23 08:11:27.54
    Mar  9 08:11:27.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator'
    Mar  9 08:11:27.726: INFO: stderr: ""
    Mar  9 08:11:27.726: INFO: stdout: "I0309 08:11:25.534231       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/5lt 305\nI0309 08:11:25.734735       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/k65 218\nI0309 08:11:25.935187       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/79t 381\nI0309 08:11:26.134630       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/xr4n 516\nI0309 08:11:26.335095       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/w78j 570\nI0309 08:11:26.534342       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/fnq 459\n"
    STEP: limiting log lines 03/09/23 08:11:27.726
    Mar  9 08:11:27.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --tail=1'
    Mar  9 08:11:27.904: INFO: stderr: ""
    Mar  9 08:11:27.904: INFO: stdout: "I0309 08:11:26.734810       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/rcmr 571\n"
    Mar  9 08:11:27.904: INFO: got output "I0309 08:11:26.734810       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/rcmr 571\n"
    STEP: limiting log bytes 03/09/23 08:11:27.904
    Mar  9 08:11:27.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --limit-bytes=1'
    Mar  9 08:11:28.084: INFO: stderr: ""
    Mar  9 08:11:28.084: INFO: stdout: "I"
    Mar  9 08:11:28.084: INFO: got output "I"
    STEP: exposing timestamps 03/09/23 08:11:28.084
    Mar  9 08:11:28.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --tail=1 --timestamps'
    Mar  9 08:11:28.254: INFO: stderr: ""
    Mar  9 08:11:28.255: INFO: stdout: "2023-03-09T17:11:26.935445742+09:00 I0309 08:11:26.935249       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/sgnn 498\n"
    Mar  9 08:11:28.255: INFO: got output "2023-03-09T17:11:26.935445742+09:00 I0309 08:11:26.935249       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/sgnn 498\n"
    STEP: restricting to a time range 03/09/23 08:11:28.255
    Mar  9 08:11:30.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --since=1s'
    Mar  9 08:11:30.934: INFO: stderr: ""
    Mar  9 08:11:30.934: INFO: stdout: "I0309 08:11:28.935265       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/5gs4 555\nI0309 08:11:29.134581       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/l4c 218\nI0309 08:11:29.334943       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/2mz 256\nI0309 08:11:29.534329       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/c6j 277\nI0309 08:11:29.734559       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/8jn 373\n"
    Mar  9 08:11:30.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 logs logs-generator logs-generator --since=24h'
    Mar  9 08:11:31.088: INFO: stderr: ""
    Mar  9 08:11:31.088: INFO: stdout: "I0309 08:11:25.534231       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/5lt 305\nI0309 08:11:25.734735       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/k65 218\nI0309 08:11:25.935187       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/79t 381\nI0309 08:11:26.134630       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/xr4n 516\nI0309 08:11:26.335095       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/w78j 570\nI0309 08:11:26.534342       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/fnq 459\nI0309 08:11:26.734810       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/rcmr 571\nI0309 08:11:26.935249       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/sgnn 498\nI0309 08:11:27.134602       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/jnnm 317\nI0309 08:11:27.335050       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/m8c 405\nI0309 08:11:27.534362       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/xq82 284\nI0309 08:11:27.734758       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/7stc 524\nI0309 08:11:27.935210       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/rtq 244\nI0309 08:11:28.134666       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/pm9 378\nI0309 08:11:28.335068       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/kdz5 408\nI0309 08:11:28.534431       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/fw4 234\nI0309 08:11:28.734797       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/pwwv 231\nI0309 08:11:28.935265       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/5gs4 555\nI0309 08:11:29.134581       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/l4c 218\nI0309 08:11:29.334943       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/2mz 256\nI0309 08:11:29.534329       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/c6j 277\nI0309 08:11:29.734559       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/8jn 373\nI0309 08:11:29.935015       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/2dq 597\n"
    [AfterEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1577
    Mar  9 08:11:31.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5 delete pod logs-generator'
    Mar  9 08:11:32.838: INFO: stderr: ""
    Mar  9 08:11:32.838: INFO: stdout: "pod \"logs-generator\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:11:32.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5" for this suite. 03/09/23 08:11:32.845
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:11:32.855
Mar  9 08:11:32.856: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-preemption 03/09/23 08:11:32.857
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:32.872
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:32.876
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Mar  9 08:11:32.898: INFO: Waiting up to 1m0s for all nodes to be ready
Mar  9 08:12:32.944: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130
STEP: Create pods that use 4/5 of node resources. 03/09/23 08:12:32.948
Mar  9 08:12:32.979: INFO: Created pod: pod0-0-sched-preemption-low-priority
Mar  9 08:12:32.987: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Mar  9 08:12:33.013: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Mar  9 08:12:33.026: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 03/09/23 08:12:33.026
Mar  9 08:12:33.026: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-333" to be "running"
Mar  9 08:12:33.032: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.287869ms
Mar  9 08:12:35.037: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.010912684s
Mar  9 08:12:35.037: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Mar  9 08:12:35.037: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-333" to be "running"
Mar  9 08:12:35.041: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.387043ms
Mar  9 08:12:35.041: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Mar  9 08:12:35.041: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-333" to be "running"
Mar  9 08:12:35.045: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 3.856868ms
Mar  9 08:12:35.045: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Mar  9 08:12:35.045: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-333" to be "running"
Mar  9 08:12:35.050: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 4.423912ms
Mar  9 08:12:37.055: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.009775566s
Mar  9 08:12:37.055: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a high priority pod that has same requirements as that of lower priority pod 03/09/23 08:12:37.055
Mar  9 08:12:37.064: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-333" to be "running"
Mar  9 08:12:37.068: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.036018ms
Mar  9 08:12:39.074: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01026558s
Mar  9 08:12:41.073: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.009372213s
Mar  9 08:12:41.073: INFO: Pod "preemptor-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:12:41.092: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-333" for this suite. 03/09/23 08:12:41.157
------------------------------
â€¢ [SLOW TEST] [68.308 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:11:32.855
    Mar  9 08:11:32.856: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-preemption 03/09/23 08:11:32.857
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:11:32.872
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:11:32.876
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Mar  9 08:11:32.898: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar  9 08:12:32.944: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates basic preemption works [Conformance]
      test/e2e/scheduling/preemption.go:130
    STEP: Create pods that use 4/5 of node resources. 03/09/23 08:12:32.948
    Mar  9 08:12:32.979: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Mar  9 08:12:32.987: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Mar  9 08:12:33.013: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Mar  9 08:12:33.026: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 03/09/23 08:12:33.026
    Mar  9 08:12:33.026: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-333" to be "running"
    Mar  9 08:12:33.032: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 6.287869ms
    Mar  9 08:12:35.037: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.010912684s
    Mar  9 08:12:35.037: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Mar  9 08:12:35.037: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-333" to be "running"
    Mar  9 08:12:35.041: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.387043ms
    Mar  9 08:12:35.041: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Mar  9 08:12:35.041: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-333" to be "running"
    Mar  9 08:12:35.045: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 3.856868ms
    Mar  9 08:12:35.045: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Mar  9 08:12:35.045: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-333" to be "running"
    Mar  9 08:12:35.050: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 4.423912ms
    Mar  9 08:12:37.055: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.009775566s
    Mar  9 08:12:37.055: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a high priority pod that has same requirements as that of lower priority pod 03/09/23 08:12:37.055
    Mar  9 08:12:37.064: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-333" to be "running"
    Mar  9 08:12:37.068: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.036018ms
    Mar  9 08:12:39.074: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01026558s
    Mar  9 08:12:41.073: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.009372213s
    Mar  9 08:12:41.073: INFO: Pod "preemptor-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:12:41.092: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-333" for this suite. 03/09/23 08:12:41.157
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:12:41.165
Mar  9 08:12:41.165: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename deployment 03/09/23 08:12:41.167
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:12:41.187
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:12:41.192
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
Mar  9 08:12:41.197: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Mar  9 08:12:41.208: INFO: Pod name sample-pod: Found 0 pods out of 1
Mar  9 08:12:46.213: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/09/23 08:12:46.213
Mar  9 08:12:46.213: INFO: Creating deployment "test-rolling-update-deployment"
Mar  9 08:12:46.219: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Mar  9 08:12:46.228: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Mar  9 08:12:48.239: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Mar  9 08:12:48.251: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 12, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 12, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 12, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 12, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7549d9f46d\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:12:50.256: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar  9 08:12:50.271: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-9352  ebd9ad1f-58c4-4d40-941b-31b325e38125 252848 1 2023-03-09 08:12:46 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-03-09 08:12:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f3c7a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-09 08:12:46 +0000 UTC,LastTransitionTime:2023-03-09 08:12:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-03-09 08:12:48 +0000 UTC,LastTransitionTime:2023-03-09 08:12:46 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Mar  9 08:12:50.276: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-9352  0c50ce47-14aa-42ed-88e5-f14faad9adf3 252838 1 2023-03-09 08:12:46 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment ebd9ad1f-58c4-4d40-941b-31b325e38125 0xc003b023e7 0xc003b023e8}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:12:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ebd9ad1f-58c4-4d40-941b-31b325e38125\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003b024b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar  9 08:12:50.276: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Mar  9 08:12:50.276: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-9352  45d7a65c-6c46-40ec-ac8a-5eef65e149b1 252847 2 2023-03-09 08:12:41 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment ebd9ad1f-58c4-4d40-941b-31b325e38125 0xc003b022b7 0xc003b022b8}] [] [{e2e.test Update apps/v1 2023-03-09 08:12:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ebd9ad1f-58c4-4d40-941b-31b325e38125\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003b02378 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar  9 08:12:50.281: INFO: Pod "test-rolling-update-deployment-7549d9f46d-c8mv6" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-c8mv6 test-rolling-update-deployment-7549d9f46d- deployment-9352  07fd47e6-18df-430e-bd6e-cd31d874f239 252837 0 2023-03-09 08:12:46 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[cni.projectcalico.org/containerID:1e4a04a3ea25fbfae090f58550643eab74585708e76b93fc9b46ddaabc4fed1b cni.projectcalico.org/podIP:172.16.0.40/32 cni.projectcalico.org/podIPs:172.16.0.40/32] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 0c50ce47-14aa-42ed-88e5-f14faad9adf3 0xc0036ca0b7 0xc0036ca0b8}] [] [{Go-http-client Update v1 2023-03-09 08:12:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-09 08:12:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0c50ce47-14aa-42ed-88e5-f14faad9adf3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.40\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tfz66,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tfz66,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:12:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:12:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:12:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:12:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.40,StartTime:2023-03-09 08:12:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:12:47 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://e92ce09e0a3b40d93e1468d97e8d13a43a08c0168674ccce09b987fd5c712f9f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.40,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar  9 08:12:50.281: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-9352" for this suite. 03/09/23 08:12:50.287
------------------------------
â€¢ [SLOW TEST] [9.131 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:12:41.165
    Mar  9 08:12:41.165: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename deployment 03/09/23 08:12:41.167
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:12:41.187
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:12:41.192
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:105
    Mar  9 08:12:41.197: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
    Mar  9 08:12:41.208: INFO: Pod name sample-pod: Found 0 pods out of 1
    Mar  9 08:12:46.213: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/09/23 08:12:46.213
    Mar  9 08:12:46.213: INFO: Creating deployment "test-rolling-update-deployment"
    Mar  9 08:12:46.219: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
    Mar  9 08:12:46.228: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
    Mar  9 08:12:48.239: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
    Mar  9 08:12:48.251: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 12, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 12, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 12, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 12, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7549d9f46d\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:12:50.256: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar  9 08:12:50.271: INFO: Deployment "test-rolling-update-deployment":
    &Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-9352  ebd9ad1f-58c4-4d40-941b-31b325e38125 252848 1 2023-03-09 08:12:46 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-03-09 08:12:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f3c7a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-09 08:12:46 +0000 UTC,LastTransitionTime:2023-03-09 08:12:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-03-09 08:12:48 +0000 UTC,LastTransitionTime:2023-03-09 08:12:46 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Mar  9 08:12:50.276: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
    &ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-9352  0c50ce47-14aa-42ed-88e5-f14faad9adf3 252838 1 2023-03-09 08:12:46 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment ebd9ad1f-58c4-4d40-941b-31b325e38125 0xc003b023e7 0xc003b023e8}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:12:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ebd9ad1f-58c4-4d40-941b-31b325e38125\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003b024b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 08:12:50.276: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
    Mar  9 08:12:50.276: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-9352  45d7a65c-6c46-40ec-ac8a-5eef65e149b1 252847 2 2023-03-09 08:12:41 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment ebd9ad1f-58c4-4d40-941b-31b325e38125 0xc003b022b7 0xc003b022b8}] [] [{e2e.test Update apps/v1 2023-03-09 08:12:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ebd9ad1f-58c4-4d40-941b-31b325e38125\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003b02378 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 08:12:50.281: INFO: Pod "test-rolling-update-deployment-7549d9f46d-c8mv6" is available:
    &Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-c8mv6 test-rolling-update-deployment-7549d9f46d- deployment-9352  07fd47e6-18df-430e-bd6e-cd31d874f239 252837 0 2023-03-09 08:12:46 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[cni.projectcalico.org/containerID:1e4a04a3ea25fbfae090f58550643eab74585708e76b93fc9b46ddaabc4fed1b cni.projectcalico.org/podIP:172.16.0.40/32 cni.projectcalico.org/podIPs:172.16.0.40/32] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 0c50ce47-14aa-42ed-88e5-f14faad9adf3 0xc0036ca0b7 0xc0036ca0b8}] [] [{Go-http-client Update v1 2023-03-09 08:12:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-09 08:12:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0c50ce47-14aa-42ed-88e5-f14faad9adf3\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:12:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.40\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tfz66,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tfz66,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:12:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:12:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:12:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:12:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.40,StartTime:2023-03-09 08:12:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:12:47 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://e92ce09e0a3b40d93e1468d97e8d13a43a08c0168674ccce09b987fd5c712f9f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.40,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:12:50.281: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-9352" for this suite. 03/09/23 08:12:50.287
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:12:50.299
Mar  9 08:12:50.299: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename namespaces 03/09/23 08:12:50.3
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:12:50.315
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:12:50.32
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
STEP: Creating a test namespace 03/09/23 08:12:50.325
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:12:50.341
STEP: Creating a service in the namespace 03/09/23 08:12:50.346
STEP: Deleting the namespace 03/09/23 08:12:50.362
STEP: Waiting for the namespace to be removed. 03/09/23 08:12:50.371
STEP: Recreating the namespace 03/09/23 08:12:56.382
STEP: Verifying there is no service in the namespace 03/09/23 08:12:56.405
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:12:56.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-4793" for this suite. 03/09/23 08:12:56.418
STEP: Destroying namespace "nsdeletetest-3704" for this suite. 03/09/23 08:12:56.425
Mar  9 08:12:56.429: INFO: Namespace nsdeletetest-3704 was already deleted
STEP: Destroying namespace "nsdeletetest-6513" for this suite. 03/09/23 08:12:56.429
------------------------------
â€¢ [SLOW TEST] [6.136 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:12:50.299
    Mar  9 08:12:50.299: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename namespaces 03/09/23 08:12:50.3
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:12:50.315
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:12:50.32
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all services are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:251
    STEP: Creating a test namespace 03/09/23 08:12:50.325
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:12:50.341
    STEP: Creating a service in the namespace 03/09/23 08:12:50.346
    STEP: Deleting the namespace 03/09/23 08:12:50.362
    STEP: Waiting for the namespace to be removed. 03/09/23 08:12:50.371
    STEP: Recreating the namespace 03/09/23 08:12:56.382
    STEP: Verifying there is no service in the namespace 03/09/23 08:12:56.405
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:12:56.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-4793" for this suite. 03/09/23 08:12:56.418
    STEP: Destroying namespace "nsdeletetest-3704" for this suite. 03/09/23 08:12:56.425
    Mar  9 08:12:56.429: INFO: Namespace nsdeletetest-3704 was already deleted
    STEP: Destroying namespace "nsdeletetest-6513" for this suite. 03/09/23 08:12:56.429
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:12:56.438
Mar  9 08:12:56.438: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename daemonsets 03/09/23 08:12:56.44
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:12:56.453
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:12:56.456
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294
STEP: Creating a simple DaemonSet "daemon-set" 03/09/23 08:12:56.479
STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 08:12:56.485
Mar  9 08:12:56.491: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:12:56.494: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:12:56.494: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:12:57.501: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:12:57.505: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:12:57.506: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:12:58.500: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:12:58.505: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 08:12:58.505: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 03/09/23 08:12:58.509
Mar  9 08:12:58.532: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:12:58.537: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 08:12:58.537: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:12:59.545: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:12:59.550: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 08:12:59.550: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:13:00.545: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:13:00.550: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 08:13:00.550: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted. 03/09/23 08:13:00.55
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/09/23 08:13:00.558
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4111, will wait for the garbage collector to delete the pods 03/09/23 08:13:00.558
Mar  9 08:13:00.621: INFO: Deleting DaemonSet.extensions daemon-set took: 8.660599ms
Mar  9 08:13:00.721: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.473048ms
Mar  9 08:13:03.226: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:13:03.226: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar  9 08:13:03.230: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"253012"},"items":null}

Mar  9 08:13:03.233: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"253012"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:03.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4111" for this suite. 03/09/23 08:13:03.253
------------------------------
â€¢ [SLOW TEST] [6.822 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:294

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:12:56.438
    Mar  9 08:12:56.438: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename daemonsets 03/09/23 08:12:56.44
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:12:56.453
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:12:56.456
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should retry creating failed daemon pods [Conformance]
      test/e2e/apps/daemon_set.go:294
    STEP: Creating a simple DaemonSet "daemon-set" 03/09/23 08:12:56.479
    STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 08:12:56.485
    Mar  9 08:12:56.491: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:12:56.494: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:12:56.494: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:12:57.501: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:12:57.505: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:12:57.506: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:12:58.500: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:12:58.505: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 08:12:58.505: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 03/09/23 08:12:58.509
    Mar  9 08:12:58.532: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:12:58.537: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 08:12:58.537: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:12:59.545: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:12:59.550: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 08:12:59.550: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:13:00.545: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:13:00.550: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 08:13:00.550: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Wait for the failed daemon pod to be completely deleted. 03/09/23 08:13:00.55
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/09/23 08:13:00.558
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4111, will wait for the garbage collector to delete the pods 03/09/23 08:13:00.558
    Mar  9 08:13:00.621: INFO: Deleting DaemonSet.extensions daemon-set took: 8.660599ms
    Mar  9 08:13:00.721: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.473048ms
    Mar  9 08:13:03.226: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:13:03.226: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar  9 08:13:03.230: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"253012"},"items":null}

    Mar  9 08:13:03.233: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"253012"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:03.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4111" for this suite. 03/09/23 08:13:03.253
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:03.263
Mar  9 08:13:03.263: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename runtimeclass 03/09/23 08:13:03.265
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:03.28
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:03.284
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:03.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-4784" for this suite. 03/09/23 08:13:03.304
------------------------------
â€¢ [0.049 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:03.263
    Mar  9 08:13:03.263: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename runtimeclass 03/09/23 08:13:03.265
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:03.28
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:03.284
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:55
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:03.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-4784" for this suite. 03/09/23 08:13:03.304
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:03.312
Mar  9 08:13:03.313: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-pred 03/09/23 08:13:03.314
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:03.328
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:03.333
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Mar  9 08:13:03.338: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Mar  9 08:13:03.349: INFO: Waiting for terminating namespaces to be deleted...
Mar  9 08:13:03.354: INFO: 
Logging pods the apiserver thinks is on node k8s-worker1 before test
Mar  9 08:13:03.365: INFO: calico-kube-controllers-79568db7f8-dgf8v from kube-system started at 2023-03-08 10:49:58 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.365: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Mar  9 08:13:03.365: INFO: calico-node-kzddq from kube-system started at 2023-03-08 01:45:28 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.365: INFO: 	Container calico-node ready: true, restart count 0
Mar  9 08:13:03.365: INFO: kube-proxy-2blnw from kube-system started at 2023-03-08 01:45:23 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.365: INFO: 	Container kube-proxy ready: true, restart count 0
Mar  9 08:13:03.365: INFO: sonobuoy from sonobuoy started at 2023-03-09 07:56:46 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.365: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Mar  9 08:13:03.365: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 from sonobuoy started at 2023-03-09 07:56:47 +0000 UTC (2 container statuses recorded)
Mar  9 08:13:03.365: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:13:03.365: INFO: 	Container systemd-logs ready: true, restart count 0
Mar  9 08:13:03.365: INFO: 
Logging pods the apiserver thinks is on node k8s-worker2 before test
Mar  9 08:13:03.377: INFO: admin-front from default started at 2023-03-08 19:24:01 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container admin-front ready: true, restart count 0
Mar  9 08:13:03.377: INFO: bizmicro-api-webapp from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container bizmicro-api-webapp ready: true, restart count 0
Mar  9 08:13:03.377: INFO: bizmicro-daemon-webapp from default started at 2023-03-08 19:23:28 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container bizmicro-daemon-webapp ready: true, restart count 0
Mar  9 08:13:03.377: INFO: bizmicro-sockjs-webapp from default started at 2023-03-08 19:23:36 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container bizmicro-sockjs-webapp ready: true, restart count 0
Mar  9 08:13:03.377: INFO: user-front from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container user-front ready: true, restart count 0
Mar  9 08:13:03.377: INFO: calico-node-zdhvf from kube-system started at 2023-03-08 01:45:27 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container calico-node ready: true, restart count 3
Mar  9 08:13:03.377: INFO: kube-proxy-dn7ts from kube-system started at 2023-03-08 01:44:47 +0000 UTC (1 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container kube-proxy ready: true, restart count 3
Mar  9 08:13:03.377: INFO: sonobuoy-e2e-job-2a17a947d7c74874 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container e2e ready: true, restart count 0
Mar  9 08:13:03.377: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:13:03.377: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
Mar  9 08:13:03.377: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:13:03.377: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
STEP: Trying to schedule Pod with nonempty NodeSelector. 03/09/23 08:13:03.377
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.174ab20dbd22127a], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] 03/09/23 08:13:03.418
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:04.415: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-1059" for this suite. 03/09/23 08:13:04.422
------------------------------
â€¢ [1.116 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:03.312
    Mar  9 08:13:03.313: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-pred 03/09/23 08:13:03.314
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:03.328
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:03.333
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Mar  9 08:13:03.338: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Mar  9 08:13:03.349: INFO: Waiting for terminating namespaces to be deleted...
    Mar  9 08:13:03.354: INFO: 
    Logging pods the apiserver thinks is on node k8s-worker1 before test
    Mar  9 08:13:03.365: INFO: calico-kube-controllers-79568db7f8-dgf8v from kube-system started at 2023-03-08 10:49:58 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.365: INFO: 	Container calico-kube-controllers ready: true, restart count 0
    Mar  9 08:13:03.365: INFO: calico-node-kzddq from kube-system started at 2023-03-08 01:45:28 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.365: INFO: 	Container calico-node ready: true, restart count 0
    Mar  9 08:13:03.365: INFO: kube-proxy-2blnw from kube-system started at 2023-03-08 01:45:23 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.365: INFO: 	Container kube-proxy ready: true, restart count 0
    Mar  9 08:13:03.365: INFO: sonobuoy from sonobuoy started at 2023-03-09 07:56:46 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.365: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Mar  9 08:13:03.365: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 from sonobuoy started at 2023-03-09 07:56:47 +0000 UTC (2 container statuses recorded)
    Mar  9 08:13:03.365: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:13:03.365: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar  9 08:13:03.365: INFO: 
    Logging pods the apiserver thinks is on node k8s-worker2 before test
    Mar  9 08:13:03.377: INFO: admin-front from default started at 2023-03-08 19:24:01 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container admin-front ready: true, restart count 0
    Mar  9 08:13:03.377: INFO: bizmicro-api-webapp from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container bizmicro-api-webapp ready: true, restart count 0
    Mar  9 08:13:03.377: INFO: bizmicro-daemon-webapp from default started at 2023-03-08 19:23:28 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container bizmicro-daemon-webapp ready: true, restart count 0
    Mar  9 08:13:03.377: INFO: bizmicro-sockjs-webapp from default started at 2023-03-08 19:23:36 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container bizmicro-sockjs-webapp ready: true, restart count 0
    Mar  9 08:13:03.377: INFO: user-front from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container user-front ready: true, restart count 0
    Mar  9 08:13:03.377: INFO: calico-node-zdhvf from kube-system started at 2023-03-08 01:45:27 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container calico-node ready: true, restart count 3
    Mar  9 08:13:03.377: INFO: kube-proxy-dn7ts from kube-system started at 2023-03-08 01:44:47 +0000 UTC (1 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container kube-proxy ready: true, restart count 3
    Mar  9 08:13:03.377: INFO: sonobuoy-e2e-job-2a17a947d7c74874 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container e2e ready: true, restart count 0
    Mar  9 08:13:03.377: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:13:03.377: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
    Mar  9 08:13:03.377: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:13:03.377: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if not matching  [Conformance]
      test/e2e/scheduling/predicates.go:443
    STEP: Trying to schedule Pod with nonempty NodeSelector. 03/09/23 08:13:03.377
    STEP: Considering event: 
    Type = [Warning], Name = [restricted-pod.174ab20dbd22127a], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] 03/09/23 08:13:03.418
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:04.415: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-1059" for this suite. 03/09/23 08:13:04.422
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:04.43
Mar  9 08:13:04.430: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:13:04.432
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:04.446
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:04.45
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:13:04.456
Mar  9 08:13:04.466: INFO: Waiting up to 5m0s for pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e" in namespace "downward-api-6941" to be "Succeeded or Failed"
Mar  9 08:13:04.470: INFO: Pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.4068ms
Mar  9 08:13:06.475: INFO: Pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009163646s
Mar  9 08:13:08.476: INFO: Pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009989479s
STEP: Saw pod success 03/09/23 08:13:08.476
Mar  9 08:13:08.476: INFO: Pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e" satisfied condition "Succeeded or Failed"
Mar  9 08:13:08.480: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e container client-container: <nil>
STEP: delete the pod 03/09/23 08:13:08.511
Mar  9 08:13:08.525: INFO: Waiting for pod downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e to disappear
Mar  9 08:13:08.530: INFO: Pod downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:08.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6941" for this suite. 03/09/23 08:13:08.536
------------------------------
â€¢ [4.124 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:04.43
    Mar  9 08:13:04.430: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:13:04.432
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:04.446
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:04.45
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:193
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:13:04.456
    Mar  9 08:13:04.466: INFO: Waiting up to 5m0s for pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e" in namespace "downward-api-6941" to be "Succeeded or Failed"
    Mar  9 08:13:04.470: INFO: Pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.4068ms
    Mar  9 08:13:06.475: INFO: Pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009163646s
    Mar  9 08:13:08.476: INFO: Pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009989479s
    STEP: Saw pod success 03/09/23 08:13:08.476
    Mar  9 08:13:08.476: INFO: Pod "downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e" satisfied condition "Succeeded or Failed"
    Mar  9 08:13:08.480: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e container client-container: <nil>
    STEP: delete the pod 03/09/23 08:13:08.511
    Mar  9 08:13:08.525: INFO: Waiting for pod downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e to disappear
    Mar  9 08:13:08.530: INFO: Pod downwardapi-volume-fe8cb595-10d1-4f95-86e4-de516b36d58e no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:08.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6941" for this suite. 03/09/23 08:13:08.536
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:08.555
Mar  9 08:13:08.555: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 08:13:08.557
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:08.571
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:08.577
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
Mar  9 08:13:08.582: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:09.135: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-5133" for this suite. 03/09/23 08:13:09.141
------------------------------
â€¢ [0.593 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    getting/updating/patching custom resource definition status sub-resource works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:145

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:08.555
    Mar  9 08:13:08.555: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 08:13:08.557
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:08.571
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:08.577
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:145
    Mar  9 08:13:08.582: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:09.135: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-5133" for this suite. 03/09/23 08:13:09.141
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:09.149
Mar  9 08:13:09.149: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename endpointslice 03/09/23 08:13:09.15
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:09.164
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:09.168
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:11.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-7832" for this suite. 03/09/23 08:13:11.235
------------------------------
â€¢ [2.094 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:09.149
    Mar  9 08:13:09.149: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename endpointslice 03/09/23 08:13:09.15
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:09.164
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:09.168
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
      test/e2e/network/endpointslice.go:102
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:11.229: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-7832" for this suite. 03/09/23 08:13:11.235
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:11.245
Mar  9 08:13:11.245: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:13:11.247
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:11.261
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:11.266
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:11.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2425" for this suite. 03/09/23 08:13:11.325
------------------------------
â€¢ [0.087 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:11.245
    Mar  9 08:13:11.245: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:13:11.247
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:11.261
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:11.266
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/configmap_volume.go:504
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:11.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2425" for this suite. 03/09/23 08:13:11.325
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:11.343
Mar  9 08:13:11.343: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:13:11.345
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:11.361
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:11.366
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/09/23 08:13:11.371
Mar  9 08:13:11.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-882 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Mar  9 08:13:11.541: INFO: stderr: ""
Mar  9 08:13:11.541: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run 03/09/23 08:13:11.541
Mar  9 08:13:11.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-882 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
Mar  9 08:13:12.963: INFO: stderr: ""
Mar  9 08:13:12.963: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/09/23 08:13:12.963
Mar  9 08:13:12.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-882 delete pods e2e-test-httpd-pod'
Mar  9 08:13:15.216: INFO: stderr: ""
Mar  9 08:13:15.216: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:15.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-882" for this suite. 03/09/23 08:13:15.223
------------------------------
â€¢ [3.887 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl server-side dry-run
  test/e2e/kubectl/kubectl.go:956
    should check if kubectl can dry-run update Pods [Conformance]
    test/e2e/kubectl/kubectl.go:962

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:11.343
    Mar  9 08:13:11.343: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:13:11.345
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:11.361
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:11.366
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl can dry-run update Pods [Conformance]
      test/e2e/kubectl/kubectl.go:962
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/09/23 08:13:11.371
    Mar  9 08:13:11.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-882 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Mar  9 08:13:11.541: INFO: stderr: ""
    Mar  9 08:13:11.541: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: replace the image in the pod with server-side dry-run 03/09/23 08:13:11.541
    Mar  9 08:13:11.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-882 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
    Mar  9 08:13:12.963: INFO: stderr: ""
    Mar  9 08:13:12.963: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/09/23 08:13:12.963
    Mar  9 08:13:12.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-882 delete pods e2e-test-httpd-pod'
    Mar  9 08:13:15.216: INFO: stderr: ""
    Mar  9 08:13:15.216: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:15.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-882" for this suite. 03/09/23 08:13:15.223
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:15.231
Mar  9 08:13:15.232: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:13:15.233
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:15.248
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:15.256
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
STEP: Creating the pod 03/09/23 08:13:15.261
Mar  9 08:13:15.272: INFO: Waiting up to 5m0s for pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a" in namespace "downward-api-7932" to be "running and ready"
Mar  9 08:13:15.276: INFO: Pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.265401ms
Mar  9 08:13:15.276: INFO: The phase of Pod labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:13:17.282: INFO: Pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a": Phase="Running", Reason="", readiness=true. Elapsed: 2.009995751s
Mar  9 08:13:17.282: INFO: The phase of Pod labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a is Running (Ready = true)
Mar  9 08:13:17.282: INFO: Pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a" satisfied condition "running and ready"
Mar  9 08:13:17.814: INFO: Successfully updated pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:19.831: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7932" for this suite. 03/09/23 08:13:19.837
------------------------------
â€¢ [4.613 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:15.231
    Mar  9 08:13:15.232: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:13:15.233
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:15.248
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:15.256
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:130
    STEP: Creating the pod 03/09/23 08:13:15.261
    Mar  9 08:13:15.272: INFO: Waiting up to 5m0s for pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a" in namespace "downward-api-7932" to be "running and ready"
    Mar  9 08:13:15.276: INFO: Pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.265401ms
    Mar  9 08:13:15.276: INFO: The phase of Pod labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:13:17.282: INFO: Pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a": Phase="Running", Reason="", readiness=true. Elapsed: 2.009995751s
    Mar  9 08:13:17.282: INFO: The phase of Pod labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a is Running (Ready = true)
    Mar  9 08:13:17.282: INFO: Pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a" satisfied condition "running and ready"
    Mar  9 08:13:17.814: INFO: Successfully updated pod "labelsupdatea9b44c18-ffc2-41a7-913a-5d9280b9e30a"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:19.831: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7932" for this suite. 03/09/23 08:13:19.837
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:19.847
Mar  9 08:13:19.847: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:13:19.848
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:19.866
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:19.881
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
STEP: Creating configMap with name configmap-test-volume-34a5c626-8034-468c-b993-75eb54708fd1 03/09/23 08:13:19.886
STEP: Creating a pod to test consume configMaps 03/09/23 08:13:19.894
Mar  9 08:13:19.907: INFO: Waiting up to 5m0s for pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720" in namespace "configmap-6447" to be "Succeeded or Failed"
Mar  9 08:13:19.911: INFO: Pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720": Phase="Pending", Reason="", readiness=false. Elapsed: 3.810326ms
Mar  9 08:13:21.916: INFO: Pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009335116s
Mar  9 08:13:23.917: INFO: Pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009725837s
STEP: Saw pod success 03/09/23 08:13:23.917
Mar  9 08:13:23.917: INFO: Pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720" satisfied condition "Succeeded or Failed"
Mar  9 08:13:23.921: INFO: Trying to get logs from node k8s-worker2 pod pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:13:23.954
Mar  9 08:13:23.967: INFO: Waiting for pod pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720 to disappear
Mar  9 08:13:23.971: INFO: Pod pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:23.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6447" for this suite. 03/09/23 08:13:23.977
------------------------------
â€¢ [4.138 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:19.847
    Mar  9 08:13:19.847: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:13:19.848
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:19.866
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:19.881
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:47
    STEP: Creating configMap with name configmap-test-volume-34a5c626-8034-468c-b993-75eb54708fd1 03/09/23 08:13:19.886
    STEP: Creating a pod to test consume configMaps 03/09/23 08:13:19.894
    Mar  9 08:13:19.907: INFO: Waiting up to 5m0s for pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720" in namespace "configmap-6447" to be "Succeeded or Failed"
    Mar  9 08:13:19.911: INFO: Pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720": Phase="Pending", Reason="", readiness=false. Elapsed: 3.810326ms
    Mar  9 08:13:21.916: INFO: Pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009335116s
    Mar  9 08:13:23.917: INFO: Pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009725837s
    STEP: Saw pod success 03/09/23 08:13:23.917
    Mar  9 08:13:23.917: INFO: Pod "pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720" satisfied condition "Succeeded or Failed"
    Mar  9 08:13:23.921: INFO: Trying to get logs from node k8s-worker2 pod pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:13:23.954
    Mar  9 08:13:23.967: INFO: Waiting for pod pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720 to disappear
    Mar  9 08:13:23.971: INFO: Pod pod-configmaps-c17c74cf-bcc8-4223-8c7d-78aa83146720 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:23.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6447" for this suite. 03/09/23 08:13:23.977
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:23.986
Mar  9 08:13:23.986: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename watch 03/09/23 08:13:23.988
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:24.007
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:24.012
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
STEP: creating a watch on configmaps 03/09/23 08:13:24.017
STEP: creating a new configmap 03/09/23 08:13:24.019
STEP: modifying the configmap once 03/09/23 08:13:24.025
STEP: closing the watch once it receives two notifications 03/09/23 08:13:24.036
Mar  9 08:13:24.036: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5082  84a7b7ae-79eb-4639-9134-9f3c76288cca 253247 0 2023-03-09 08:13:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-09 08:13:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:13:24.037: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5082  84a7b7ae-79eb-4639-9134-9f3c76288cca 253248 0 2023-03-09 08:13:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-09 08:13:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed 03/09/23 08:13:24.037
STEP: creating a new watch on configmaps from the last resource version observed by the first watch 03/09/23 08:13:24.049
STEP: deleting the configmap 03/09/23 08:13:24.052
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 03/09/23 08:13:24.058
Mar  9 08:13:24.059: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5082  84a7b7ae-79eb-4639-9134-9f3c76288cca 253249 0 2023-03-09 08:13:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-09 08:13:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:13:24.059: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5082  84a7b7ae-79eb-4639-9134-9f3c76288cca 253250 0 2023-03-09 08:13:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-09 08:13:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar  9 08:13:24.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-5082" for this suite. 03/09/23 08:13:24.065
------------------------------
â€¢ [0.086 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:23.986
    Mar  9 08:13:23.986: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename watch 03/09/23 08:13:23.988
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:24.007
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:24.012
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
      test/e2e/apimachinery/watch.go:191
    STEP: creating a watch on configmaps 03/09/23 08:13:24.017
    STEP: creating a new configmap 03/09/23 08:13:24.019
    STEP: modifying the configmap once 03/09/23 08:13:24.025
    STEP: closing the watch once it receives two notifications 03/09/23 08:13:24.036
    Mar  9 08:13:24.036: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5082  84a7b7ae-79eb-4639-9134-9f3c76288cca 253247 0 2023-03-09 08:13:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-09 08:13:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:13:24.037: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5082  84a7b7ae-79eb-4639-9134-9f3c76288cca 253248 0 2023-03-09 08:13:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-09 08:13:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time, while the watch is closed 03/09/23 08:13:24.037
    STEP: creating a new watch on configmaps from the last resource version observed by the first watch 03/09/23 08:13:24.049
    STEP: deleting the configmap 03/09/23 08:13:24.052
    STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 03/09/23 08:13:24.058
    Mar  9 08:13:24.059: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5082  84a7b7ae-79eb-4639-9134-9f3c76288cca 253249 0 2023-03-09 08:13:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-09 08:13:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:13:24.059: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5082  84a7b7ae-79eb-4639-9134-9f3c76288cca 253250 0 2023-03-09 08:13:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-03-09 08:13:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:13:24.059: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-5082" for this suite. 03/09/23 08:13:24.065
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:13:24.076
Mar  9 08:13:24.076: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename svcaccounts 03/09/23 08:13:24.078
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:24.092
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:24.098
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
Mar  9 08:13:24.122: INFO: created pod
Mar  9 08:13:24.122: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-7837" to be "Succeeded or Failed"
Mar  9 08:13:24.127: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.542257ms
Mar  9 08:13:26.132: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010047206s
Mar  9 08:13:28.133: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010972678s
Mar  9 08:13:30.132: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009770869s
STEP: Saw pod success 03/09/23 08:13:30.132
Mar  9 08:13:30.133: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Mar  9 08:14:00.133: INFO: polling logs
Mar  9 08:14:00.146: INFO: Pod logs: 
I0309 08:13:24.195752       1 log.go:198] OK: Got token
I0309 08:13:24.195855       1 log.go:198] validating with in-cluster discovery
I0309 08:13:24.196863       1 log.go:198] OK: got issuer https://kubernetes.default.svc.cluster.local
I0309 08:13:24.196933       1 log.go:198] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7837:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1678350204, NotBefore:1678349604, IssuedAt:1678349604, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7837", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"13ab39eb-4e91-49a5-836b-6a5a9584ac98"}}}
I0309 08:13:24.223297       1 log.go:198] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
I0309 08:13:24.241487       1 log.go:198] OK: Validated signature on JWT
I0309 08:13:24.241729       1 log.go:198] OK: Got valid claims from token!
I0309 08:13:24.241805       1 log.go:198] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7837:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1678350204, NotBefore:1678349604, IssuedAt:1678349604, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7837", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"13ab39eb-4e91-49a5-836b-6a5a9584ac98"}}}

Mar  9 08:14:00.146: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar  9 08:14:00.154: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-7837" for this suite. 03/09/23 08:14:00.16
------------------------------
â€¢ [SLOW TEST] [36.092 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:13:24.076
    Mar  9 08:13:24.076: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename svcaccounts 03/09/23 08:13:24.078
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:13:24.092
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:13:24.098
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
      test/e2e/auth/service_accounts.go:531
    Mar  9 08:13:24.122: INFO: created pod
    Mar  9 08:13:24.122: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-7837" to be "Succeeded or Failed"
    Mar  9 08:13:24.127: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.542257ms
    Mar  9 08:13:26.132: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010047206s
    Mar  9 08:13:28.133: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010972678s
    Mar  9 08:13:30.132: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009770869s
    STEP: Saw pod success 03/09/23 08:13:30.132
    Mar  9 08:13:30.133: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
    Mar  9 08:14:00.133: INFO: polling logs
    Mar  9 08:14:00.146: INFO: Pod logs: 
    I0309 08:13:24.195752       1 log.go:198] OK: Got token
    I0309 08:13:24.195855       1 log.go:198] validating with in-cluster discovery
    I0309 08:13:24.196863       1 log.go:198] OK: got issuer https://kubernetes.default.svc.cluster.local
    I0309 08:13:24.196933       1 log.go:198] Full, not-validated claims: 
    openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7837:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1678350204, NotBefore:1678349604, IssuedAt:1678349604, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7837", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"13ab39eb-4e91-49a5-836b-6a5a9584ac98"}}}
    I0309 08:13:24.223297       1 log.go:198] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
    I0309 08:13:24.241487       1 log.go:198] OK: Validated signature on JWT
    I0309 08:13:24.241729       1 log.go:198] OK: Got valid claims from token!
    I0309 08:13:24.241805       1 log.go:198] Full, validated claims: 
    &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7837:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1678350204, NotBefore:1678349604, IssuedAt:1678349604, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7837", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"13ab39eb-4e91-49a5-836b-6a5a9584ac98"}}}

    Mar  9 08:14:00.146: INFO: completed pod
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:14:00.154: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-7837" for this suite. 03/09/23 08:14:00.16
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:14:00.17
Mar  9 08:14:00.170: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename endpointslice 03/09/23 08:14:00.171
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:00.189
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:00.194
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
STEP: getting /apis 03/09/23 08:14:00.198
STEP: getting /apis/discovery.k8s.io 03/09/23 08:14:00.203
STEP: getting /apis/discovery.k8s.iov1 03/09/23 08:14:00.205
STEP: creating 03/09/23 08:14:00.206
STEP: getting 03/09/23 08:14:00.225
STEP: listing 03/09/23 08:14:00.229
STEP: watching 03/09/23 08:14:00.233
Mar  9 08:14:00.233: INFO: starting watch
STEP: cluster-wide listing 03/09/23 08:14:00.236
STEP: cluster-wide watching 03/09/23 08:14:00.24
Mar  9 08:14:00.241: INFO: starting watch
STEP: patching 03/09/23 08:14:00.242
STEP: updating 03/09/23 08:14:00.249
Mar  9 08:14:00.259: INFO: waiting for watch events with expected annotations
Mar  9 08:14:00.259: INFO: saw patched and updated annotations
STEP: deleting 03/09/23 08:14:00.259
STEP: deleting a collection 03/09/23 08:14:00.273
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Mar  9 08:14:00.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-1391" for this suite. 03/09/23 08:14:00.297
------------------------------
â€¢ [0.135 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:14:00.17
    Mar  9 08:14:00.170: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename endpointslice 03/09/23 08:14:00.171
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:00.189
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:00.194
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should support creating EndpointSlice API operations [Conformance]
      test/e2e/network/endpointslice.go:353
    STEP: getting /apis 03/09/23 08:14:00.198
    STEP: getting /apis/discovery.k8s.io 03/09/23 08:14:00.203
    STEP: getting /apis/discovery.k8s.iov1 03/09/23 08:14:00.205
    STEP: creating 03/09/23 08:14:00.206
    STEP: getting 03/09/23 08:14:00.225
    STEP: listing 03/09/23 08:14:00.229
    STEP: watching 03/09/23 08:14:00.233
    Mar  9 08:14:00.233: INFO: starting watch
    STEP: cluster-wide listing 03/09/23 08:14:00.236
    STEP: cluster-wide watching 03/09/23 08:14:00.24
    Mar  9 08:14:00.241: INFO: starting watch
    STEP: patching 03/09/23 08:14:00.242
    STEP: updating 03/09/23 08:14:00.249
    Mar  9 08:14:00.259: INFO: waiting for watch events with expected annotations
    Mar  9 08:14:00.259: INFO: saw patched and updated annotations
    STEP: deleting 03/09/23 08:14:00.259
    STEP: deleting a collection 03/09/23 08:14:00.273
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:14:00.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-1391" for this suite. 03/09/23 08:14:00.297
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:14:00.308
Mar  9 08:14:00.308: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sysctl 03/09/23 08:14:00.31
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:00.325
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:00.33
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 03/09/23 08:14:00.335
STEP: Watching for error events or started pod 03/09/23 08:14:00.346
STEP: Waiting for pod completion 03/09/23 08:14:02.351
Mar  9 08:14:02.352: INFO: Waiting up to 3m0s for pod "sysctl-72cdf71a-0de5-4aea-96e9-ba72bf5dfe49" in namespace "sysctl-4959" to be "completed"
Mar  9 08:14:02.365: INFO: Pod "sysctl-72cdf71a-0de5-4aea-96e9-ba72bf5dfe49": Phase="Pending", Reason="", readiness=false. Elapsed: 13.81028ms
Mar  9 08:14:04.371: INFO: Pod "sysctl-72cdf71a-0de5-4aea-96e9-ba72bf5dfe49": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.019314926s
Mar  9 08:14:04.371: INFO: Pod "sysctl-72cdf71a-0de5-4aea-96e9-ba72bf5dfe49" satisfied condition "completed"
STEP: Checking that the pod succeeded 03/09/23 08:14:04.375
STEP: Getting logs from the pod 03/09/23 08:14:04.375
STEP: Checking that the sysctl is actually updated 03/09/23 08:14:04.383
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:14:04.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-4959" for this suite. 03/09/23 08:14:04.389
------------------------------
â€¢ [4.090 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:14:00.308
    Mar  9 08:14:00.308: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sysctl 03/09/23 08:14:00.31
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:00.325
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:00.33
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:77
    STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 03/09/23 08:14:00.335
    STEP: Watching for error events or started pod 03/09/23 08:14:00.346
    STEP: Waiting for pod completion 03/09/23 08:14:02.351
    Mar  9 08:14:02.352: INFO: Waiting up to 3m0s for pod "sysctl-72cdf71a-0de5-4aea-96e9-ba72bf5dfe49" in namespace "sysctl-4959" to be "completed"
    Mar  9 08:14:02.365: INFO: Pod "sysctl-72cdf71a-0de5-4aea-96e9-ba72bf5dfe49": Phase="Pending", Reason="", readiness=false. Elapsed: 13.81028ms
    Mar  9 08:14:04.371: INFO: Pod "sysctl-72cdf71a-0de5-4aea-96e9-ba72bf5dfe49": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.019314926s
    Mar  9 08:14:04.371: INFO: Pod "sysctl-72cdf71a-0de5-4aea-96e9-ba72bf5dfe49" satisfied condition "completed"
    STEP: Checking that the pod succeeded 03/09/23 08:14:04.375
    STEP: Getting logs from the pod 03/09/23 08:14:04.375
    STEP: Checking that the sysctl is actually updated 03/09/23 08:14:04.383
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:14:04.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-4959" for this suite. 03/09/23 08:14:04.389
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:14:04.399
Mar  9 08:14:04.399: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubelet-test 03/09/23 08:14:04.401
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:04.417
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:04.422
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:14:04.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-5337" for this suite. 03/09/23 08:14:04.464
------------------------------
â€¢ [0.074 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should be possible to delete [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:14:04.399
    Mar  9 08:14:04.399: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubelet-test 03/09/23 08:14:04.401
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:04.417
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:04.422
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should be possible to delete [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:135
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:14:04.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-5337" for this suite. 03/09/23 08:14:04.464
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:14:04.479
Mar  9 08:14:04.479: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 08:14:04.481
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:04.498
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:04.503
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
STEP: Creating a ResourceQuota 03/09/23 08:14:04.508
STEP: Getting a ResourceQuota 03/09/23 08:14:04.514
STEP: Updating a ResourceQuota 03/09/23 08:14:04.518
STEP: Verifying a ResourceQuota was modified 03/09/23 08:14:04.528
STEP: Deleting a ResourceQuota 03/09/23 08:14:04.532
STEP: Verifying the deleted ResourceQuota 03/09/23 08:14:04.539
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 08:14:04.542: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-831" for this suite. 03/09/23 08:14:04.551
------------------------------
â€¢ [0.079 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:14:04.479
    Mar  9 08:14:04.479: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 08:14:04.481
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:04.498
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:04.503
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to update and delete ResourceQuota. [Conformance]
      test/e2e/apimachinery/resource_quota.go:884
    STEP: Creating a ResourceQuota 03/09/23 08:14:04.508
    STEP: Getting a ResourceQuota 03/09/23 08:14:04.514
    STEP: Updating a ResourceQuota 03/09/23 08:14:04.518
    STEP: Verifying a ResourceQuota was modified 03/09/23 08:14:04.528
    STEP: Deleting a ResourceQuota 03/09/23 08:14:04.532
    STEP: Verifying the deleted ResourceQuota 03/09/23 08:14:04.539
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:14:04.542: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-831" for this suite. 03/09/23 08:14:04.551
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:14:04.56
Mar  9 08:14:04.560: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir-wrapper 03/09/23 08:14:04.561
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:04.577
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:04.581
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
STEP: Creating 50 configmaps 03/09/23 08:14:04.586
STEP: Creating RC which spawns configmap-volume pods 03/09/23 08:14:04.876
Mar  9 08:14:04.922: INFO: Pod name wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718: Found 1 pods out of 5
Mar  9 08:14:09.933: INFO: Pod name wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718: Found 5 pods out of 5
STEP: Ensuring each pod is running 03/09/23 08:14:09.933
Mar  9 08:14:09.933: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:09.939: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 5.874347ms
Mar  9 08:14:11.947: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013346267s
Mar  9 08:14:13.947: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013182824s
Mar  9 08:14:15.946: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 6.012964186s
Mar  9 08:14:17.948: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 8.014564443s
Mar  9 08:14:19.946: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Running", Reason="", readiness=true. Elapsed: 10.012783042s
Mar  9 08:14:19.946: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z" satisfied condition "running"
Mar  9 08:14:19.946: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-87d5b" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:19.952: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-87d5b": Phase="Running", Reason="", readiness=true. Elapsed: 5.583461ms
Mar  9 08:14:19.952: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-87d5b" satisfied condition "running"
Mar  9 08:14:19.952: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-9ct7q" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:19.958: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-9ct7q": Phase="Running", Reason="", readiness=true. Elapsed: 5.567542ms
Mar  9 08:14:19.958: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-9ct7q" satisfied condition "running"
Mar  9 08:14:19.958: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-pjfvz" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:19.963: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-pjfvz": Phase="Running", Reason="", readiness=true. Elapsed: 5.473198ms
Mar  9 08:14:19.963: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-pjfvz" satisfied condition "running"
Mar  9 08:14:19.963: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-wd2t5" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:19.968: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-wd2t5": Phase="Running", Reason="", readiness=true. Elapsed: 5.26094ms
Mar  9 08:14:19.969: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-wd2t5" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718 in namespace emptydir-wrapper-3512, will wait for the garbage collector to delete the pods 03/09/23 08:14:19.969
Mar  9 08:14:20.034: INFO: Deleting ReplicationController wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718 took: 8.203013ms
Mar  9 08:14:20.134: INFO: Terminating ReplicationController wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718 pods took: 100.866111ms
STEP: Creating RC which spawns configmap-volume pods 03/09/23 08:14:23.642
Mar  9 08:14:23.665: INFO: Pod name wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99: Found 0 pods out of 5
Mar  9 08:14:28.677: INFO: Pod name wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99: Found 5 pods out of 5
STEP: Ensuring each pod is running 03/09/23 08:14:28.677
Mar  9 08:14:28.677: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:28.683: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 5.523424ms
Mar  9 08:14:30.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013223546s
Mar  9 08:14:32.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013246951s
Mar  9 08:14:34.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013377248s
Mar  9 08:14:36.689: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012034868s
Mar  9 08:14:38.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Running", Reason="", readiness=true. Elapsed: 10.013519285s
Mar  9 08:14:38.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth" satisfied condition "running"
Mar  9 08:14:38.691: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-d9g59" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:38.697: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-d9g59": Phase="Running", Reason="", readiness=true. Elapsed: 5.678882ms
Mar  9 08:14:38.697: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-d9g59" satisfied condition "running"
Mar  9 08:14:38.697: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-tszx4" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:38.702: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-tszx4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.193473ms
Mar  9 08:14:40.709: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-tszx4": Phase="Running", Reason="", readiness=true. Elapsed: 2.012107703s
Mar  9 08:14:40.709: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-tszx4" satisfied condition "running"
Mar  9 08:14:40.709: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-v2bj5" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:40.715: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-v2bj5": Phase="Running", Reason="", readiness=true. Elapsed: 5.946788ms
Mar  9 08:14:40.715: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-v2bj5" satisfied condition "running"
Mar  9 08:14:40.715: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-xfpp7" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:40.721: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-xfpp7": Phase="Running", Reason="", readiness=true. Elapsed: 5.761431ms
Mar  9 08:14:40.721: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-xfpp7" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99 in namespace emptydir-wrapper-3512, will wait for the garbage collector to delete the pods 03/09/23 08:14:40.721
Mar  9 08:14:40.787: INFO: Deleting ReplicationController wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99 took: 9.364716ms
Mar  9 08:14:40.887: INFO: Terminating ReplicationController wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99 pods took: 100.954778ms
STEP: Creating RC which spawns configmap-volume pods 03/09/23 08:14:43.594
Mar  9 08:14:43.619: INFO: Pod name wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54: Found 0 pods out of 5
Mar  9 08:14:48.632: INFO: Pod name wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54: Found 5 pods out of 5
STEP: Ensuring each pod is running 03/09/23 08:14:48.633
Mar  9 08:14:48.633: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:48.638: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.44688ms
Mar  9 08:14:50.645: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011944084s
Mar  9 08:14:52.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013490929s
Mar  9 08:14:54.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013281882s
Mar  9 08:14:56.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 8.013332752s
Mar  9 08:14:58.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Running", Reason="", readiness=true. Elapsed: 10.013322345s
Mar  9 08:14:58.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2" satisfied condition "running"
Mar  9 08:14:58.646: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-4tnm4" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:58.652: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-4tnm4": Phase="Running", Reason="", readiness=true. Elapsed: 5.763243ms
Mar  9 08:14:58.652: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-4tnm4" satisfied condition "running"
Mar  9 08:14:58.652: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-5s8dz" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:58.658: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-5s8dz": Phase="Running", Reason="", readiness=true. Elapsed: 5.568132ms
Mar  9 08:14:58.658: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-5s8dz" satisfied condition "running"
Mar  9 08:14:58.658: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-8p6sm" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:58.663: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-8p6sm": Phase="Running", Reason="", readiness=true. Elapsed: 5.429152ms
Mar  9 08:14:58.663: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-8p6sm" satisfied condition "running"
Mar  9 08:14:58.663: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-xxvqn" in namespace "emptydir-wrapper-3512" to be "running"
Mar  9 08:14:58.668: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-xxvqn": Phase="Running", Reason="", readiness=true. Elapsed: 5.234498ms
Mar  9 08:14:58.668: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-xxvqn" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54 in namespace emptydir-wrapper-3512, will wait for the garbage collector to delete the pods 03/09/23 08:14:58.668
Mar  9 08:14:58.733: INFO: Deleting ReplicationController wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54 took: 8.539196ms
Mar  9 08:14:58.834: INFO: Terminating ReplicationController wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54 pods took: 101.028744ms
STEP: Cleaning up the configMaps 03/09/23 08:15:01.936
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:02.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-3512" for this suite. 03/09/23 08:15:02.278
------------------------------
â€¢ [SLOW TEST] [57.726 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:14:04.56
    Mar  9 08:14:04.560: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir-wrapper 03/09/23 08:14:04.561
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:14:04.577
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:14:04.581
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not cause race condition when used for configmaps [Serial] [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:189
    STEP: Creating 50 configmaps 03/09/23 08:14:04.586
    STEP: Creating RC which spawns configmap-volume pods 03/09/23 08:14:04.876
    Mar  9 08:14:04.922: INFO: Pod name wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718: Found 1 pods out of 5
    Mar  9 08:14:09.933: INFO: Pod name wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718: Found 5 pods out of 5
    STEP: Ensuring each pod is running 03/09/23 08:14:09.933
    Mar  9 08:14:09.933: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:09.939: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 5.874347ms
    Mar  9 08:14:11.947: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013346267s
    Mar  9 08:14:13.947: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013182824s
    Mar  9 08:14:15.946: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 6.012964186s
    Mar  9 08:14:17.948: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Pending", Reason="", readiness=false. Elapsed: 8.014564443s
    Mar  9 08:14:19.946: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z": Phase="Running", Reason="", readiness=true. Elapsed: 10.012783042s
    Mar  9 08:14:19.946: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-4jq9z" satisfied condition "running"
    Mar  9 08:14:19.946: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-87d5b" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:19.952: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-87d5b": Phase="Running", Reason="", readiness=true. Elapsed: 5.583461ms
    Mar  9 08:14:19.952: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-87d5b" satisfied condition "running"
    Mar  9 08:14:19.952: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-9ct7q" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:19.958: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-9ct7q": Phase="Running", Reason="", readiness=true. Elapsed: 5.567542ms
    Mar  9 08:14:19.958: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-9ct7q" satisfied condition "running"
    Mar  9 08:14:19.958: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-pjfvz" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:19.963: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-pjfvz": Phase="Running", Reason="", readiness=true. Elapsed: 5.473198ms
    Mar  9 08:14:19.963: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-pjfvz" satisfied condition "running"
    Mar  9 08:14:19.963: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-wd2t5" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:19.968: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-wd2t5": Phase="Running", Reason="", readiness=true. Elapsed: 5.26094ms
    Mar  9 08:14:19.969: INFO: Pod "wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718-wd2t5" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718 in namespace emptydir-wrapper-3512, will wait for the garbage collector to delete the pods 03/09/23 08:14:19.969
    Mar  9 08:14:20.034: INFO: Deleting ReplicationController wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718 took: 8.203013ms
    Mar  9 08:14:20.134: INFO: Terminating ReplicationController wrapped-volume-race-47e1123a-c3de-4883-a317-2f3ffd28d718 pods took: 100.866111ms
    STEP: Creating RC which spawns configmap-volume pods 03/09/23 08:14:23.642
    Mar  9 08:14:23.665: INFO: Pod name wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99: Found 0 pods out of 5
    Mar  9 08:14:28.677: INFO: Pod name wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99: Found 5 pods out of 5
    STEP: Ensuring each pod is running 03/09/23 08:14:28.677
    Mar  9 08:14:28.677: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:28.683: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 5.523424ms
    Mar  9 08:14:30.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013223546s
    Mar  9 08:14:32.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013246951s
    Mar  9 08:14:34.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013377248s
    Mar  9 08:14:36.689: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012034868s
    Mar  9 08:14:38.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth": Phase="Running", Reason="", readiness=true. Elapsed: 10.013519285s
    Mar  9 08:14:38.691: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-7clth" satisfied condition "running"
    Mar  9 08:14:38.691: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-d9g59" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:38.697: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-d9g59": Phase="Running", Reason="", readiness=true. Elapsed: 5.678882ms
    Mar  9 08:14:38.697: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-d9g59" satisfied condition "running"
    Mar  9 08:14:38.697: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-tszx4" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:38.702: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-tszx4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.193473ms
    Mar  9 08:14:40.709: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-tszx4": Phase="Running", Reason="", readiness=true. Elapsed: 2.012107703s
    Mar  9 08:14:40.709: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-tszx4" satisfied condition "running"
    Mar  9 08:14:40.709: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-v2bj5" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:40.715: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-v2bj5": Phase="Running", Reason="", readiness=true. Elapsed: 5.946788ms
    Mar  9 08:14:40.715: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-v2bj5" satisfied condition "running"
    Mar  9 08:14:40.715: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-xfpp7" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:40.721: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-xfpp7": Phase="Running", Reason="", readiness=true. Elapsed: 5.761431ms
    Mar  9 08:14:40.721: INFO: Pod "wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99-xfpp7" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99 in namespace emptydir-wrapper-3512, will wait for the garbage collector to delete the pods 03/09/23 08:14:40.721
    Mar  9 08:14:40.787: INFO: Deleting ReplicationController wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99 took: 9.364716ms
    Mar  9 08:14:40.887: INFO: Terminating ReplicationController wrapped-volume-race-12c1d8d4-04da-4ba6-a2f2-6404a3ad6e99 pods took: 100.954778ms
    STEP: Creating RC which spawns configmap-volume pods 03/09/23 08:14:43.594
    Mar  9 08:14:43.619: INFO: Pod name wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54: Found 0 pods out of 5
    Mar  9 08:14:48.632: INFO: Pod name wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54: Found 5 pods out of 5
    STEP: Ensuring each pod is running 03/09/23 08:14:48.633
    Mar  9 08:14:48.633: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:48.638: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.44688ms
    Mar  9 08:14:50.645: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011944084s
    Mar  9 08:14:52.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013490929s
    Mar  9 08:14:54.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013281882s
    Mar  9 08:14:56.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Pending", Reason="", readiness=false. Elapsed: 8.013332752s
    Mar  9 08:14:58.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2": Phase="Running", Reason="", readiness=true. Elapsed: 10.013322345s
    Mar  9 08:14:58.646: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-2bdv2" satisfied condition "running"
    Mar  9 08:14:58.646: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-4tnm4" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:58.652: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-4tnm4": Phase="Running", Reason="", readiness=true. Elapsed: 5.763243ms
    Mar  9 08:14:58.652: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-4tnm4" satisfied condition "running"
    Mar  9 08:14:58.652: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-5s8dz" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:58.658: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-5s8dz": Phase="Running", Reason="", readiness=true. Elapsed: 5.568132ms
    Mar  9 08:14:58.658: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-5s8dz" satisfied condition "running"
    Mar  9 08:14:58.658: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-8p6sm" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:58.663: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-8p6sm": Phase="Running", Reason="", readiness=true. Elapsed: 5.429152ms
    Mar  9 08:14:58.663: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-8p6sm" satisfied condition "running"
    Mar  9 08:14:58.663: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-xxvqn" in namespace "emptydir-wrapper-3512" to be "running"
    Mar  9 08:14:58.668: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-xxvqn": Phase="Running", Reason="", readiness=true. Elapsed: 5.234498ms
    Mar  9 08:14:58.668: INFO: Pod "wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54-xxvqn" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54 in namespace emptydir-wrapper-3512, will wait for the garbage collector to delete the pods 03/09/23 08:14:58.668
    Mar  9 08:14:58.733: INFO: Deleting ReplicationController wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54 took: 8.539196ms
    Mar  9 08:14:58.834: INFO: Terminating ReplicationController wrapped-volume-race-baa7bae0-9335-4049-b112-342241a75b54 pods took: 101.028744ms
    STEP: Cleaning up the configMaps 03/09/23 08:15:01.936
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:02.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-3512" for this suite. 03/09/23 08:15:02.278
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
[BeforeEach] [sig-api-machinery] Discovery
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:02.287
Mar  9 08:15:02.287: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename discovery 03/09/23 08:15:02.289
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:02.309
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:02.314
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert 03/09/23 08:15:02.321
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
Mar  9 08:15:02.742: INFO: Checking APIGroup: apiregistration.k8s.io
Mar  9 08:15:02.744: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Mar  9 08:15:02.744: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Mar  9 08:15:02.744: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Mar  9 08:15:02.744: INFO: Checking APIGroup: apps
Mar  9 08:15:02.746: INFO: PreferredVersion.GroupVersion: apps/v1
Mar  9 08:15:02.746: INFO: Versions found [{apps/v1 v1}]
Mar  9 08:15:02.746: INFO: apps/v1 matches apps/v1
Mar  9 08:15:02.746: INFO: Checking APIGroup: events.k8s.io
Mar  9 08:15:02.747: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Mar  9 08:15:02.747: INFO: Versions found [{events.k8s.io/v1 v1}]
Mar  9 08:15:02.747: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Mar  9 08:15:02.748: INFO: Checking APIGroup: authentication.k8s.io
Mar  9 08:15:02.749: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Mar  9 08:15:02.749: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Mar  9 08:15:02.749: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Mar  9 08:15:02.749: INFO: Checking APIGroup: authorization.k8s.io
Mar  9 08:15:02.751: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Mar  9 08:15:02.751: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Mar  9 08:15:02.751: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Mar  9 08:15:02.751: INFO: Checking APIGroup: autoscaling
Mar  9 08:15:02.753: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Mar  9 08:15:02.753: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
Mar  9 08:15:02.753: INFO: autoscaling/v2 matches autoscaling/v2
Mar  9 08:15:02.753: INFO: Checking APIGroup: batch
Mar  9 08:15:02.755: INFO: PreferredVersion.GroupVersion: batch/v1
Mar  9 08:15:02.755: INFO: Versions found [{batch/v1 v1}]
Mar  9 08:15:02.755: INFO: batch/v1 matches batch/v1
Mar  9 08:15:02.755: INFO: Checking APIGroup: certificates.k8s.io
Mar  9 08:15:02.757: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Mar  9 08:15:02.757: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Mar  9 08:15:02.757: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Mar  9 08:15:02.757: INFO: Checking APIGroup: networking.k8s.io
Mar  9 08:15:02.759: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Mar  9 08:15:02.759: INFO: Versions found [{networking.k8s.io/v1 v1}]
Mar  9 08:15:02.759: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Mar  9 08:15:02.759: INFO: Checking APIGroup: policy
Mar  9 08:15:02.760: INFO: PreferredVersion.GroupVersion: policy/v1
Mar  9 08:15:02.760: INFO: Versions found [{policy/v1 v1}]
Mar  9 08:15:02.760: INFO: policy/v1 matches policy/v1
Mar  9 08:15:02.760: INFO: Checking APIGroup: rbac.authorization.k8s.io
Mar  9 08:15:02.762: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Mar  9 08:15:02.762: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Mar  9 08:15:02.762: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Mar  9 08:15:02.762: INFO: Checking APIGroup: storage.k8s.io
Mar  9 08:15:02.763: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Mar  9 08:15:02.763: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Mar  9 08:15:02.763: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Mar  9 08:15:02.763: INFO: Checking APIGroup: admissionregistration.k8s.io
Mar  9 08:15:02.765: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Mar  9 08:15:02.765: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Mar  9 08:15:02.765: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Mar  9 08:15:02.765: INFO: Checking APIGroup: apiextensions.k8s.io
Mar  9 08:15:02.767: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Mar  9 08:15:02.767: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Mar  9 08:15:02.767: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Mar  9 08:15:02.767: INFO: Checking APIGroup: scheduling.k8s.io
Mar  9 08:15:02.769: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Mar  9 08:15:02.769: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Mar  9 08:15:02.769: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Mar  9 08:15:02.769: INFO: Checking APIGroup: coordination.k8s.io
Mar  9 08:15:02.771: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Mar  9 08:15:02.771: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Mar  9 08:15:02.771: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Mar  9 08:15:02.771: INFO: Checking APIGroup: node.k8s.io
Mar  9 08:15:02.773: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Mar  9 08:15:02.773: INFO: Versions found [{node.k8s.io/v1 v1}]
Mar  9 08:15:02.773: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Mar  9 08:15:02.773: INFO: Checking APIGroup: discovery.k8s.io
Mar  9 08:15:02.774: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Mar  9 08:15:02.774: INFO: Versions found [{discovery.k8s.io/v1 v1}]
Mar  9 08:15:02.774: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Mar  9 08:15:02.774: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Mar  9 08:15:02.776: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
Mar  9 08:15:02.776: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
Mar  9 08:15:02.776: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
Mar  9 08:15:02.776: INFO: Checking APIGroup: crd.projectcalico.org
Mar  9 08:15:02.778: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
Mar  9 08:15:02.778: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
Mar  9 08:15:02.778: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:02.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  tear down framework | framework.go:193
STEP: Destroying namespace "discovery-4382" for this suite. 03/09/23 08:15:02.784
------------------------------
â€¢ [0.505 seconds]
[sig-api-machinery] Discovery
test/e2e/apimachinery/framework.go:23
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Discovery
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:02.287
    Mar  9 08:15:02.287: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename discovery 03/09/23 08:15:02.289
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:02.309
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:02.314
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/apimachinery/discovery.go:43
    STEP: Setting up server cert 03/09/23 08:15:02.321
    [It] should validate PreferredVersion for each APIGroup [Conformance]
      test/e2e/apimachinery/discovery.go:122
    Mar  9 08:15:02.742: INFO: Checking APIGroup: apiregistration.k8s.io
    Mar  9 08:15:02.744: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
    Mar  9 08:15:02.744: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
    Mar  9 08:15:02.744: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
    Mar  9 08:15:02.744: INFO: Checking APIGroup: apps
    Mar  9 08:15:02.746: INFO: PreferredVersion.GroupVersion: apps/v1
    Mar  9 08:15:02.746: INFO: Versions found [{apps/v1 v1}]
    Mar  9 08:15:02.746: INFO: apps/v1 matches apps/v1
    Mar  9 08:15:02.746: INFO: Checking APIGroup: events.k8s.io
    Mar  9 08:15:02.747: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
    Mar  9 08:15:02.747: INFO: Versions found [{events.k8s.io/v1 v1}]
    Mar  9 08:15:02.747: INFO: events.k8s.io/v1 matches events.k8s.io/v1
    Mar  9 08:15:02.748: INFO: Checking APIGroup: authentication.k8s.io
    Mar  9 08:15:02.749: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
    Mar  9 08:15:02.749: INFO: Versions found [{authentication.k8s.io/v1 v1}]
    Mar  9 08:15:02.749: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
    Mar  9 08:15:02.749: INFO: Checking APIGroup: authorization.k8s.io
    Mar  9 08:15:02.751: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
    Mar  9 08:15:02.751: INFO: Versions found [{authorization.k8s.io/v1 v1}]
    Mar  9 08:15:02.751: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
    Mar  9 08:15:02.751: INFO: Checking APIGroup: autoscaling
    Mar  9 08:15:02.753: INFO: PreferredVersion.GroupVersion: autoscaling/v2
    Mar  9 08:15:02.753: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
    Mar  9 08:15:02.753: INFO: autoscaling/v2 matches autoscaling/v2
    Mar  9 08:15:02.753: INFO: Checking APIGroup: batch
    Mar  9 08:15:02.755: INFO: PreferredVersion.GroupVersion: batch/v1
    Mar  9 08:15:02.755: INFO: Versions found [{batch/v1 v1}]
    Mar  9 08:15:02.755: INFO: batch/v1 matches batch/v1
    Mar  9 08:15:02.755: INFO: Checking APIGroup: certificates.k8s.io
    Mar  9 08:15:02.757: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
    Mar  9 08:15:02.757: INFO: Versions found [{certificates.k8s.io/v1 v1}]
    Mar  9 08:15:02.757: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
    Mar  9 08:15:02.757: INFO: Checking APIGroup: networking.k8s.io
    Mar  9 08:15:02.759: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
    Mar  9 08:15:02.759: INFO: Versions found [{networking.k8s.io/v1 v1}]
    Mar  9 08:15:02.759: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
    Mar  9 08:15:02.759: INFO: Checking APIGroup: policy
    Mar  9 08:15:02.760: INFO: PreferredVersion.GroupVersion: policy/v1
    Mar  9 08:15:02.760: INFO: Versions found [{policy/v1 v1}]
    Mar  9 08:15:02.760: INFO: policy/v1 matches policy/v1
    Mar  9 08:15:02.760: INFO: Checking APIGroup: rbac.authorization.k8s.io
    Mar  9 08:15:02.762: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
    Mar  9 08:15:02.762: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
    Mar  9 08:15:02.762: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
    Mar  9 08:15:02.762: INFO: Checking APIGroup: storage.k8s.io
    Mar  9 08:15:02.763: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
    Mar  9 08:15:02.763: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
    Mar  9 08:15:02.763: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
    Mar  9 08:15:02.763: INFO: Checking APIGroup: admissionregistration.k8s.io
    Mar  9 08:15:02.765: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
    Mar  9 08:15:02.765: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
    Mar  9 08:15:02.765: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
    Mar  9 08:15:02.765: INFO: Checking APIGroup: apiextensions.k8s.io
    Mar  9 08:15:02.767: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
    Mar  9 08:15:02.767: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
    Mar  9 08:15:02.767: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
    Mar  9 08:15:02.767: INFO: Checking APIGroup: scheduling.k8s.io
    Mar  9 08:15:02.769: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
    Mar  9 08:15:02.769: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
    Mar  9 08:15:02.769: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
    Mar  9 08:15:02.769: INFO: Checking APIGroup: coordination.k8s.io
    Mar  9 08:15:02.771: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
    Mar  9 08:15:02.771: INFO: Versions found [{coordination.k8s.io/v1 v1}]
    Mar  9 08:15:02.771: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
    Mar  9 08:15:02.771: INFO: Checking APIGroup: node.k8s.io
    Mar  9 08:15:02.773: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
    Mar  9 08:15:02.773: INFO: Versions found [{node.k8s.io/v1 v1}]
    Mar  9 08:15:02.773: INFO: node.k8s.io/v1 matches node.k8s.io/v1
    Mar  9 08:15:02.773: INFO: Checking APIGroup: discovery.k8s.io
    Mar  9 08:15:02.774: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
    Mar  9 08:15:02.774: INFO: Versions found [{discovery.k8s.io/v1 v1}]
    Mar  9 08:15:02.774: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
    Mar  9 08:15:02.774: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
    Mar  9 08:15:02.776: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
    Mar  9 08:15:02.776: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
    Mar  9 08:15:02.776: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
    Mar  9 08:15:02.776: INFO: Checking APIGroup: crd.projectcalico.org
    Mar  9 08:15:02.778: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
    Mar  9 08:15:02.778: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
    Mar  9 08:15:02.778: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
    [AfterEach] [sig-api-machinery] Discovery
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:02.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      tear down framework | framework.go:193
    STEP: Destroying namespace "discovery-4382" for this suite. 03/09/23 08:15:02.784
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:02.796
Mar  9 08:15:02.796: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replicaset 03/09/23 08:15:02.798
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:02.813
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:02.818
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 03/09/23 08:15:02.822
Mar  9 08:15:02.833: INFO: Pod name sample-pod: Found 0 pods out of 1
Mar  9 08:15:07.839: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/09/23 08:15:07.84
STEP: getting scale subresource 03/09/23 08:15:07.84
STEP: updating a scale subresource 03/09/23 08:15:07.843
STEP: verifying the replicaset Spec.Replicas was modified 03/09/23 08:15:07.85
STEP: Patch a scale subresource 03/09/23 08:15:07.854
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:07.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-8587" for this suite. 03/09/23 08:15:07.876
------------------------------
â€¢ [SLOW TEST] [5.093 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:02.796
    Mar  9 08:15:02.796: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replicaset 03/09/23 08:15:02.798
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:02.813
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:02.818
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replicaset should have a working scale subresource [Conformance]
      test/e2e/apps/replica_set.go:143
    STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 03/09/23 08:15:02.822
    Mar  9 08:15:02.833: INFO: Pod name sample-pod: Found 0 pods out of 1
    Mar  9 08:15:07.839: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/09/23 08:15:07.84
    STEP: getting scale subresource 03/09/23 08:15:07.84
    STEP: updating a scale subresource 03/09/23 08:15:07.843
    STEP: verifying the replicaset Spec.Replicas was modified 03/09/23 08:15:07.85
    STEP: Patch a scale subresource 03/09/23 08:15:07.854
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:07.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-8587" for this suite. 03/09/23 08:15:07.876
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:07.892
Mar  9 08:15:07.892: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:15:07.894
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:07.909
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:07.915
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1700
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/09/23 08:15:07.92
Mar  9 08:15:07.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-2660 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
Mar  9 08:15:08.091: INFO: stderr: ""
Mar  9 08:15:08.091: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created 03/09/23 08:15:08.091
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1704
Mar  9 08:15:08.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-2660 delete pods e2e-test-httpd-pod'
Mar  9 08:15:10.653: INFO: stderr: ""
Mar  9 08:15:10.654: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:10.654: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2660" for this suite. 03/09/23 08:15:10.66
------------------------------
â€¢ [2.776 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl run pod
  test/e2e/kubectl/kubectl.go:1697
    should create a pod from an image when restart is Never  [Conformance]
    test/e2e/kubectl/kubectl.go:1713

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:07.892
    Mar  9 08:15:07.892: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:15:07.894
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:07.909
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:07.915
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1700
    [It] should create a pod from an image when restart is Never  [Conformance]
      test/e2e/kubectl/kubectl.go:1713
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/09/23 08:15:07.92
    Mar  9 08:15:07.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-2660 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
    Mar  9 08:15:08.091: INFO: stderr: ""
    Mar  9 08:15:08.091: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod was created 03/09/23 08:15:08.091
    [AfterEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1704
    Mar  9 08:15:08.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-2660 delete pods e2e-test-httpd-pod'
    Mar  9 08:15:10.653: INFO: stderr: ""
    Mar  9 08:15:10.654: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:10.654: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2660" for this suite. 03/09/23 08:15:10.66
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:10.67
Mar  9 08:15:10.670: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename runtimeclass 03/09/23 08:15:10.672
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:10.687
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:10.692
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
STEP: getting /apis 03/09/23 08:15:10.697
STEP: getting /apis/node.k8s.io 03/09/23 08:15:10.702
STEP: getting /apis/node.k8s.io/v1 03/09/23 08:15:10.704
STEP: creating 03/09/23 08:15:10.706
STEP: watching 03/09/23 08:15:10.726
Mar  9 08:15:10.726: INFO: starting watch
STEP: getting 03/09/23 08:15:10.734
STEP: listing 03/09/23 08:15:10.739
STEP: patching 03/09/23 08:15:10.743
STEP: updating 03/09/23 08:15:10.75
Mar  9 08:15:10.756: INFO: waiting for watch events with expected annotations
STEP: deleting 03/09/23 08:15:10.757
STEP: deleting a collection 03/09/23 08:15:10.778
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:10.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-4376" for this suite. 03/09/23 08:15:10.806
------------------------------
â€¢ [0.145 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:10.67
    Mar  9 08:15:10.670: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename runtimeclass 03/09/23 08:15:10.672
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:10.687
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:10.692
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support RuntimeClasses API operations [Conformance]
      test/e2e/common/node/runtimeclass.go:189
    STEP: getting /apis 03/09/23 08:15:10.697
    STEP: getting /apis/node.k8s.io 03/09/23 08:15:10.702
    STEP: getting /apis/node.k8s.io/v1 03/09/23 08:15:10.704
    STEP: creating 03/09/23 08:15:10.706
    STEP: watching 03/09/23 08:15:10.726
    Mar  9 08:15:10.726: INFO: starting watch
    STEP: getting 03/09/23 08:15:10.734
    STEP: listing 03/09/23 08:15:10.739
    STEP: patching 03/09/23 08:15:10.743
    STEP: updating 03/09/23 08:15:10.75
    Mar  9 08:15:10.756: INFO: waiting for watch events with expected annotations
    STEP: deleting 03/09/23 08:15:10.757
    STEP: deleting a collection 03/09/23 08:15:10.778
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:10.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-4376" for this suite. 03/09/23 08:15:10.806
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:10.816
Mar  9 08:15:10.816: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:15:10.818
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:10.832
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:10.838
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:15:10.862
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:15:11.899
STEP: Deploying the webhook pod 03/09/23 08:15:11.908
STEP: Wait for the deployment to be ready 03/09/23 08:15:11.924
Mar  9 08:15:11.935: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:15:13.948
STEP: Verifying the service has paired with the endpoint 03/09/23 08:15:13.964
Mar  9 08:15:14.965: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
STEP: Listing all of the created validation webhooks 03/09/23 08:15:15.049
STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:15:15.104
STEP: Deleting the collection of validation webhooks 03/09/23 08:15:15.147
STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:15:15.199
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:15.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5676" for this suite. 03/09/23 08:15:15.259
STEP: Destroying namespace "webhook-5676-markers" for this suite. 03/09/23 08:15:15.267
------------------------------
â€¢ [4.462 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:10.816
    Mar  9 08:15:10.816: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:15:10.818
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:10.832
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:10.838
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:15:10.862
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:15:11.899
    STEP: Deploying the webhook pod 03/09/23 08:15:11.908
    STEP: Wait for the deployment to be ready 03/09/23 08:15:11.924
    Mar  9 08:15:11.935: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:15:13.948
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:15:13.964
    Mar  9 08:15:14.965: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing validating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:582
    STEP: Listing all of the created validation webhooks 03/09/23 08:15:15.049
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:15:15.104
    STEP: Deleting the collection of validation webhooks 03/09/23 08:15:15.147
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:15:15.199
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:15.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5676" for this suite. 03/09/23 08:15:15.259
    STEP: Destroying namespace "webhook-5676-markers" for this suite. 03/09/23 08:15:15.267
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Containers
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:15.279
Mar  9 08:15:15.279: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename containers 03/09/23 08:15:15.281
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:15.295
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:15.3
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
STEP: Creating a pod to test override arguments 03/09/23 08:15:15.305
Mar  9 08:15:15.316: INFO: Waiting up to 5m0s for pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8" in namespace "containers-8540" to be "Succeeded or Failed"
Mar  9 08:15:15.320: INFO: Pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.207598ms
Mar  9 08:15:17.324: INFO: Pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008800106s
Mar  9 08:15:19.327: INFO: Pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011200417s
STEP: Saw pod success 03/09/23 08:15:19.327
Mar  9 08:15:19.327: INFO: Pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8" satisfied condition "Succeeded or Failed"
Mar  9 08:15:19.331: INFO: Trying to get logs from node k8s-worker1 pod client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:15:19.339
Mar  9 08:15:19.353: INFO: Waiting for pod client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8 to disappear
Mar  9 08:15:19.356: INFO: Pod client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:19.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-8540" for this suite. 03/09/23 08:15:19.363
------------------------------
â€¢ [4.091 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:15.279
    Mar  9 08:15:15.279: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename containers 03/09/23 08:15:15.281
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:15.295
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:15.3
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:59
    STEP: Creating a pod to test override arguments 03/09/23 08:15:15.305
    Mar  9 08:15:15.316: INFO: Waiting up to 5m0s for pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8" in namespace "containers-8540" to be "Succeeded or Failed"
    Mar  9 08:15:15.320: INFO: Pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.207598ms
    Mar  9 08:15:17.324: INFO: Pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008800106s
    Mar  9 08:15:19.327: INFO: Pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011200417s
    STEP: Saw pod success 03/09/23 08:15:19.327
    Mar  9 08:15:19.327: INFO: Pod "client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8" satisfied condition "Succeeded or Failed"
    Mar  9 08:15:19.331: INFO: Trying to get logs from node k8s-worker1 pod client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:15:19.339
    Mar  9 08:15:19.353: INFO: Waiting for pod client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8 to disappear
    Mar  9 08:15:19.356: INFO: Pod client-containers-3c7fa6f4-4625-4895-a910-4bb3ffe18fb8 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:19.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-8540" for this suite. 03/09/23 08:15:19.363
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:19.372
Mar  9 08:15:19.372: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:15:19.374
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:19.391
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:19.396
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
STEP: Creating Pod 03/09/23 08:15:19.401
Mar  9 08:15:19.412: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216" in namespace "emptydir-9887" to be "running"
Mar  9 08:15:19.418: INFO: Pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216": Phase="Pending", Reason="", readiness=false. Elapsed: 5.703034ms
Mar  9 08:15:21.423: INFO: Pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010992213s
Mar  9 08:15:23.425: INFO: Pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216": Phase="Running", Reason="", readiness=false. Elapsed: 4.012612776s
Mar  9 08:15:23.425: INFO: Pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216" satisfied condition "running"
STEP: Reading file content from the nginx-container 03/09/23 08:15:23.425
Mar  9 08:15:23.425: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9887 PodName:pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:15:23.425: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:15:23.426: INFO: ExecWithOptions: Clientset creation
Mar  9 08:15:23.426: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-9887/pods/pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Mar  9 08:15:23.548: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:23.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9887" for this suite. 03/09/23 08:15:23.554
------------------------------
â€¢ [4.190 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:19.372
    Mar  9 08:15:19.372: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:15:19.374
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:19.391
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:19.396
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] pod should support shared volumes between containers [Conformance]
      test/e2e/common/storage/empty_dir.go:227
    STEP: Creating Pod 03/09/23 08:15:19.401
    Mar  9 08:15:19.412: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216" in namespace "emptydir-9887" to be "running"
    Mar  9 08:15:19.418: INFO: Pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216": Phase="Pending", Reason="", readiness=false. Elapsed: 5.703034ms
    Mar  9 08:15:21.423: INFO: Pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010992213s
    Mar  9 08:15:23.425: INFO: Pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216": Phase="Running", Reason="", readiness=false. Elapsed: 4.012612776s
    Mar  9 08:15:23.425: INFO: Pod "pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216" satisfied condition "running"
    STEP: Reading file content from the nginx-container 03/09/23 08:15:23.425
    Mar  9 08:15:23.425: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9887 PodName:pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:15:23.425: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:15:23.426: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:15:23.426: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-9887/pods/pod-sharedvolume-899091cc-4880-44a9-8d06-a2bd20913216/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
    Mar  9 08:15:23.548: INFO: Exec stderr: ""
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:23.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9887" for this suite. 03/09/23 08:15:23.554
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:23.562
Mar  9 08:15:23.563: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pod-network-test 03/09/23 08:15:23.564
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:23.58
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:23.584
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
STEP: Performing setup for networking test in namespace pod-network-test-2559 03/09/23 08:15:23.589
STEP: creating a selector 03/09/23 08:15:23.589
STEP: Creating the service pods in kubernetes 03/09/23 08:15:23.589
Mar  9 08:15:23.589: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Mar  9 08:15:23.618: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-2559" to be "running and ready"
Mar  9 08:15:23.627: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.174958ms
Mar  9 08:15:23.627: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:15:25.633: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014867507s
Mar  9 08:15:25.633: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:15:27.633: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.014730038s
Mar  9 08:15:27.633: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:29.633: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.014777074s
Mar  9 08:15:29.633: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:31.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.015471858s
Mar  9 08:15:31.634: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:33.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.014113206s
Mar  9 08:15:33.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:35.633: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.014561206s
Mar  9 08:15:35.633: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:37.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.01556974s
Mar  9 08:15:37.634: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:39.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.016326299s
Mar  9 08:15:39.634: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:41.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.01364936s
Mar  9 08:15:41.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:43.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.016409788s
Mar  9 08:15:43.635: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:15:45.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.014162015s
Mar  9 08:15:45.632: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Mar  9 08:15:45.632: INFO: Pod "netserver-0" satisfied condition "running and ready"
Mar  9 08:15:45.636: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-2559" to be "running and ready"
Mar  9 08:15:45.640: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 4.135117ms
Mar  9 08:15:45.640: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Mar  9 08:15:45.640: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 03/09/23 08:15:45.644
Mar  9 08:15:45.660: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-2559" to be "running"
Mar  9 08:15:45.663: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.773128ms
Mar  9 08:15:47.669: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009376451s
Mar  9 08:15:49.670: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.010652726s
Mar  9 08:15:49.670: INFO: Pod "test-container-pod" satisfied condition "running"
Mar  9 08:15:49.674: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-2559" to be "running"
Mar  9 08:15:49.679: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.099751ms
Mar  9 08:15:49.679: INFO: Pod "host-test-container-pod" satisfied condition "running"
Mar  9 08:15:49.682: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Mar  9 08:15:49.683: INFO: Going to poll 172.16.0.86 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Mar  9 08:15:49.686: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.0.86:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2559 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:15:49.686: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:15:49.688: INFO: ExecWithOptions: Clientset creation
Mar  9 08:15:49.688: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2559/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.0.86%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar  9 08:15:49.812: INFO: Found all 1 expected endpoints: [netserver-0]
Mar  9 08:15:49.812: INFO: Going to poll 172.16.0.13 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Mar  9 08:15:49.816: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.0.13:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2559 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:15:49.816: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:15:49.817: INFO: ExecWithOptions: Clientset creation
Mar  9 08:15:49.818: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2559/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.0.13%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar  9 08:15:49.946: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:49.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-2559" for this suite. 03/09/23 08:15:49.952
------------------------------
â€¢ [SLOW TEST] [26.401 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:23.562
    Mar  9 08:15:23.563: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pod-network-test 03/09/23 08:15:23.564
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:23.58
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:23.584
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:105
    STEP: Performing setup for networking test in namespace pod-network-test-2559 03/09/23 08:15:23.589
    STEP: creating a selector 03/09/23 08:15:23.589
    STEP: Creating the service pods in kubernetes 03/09/23 08:15:23.589
    Mar  9 08:15:23.589: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Mar  9 08:15:23.618: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-2559" to be "running and ready"
    Mar  9 08:15:23.627: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.174958ms
    Mar  9 08:15:23.627: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:15:25.633: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014867507s
    Mar  9 08:15:25.633: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:15:27.633: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.014730038s
    Mar  9 08:15:27.633: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:29.633: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.014777074s
    Mar  9 08:15:29.633: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:31.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.015471858s
    Mar  9 08:15:31.634: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:33.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.014113206s
    Mar  9 08:15:33.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:35.633: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.014561206s
    Mar  9 08:15:35.633: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:37.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.01556974s
    Mar  9 08:15:37.634: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:39.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.016326299s
    Mar  9 08:15:39.634: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:41.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.01364936s
    Mar  9 08:15:41.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:43.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.016409788s
    Mar  9 08:15:43.635: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:15:45.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.014162015s
    Mar  9 08:15:45.632: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Mar  9 08:15:45.632: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Mar  9 08:15:45.636: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-2559" to be "running and ready"
    Mar  9 08:15:45.640: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 4.135117ms
    Mar  9 08:15:45.640: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Mar  9 08:15:45.640: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 03/09/23 08:15:45.644
    Mar  9 08:15:45.660: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-2559" to be "running"
    Mar  9 08:15:45.663: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.773128ms
    Mar  9 08:15:47.669: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009376451s
    Mar  9 08:15:49.670: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.010652726s
    Mar  9 08:15:49.670: INFO: Pod "test-container-pod" satisfied condition "running"
    Mar  9 08:15:49.674: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-2559" to be "running"
    Mar  9 08:15:49.679: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.099751ms
    Mar  9 08:15:49.679: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Mar  9 08:15:49.682: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Mar  9 08:15:49.683: INFO: Going to poll 172.16.0.86 on port 8083 at least 0 times, with a maximum of 34 tries before failing
    Mar  9 08:15:49.686: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.0.86:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2559 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:15:49.686: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:15:49.688: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:15:49.688: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2559/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.0.86%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar  9 08:15:49.812: INFO: Found all 1 expected endpoints: [netserver-0]
    Mar  9 08:15:49.812: INFO: Going to poll 172.16.0.13 on port 8083 at least 0 times, with a maximum of 34 tries before failing
    Mar  9 08:15:49.816: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.0.13:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2559 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:15:49.816: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:15:49.817: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:15:49.818: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2559/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.0.13%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar  9 08:15:49.946: INFO: Found all 1 expected endpoints: [netserver-1]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:49.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-2559" for this suite. 03/09/23 08:15:49.952
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:49.964
Mar  9 08:15:49.965: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:15:49.966
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:49.981
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:49.99
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
STEP: validating cluster-info 03/09/23 08:15:49.996
Mar  9 08:15:49.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8028 cluster-info'
Mar  9 08:15:50.157: INFO: stderr: ""
Mar  9 08:15:50.157: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:50.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8028" for this suite. 03/09/23 08:15:50.163
------------------------------
â€¢ [0.212 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl cluster-info
  test/e2e/kubectl/kubectl.go:1244
    should check if Kubernetes control plane services is included in cluster-info  [Conformance]
    test/e2e/kubectl/kubectl.go:1250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:49.964
    Mar  9 08:15:49.965: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:15:49.966
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:49.981
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:49.99
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
      test/e2e/kubectl/kubectl.go:1250
    STEP: validating cluster-info 03/09/23 08:15:49.996
    Mar  9 08:15:49.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8028 cluster-info'
    Mar  9 08:15:50.157: INFO: stderr: ""
    Mar  9 08:15:50.157: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:50.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8028" for this suite. 03/09/23 08:15:50.163
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:50.177
Mar  9 08:15:50.178: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 08:15:50.179
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:50.195
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:50.201
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
STEP: Creating secret with name secret-test-8fbcb169-17af-47ab-9416-52123dc21021 03/09/23 08:15:50.206
STEP: Creating a pod to test consume secrets 03/09/23 08:15:50.212
Mar  9 08:15:50.224: INFO: Waiting up to 5m0s for pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78" in namespace "secrets-6607" to be "Succeeded or Failed"
Mar  9 08:15:50.228: INFO: Pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78": Phase="Pending", Reason="", readiness=false. Elapsed: 4.128093ms
Mar  9 08:15:52.233: INFO: Pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009073049s
Mar  9 08:15:54.234: INFO: Pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009931607s
STEP: Saw pod success 03/09/23 08:15:54.234
Mar  9 08:15:54.234: INFO: Pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78" satisfied condition "Succeeded or Failed"
Mar  9 08:15:54.238: INFO: Trying to get logs from node k8s-worker2 pod pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78 container secret-env-test: <nil>
STEP: delete the pod 03/09/23 08:15:54.27
Mar  9 08:15:54.285: INFO: Waiting for pod pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78 to disappear
Mar  9 08:15:54.289: INFO: Pod pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 08:15:54.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-6607" for this suite. 03/09/23 08:15:54.295
------------------------------
â€¢ [4.124 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:50.177
    Mar  9 08:15:50.178: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 08:15:50.179
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:50.195
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:50.201
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in env vars [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:46
    STEP: Creating secret with name secret-test-8fbcb169-17af-47ab-9416-52123dc21021 03/09/23 08:15:50.206
    STEP: Creating a pod to test consume secrets 03/09/23 08:15:50.212
    Mar  9 08:15:50.224: INFO: Waiting up to 5m0s for pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78" in namespace "secrets-6607" to be "Succeeded or Failed"
    Mar  9 08:15:50.228: INFO: Pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78": Phase="Pending", Reason="", readiness=false. Elapsed: 4.128093ms
    Mar  9 08:15:52.233: INFO: Pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009073049s
    Mar  9 08:15:54.234: INFO: Pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009931607s
    STEP: Saw pod success 03/09/23 08:15:54.234
    Mar  9 08:15:54.234: INFO: Pod "pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78" satisfied condition "Succeeded or Failed"
    Mar  9 08:15:54.238: INFO: Trying to get logs from node k8s-worker2 pod pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78 container secret-env-test: <nil>
    STEP: delete the pod 03/09/23 08:15:54.27
    Mar  9 08:15:54.285: INFO: Waiting for pod pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78 to disappear
    Mar  9 08:15:54.289: INFO: Pod pod-secrets-46b3f540-be5a-482e-a181-5ab471ccba78 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:15:54.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-6607" for this suite. 03/09/23 08:15:54.295
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:15:54.303
Mar  9 08:15:54.304: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-lifecycle-hook 03/09/23 08:15:54.305
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:54.32
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:54.325
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 03/09/23 08:15:54.336
Mar  9 08:15:54.348: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-558" to be "running and ready"
Mar  9 08:15:54.352: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 4.004532ms
Mar  9 08:15:54.352: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:15:56.356: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.008511485s
Mar  9 08:15:56.356: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Mar  9 08:15:56.356: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
STEP: create the pod with lifecycle hook 03/09/23 08:15:56.36
Mar  9 08:15:56.368: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-558" to be "running and ready"
Mar  9 08:15:56.372: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 3.915979ms
Mar  9 08:15:56.372: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:15:58.376: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.008462489s
Mar  9 08:15:58.376: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
Mar  9 08:15:58.376: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
STEP: check poststart hook 03/09/23 08:15:58.38
STEP: delete the pod with lifecycle hook 03/09/23 08:15:58.389
Mar  9 08:15:58.397: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Mar  9 08:15:58.402: INFO: Pod pod-with-poststart-http-hook still exists
Mar  9 08:16:00.402: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Mar  9 08:16:00.407: INFO: Pod pod-with-poststart-http-hook still exists
Mar  9 08:16:02.403: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Mar  9 08:16:02.407: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Mar  9 08:16:02.407: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-558" for this suite. 03/09/23 08:16:02.414
------------------------------
â€¢ [SLOW TEST] [8.120 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:15:54.303
    Mar  9 08:15:54.304: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-lifecycle-hook 03/09/23 08:15:54.305
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:15:54.32
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:15:54.325
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 03/09/23 08:15:54.336
    Mar  9 08:15:54.348: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-558" to be "running and ready"
    Mar  9 08:15:54.352: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 4.004532ms
    Mar  9 08:15:54.352: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:15:56.356: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.008511485s
    Mar  9 08:15:56.356: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Mar  9 08:15:56.356: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:167
    STEP: create the pod with lifecycle hook 03/09/23 08:15:56.36
    Mar  9 08:15:56.368: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-558" to be "running and ready"
    Mar  9 08:15:56.372: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 3.915979ms
    Mar  9 08:15:56.372: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:15:58.376: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.008462489s
    Mar  9 08:15:58.376: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
    Mar  9 08:15:58.376: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
    STEP: check poststart hook 03/09/23 08:15:58.38
    STEP: delete the pod with lifecycle hook 03/09/23 08:15:58.389
    Mar  9 08:15:58.397: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Mar  9 08:15:58.402: INFO: Pod pod-with-poststart-http-hook still exists
    Mar  9 08:16:00.402: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Mar  9 08:16:00.407: INFO: Pod pod-with-poststart-http-hook still exists
    Mar  9 08:16:02.403: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Mar  9 08:16:02.407: INFO: Pod pod-with-poststart-http-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:16:02.407: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-558" for this suite. 03/09/23 08:16:02.414
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:16:02.425
Mar  9 08:16:02.425: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename deployment 03/09/23 08:16:02.427
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:16:02.444
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:16:02.449
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
Mar  9 08:16:02.454: INFO: Creating simple deployment test-new-deployment
Mar  9 08:16:02.470: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource 03/09/23 08:16:04.487
STEP: updating a scale subresource 03/09/23 08:16:04.491
STEP: verifying the deployment Spec.Replicas was modified 03/09/23 08:16:04.498
STEP: Patch a scale subresource 03/09/23 08:16:04.502
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar  9 08:16:04.521: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-6861  0fa5b02b-0807-4c32-aa3d-2dc8640aac43 255036 3 2023-03-09 08:16:02 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-03-09 08:16:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:16:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001e091e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-09 08:16:03 +0000 UTC,LastTransitionTime:2023-03-09 08:16:03 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-03-09 08:16:03 +0000 UTC,LastTransitionTime:2023-03-09 08:16:02 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Mar  9 08:16:04.530: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-6861  76a01960-f0d6-4f98-a02b-511dabf54f23 255041 2 2023-03-09 08:16:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 0fa5b02b-0807-4c32-aa3d-2dc8640aac43 0xc002560887 0xc002560888}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:16:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0fa5b02b-0807-4c32-aa3d-2dc8640aac43\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:16:04 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002560918 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar  9 08:16:04.535: INFO: Pod "test-new-deployment-7f5969cbc7-4nj84" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-4nj84 test-new-deployment-7f5969cbc7- deployment-6861  694158c6-fbeb-4c1a-b9f0-36d9dbe2198c 255040 0 2023-03-09 08:16:04 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 76a01960-f0d6-4f98-a02b-511dabf54f23 0xc003635ca7 0xc003635ca8}] [] [{kube-controller-manager Update v1 2023-03-09 08:16:04 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"76a01960-f0d6-4f98-a02b-511dabf54f23\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-22xg5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-22xg5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:04 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:16:04.536: INFO: Pod "test-new-deployment-7f5969cbc7-7c5r6" is available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-7c5r6 test-new-deployment-7f5969cbc7- deployment-6861  0ef57609-144a-4321-a157-1ea60358d467 255031 0 2023-03-09 08:16:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:203d75ea4dbbd6c9d3dbad06093d349639ac7ca1b5534c8d360ff0d9cf8655b5 cni.projectcalico.org/podIP:172.16.0.65/32 cni.projectcalico.org/podIPs:172.16.0.65/32] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 76a01960-f0d6-4f98-a02b-511dabf54f23 0xc003635e30 0xc003635e31}] [] [{kube-controller-manager Update v1 2023-03-09 08:16:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"76a01960-f0d6-4f98-a02b-511dabf54f23\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:16:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:16:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.65\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xhs4f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xhs4f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.65,StartTime:2023-03-09 08:16:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:16:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://5ae3d57828375c411b749edd5e81ed9ff1e66e2bae506dfdfe006f8947b7b7ae,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.65,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar  9 08:16:04.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-6861" for this suite. 03/09/23 08:16:04.541
------------------------------
â€¢ [2.124 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:16:02.425
    Mar  9 08:16:02.425: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename deployment 03/09/23 08:16:02.427
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:16:02.444
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:16:02.449
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] Deployment should have a working scale subresource [Conformance]
      test/e2e/apps/deployment.go:150
    Mar  9 08:16:02.454: INFO: Creating simple deployment test-new-deployment
    Mar  9 08:16:02.470: INFO: deployment "test-new-deployment" doesn't have the required revision set
    STEP: getting scale subresource 03/09/23 08:16:04.487
    STEP: updating a scale subresource 03/09/23 08:16:04.491
    STEP: verifying the deployment Spec.Replicas was modified 03/09/23 08:16:04.498
    STEP: Patch a scale subresource 03/09/23 08:16:04.502
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar  9 08:16:04.521: INFO: Deployment "test-new-deployment":
    &Deployment{ObjectMeta:{test-new-deployment  deployment-6861  0fa5b02b-0807-4c32-aa3d-2dc8640aac43 255036 3 2023-03-09 08:16:02 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-03-09 08:16:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:16:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001e091e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-09 08:16:03 +0000 UTC,LastTransitionTime:2023-03-09 08:16:03 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-03-09 08:16:03 +0000 UTC,LastTransitionTime:2023-03-09 08:16:02 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Mar  9 08:16:04.530: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
    &ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-6861  76a01960-f0d6-4f98-a02b-511dabf54f23 255041 2 2023-03-09 08:16:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 0fa5b02b-0807-4c32-aa3d-2dc8640aac43 0xc002560887 0xc002560888}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:16:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0fa5b02b-0807-4c32-aa3d-2dc8640aac43\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:16:04 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002560918 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 08:16:04.535: INFO: Pod "test-new-deployment-7f5969cbc7-4nj84" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-4nj84 test-new-deployment-7f5969cbc7- deployment-6861  694158c6-fbeb-4c1a-b9f0-36d9dbe2198c 255040 0 2023-03-09 08:16:04 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 76a01960-f0d6-4f98-a02b-511dabf54f23 0xc003635ca7 0xc003635ca8}] [] [{kube-controller-manager Update v1 2023-03-09 08:16:04 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"76a01960-f0d6-4f98-a02b-511dabf54f23\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-22xg5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-22xg5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:04 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:16:04.536: INFO: Pod "test-new-deployment-7f5969cbc7-7c5r6" is available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-7c5r6 test-new-deployment-7f5969cbc7- deployment-6861  0ef57609-144a-4321-a157-1ea60358d467 255031 0 2023-03-09 08:16:02 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:203d75ea4dbbd6c9d3dbad06093d349639ac7ca1b5534c8d360ff0d9cf8655b5 cni.projectcalico.org/podIP:172.16.0.65/32 cni.projectcalico.org/podIPs:172.16.0.65/32] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 76a01960-f0d6-4f98-a02b-511dabf54f23 0xc003635e30 0xc003635e31}] [] [{kube-controller-manager Update v1 2023-03-09 08:16:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"76a01960-f0d6-4f98-a02b-511dabf54f23\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:16:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:16:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.65\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xhs4f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xhs4f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:16:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.65,StartTime:2023-03-09 08:16:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:16:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://5ae3d57828375c411b749edd5e81ed9ff1e66e2bae506dfdfe006f8947b7b7ae,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.65,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:16:04.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-6861" for this suite. 03/09/23 08:16:04.541
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] DNS
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:16:04.55
Mar  9 08:16:04.550: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename dns 03/09/23 08:16:04.552
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:16:04.568
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:16:04.573
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 03/09/23 08:16:04.579
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 03/09/23 08:16:04.579
STEP: creating a pod to probe DNS 03/09/23 08:16:04.579
STEP: submitting the pod to kubernetes 03/09/23 08:16:04.58
Mar  9 08:16:04.591: INFO: Waiting up to 15m0s for pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17" in namespace "dns-6386" to be "running"
Mar  9 08:16:04.596: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 4.395497ms
Mar  9 08:16:06.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010162165s
Mar  9 08:16:08.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 4.0104946s
Mar  9 08:16:10.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 6.009664631s
Mar  9 08:16:12.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 8.009487566s
Mar  9 08:16:14.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 10.010445043s
Mar  9 08:16:16.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 12.010311164s
Mar  9 08:16:18.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 14.009714629s
Mar  9 08:16:20.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 16.010217414s
Mar  9 08:16:22.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 18.009892139s
Mar  9 08:16:24.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 20.010265033s
Mar  9 08:16:26.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 22.010167064s
Mar  9 08:16:28.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 24.010572004s
Mar  9 08:16:30.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 26.009520382s
Mar  9 08:16:32.604: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 28.012312036s
Mar  9 08:16:34.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Running", Reason="", readiness=true. Elapsed: 30.00992644s
Mar  9 08:16:34.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17" satisfied condition "running"
STEP: retrieving the pod 03/09/23 08:16:34.601
STEP: looking for the results for each expected name from probers 03/09/23 08:16:34.605
Mar  9 08:16:34.627: INFO: DNS probes using dns-6386/dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17 succeeded

STEP: deleting the pod 03/09/23 08:16:34.627
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar  9 08:16:34.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-6386" for this suite. 03/09/23 08:16:34.646
------------------------------
â€¢ [SLOW TEST] [30.104 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:16:04.55
    Mar  9 08:16:04.550: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename dns 03/09/23 08:16:04.552
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:16:04.568
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:16:04.573
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for the cluster  [Conformance]
      test/e2e/network/dns.go:50
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     03/09/23 08:16:04.579
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     03/09/23 08:16:04.579
    STEP: creating a pod to probe DNS 03/09/23 08:16:04.579
    STEP: submitting the pod to kubernetes 03/09/23 08:16:04.58
    Mar  9 08:16:04.591: INFO: Waiting up to 15m0s for pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17" in namespace "dns-6386" to be "running"
    Mar  9 08:16:04.596: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 4.395497ms
    Mar  9 08:16:06.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010162165s
    Mar  9 08:16:08.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 4.0104946s
    Mar  9 08:16:10.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 6.009664631s
    Mar  9 08:16:12.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 8.009487566s
    Mar  9 08:16:14.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 10.010445043s
    Mar  9 08:16:16.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 12.010311164s
    Mar  9 08:16:18.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 14.009714629s
    Mar  9 08:16:20.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 16.010217414s
    Mar  9 08:16:22.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 18.009892139s
    Mar  9 08:16:24.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 20.010265033s
    Mar  9 08:16:26.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 22.010167064s
    Mar  9 08:16:28.602: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 24.010572004s
    Mar  9 08:16:30.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 26.009520382s
    Mar  9 08:16:32.604: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Pending", Reason="", readiness=false. Elapsed: 28.012312036s
    Mar  9 08:16:34.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17": Phase="Running", Reason="", readiness=true. Elapsed: 30.00992644s
    Mar  9 08:16:34.601: INFO: Pod "dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 08:16:34.601
    STEP: looking for the results for each expected name from probers 03/09/23 08:16:34.605
    Mar  9 08:16:34.627: INFO: DNS probes using dns-6386/dns-test-72ff9dc0-e421-41ae-8938-6b7c0abe4b17 succeeded

    STEP: deleting the pod 03/09/23 08:16:34.627
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:16:34.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-6386" for this suite. 03/09/23 08:16:34.646
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:16:34.658
Mar  9 08:16:34.658: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:16:34.66
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:16:34.676
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:16:34.68
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
STEP: Creating configMap with name cm-test-opt-del-609081fa-4e82-450d-8250-d82b8950dea3 03/09/23 08:16:34.691
STEP: Creating configMap with name cm-test-opt-upd-65bff7e3-d3b1-4b48-a5c5-e91ccdbcdf99 03/09/23 08:16:34.697
STEP: Creating the pod 03/09/23 08:16:34.703
Mar  9 08:16:34.715: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df" in namespace "projected-1285" to be "running and ready"
Mar  9 08:16:34.719: INFO: Pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df": Phase="Pending", Reason="", readiness=false. Elapsed: 4.363077ms
Mar  9 08:16:34.719: INFO: The phase of Pod pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:16:36.724: INFO: Pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009071537s
Mar  9 08:16:36.724: INFO: The phase of Pod pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:16:38.726: INFO: Pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df": Phase="Running", Reason="", readiness=true. Elapsed: 4.010871021s
Mar  9 08:16:38.726: INFO: The phase of Pod pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df is Running (Ready = true)
Mar  9 08:16:38.726: INFO: Pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-609081fa-4e82-450d-8250-d82b8950dea3 03/09/23 08:16:38.754
STEP: Updating configmap cm-test-opt-upd-65bff7e3-d3b1-4b48-a5c5-e91ccdbcdf99 03/09/23 08:16:38.763
STEP: Creating configMap with name cm-test-opt-create-e8eda4eb-c00b-4024-a4d0-5e2b13ae04c5 03/09/23 08:16:38.769
STEP: waiting to observe update in volume 03/09/23 08:16:38.775
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:18:05.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1285" for this suite. 03/09/23 08:18:05.306
------------------------------
â€¢ [SLOW TEST] [90.657 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:16:34.658
    Mar  9 08:16:34.658: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:16:34.66
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:16:34.676
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:16:34.68
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:174
    STEP: Creating configMap with name cm-test-opt-del-609081fa-4e82-450d-8250-d82b8950dea3 03/09/23 08:16:34.691
    STEP: Creating configMap with name cm-test-opt-upd-65bff7e3-d3b1-4b48-a5c5-e91ccdbcdf99 03/09/23 08:16:34.697
    STEP: Creating the pod 03/09/23 08:16:34.703
    Mar  9 08:16:34.715: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df" in namespace "projected-1285" to be "running and ready"
    Mar  9 08:16:34.719: INFO: Pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df": Phase="Pending", Reason="", readiness=false. Elapsed: 4.363077ms
    Mar  9 08:16:34.719: INFO: The phase of Pod pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:16:36.724: INFO: Pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009071537s
    Mar  9 08:16:36.724: INFO: The phase of Pod pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:16:38.726: INFO: Pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df": Phase="Running", Reason="", readiness=true. Elapsed: 4.010871021s
    Mar  9 08:16:38.726: INFO: The phase of Pod pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df is Running (Ready = true)
    Mar  9 08:16:38.726: INFO: Pod "pod-projected-configmaps-ee274aa5-db0d-4038-a03e-b63d433308df" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-609081fa-4e82-450d-8250-d82b8950dea3 03/09/23 08:16:38.754
    STEP: Updating configmap cm-test-opt-upd-65bff7e3-d3b1-4b48-a5c5-e91ccdbcdf99 03/09/23 08:16:38.763
    STEP: Creating configMap with name cm-test-opt-create-e8eda4eb-c00b-4024-a4d0-5e2b13ae04c5 03/09/23 08:16:38.769
    STEP: waiting to observe update in volume 03/09/23 08:16:38.775
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:18:05.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1285" for this suite. 03/09/23 08:18:05.306
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:18:05.317
Mar  9 08:18:05.317: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:18:05.319
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:05.338
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:05.343
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
STEP: Creating configMap with name configmap-test-volume-66a26c56-c1ce-4898-98a8-0df5e208ff69 03/09/23 08:18:05.348
STEP: Creating a pod to test consume configMaps 03/09/23 08:18:05.354
Mar  9 08:18:05.366: INFO: Waiting up to 5m0s for pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0" in namespace "configmap-20" to be "Succeeded or Failed"
Mar  9 08:18:05.370: INFO: Pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.688759ms
Mar  9 08:18:07.376: INFO: Pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010370535s
Mar  9 08:18:09.376: INFO: Pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010167644s
STEP: Saw pod success 03/09/23 08:18:09.376
Mar  9 08:18:09.376: INFO: Pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0" satisfied condition "Succeeded or Failed"
Mar  9 08:18:09.380: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0 container configmap-volume-test: <nil>
STEP: delete the pod 03/09/23 08:18:09.408
Mar  9 08:18:09.431: INFO: Waiting for pod pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0 to disappear
Mar  9 08:18:09.434: INFO: Pod pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:18:09.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-20" for this suite. 03/09/23 08:18:09.44
------------------------------
â€¢ [4.130 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:18:05.317
    Mar  9 08:18:05.317: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:18:05.319
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:05.338
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:05.343
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:423
    STEP: Creating configMap with name configmap-test-volume-66a26c56-c1ce-4898-98a8-0df5e208ff69 03/09/23 08:18:05.348
    STEP: Creating a pod to test consume configMaps 03/09/23 08:18:05.354
    Mar  9 08:18:05.366: INFO: Waiting up to 5m0s for pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0" in namespace "configmap-20" to be "Succeeded or Failed"
    Mar  9 08:18:05.370: INFO: Pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.688759ms
    Mar  9 08:18:07.376: INFO: Pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010370535s
    Mar  9 08:18:09.376: INFO: Pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010167644s
    STEP: Saw pod success 03/09/23 08:18:09.376
    Mar  9 08:18:09.376: INFO: Pod "pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0" satisfied condition "Succeeded or Failed"
    Mar  9 08:18:09.380: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0 container configmap-volume-test: <nil>
    STEP: delete the pod 03/09/23 08:18:09.408
    Mar  9 08:18:09.431: INFO: Waiting for pod pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0 to disappear
    Mar  9 08:18:09.434: INFO: Pod pod-configmaps-691d265b-21cc-4e25-a681-8b35dad8cfd0 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:18:09.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-20" for this suite. 03/09/23 08:18:09.44
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:18:09.449
Mar  9 08:18:09.450: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 08:18:09.451
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:09.478
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:09.483
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
STEP: creating a secret 03/09/23 08:18:09.488
STEP: listing secrets in all namespaces to ensure that there are more than zero 03/09/23 08:18:09.494
STEP: patching the secret 03/09/23 08:18:09.498
STEP: deleting the secret using a LabelSelector 03/09/23 08:18:09.508
STEP: listing secrets in all namespaces, searching for label name and value in patch 03/09/23 08:18:09.515
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 08:18:09.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-1858" for this suite. 03/09/23 08:18:09.524
------------------------------
â€¢ [0.082 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:18:09.449
    Mar  9 08:18:09.450: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 08:18:09.451
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:09.478
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:09.483
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a secret [Conformance]
      test/e2e/common/node/secrets.go:154
    STEP: creating a secret 03/09/23 08:18:09.488
    STEP: listing secrets in all namespaces to ensure that there are more than zero 03/09/23 08:18:09.494
    STEP: patching the secret 03/09/23 08:18:09.498
    STEP: deleting the secret using a LabelSelector 03/09/23 08:18:09.508
    STEP: listing secrets in all namespaces, searching for label name and value in patch 03/09/23 08:18:09.515
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:18:09.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-1858" for this suite. 03/09/23 08:18:09.524
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-instrumentation] Events API
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:18:09.532
Mar  9 08:18:09.532: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename events 03/09/23 08:18:09.534
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:09.55
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:09.554
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
STEP: creating a test event 03/09/23 08:18:09.559
STEP: listing events in all namespaces 03/09/23 08:18:09.57
STEP: listing events in test namespace 03/09/23 08:18:09.577
STEP: listing events with field selection filtering on source 03/09/23 08:18:09.582
STEP: listing events with field selection filtering on reportingController 03/09/23 08:18:09.586
STEP: getting the test event 03/09/23 08:18:09.59
STEP: patching the test event 03/09/23 08:18:09.594
STEP: getting the test event 03/09/23 08:18:09.605
STEP: updating the test event 03/09/23 08:18:09.609
STEP: getting the test event 03/09/23 08:18:09.618
STEP: deleting the test event 03/09/23 08:18:09.622
STEP: listing events in all namespaces 03/09/23 08:18:09.63
STEP: listing events in test namespace 03/09/23 08:18:09.637
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Mar  9 08:18:09.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-178" for this suite. 03/09/23 08:18:09.646
------------------------------
â€¢ [0.122 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:18:09.532
    Mar  9 08:18:09.532: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename events 03/09/23 08:18:09.534
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:09.55
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:09.554
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
      test/e2e/instrumentation/events.go:98
    STEP: creating a test event 03/09/23 08:18:09.559
    STEP: listing events in all namespaces 03/09/23 08:18:09.57
    STEP: listing events in test namespace 03/09/23 08:18:09.577
    STEP: listing events with field selection filtering on source 03/09/23 08:18:09.582
    STEP: listing events with field selection filtering on reportingController 03/09/23 08:18:09.586
    STEP: getting the test event 03/09/23 08:18:09.59
    STEP: patching the test event 03/09/23 08:18:09.594
    STEP: getting the test event 03/09/23 08:18:09.605
    STEP: updating the test event 03/09/23 08:18:09.609
    STEP: getting the test event 03/09/23 08:18:09.618
    STEP: deleting the test event 03/09/23 08:18:09.622
    STEP: listing events in all namespaces 03/09/23 08:18:09.63
    STEP: listing events in test namespace 03/09/23 08:18:09.637
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:18:09.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-178" for this suite. 03/09/23 08:18:09.646
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:18:09.656
Mar  9 08:18:09.656: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:18:09.658
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:09.675
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:09.68
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
STEP: Creating a pod to test downward api env vars 03/09/23 08:18:09.685
Mar  9 08:18:09.695: INFO: Waiting up to 5m0s for pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636" in namespace "downward-api-7779" to be "Succeeded or Failed"
Mar  9 08:18:09.699: INFO: Pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636": Phase="Pending", Reason="", readiness=false. Elapsed: 4.275663ms
Mar  9 08:18:11.704: INFO: Pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009256173s
Mar  9 08:18:13.705: INFO: Pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010110617s
STEP: Saw pod success 03/09/23 08:18:13.705
Mar  9 08:18:13.705: INFO: Pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636" satisfied condition "Succeeded or Failed"
Mar  9 08:18:13.710: INFO: Trying to get logs from node k8s-worker1 pod downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636 container dapi-container: <nil>
STEP: delete the pod 03/09/23 08:18:13.72
Mar  9 08:18:13.734: INFO: Waiting for pod downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636 to disappear
Mar  9 08:18:13.737: INFO: Pod downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar  9 08:18:13.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7779" for this suite. 03/09/23 08:18:13.744
------------------------------
â€¢ [4.095 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:18:09.656
    Mar  9 08:18:09.656: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:18:09.658
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:09.675
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:09.68
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:44
    STEP: Creating a pod to test downward api env vars 03/09/23 08:18:09.685
    Mar  9 08:18:09.695: INFO: Waiting up to 5m0s for pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636" in namespace "downward-api-7779" to be "Succeeded or Failed"
    Mar  9 08:18:09.699: INFO: Pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636": Phase="Pending", Reason="", readiness=false. Elapsed: 4.275663ms
    Mar  9 08:18:11.704: INFO: Pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009256173s
    Mar  9 08:18:13.705: INFO: Pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010110617s
    STEP: Saw pod success 03/09/23 08:18:13.705
    Mar  9 08:18:13.705: INFO: Pod "downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636" satisfied condition "Succeeded or Failed"
    Mar  9 08:18:13.710: INFO: Trying to get logs from node k8s-worker1 pod downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636 container dapi-container: <nil>
    STEP: delete the pod 03/09/23 08:18:13.72
    Mar  9 08:18:13.734: INFO: Waiting for pod downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636 to disappear
    Mar  9 08:18:13.737: INFO: Pod downward-api-d4614de9-a35a-4ccb-81fa-21787b78c636 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:18:13.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7779" for this suite. 03/09/23 08:18:13.744
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:18:13.752
Mar  9 08:18:13.752: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-webhook 03/09/23 08:18:13.754
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:13.772
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:13.777
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 03/09/23 08:18:13.782
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 03/09/23 08:18:14.866
STEP: Deploying the custom resource conversion webhook pod 03/09/23 08:18:14.883
STEP: Wait for the deployment to be ready 03/09/23 08:18:14.902
Mar  9 08:18:14.916: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:18:16.927
STEP: Verifying the service has paired with the endpoint 03/09/23 08:18:16.954
Mar  9 08:18:17.954: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
Mar  9 08:18:17.959: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Creating a v1 custom resource 03/09/23 08:18:20.62
STEP: Create a v2 custom resource 03/09/23 08:18:20.644
STEP: List CRs in v1 03/09/23 08:18:20.762
STEP: List CRs in v2 03/09/23 08:18:20.774
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:18:21.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-2645" for this suite. 03/09/23 08:18:21.341
------------------------------
â€¢ [SLOW TEST] [7.596 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:18:13.752
    Mar  9 08:18:13.752: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-webhook 03/09/23 08:18:13.754
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:13.772
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:13.777
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 03/09/23 08:18:13.782
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 03/09/23 08:18:14.866
    STEP: Deploying the custom resource conversion webhook pod 03/09/23 08:18:14.883
    STEP: Wait for the deployment to be ready 03/09/23 08:18:14.902
    Mar  9 08:18:14.916: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:18:16.927
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:18:16.954
    Mar  9 08:18:17.954: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert a non homogeneous list of CRs [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:184
    Mar  9 08:18:17.959: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Creating a v1 custom resource 03/09/23 08:18:20.62
    STEP: Create a v2 custom resource 03/09/23 08:18:20.644
    STEP: List CRs in v1 03/09/23 08:18:20.762
    STEP: List CRs in v2 03/09/23 08:18:20.774
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:18:21.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-2645" for this suite. 03/09/23 08:18:21.341
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:18:21.349
Mar  9 08:18:21.349: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename init-container 03/09/23 08:18:21.351
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:21.367
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:21.371
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
STEP: creating the pod 03/09/23 08:18:21.375
Mar  9 08:18:21.375: INFO: PodSpec: initContainers in spec.initContainers
Mar  9 08:18:59.370: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-15e472dc-64d4-4605-86c7-1bc6f47cbb5e", GenerateName:"", Namespace:"init-container-1980", SelfLink:"", UID:"3e465220-2348-43f6-908b-5d901d34bf18", ResourceVersion:"255648", Generation:0, CreationTimestamp:time.Date(2023, time.March, 9, 8, 18, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"375425362"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"da409e2b523e38196c28fddee745aed7ce39afc203422fa1749451233a2b0dcc", "cni.projectcalico.org/podIP":"172.16.0.104/32", "cni.projectcalico.org/podIPs":"172.16.0.104/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"Go-http-client", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 9, 8, 18, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010a43d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 9, 8, 18, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010a4408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 9, 8, 18, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010a4438), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-dwp99", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005c04640), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dwp99", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dwp99", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dwp99", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000eca020), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-worker1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000bb5960), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000eca180)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000eca1a0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc000eca1a8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000eca1ac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005d08510), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 9, 8, 18, 20, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 9, 8, 18, 20, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 9, 8, 18, 20, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 9, 8, 18, 21, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.0.102", PodIP:"172.16.0.104", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.16.0.104"}}, StartTime:time.Date(2023, time.March, 9, 8, 18, 20, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bb5b20)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bb5b90)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://9a65271810d823cae3e65ea397713dd9517b5b800c45e285bb444eebd2511485", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005c046c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005c046a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc000eca50f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:18:59.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-1980" for this suite. 03/09/23 08:18:59.38
------------------------------
â€¢ [SLOW TEST] [38.039 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:18:21.349
    Mar  9 08:18:21.349: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename init-container 03/09/23 08:18:21.351
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:21.367
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:21.371
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:334
    STEP: creating the pod 03/09/23 08:18:21.375
    Mar  9 08:18:21.375: INFO: PodSpec: initContainers in spec.initContainers
    Mar  9 08:18:59.370: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-15e472dc-64d4-4605-86c7-1bc6f47cbb5e", GenerateName:"", Namespace:"init-container-1980", SelfLink:"", UID:"3e465220-2348-43f6-908b-5d901d34bf18", ResourceVersion:"255648", Generation:0, CreationTimestamp:time.Date(2023, time.March, 9, 8, 18, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"375425362"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"da409e2b523e38196c28fddee745aed7ce39afc203422fa1749451233a2b0dcc", "cni.projectcalico.org/podIP":"172.16.0.104/32", "cni.projectcalico.org/podIPs":"172.16.0.104/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"Go-http-client", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 9, 8, 18, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010a43d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 9, 8, 18, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010a4408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.March, 9, 8, 18, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010a4438), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-dwp99", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005c04640), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dwp99", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dwp99", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-dwp99", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000eca020), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-worker1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000bb5960), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000eca180)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000eca1a0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc000eca1a8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000eca1ac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005d08510), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 9, 8, 18, 20, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 9, 8, 18, 20, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 9, 8, 18, 20, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.March, 9, 8, 18, 21, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.0.102", PodIP:"172.16.0.104", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.16.0.104"}}, StartTime:time.Date(2023, time.March, 9, 8, 18, 20, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bb5b20)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000bb5b90)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://9a65271810d823cae3e65ea397713dd9517b5b800c45e285bb444eebd2511485", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005c046c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005c046a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc000eca50f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:18:59.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-1980" for this suite. 03/09/23 08:18:59.38
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:18:59.391
Mar  9 08:18:59.391: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replicaset 03/09/23 08:18:59.393
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:59.407
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:59.411
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
STEP: Create a Replicaset 03/09/23 08:18:59.421
STEP: Verify that the required pods have come up. 03/09/23 08:18:59.428
Mar  9 08:18:59.432: INFO: Pod name sample-pod: Found 0 pods out of 1
Mar  9 08:19:04.436: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/09/23 08:19:04.436
STEP: Getting /status 03/09/23 08:19:04.436
Mar  9 08:19:04.441: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status 03/09/23 08:19:04.441
Mar  9 08:19:04.456: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated 03/09/23 08:19:04.456
Mar  9 08:19:04.460: INFO: Observed &ReplicaSet event: ADDED
Mar  9 08:19:04.460: INFO: Observed &ReplicaSet event: MODIFIED
Mar  9 08:19:04.460: INFO: Observed &ReplicaSet event: MODIFIED
Mar  9 08:19:04.461: INFO: Observed &ReplicaSet event: MODIFIED
Mar  9 08:19:04.461: INFO: Found replicaset test-rs in namespace replicaset-8948 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Mar  9 08:19:04.461: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status 03/09/23 08:19:04.461
Mar  9 08:19:04.461: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Mar  9 08:19:04.472: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched 03/09/23 08:19:04.472
Mar  9 08:19:04.476: INFO: Observed &ReplicaSet event: ADDED
Mar  9 08:19:04.476: INFO: Observed &ReplicaSet event: MODIFIED
Mar  9 08:19:04.476: INFO: Observed &ReplicaSet event: MODIFIED
Mar  9 08:19:04.476: INFO: Observed &ReplicaSet event: MODIFIED
Mar  9 08:19:04.476: INFO: Observed replicaset test-rs in namespace replicaset-8948 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar  9 08:19:04.477: INFO: Observed &ReplicaSet event: MODIFIED
Mar  9 08:19:04.477: INFO: Found replicaset test-rs in namespace replicaset-8948 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Mar  9 08:19:04.477: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:19:04.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-8948" for this suite. 03/09/23 08:19:04.483
------------------------------
â€¢ [SLOW TEST] [5.099 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:18:59.391
    Mar  9 08:18:59.391: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replicaset 03/09/23 08:18:59.393
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:18:59.407
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:18:59.411
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should validate Replicaset Status endpoints [Conformance]
      test/e2e/apps/replica_set.go:176
    STEP: Create a Replicaset 03/09/23 08:18:59.421
    STEP: Verify that the required pods have come up. 03/09/23 08:18:59.428
    Mar  9 08:18:59.432: INFO: Pod name sample-pod: Found 0 pods out of 1
    Mar  9 08:19:04.436: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/09/23 08:19:04.436
    STEP: Getting /status 03/09/23 08:19:04.436
    Mar  9 08:19:04.441: INFO: Replicaset test-rs has Conditions: []
    STEP: updating the Replicaset Status 03/09/23 08:19:04.441
    Mar  9 08:19:04.456: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the ReplicaSet status to be updated 03/09/23 08:19:04.456
    Mar  9 08:19:04.460: INFO: Observed &ReplicaSet event: ADDED
    Mar  9 08:19:04.460: INFO: Observed &ReplicaSet event: MODIFIED
    Mar  9 08:19:04.460: INFO: Observed &ReplicaSet event: MODIFIED
    Mar  9 08:19:04.461: INFO: Observed &ReplicaSet event: MODIFIED
    Mar  9 08:19:04.461: INFO: Found replicaset test-rs in namespace replicaset-8948 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Mar  9 08:19:04.461: INFO: Replicaset test-rs has an updated status
    STEP: patching the Replicaset Status 03/09/23 08:19:04.461
    Mar  9 08:19:04.461: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Mar  9 08:19:04.472: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Replicaset status to be patched 03/09/23 08:19:04.472
    Mar  9 08:19:04.476: INFO: Observed &ReplicaSet event: ADDED
    Mar  9 08:19:04.476: INFO: Observed &ReplicaSet event: MODIFIED
    Mar  9 08:19:04.476: INFO: Observed &ReplicaSet event: MODIFIED
    Mar  9 08:19:04.476: INFO: Observed &ReplicaSet event: MODIFIED
    Mar  9 08:19:04.476: INFO: Observed replicaset test-rs in namespace replicaset-8948 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar  9 08:19:04.477: INFO: Observed &ReplicaSet event: MODIFIED
    Mar  9 08:19:04.477: INFO: Found replicaset test-rs in namespace replicaset-8948 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
    Mar  9 08:19:04.477: INFO: Replicaset test-rs has a patched status
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:19:04.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-8948" for this suite. 03/09/23 08:19:04.483
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:19:04.499
Mar  9 08:19:04.499: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:19:04.501
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:04.524
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:04.529
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
STEP: Creating a pod to test emptydir 0666 on node default medium 03/09/23 08:19:04.54
Mar  9 08:19:04.549: INFO: Waiting up to 5m0s for pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09" in namespace "emptydir-175" to be "Succeeded or Failed"
Mar  9 08:19:04.555: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09": Phase="Pending", Reason="", readiness=false. Elapsed: 5.655221ms
Mar  9 08:19:06.561: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011719857s
Mar  9 08:19:08.562: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012675627s
Mar  9 08:19:10.560: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010301303s
STEP: Saw pod success 03/09/23 08:19:10.56
Mar  9 08:19:10.560: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09" satisfied condition "Succeeded or Failed"
Mar  9 08:19:10.564: INFO: Trying to get logs from node k8s-worker2 pod pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09 container test-container: <nil>
STEP: delete the pod 03/09/23 08:19:10.575
Mar  9 08:19:10.591: INFO: Waiting for pod pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09 to disappear
Mar  9 08:19:10.595: INFO: Pod pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:19:10.595: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-175" for this suite. 03/09/23 08:19:10.601
------------------------------
â€¢ [SLOW TEST] [6.110 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:19:04.499
    Mar  9 08:19:04.499: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:19:04.501
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:04.524
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:04.529
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:177
    STEP: Creating a pod to test emptydir 0666 on node default medium 03/09/23 08:19:04.54
    Mar  9 08:19:04.549: INFO: Waiting up to 5m0s for pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09" in namespace "emptydir-175" to be "Succeeded or Failed"
    Mar  9 08:19:04.555: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09": Phase="Pending", Reason="", readiness=false. Elapsed: 5.655221ms
    Mar  9 08:19:06.561: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011719857s
    Mar  9 08:19:08.562: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012675627s
    Mar  9 08:19:10.560: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010301303s
    STEP: Saw pod success 03/09/23 08:19:10.56
    Mar  9 08:19:10.560: INFO: Pod "pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09" satisfied condition "Succeeded or Failed"
    Mar  9 08:19:10.564: INFO: Trying to get logs from node k8s-worker2 pod pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09 container test-container: <nil>
    STEP: delete the pod 03/09/23 08:19:10.575
    Mar  9 08:19:10.591: INFO: Waiting for pod pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09 to disappear
    Mar  9 08:19:10.595: INFO: Pod pod-0d9d6aab-8444-4ac2-9b68-c64f2e446d09 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:19:10.595: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-175" for this suite. 03/09/23 08:19:10.601
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:19:10.61
Mar  9 08:19:10.610: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:19:10.616
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:10.632
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:10.641
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:19:10.647
Mar  9 08:19:10.661: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24" in namespace "projected-1070" to be "Succeeded or Failed"
Mar  9 08:19:10.669: INFO: Pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24": Phase="Pending", Reason="", readiness=false. Elapsed: 7.740934ms
Mar  9 08:19:12.675: INFO: Pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013443109s
Mar  9 08:19:14.674: INFO: Pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012950865s
STEP: Saw pod success 03/09/23 08:19:14.674
Mar  9 08:19:14.675: INFO: Pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24" satisfied condition "Succeeded or Failed"
Mar  9 08:19:14.678: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24 container client-container: <nil>
STEP: delete the pod 03/09/23 08:19:14.69
Mar  9 08:19:14.705: INFO: Waiting for pod downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24 to disappear
Mar  9 08:19:14.708: INFO: Pod downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:19:14.708: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1070" for this suite. 03/09/23 08:19:14.714
------------------------------
â€¢ [4.111 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:19:10.61
    Mar  9 08:19:10.610: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:19:10.616
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:10.632
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:10.641
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:235
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:19:10.647
    Mar  9 08:19:10.661: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24" in namespace "projected-1070" to be "Succeeded or Failed"
    Mar  9 08:19:10.669: INFO: Pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24": Phase="Pending", Reason="", readiness=false. Elapsed: 7.740934ms
    Mar  9 08:19:12.675: INFO: Pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013443109s
    Mar  9 08:19:14.674: INFO: Pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012950865s
    STEP: Saw pod success 03/09/23 08:19:14.674
    Mar  9 08:19:14.675: INFO: Pod "downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24" satisfied condition "Succeeded or Failed"
    Mar  9 08:19:14.678: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:19:14.69
    Mar  9 08:19:14.705: INFO: Waiting for pod downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24 to disappear
    Mar  9 08:19:14.708: INFO: Pod downwardapi-volume-6572aedd-66a9-4bcf-bf35-bca5b8b85d24 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:19:14.708: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1070" for this suite. 03/09/23 08:19:14.714
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:19:14.724
Mar  9 08:19:14.724: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:19:14.725
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:14.742
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:14.746
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
Mar  9 08:19:14.751: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/09/23 08:19:16.625
Mar  9 08:19:16.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 --namespace=crd-publish-openapi-9991 create -f -'
Mar  9 08:19:17.833: INFO: stderr: ""
Mar  9 08:19:17.833: INFO: stdout: "e2e-test-crd-publish-openapi-6869-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Mar  9 08:19:17.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 --namespace=crd-publish-openapi-9991 delete e2e-test-crd-publish-openapi-6869-crds test-cr'
Mar  9 08:19:17.982: INFO: stderr: ""
Mar  9 08:19:17.982: INFO: stdout: "e2e-test-crd-publish-openapi-6869-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Mar  9 08:19:17.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 --namespace=crd-publish-openapi-9991 apply -f -'
Mar  9 08:19:18.509: INFO: stderr: ""
Mar  9 08:19:18.509: INFO: stdout: "e2e-test-crd-publish-openapi-6869-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Mar  9 08:19:18.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 --namespace=crd-publish-openapi-9991 delete e2e-test-crd-publish-openapi-6869-crds test-cr'
Mar  9 08:19:18.668: INFO: stderr: ""
Mar  9 08:19:18.668: INFO: stdout: "e2e-test-crd-publish-openapi-6869-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 03/09/23 08:19:18.668
Mar  9 08:19:18.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 explain e2e-test-crd-publish-openapi-6869-crds'
Mar  9 08:19:19.165: INFO: stderr: ""
Mar  9 08:19:19.165: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6869-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:19:21.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9991" for this suite. 03/09/23 08:19:21.604
------------------------------
â€¢ [SLOW TEST] [6.889 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:19:14.724
    Mar  9 08:19:14.724: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:19:14.725
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:14.742
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:14.746
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields at the schema root [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:194
    Mar  9 08:19:14.751: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/09/23 08:19:16.625
    Mar  9 08:19:16.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 --namespace=crd-publish-openapi-9991 create -f -'
    Mar  9 08:19:17.833: INFO: stderr: ""
    Mar  9 08:19:17.833: INFO: stdout: "e2e-test-crd-publish-openapi-6869-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Mar  9 08:19:17.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 --namespace=crd-publish-openapi-9991 delete e2e-test-crd-publish-openapi-6869-crds test-cr'
    Mar  9 08:19:17.982: INFO: stderr: ""
    Mar  9 08:19:17.982: INFO: stdout: "e2e-test-crd-publish-openapi-6869-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    Mar  9 08:19:17.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 --namespace=crd-publish-openapi-9991 apply -f -'
    Mar  9 08:19:18.509: INFO: stderr: ""
    Mar  9 08:19:18.509: INFO: stdout: "e2e-test-crd-publish-openapi-6869-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Mar  9 08:19:18.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 --namespace=crd-publish-openapi-9991 delete e2e-test-crd-publish-openapi-6869-crds test-cr'
    Mar  9 08:19:18.668: INFO: stderr: ""
    Mar  9 08:19:18.668: INFO: stdout: "e2e-test-crd-publish-openapi-6869-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 03/09/23 08:19:18.668
    Mar  9 08:19:18.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9991 explain e2e-test-crd-publish-openapi-6869-crds'
    Mar  9 08:19:19.165: INFO: stderr: ""
    Mar  9 08:19:19.165: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6869-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:19:21.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9991" for this suite. 03/09/23 08:19:21.604
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:19:21.614
Mar  9 08:19:21.614: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename proxy 03/09/23 08:19:21.615
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:21.628
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:21.633
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
Mar  9 08:19:21.637: INFO: Creating pod...
Mar  9 08:19:21.646: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-8958" to be "running"
Mar  9 08:19:21.650: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 3.789369ms
Mar  9 08:19:23.655: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.009378443s
Mar  9 08:19:23.655: INFO: Pod "agnhost" satisfied condition "running"
Mar  9 08:19:23.655: INFO: Creating service...
Mar  9 08:19:23.672: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/DELETE
Mar  9 08:19:23.679: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Mar  9 08:19:23.679: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/GET
Mar  9 08:19:23.684: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Mar  9 08:19:23.684: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/HEAD
Mar  9 08:19:23.688: INFO: http.Client request:HEAD | StatusCode:200
Mar  9 08:19:23.688: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/OPTIONS
Mar  9 08:19:23.693: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Mar  9 08:19:23.693: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/PATCH
Mar  9 08:19:23.698: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Mar  9 08:19:23.698: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/POST
Mar  9 08:19:23.702: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Mar  9 08:19:23.702: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/PUT
Mar  9 08:19:23.707: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Mar  9 08:19:23.707: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/DELETE
Mar  9 08:19:23.713: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Mar  9 08:19:23.713: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/GET
Mar  9 08:19:23.719: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Mar  9 08:19:23.719: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/HEAD
Mar  9 08:19:23.725: INFO: http.Client request:HEAD | StatusCode:200
Mar  9 08:19:23.725: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/OPTIONS
Mar  9 08:19:23.731: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Mar  9 08:19:23.731: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/PATCH
Mar  9 08:19:23.737: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Mar  9 08:19:23.737: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/POST
Mar  9 08:19:23.744: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Mar  9 08:19:23.744: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/PUT
Mar  9 08:19:23.750: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Mar  9 08:19:23.751: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-8958" for this suite. 03/09/23 08:19:23.758
------------------------------
â€¢ [2.153 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
    test/e2e/network/proxy.go:286

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:19:21.614
    Mar  9 08:19:21.614: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename proxy 03/09/23 08:19:21.615
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:21.628
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:21.633
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
      test/e2e/network/proxy.go:286
    Mar  9 08:19:21.637: INFO: Creating pod...
    Mar  9 08:19:21.646: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-8958" to be "running"
    Mar  9 08:19:21.650: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 3.789369ms
    Mar  9 08:19:23.655: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.009378443s
    Mar  9 08:19:23.655: INFO: Pod "agnhost" satisfied condition "running"
    Mar  9 08:19:23.655: INFO: Creating service...
    Mar  9 08:19:23.672: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/DELETE
    Mar  9 08:19:23.679: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Mar  9 08:19:23.679: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/GET
    Mar  9 08:19:23.684: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Mar  9 08:19:23.684: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/HEAD
    Mar  9 08:19:23.688: INFO: http.Client request:HEAD | StatusCode:200
    Mar  9 08:19:23.688: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/OPTIONS
    Mar  9 08:19:23.693: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Mar  9 08:19:23.693: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/PATCH
    Mar  9 08:19:23.698: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Mar  9 08:19:23.698: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/POST
    Mar  9 08:19:23.702: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Mar  9 08:19:23.702: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/pods/agnhost/proxy/some/path/with/PUT
    Mar  9 08:19:23.707: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Mar  9 08:19:23.707: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/DELETE
    Mar  9 08:19:23.713: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Mar  9 08:19:23.713: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/GET
    Mar  9 08:19:23.719: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Mar  9 08:19:23.719: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/HEAD
    Mar  9 08:19:23.725: INFO: http.Client request:HEAD | StatusCode:200
    Mar  9 08:19:23.725: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/OPTIONS
    Mar  9 08:19:23.731: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Mar  9 08:19:23.731: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/PATCH
    Mar  9 08:19:23.737: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Mar  9 08:19:23.737: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/POST
    Mar  9 08:19:23.744: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Mar  9 08:19:23.744: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8958/services/test-service/proxy/some/path/with/PUT
    Mar  9 08:19:23.750: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:19:23.751: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-8958" for this suite. 03/09/23 08:19:23.758
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:19:23.769
Mar  9 08:19:23.769: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename cronjob 03/09/23 08:19:23.772
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:23.788
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:23.793
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
STEP: Creating a ForbidConcurrent cronjob 03/09/23 08:19:23.799
STEP: Ensuring a job is scheduled 03/09/23 08:19:23.808
STEP: Ensuring exactly one is scheduled 03/09/23 08:20:01.814
STEP: Ensuring exactly one running job exists by listing jobs explicitly 03/09/23 08:20:01.817
STEP: Ensuring no more jobs are scheduled 03/09/23 08:20:01.821
STEP: Removing cronjob 03/09/23 08:25:01.831
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:01.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-8474" for this suite. 03/09/23 08:25:01.846
------------------------------
â€¢ [SLOW TEST] [338.085 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:19:23.769
    Mar  9 08:19:23.769: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename cronjob 03/09/23 08:19:23.772
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:19:23.788
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:19:23.793
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
      test/e2e/apps/cronjob.go:124
    STEP: Creating a ForbidConcurrent cronjob 03/09/23 08:19:23.799
    STEP: Ensuring a job is scheduled 03/09/23 08:19:23.808
    STEP: Ensuring exactly one is scheduled 03/09/23 08:20:01.814
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 03/09/23 08:20:01.817
    STEP: Ensuring no more jobs are scheduled 03/09/23 08:20:01.821
    STEP: Removing cronjob 03/09/23 08:25:01.831
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:01.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-8474" for this suite. 03/09/23 08:25:01.846
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:01.863
Mar  9 08:25:01.863: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:25:01.864
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:01.888
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:01.893
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:25:01.916
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:25:03.365
STEP: Deploying the webhook pod 03/09/23 08:25:03.376
STEP: Wait for the deployment to be ready 03/09/23 08:25:03.39
Mar  9 08:25:03.400: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:25:05.413
STEP: Verifying the service has paired with the endpoint 03/09/23 08:25:05.437
Mar  9 08:25:06.437: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
STEP: fetching the /apis discovery document 03/09/23 08:25:06.442
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 03/09/23 08:25:06.444
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 03/09/23 08:25:06.444
STEP: fetching the /apis/admissionregistration.k8s.io discovery document 03/09/23 08:25:06.444
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 03/09/23 08:25:06.447
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 03/09/23 08:25:06.447
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 03/09/23 08:25:06.449
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:06.449: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-914" for this suite. 03/09/23 08:25:06.507
STEP: Destroying namespace "webhook-914-markers" for this suite. 03/09/23 08:25:06.514
------------------------------
â€¢ [4.662 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:01.863
    Mar  9 08:25:01.863: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:25:01.864
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:01.888
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:01.893
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:25:01.916
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:25:03.365
    STEP: Deploying the webhook pod 03/09/23 08:25:03.376
    STEP: Wait for the deployment to be ready 03/09/23 08:25:03.39
    Mar  9 08:25:03.400: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:25:05.413
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:25:05.437
    Mar  9 08:25:06.437: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should include webhook resources in discovery documents [Conformance]
      test/e2e/apimachinery/webhook.go:117
    STEP: fetching the /apis discovery document 03/09/23 08:25:06.442
    STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 03/09/23 08:25:06.444
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 03/09/23 08:25:06.444
    STEP: fetching the /apis/admissionregistration.k8s.io discovery document 03/09/23 08:25:06.444
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 03/09/23 08:25:06.447
    STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 03/09/23 08:25:06.447
    STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 03/09/23 08:25:06.449
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:06.449: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-914" for this suite. 03/09/23 08:25:06.507
    STEP: Destroying namespace "webhook-914-markers" for this suite. 03/09/23 08:25:06.514
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:06.53
Mar  9 08:25:06.530: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename containers 03/09/23 08:25:06.531
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:06.548
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:06.553
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
STEP: Creating a pod to test override command 03/09/23 08:25:06.558
Mar  9 08:25:06.568: INFO: Waiting up to 5m0s for pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa" in namespace "containers-1704" to be "Succeeded or Failed"
Mar  9 08:25:06.573: INFO: Pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa": Phase="Pending", Reason="", readiness=false. Elapsed: 4.816662ms
Mar  9 08:25:08.578: INFO: Pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010135216s
Mar  9 08:25:10.578: INFO: Pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009530242s
STEP: Saw pod success 03/09/23 08:25:10.578
Mar  9 08:25:10.578: INFO: Pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa" satisfied condition "Succeeded or Failed"
Mar  9 08:25:10.582: INFO: Trying to get logs from node k8s-worker1 pod client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:25:10.616
Mar  9 08:25:10.629: INFO: Waiting for pod client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa to disappear
Mar  9 08:25:10.633: INFO: Pod client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:10.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-1704" for this suite. 03/09/23 08:25:10.64
------------------------------
â€¢ [4.118 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:06.53
    Mar  9 08:25:06.530: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename containers 03/09/23 08:25:06.531
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:06.548
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:06.553
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:73
    STEP: Creating a pod to test override command 03/09/23 08:25:06.558
    Mar  9 08:25:06.568: INFO: Waiting up to 5m0s for pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa" in namespace "containers-1704" to be "Succeeded or Failed"
    Mar  9 08:25:06.573: INFO: Pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa": Phase="Pending", Reason="", readiness=false. Elapsed: 4.816662ms
    Mar  9 08:25:08.578: INFO: Pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010135216s
    Mar  9 08:25:10.578: INFO: Pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009530242s
    STEP: Saw pod success 03/09/23 08:25:10.578
    Mar  9 08:25:10.578: INFO: Pod "client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa" satisfied condition "Succeeded or Failed"
    Mar  9 08:25:10.582: INFO: Trying to get logs from node k8s-worker1 pod client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:25:10.616
    Mar  9 08:25:10.629: INFO: Waiting for pod client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa to disappear
    Mar  9 08:25:10.633: INFO: Pod client-containers-f7058fef-acc6-42ad-be32-e6c5d63a32aa no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:10.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-1704" for this suite. 03/09/23 08:25:10.64
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] Services
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:10.649
Mar  9 08:25:10.649: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:25:10.651
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:10.669
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:10.673
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:10.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-9133" for this suite. 03/09/23 08:25:10.688
------------------------------
â€¢ [0.049 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:10.649
    Mar  9 08:25:10.649: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:25:10.651
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:10.669
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:10.673
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should provide secure master service  [Conformance]
      test/e2e/network/service.go:777
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:10.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-9133" for this suite. 03/09/23 08:25:10.688
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:10.7
Mar  9 08:25:10.700: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:25:10.702
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:10.717
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:10.722
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:25:10.727
Mar  9 08:25:10.739: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281" in namespace "projected-5289" to be "Succeeded or Failed"
Mar  9 08:25:10.744: INFO: Pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281": Phase="Pending", Reason="", readiness=false. Elapsed: 4.435681ms
Mar  9 08:25:12.753: INFO: Pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013872693s
Mar  9 08:25:14.748: INFO: Pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008456962s
STEP: Saw pod success 03/09/23 08:25:14.748
Mar  9 08:25:14.748: INFO: Pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281" satisfied condition "Succeeded or Failed"
Mar  9 08:25:14.752: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281 container client-container: <nil>
STEP: delete the pod 03/09/23 08:25:14.759
Mar  9 08:25:14.776: INFO: Waiting for pod downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281 to disappear
Mar  9 08:25:14.780: INFO: Pod downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:14.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5289" for this suite. 03/09/23 08:25:14.786
------------------------------
â€¢ [4.093 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:10.7
    Mar  9 08:25:10.700: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:25:10.702
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:10.717
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:10.722
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:207
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:25:10.727
    Mar  9 08:25:10.739: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281" in namespace "projected-5289" to be "Succeeded or Failed"
    Mar  9 08:25:10.744: INFO: Pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281": Phase="Pending", Reason="", readiness=false. Elapsed: 4.435681ms
    Mar  9 08:25:12.753: INFO: Pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013872693s
    Mar  9 08:25:14.748: INFO: Pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008456962s
    STEP: Saw pod success 03/09/23 08:25:14.748
    Mar  9 08:25:14.748: INFO: Pod "downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281" satisfied condition "Succeeded or Failed"
    Mar  9 08:25:14.752: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:25:14.759
    Mar  9 08:25:14.776: INFO: Waiting for pod downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281 to disappear
    Mar  9 08:25:14.780: INFO: Pod downwardapi-volume-cc4d3578-9030-47b9-8346-8b8bfeb6d281 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:14.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5289" for this suite. 03/09/23 08:25:14.786
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:14.794
Mar  9 08:25:14.794: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-pred 03/09/23 08:25:14.796
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:14.818
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:14.822
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Mar  9 08:25:14.827: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Mar  9 08:25:14.841: INFO: Waiting for terminating namespaces to be deleted...
Mar  9 08:25:14.849: INFO: 
Logging pods the apiserver thinks is on node k8s-worker1 before test
Mar  9 08:25:14.861: INFO: calico-kube-controllers-79568db7f8-dgf8v from kube-system started at 2023-03-08 10:49:58 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.861: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Mar  9 08:25:14.861: INFO: calico-node-kzddq from kube-system started at 2023-03-08 01:45:28 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.861: INFO: 	Container calico-node ready: true, restart count 0
Mar  9 08:25:14.861: INFO: kube-proxy-2blnw from kube-system started at 2023-03-08 01:45:23 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.861: INFO: 	Container kube-proxy ready: true, restart count 0
Mar  9 08:25:14.861: INFO: sonobuoy from sonobuoy started at 2023-03-09 07:56:46 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.861: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Mar  9 08:25:14.861: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 from sonobuoy started at 2023-03-09 07:56:47 +0000 UTC (2 container statuses recorded)
Mar  9 08:25:14.861: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:25:14.861: INFO: 	Container systemd-logs ready: true, restart count 0
Mar  9 08:25:14.861: INFO: 
Logging pods the apiserver thinks is on node k8s-worker2 before test
Mar  9 08:25:14.873: INFO: admin-front from default started at 2023-03-08 19:24:01 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.873: INFO: 	Container admin-front ready: true, restart count 0
Mar  9 08:25:14.873: INFO: bizmicro-api-webapp from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.873: INFO: 	Container bizmicro-api-webapp ready: true, restart count 0
Mar  9 08:25:14.873: INFO: bizmicro-daemon-webapp from default started at 2023-03-08 19:23:28 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.873: INFO: 	Container bizmicro-daemon-webapp ready: true, restart count 0
Mar  9 08:25:14.873: INFO: bizmicro-sockjs-webapp from default started at 2023-03-08 19:23:36 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.874: INFO: 	Container bizmicro-sockjs-webapp ready: true, restart count 0
Mar  9 08:25:14.874: INFO: user-front from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.874: INFO: 	Container user-front ready: true, restart count 0
Mar  9 08:25:14.874: INFO: calico-node-zdhvf from kube-system started at 2023-03-08 01:45:27 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.874: INFO: 	Container calico-node ready: true, restart count 3
Mar  9 08:25:14.874: INFO: kube-proxy-dn7ts from kube-system started at 2023-03-08 01:44:47 +0000 UTC (1 container statuses recorded)
Mar  9 08:25:14.874: INFO: 	Container kube-proxy ready: true, restart count 3
Mar  9 08:25:14.874: INFO: sonobuoy-e2e-job-2a17a947d7c74874 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
Mar  9 08:25:14.874: INFO: 	Container e2e ready: true, restart count 0
Mar  9 08:25:14.874: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:25:14.874: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
Mar  9 08:25:14.874: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:25:14.874: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
STEP: Trying to launch a pod without a label to get a node which can launch it. 03/09/23 08:25:14.874
Mar  9 08:25:14.885: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-274" to be "running"
Mar  9 08:25:14.889: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 3.738625ms
Mar  9 08:25:16.895: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.009216658s
Mar  9 08:25:16.895: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 03/09/23 08:25:16.899
STEP: Trying to apply a random label on the found node. 03/09/23 08:25:16.913
STEP: verifying the node has the label kubernetes.io/e2e-8bf81f3a-a0e7-401f-9498-9975744bfdb6 42 03/09/23 08:25:16.929
STEP: Trying to relaunch the pod, now with labels. 03/09/23 08:25:16.934
Mar  9 08:25:16.940: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-274" to be "not pending"
Mar  9 08:25:16.944: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 3.768245ms
Mar  9 08:25:18.949: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.008267987s
Mar  9 08:25:18.949: INFO: Pod "with-labels" satisfied condition "not pending"
STEP: removing the label kubernetes.io/e2e-8bf81f3a-a0e7-401f-9498-9975744bfdb6 off the node k8s-worker1 03/09/23 08:25:18.952
STEP: verifying the node doesn't have the label kubernetes.io/e2e-8bf81f3a-a0e7-401f-9498-9975744bfdb6 03/09/23 08:25:18.97
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:18.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-274" for this suite. 03/09/23 08:25:18.981
------------------------------
â€¢ [4.193 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:14.794
    Mar  9 08:25:14.794: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-pred 03/09/23 08:25:14.796
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:14.818
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:14.822
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Mar  9 08:25:14.827: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Mar  9 08:25:14.841: INFO: Waiting for terminating namespaces to be deleted...
    Mar  9 08:25:14.849: INFO: 
    Logging pods the apiserver thinks is on node k8s-worker1 before test
    Mar  9 08:25:14.861: INFO: calico-kube-controllers-79568db7f8-dgf8v from kube-system started at 2023-03-08 10:49:58 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.861: INFO: 	Container calico-kube-controllers ready: true, restart count 0
    Mar  9 08:25:14.861: INFO: calico-node-kzddq from kube-system started at 2023-03-08 01:45:28 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.861: INFO: 	Container calico-node ready: true, restart count 0
    Mar  9 08:25:14.861: INFO: kube-proxy-2blnw from kube-system started at 2023-03-08 01:45:23 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.861: INFO: 	Container kube-proxy ready: true, restart count 0
    Mar  9 08:25:14.861: INFO: sonobuoy from sonobuoy started at 2023-03-09 07:56:46 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.861: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Mar  9 08:25:14.861: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 from sonobuoy started at 2023-03-09 07:56:47 +0000 UTC (2 container statuses recorded)
    Mar  9 08:25:14.861: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:25:14.861: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar  9 08:25:14.861: INFO: 
    Logging pods the apiserver thinks is on node k8s-worker2 before test
    Mar  9 08:25:14.873: INFO: admin-front from default started at 2023-03-08 19:24:01 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.873: INFO: 	Container admin-front ready: true, restart count 0
    Mar  9 08:25:14.873: INFO: bizmicro-api-webapp from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.873: INFO: 	Container bizmicro-api-webapp ready: true, restart count 0
    Mar  9 08:25:14.873: INFO: bizmicro-daemon-webapp from default started at 2023-03-08 19:23:28 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.873: INFO: 	Container bizmicro-daemon-webapp ready: true, restart count 0
    Mar  9 08:25:14.873: INFO: bizmicro-sockjs-webapp from default started at 2023-03-08 19:23:36 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.874: INFO: 	Container bizmicro-sockjs-webapp ready: true, restart count 0
    Mar  9 08:25:14.874: INFO: user-front from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.874: INFO: 	Container user-front ready: true, restart count 0
    Mar  9 08:25:14.874: INFO: calico-node-zdhvf from kube-system started at 2023-03-08 01:45:27 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.874: INFO: 	Container calico-node ready: true, restart count 3
    Mar  9 08:25:14.874: INFO: kube-proxy-dn7ts from kube-system started at 2023-03-08 01:44:47 +0000 UTC (1 container statuses recorded)
    Mar  9 08:25:14.874: INFO: 	Container kube-proxy ready: true, restart count 3
    Mar  9 08:25:14.874: INFO: sonobuoy-e2e-job-2a17a947d7c74874 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
    Mar  9 08:25:14.874: INFO: 	Container e2e ready: true, restart count 0
    Mar  9 08:25:14.874: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:25:14.874: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
    Mar  9 08:25:14.874: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:25:14.874: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if matching  [Conformance]
      test/e2e/scheduling/predicates.go:466
    STEP: Trying to launch a pod without a label to get a node which can launch it. 03/09/23 08:25:14.874
    Mar  9 08:25:14.885: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-274" to be "running"
    Mar  9 08:25:14.889: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 3.738625ms
    Mar  9 08:25:16.895: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.009216658s
    Mar  9 08:25:16.895: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 03/09/23 08:25:16.899
    STEP: Trying to apply a random label on the found node. 03/09/23 08:25:16.913
    STEP: verifying the node has the label kubernetes.io/e2e-8bf81f3a-a0e7-401f-9498-9975744bfdb6 42 03/09/23 08:25:16.929
    STEP: Trying to relaunch the pod, now with labels. 03/09/23 08:25:16.934
    Mar  9 08:25:16.940: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-274" to be "not pending"
    Mar  9 08:25:16.944: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 3.768245ms
    Mar  9 08:25:18.949: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.008267987s
    Mar  9 08:25:18.949: INFO: Pod "with-labels" satisfied condition "not pending"
    STEP: removing the label kubernetes.io/e2e-8bf81f3a-a0e7-401f-9498-9975744bfdb6 off the node k8s-worker1 03/09/23 08:25:18.952
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-8bf81f3a-a0e7-401f-9498-9975744bfdb6 03/09/23 08:25:18.97
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:18.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-274" for this suite. 03/09/23 08:25:18.981
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:18.99
Mar  9 08:25:18.990: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:25:18.993
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:19.007
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:19.011
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
STEP: Creating a pod to test emptydir 0644 on tmpfs 03/09/23 08:25:19.016
Mar  9 08:25:19.026: INFO: Waiting up to 5m0s for pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a" in namespace "emptydir-1451" to be "Succeeded or Failed"
Mar  9 08:25:19.030: INFO: Pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.166825ms
Mar  9 08:25:21.035: INFO: Pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009069338s
Mar  9 08:25:23.037: INFO: Pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011180196s
STEP: Saw pod success 03/09/23 08:25:23.037
Mar  9 08:25:23.037: INFO: Pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a" satisfied condition "Succeeded or Failed"
Mar  9 08:25:23.041: INFO: Trying to get logs from node k8s-worker2 pod pod-5095e864-9f5f-464b-b1d8-a030115a121a container test-container: <nil>
STEP: delete the pod 03/09/23 08:25:23.076
Mar  9 08:25:23.087: INFO: Waiting for pod pod-5095e864-9f5f-464b-b1d8-a030115a121a to disappear
Mar  9 08:25:23.091: INFO: Pod pod-5095e864-9f5f-464b-b1d8-a030115a121a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:23.091: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-1451" for this suite. 03/09/23 08:25:23.097
------------------------------
â€¢ [4.115 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:18.99
    Mar  9 08:25:18.990: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:25:18.993
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:19.007
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:19.011
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:127
    STEP: Creating a pod to test emptydir 0644 on tmpfs 03/09/23 08:25:19.016
    Mar  9 08:25:19.026: INFO: Waiting up to 5m0s for pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a" in namespace "emptydir-1451" to be "Succeeded or Failed"
    Mar  9 08:25:19.030: INFO: Pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.166825ms
    Mar  9 08:25:21.035: INFO: Pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009069338s
    Mar  9 08:25:23.037: INFO: Pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011180196s
    STEP: Saw pod success 03/09/23 08:25:23.037
    Mar  9 08:25:23.037: INFO: Pod "pod-5095e864-9f5f-464b-b1d8-a030115a121a" satisfied condition "Succeeded or Failed"
    Mar  9 08:25:23.041: INFO: Trying to get logs from node k8s-worker2 pod pod-5095e864-9f5f-464b-b1d8-a030115a121a container test-container: <nil>
    STEP: delete the pod 03/09/23 08:25:23.076
    Mar  9 08:25:23.087: INFO: Waiting for pod pod-5095e864-9f5f-464b-b1d8-a030115a121a to disappear
    Mar  9 08:25:23.091: INFO: Pod pod-5095e864-9f5f-464b-b1d8-a030115a121a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:23.091: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-1451" for this suite. 03/09/23 08:25:23.097
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:23.11
Mar  9 08:25:23.110: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:25:23.111
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:23.127
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:23.131
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
STEP: Creating configMap with name cm-test-opt-del-73b77d5d-a91c-434a-9414-adf4bc7ed0ef 03/09/23 08:25:23.142
STEP: Creating configMap with name cm-test-opt-upd-72ce849e-c6ce-4b91-9a94-6f281aaeb61a 03/09/23 08:25:23.148
STEP: Creating the pod 03/09/23 08:25:23.154
Mar  9 08:25:23.166: INFO: Waiting up to 5m0s for pod "pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485" in namespace "configmap-2557" to be "running and ready"
Mar  9 08:25:23.173: INFO: Pod "pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485": Phase="Pending", Reason="", readiness=false. Elapsed: 6.788031ms
Mar  9 08:25:23.173: INFO: The phase of Pod pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:25:25.177: INFO: Pod "pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485": Phase="Running", Reason="", readiness=true. Elapsed: 2.011415875s
Mar  9 08:25:25.177: INFO: The phase of Pod pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485 is Running (Ready = true)
Mar  9 08:25:25.177: INFO: Pod "pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-73b77d5d-a91c-434a-9414-adf4bc7ed0ef 03/09/23 08:25:25.203
STEP: Updating configmap cm-test-opt-upd-72ce849e-c6ce-4b91-9a94-6f281aaeb61a 03/09/23 08:25:25.212
STEP: Creating configMap with name cm-test-opt-create-761e3411-eb53-47bc-a45c-a9c9a71954cf 03/09/23 08:25:25.221
STEP: waiting to observe update in volume 03/09/23 08:25:25.226
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:27.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2557" for this suite. 03/09/23 08:25:27.262
------------------------------
â€¢ [4.159 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:23.11
    Mar  9 08:25:23.110: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:25:23.111
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:23.127
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:23.131
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:240
    STEP: Creating configMap with name cm-test-opt-del-73b77d5d-a91c-434a-9414-adf4bc7ed0ef 03/09/23 08:25:23.142
    STEP: Creating configMap with name cm-test-opt-upd-72ce849e-c6ce-4b91-9a94-6f281aaeb61a 03/09/23 08:25:23.148
    STEP: Creating the pod 03/09/23 08:25:23.154
    Mar  9 08:25:23.166: INFO: Waiting up to 5m0s for pod "pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485" in namespace "configmap-2557" to be "running and ready"
    Mar  9 08:25:23.173: INFO: Pod "pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485": Phase="Pending", Reason="", readiness=false. Elapsed: 6.788031ms
    Mar  9 08:25:23.173: INFO: The phase of Pod pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:25:25.177: INFO: Pod "pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485": Phase="Running", Reason="", readiness=true. Elapsed: 2.011415875s
    Mar  9 08:25:25.177: INFO: The phase of Pod pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485 is Running (Ready = true)
    Mar  9 08:25:25.177: INFO: Pod "pod-configmaps-7f933e97-f216-4eb0-8455-fb0a8a8b4485" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-73b77d5d-a91c-434a-9414-adf4bc7ed0ef 03/09/23 08:25:25.203
    STEP: Updating configmap cm-test-opt-upd-72ce849e-c6ce-4b91-9a94-6f281aaeb61a 03/09/23 08:25:25.212
    STEP: Creating configMap with name cm-test-opt-create-761e3411-eb53-47bc-a45c-a9c9a71954cf 03/09/23 08:25:25.221
    STEP: waiting to observe update in volume 03/09/23 08:25:25.226
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:27.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2557" for this suite. 03/09/23 08:25:27.262
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:27.271
Mar  9 08:25:27.271: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-runtime 03/09/23 08:25:27.273
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:27.288
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:27.293
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
STEP: create the container 03/09/23 08:25:27.298
STEP: wait for the container to reach Succeeded 03/09/23 08:25:27.308
STEP: get the container status 03/09/23 08:25:32.337
STEP: the container should be terminated 03/09/23 08:25:32.341
STEP: the termination message should be set 03/09/23 08:25:32.341
Mar  9 08:25:32.341: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container 03/09/23 08:25:32.341
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:32.357: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-4789" for this suite. 03/09/23 08:25:32.363
------------------------------
â€¢ [SLOW TEST] [5.100 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:27.271
    Mar  9 08:25:27.271: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-runtime 03/09/23 08:25:27.273
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:27.288
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:27.293
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248
    STEP: create the container 03/09/23 08:25:27.298
    STEP: wait for the container to reach Succeeded 03/09/23 08:25:27.308
    STEP: get the container status 03/09/23 08:25:32.337
    STEP: the container should be terminated 03/09/23 08:25:32.341
    STEP: the termination message should be set 03/09/23 08:25:32.341
    Mar  9 08:25:32.341: INFO: Expected: &{OK} to match Container's Termination Message: OK --
    STEP: delete the container 03/09/23 08:25:32.341
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:32.357: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-4789" for this suite. 03/09/23 08:25:32.363
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] PreStop
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
[BeforeEach] [sig-node] PreStop
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:32.372
Mar  9 08:25:32.372: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename prestop 03/09/23 08:25:32.374
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:32.404
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:32.409
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
STEP: Creating server pod server in namespace prestop-2666 03/09/23 08:25:32.414
STEP: Waiting for pods to come up. 03/09/23 08:25:32.427
Mar  9 08:25:32.427: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-2666" to be "running"
Mar  9 08:25:32.432: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 5.050948ms
Mar  9 08:25:34.438: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011343765s
Mar  9 08:25:36.438: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 4.010509229s
Mar  9 08:25:36.438: INFO: Pod "server" satisfied condition "running"
STEP: Creating tester pod tester in namespace prestop-2666 03/09/23 08:25:36.441
Mar  9 08:25:36.451: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-2666" to be "running"
Mar  9 08:25:36.456: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 4.317991ms
Mar  9 08:25:38.461: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00949758s
Mar  9 08:25:40.460: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 4.009242786s
Mar  9 08:25:40.460: INFO: Pod "tester" satisfied condition "running"
STEP: Deleting pre-stop pod 03/09/23 08:25:40.461
Mar  9 08:25:45.478: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod 03/09/23 08:25:45.478
[AfterEach] [sig-node] PreStop
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:45.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PreStop
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PreStop
  tear down framework | framework.go:193
STEP: Destroying namespace "prestop-2666" for this suite. 03/09/23 08:25:45.499
------------------------------
â€¢ [SLOW TEST] [13.134 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PreStop
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:32.372
    Mar  9 08:25:32.372: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename prestop 03/09/23 08:25:32.374
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:32.404
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:32.409
    [BeforeEach] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] PreStop
      test/e2e/node/pre_stop.go:159
    [It] should call prestop when killing a pod  [Conformance]
      test/e2e/node/pre_stop.go:168
    STEP: Creating server pod server in namespace prestop-2666 03/09/23 08:25:32.414
    STEP: Waiting for pods to come up. 03/09/23 08:25:32.427
    Mar  9 08:25:32.427: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-2666" to be "running"
    Mar  9 08:25:32.432: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 5.050948ms
    Mar  9 08:25:34.438: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011343765s
    Mar  9 08:25:36.438: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 4.010509229s
    Mar  9 08:25:36.438: INFO: Pod "server" satisfied condition "running"
    STEP: Creating tester pod tester in namespace prestop-2666 03/09/23 08:25:36.441
    Mar  9 08:25:36.451: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-2666" to be "running"
    Mar  9 08:25:36.456: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 4.317991ms
    Mar  9 08:25:38.461: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00949758s
    Mar  9 08:25:40.460: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 4.009242786s
    Mar  9 08:25:40.460: INFO: Pod "tester" satisfied condition "running"
    STEP: Deleting pre-stop pod 03/09/23 08:25:40.461
    Mar  9 08:25:45.478: INFO: Saw: {
    	"Hostname": "server",
    	"Sent": null,
    	"Received": {
    		"prestop": 1
    	},
    	"Errors": null,
    	"Log": [
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
    	],
    	"StillContactingPeers": true
    }
    STEP: Deleting the server pod 03/09/23 08:25:45.478
    [AfterEach] [sig-node] PreStop
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:45.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PreStop
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PreStop
      tear down framework | framework.go:193
    STEP: Destroying namespace "prestop-2666" for this suite. 03/09/23 08:25:45.499
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:45.507
Mar  9 08:25:45.507: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:25:45.509
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:45.527
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:45.532
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:25:45.554
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:25:46.92
STEP: Deploying the webhook pod 03/09/23 08:25:46.931
STEP: Wait for the deployment to be ready 03/09/23 08:25:46.945
Mar  9 08:25:46.955: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:25:48.969
STEP: Verifying the service has paired with the endpoint 03/09/23 08:25:48.986
Mar  9 08:25:49.987: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
Mar  9 08:25:49.991: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Registering the custom resource webhook via the AdmissionRegistration API 03/09/23 08:25:50.504
STEP: Creating a custom resource that should be denied by the webhook 03/09/23 08:25:50.534
STEP: Creating a custom resource whose deletion would be denied by the webhook 03/09/23 08:25:52.624
STEP: Updating the custom resource with disallowed data should be denied 03/09/23 08:25:52.633
STEP: Deleting the custom resource should be denied 03/09/23 08:25:52.647
STEP: Remove the offending key and value from the custom resource data 03/09/23 08:25:52.661
STEP: Deleting the updated custom resource should be successful 03/09/23 08:25:52.676
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:53.207: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7413" for this suite. 03/09/23 08:25:53.248
STEP: Destroying namespace "webhook-7413-markers" for this suite. 03/09/23 08:25:53.265
------------------------------
â€¢ [SLOW TEST] [7.766 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:45.507
    Mar  9 08:25:45.507: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:25:45.509
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:45.527
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:45.532
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:25:45.554
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:25:46.92
    STEP: Deploying the webhook pod 03/09/23 08:25:46.931
    STEP: Wait for the deployment to be ready 03/09/23 08:25:46.945
    Mar  9 08:25:46.955: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:25:48.969
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:25:48.986
    Mar  9 08:25:49.987: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny custom resource creation, update and deletion [Conformance]
      test/e2e/apimachinery/webhook.go:221
    Mar  9 08:25:49.991: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Registering the custom resource webhook via the AdmissionRegistration API 03/09/23 08:25:50.504
    STEP: Creating a custom resource that should be denied by the webhook 03/09/23 08:25:50.534
    STEP: Creating a custom resource whose deletion would be denied by the webhook 03/09/23 08:25:52.624
    STEP: Updating the custom resource with disallowed data should be denied 03/09/23 08:25:52.633
    STEP: Deleting the custom resource should be denied 03/09/23 08:25:52.647
    STEP: Remove the offending key and value from the custom resource data 03/09/23 08:25:52.661
    STEP: Deleting the updated custom resource should be successful 03/09/23 08:25:52.676
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:53.207: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7413" for this suite. 03/09/23 08:25:53.248
    STEP: Destroying namespace "webhook-7413-markers" for this suite. 03/09/23 08:25:53.265
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:53.274
Mar  9 08:25:53.274: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename init-container 03/09/23 08:25:53.276
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:53.289
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:53.294
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
STEP: creating the pod 03/09/23 08:25:53.299
Mar  9 08:25:53.299: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:57.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-6132" for this suite. 03/09/23 08:25:57.582
------------------------------
â€¢ [4.315 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:53.274
    Mar  9 08:25:53.274: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename init-container 03/09/23 08:25:53.276
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:53.289
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:53.294
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:255
    STEP: creating the pod 03/09/23 08:25:53.299
    Mar  9 08:25:53.299: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:57.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-6132" for this suite. 03/09/23 08:25:57.582
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] ReplicationController
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:57.59
Mar  9 08:25:57.590: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replication-controller 03/09/23 08:25:57.595
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:57.611
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:57.616
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
STEP: Creating ReplicationController "e2e-rc-t27dt" 03/09/23 08:25:57.621
Mar  9 08:25:57.628: INFO: Get Replication Controller "e2e-rc-t27dt" to confirm replicas
Mar  9 08:25:58.632: INFO: Get Replication Controller "e2e-rc-t27dt" to confirm replicas
Mar  9 08:25:58.636: INFO: Found 1 replicas for "e2e-rc-t27dt" replication controller
STEP: Getting scale subresource for ReplicationController "e2e-rc-t27dt" 03/09/23 08:25:58.636
STEP: Updating a scale subresource 03/09/23 08:25:58.64
STEP: Verifying replicas where modified for replication controller "e2e-rc-t27dt" 03/09/23 08:25:58.647
Mar  9 08:25:58.647: INFO: Get Replication Controller "e2e-rc-t27dt" to confirm replicas
Mar  9 08:25:59.651: INFO: Get Replication Controller "e2e-rc-t27dt" to confirm replicas
Mar  9 08:25:59.655: INFO: Found 2 replicas for "e2e-rc-t27dt" replication controller
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar  9 08:25:59.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-9984" for this suite. 03/09/23 08:25:59.661
------------------------------
â€¢ [2.086 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:57.59
    Mar  9 08:25:57.590: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replication-controller 03/09/23 08:25:57.595
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:57.611
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:57.616
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should get and update a ReplicationController scale [Conformance]
      test/e2e/apps/rc.go:402
    STEP: Creating ReplicationController "e2e-rc-t27dt" 03/09/23 08:25:57.621
    Mar  9 08:25:57.628: INFO: Get Replication Controller "e2e-rc-t27dt" to confirm replicas
    Mar  9 08:25:58.632: INFO: Get Replication Controller "e2e-rc-t27dt" to confirm replicas
    Mar  9 08:25:58.636: INFO: Found 1 replicas for "e2e-rc-t27dt" replication controller
    STEP: Getting scale subresource for ReplicationController "e2e-rc-t27dt" 03/09/23 08:25:58.636
    STEP: Updating a scale subresource 03/09/23 08:25:58.64
    STEP: Verifying replicas where modified for replication controller "e2e-rc-t27dt" 03/09/23 08:25:58.647
    Mar  9 08:25:58.647: INFO: Get Replication Controller "e2e-rc-t27dt" to confirm replicas
    Mar  9 08:25:59.651: INFO: Get Replication Controller "e2e-rc-t27dt" to confirm replicas
    Mar  9 08:25:59.655: INFO: Found 2 replicas for "e2e-rc-t27dt" replication controller
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:25:59.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-9984" for this suite. 03/09/23 08:25:59.661
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:25:59.678
Mar  9 08:25:59.678: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:25:59.679
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:59.7
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:59.706
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 03/09/23 08:25:59.711
Mar  9 08:25:59.712: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:26:01.720: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:26:09.611: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9273" for this suite. 03/09/23 08:26:09.627
------------------------------
â€¢ [SLOW TEST] [9.957 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:25:59.678
    Mar  9 08:25:59.678: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:25:59.679
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:25:59.7
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:25:59.706
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group and version but different kinds [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:357
    STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 03/09/23 08:25:59.711
    Mar  9 08:25:59.712: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:26:01.720: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:26:09.611: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9273" for this suite. 03/09/23 08:26:09.627
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:26:09.637
Mar  9 08:26:09.638: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:26:09.639
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:09.657
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:09.661
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:26:09.665
Mar  9 08:26:09.676: INFO: Waiting up to 5m0s for pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e" in namespace "projected-2379" to be "Succeeded or Failed"
Mar  9 08:26:09.680: INFO: Pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.001905ms
Mar  9 08:26:11.685: INFO: Pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008872644s
Mar  9 08:26:13.686: INFO: Pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009533889s
STEP: Saw pod success 03/09/23 08:26:13.686
Mar  9 08:26:13.686: INFO: Pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e" satisfied condition "Succeeded or Failed"
Mar  9 08:26:13.691: INFO: Trying to get logs from node k8s-worker2 pod downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e container client-container: <nil>
STEP: delete the pod 03/09/23 08:26:13.698
Mar  9 08:26:13.713: INFO: Waiting for pod downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e to disappear
Mar  9 08:26:13.716: INFO: Pod downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:26:13.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2379" for this suite. 03/09/23 08:26:13.722
------------------------------
â€¢ [4.092 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:26:09.637
    Mar  9 08:26:09.638: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:26:09.639
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:09.657
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:09.661
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:84
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:26:09.665
    Mar  9 08:26:09.676: INFO: Waiting up to 5m0s for pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e" in namespace "projected-2379" to be "Succeeded or Failed"
    Mar  9 08:26:09.680: INFO: Pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.001905ms
    Mar  9 08:26:11.685: INFO: Pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008872644s
    Mar  9 08:26:13.686: INFO: Pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009533889s
    STEP: Saw pod success 03/09/23 08:26:13.686
    Mar  9 08:26:13.686: INFO: Pod "downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e" satisfied condition "Succeeded or Failed"
    Mar  9 08:26:13.691: INFO: Trying to get logs from node k8s-worker2 pod downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e container client-container: <nil>
    STEP: delete the pod 03/09/23 08:26:13.698
    Mar  9 08:26:13.713: INFO: Waiting for pod downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e to disappear
    Mar  9 08:26:13.716: INFO: Pod downwardapi-volume-855b82ec-17a2-4bf0-b05f-72a712cf1f9e no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:26:13.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2379" for this suite. 03/09/23 08:26:13.722
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:26:13.732
Mar  9 08:26:13.733: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:26:13.734
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:13.749
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:13.754
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
STEP: creating service in namespace services-6066 03/09/23 08:26:13.761
STEP: creating service affinity-nodeport in namespace services-6066 03/09/23 08:26:13.761
STEP: creating replication controller affinity-nodeport in namespace services-6066 03/09/23 08:26:13.782
I0309 08:26:13.791666      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-6066, replica count: 3
I0309 08:26:16.842664      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 08:26:16.866: INFO: Creating new exec pod
Mar  9 08:26:16.874: INFO: Waiting up to 5m0s for pod "execpod-affinitywzppd" in namespace "services-6066" to be "running"
Mar  9 08:26:16.878: INFO: Pod "execpod-affinitywzppd": Phase="Pending", Reason="", readiness=false. Elapsed: 3.661713ms
Mar  9 08:26:18.883: INFO: Pod "execpod-affinitywzppd": Phase="Running", Reason="", readiness=true. Elapsed: 2.008893862s
Mar  9 08:26:18.883: INFO: Pod "execpod-affinitywzppd" satisfied condition "running"
Mar  9 08:26:19.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
Mar  9 08:26:20.149: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Mar  9 08:26:20.149: INFO: stdout: ""
Mar  9 08:26:20.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c nc -v -z -w 2 10.106.59.178 80'
Mar  9 08:26:20.409: INFO: stderr: "+ nc -v -z -w 2 10.106.59.178 80\nConnection to 10.106.59.178 80 port [tcp/http] succeeded!\n"
Mar  9 08:26:20.409: INFO: stdout: ""
Mar  9 08:26:20.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c nc -v -z -w 2 192.168.0.102 30160'
Mar  9 08:26:20.684: INFO: stderr: "+ nc -v -z -w 2 192.168.0.102 30160\nConnection to 192.168.0.102 30160 port [tcp/*] succeeded!\n"
Mar  9 08:26:20.684: INFO: stdout: ""
Mar  9 08:26:20.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c nc -v -z -w 2 192.168.0.103 30160'
Mar  9 08:26:20.970: INFO: stderr: "+ nc -v -z -w 2 192.168.0.103 30160\nConnection to 192.168.0.103 30160 port [tcp/*] succeeded!\n"
Mar  9 08:26:20.970: INFO: stdout: ""
Mar  9 08:26:20.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.102:30160/ ; done'
Mar  9 08:26:21.412: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n"
Mar  9 08:26:21.412: INFO: stdout: "\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn"
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
Mar  9 08:26:21.412: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-6066, will wait for the garbage collector to delete the pods 03/09/23 08:26:21.427
Mar  9 08:26:21.492: INFO: Deleting ReplicationController affinity-nodeport took: 6.223529ms
Mar  9 08:26:21.592: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.204332ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:26:24.120: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6066" for this suite. 03/09/23 08:26:24.126
------------------------------
â€¢ [SLOW TEST] [10.405 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:26:13.732
    Mar  9 08:26:13.733: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:26:13.734
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:13.749
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:13.754
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2228
    STEP: creating service in namespace services-6066 03/09/23 08:26:13.761
    STEP: creating service affinity-nodeport in namespace services-6066 03/09/23 08:26:13.761
    STEP: creating replication controller affinity-nodeport in namespace services-6066 03/09/23 08:26:13.782
    I0309 08:26:13.791666      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-6066, replica count: 3
    I0309 08:26:16.842664      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 08:26:16.866: INFO: Creating new exec pod
    Mar  9 08:26:16.874: INFO: Waiting up to 5m0s for pod "execpod-affinitywzppd" in namespace "services-6066" to be "running"
    Mar  9 08:26:16.878: INFO: Pod "execpod-affinitywzppd": Phase="Pending", Reason="", readiness=false. Elapsed: 3.661713ms
    Mar  9 08:26:18.883: INFO: Pod "execpod-affinitywzppd": Phase="Running", Reason="", readiness=true. Elapsed: 2.008893862s
    Mar  9 08:26:18.883: INFO: Pod "execpod-affinitywzppd" satisfied condition "running"
    Mar  9 08:26:19.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
    Mar  9 08:26:20.149: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
    Mar  9 08:26:20.149: INFO: stdout: ""
    Mar  9 08:26:20.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c nc -v -z -w 2 10.106.59.178 80'
    Mar  9 08:26:20.409: INFO: stderr: "+ nc -v -z -w 2 10.106.59.178 80\nConnection to 10.106.59.178 80 port [tcp/http] succeeded!\n"
    Mar  9 08:26:20.409: INFO: stdout: ""
    Mar  9 08:26:20.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c nc -v -z -w 2 192.168.0.102 30160'
    Mar  9 08:26:20.684: INFO: stderr: "+ nc -v -z -w 2 192.168.0.102 30160\nConnection to 192.168.0.102 30160 port [tcp/*] succeeded!\n"
    Mar  9 08:26:20.684: INFO: stdout: ""
    Mar  9 08:26:20.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c nc -v -z -w 2 192.168.0.103 30160'
    Mar  9 08:26:20.970: INFO: stderr: "+ nc -v -z -w 2 192.168.0.103 30160\nConnection to 192.168.0.103 30160 port [tcp/*] succeeded!\n"
    Mar  9 08:26:20.970: INFO: stdout: ""
    Mar  9 08:26:20.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6066 exec execpod-affinitywzppd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.102:30160/ ; done'
    Mar  9 08:26:21.412: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:30160/\n"
    Mar  9 08:26:21.412: INFO: stdout: "\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn\naffinity-nodeport-mrhgn"
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Received response from host: affinity-nodeport-mrhgn
    Mar  9 08:26:21.412: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport in namespace services-6066, will wait for the garbage collector to delete the pods 03/09/23 08:26:21.427
    Mar  9 08:26:21.492: INFO: Deleting ReplicationController affinity-nodeport took: 6.223529ms
    Mar  9 08:26:21.592: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.204332ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:26:24.120: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6066" for this suite. 03/09/23 08:26:24.126
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:26:24.139
Mar  9 08:26:24.139: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replication-controller 03/09/23 08:26:24.142
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:24.156
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:24.161
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
STEP: creating a ReplicationController 03/09/23 08:26:24.17
STEP: waiting for RC to be added 03/09/23 08:26:24.179
STEP: waiting for available Replicas 03/09/23 08:26:24.179
STEP: patching ReplicationController 03/09/23 08:26:25.713
STEP: waiting for RC to be modified 03/09/23 08:26:25.721
STEP: patching ReplicationController status 03/09/23 08:26:25.722
STEP: waiting for RC to be modified 03/09/23 08:26:25.731
STEP: waiting for available Replicas 03/09/23 08:26:25.732
STEP: fetching ReplicationController status 03/09/23 08:26:25.739
STEP: patching ReplicationController scale 03/09/23 08:26:25.743
STEP: waiting for RC to be modified 03/09/23 08:26:25.751
STEP: waiting for ReplicationController's scale to be the max amount 03/09/23 08:26:25.752
STEP: fetching ReplicationController; ensuring that it's patched 03/09/23 08:26:27.057
STEP: updating ReplicationController status 03/09/23 08:26:27.061
STEP: waiting for RC to be modified 03/09/23 08:26:27.069
STEP: listing all ReplicationControllers 03/09/23 08:26:27.07
STEP: checking that ReplicationController has expected values 03/09/23 08:26:27.074
STEP: deleting ReplicationControllers by collection 03/09/23 08:26:27.074
STEP: waiting for ReplicationController to have a DELETED watchEvent 03/09/23 08:26:27.083
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar  9 08:26:27.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-5453" for this suite. 03/09/23 08:26:27.176
------------------------------
â€¢ [3.044 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:26:24.139
    Mar  9 08:26:24.139: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replication-controller 03/09/23 08:26:24.142
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:24.156
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:24.161
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should test the lifecycle of a ReplicationController [Conformance]
      test/e2e/apps/rc.go:110
    STEP: creating a ReplicationController 03/09/23 08:26:24.17
    STEP: waiting for RC to be added 03/09/23 08:26:24.179
    STEP: waiting for available Replicas 03/09/23 08:26:24.179
    STEP: patching ReplicationController 03/09/23 08:26:25.713
    STEP: waiting for RC to be modified 03/09/23 08:26:25.721
    STEP: patching ReplicationController status 03/09/23 08:26:25.722
    STEP: waiting for RC to be modified 03/09/23 08:26:25.731
    STEP: waiting for available Replicas 03/09/23 08:26:25.732
    STEP: fetching ReplicationController status 03/09/23 08:26:25.739
    STEP: patching ReplicationController scale 03/09/23 08:26:25.743
    STEP: waiting for RC to be modified 03/09/23 08:26:25.751
    STEP: waiting for ReplicationController's scale to be the max amount 03/09/23 08:26:25.752
    STEP: fetching ReplicationController; ensuring that it's patched 03/09/23 08:26:27.057
    STEP: updating ReplicationController status 03/09/23 08:26:27.061
    STEP: waiting for RC to be modified 03/09/23 08:26:27.069
    STEP: listing all ReplicationControllers 03/09/23 08:26:27.07
    STEP: checking that ReplicationController has expected values 03/09/23 08:26:27.074
    STEP: deleting ReplicationControllers by collection 03/09/23 08:26:27.074
    STEP: waiting for ReplicationController to have a DELETED watchEvent 03/09/23 08:26:27.083
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:26:27.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-5453" for this suite. 03/09/23 08:26:27.176
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:26:27.185
Mar  9 08:26:27.185: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:26:27.187
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:27.201
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:27.206
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
STEP: Creating projection with secret that has name projected-secret-test-81d85efc-d2b7-44fb-940d-899077172b46 03/09/23 08:26:27.211
STEP: Creating a pod to test consume secrets 03/09/23 08:26:27.217
Mar  9 08:26:27.227: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb" in namespace "projected-1683" to be "Succeeded or Failed"
Mar  9 08:26:27.232: INFO: Pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.195593ms
Mar  9 08:26:29.237: INFO: Pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010034776s
Mar  9 08:26:31.237: INFO: Pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009786274s
STEP: Saw pod success 03/09/23 08:26:31.237
Mar  9 08:26:31.237: INFO: Pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb" satisfied condition "Succeeded or Failed"
Mar  9 08:26:31.241: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb container projected-secret-volume-test: <nil>
STEP: delete the pod 03/09/23 08:26:31.249
Mar  9 08:26:31.264: INFO: Waiting for pod pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb to disappear
Mar  9 08:26:31.268: INFO: Pod pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar  9 08:26:31.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1683" for this suite. 03/09/23 08:26:31.274
------------------------------
â€¢ [4.097 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:26:27.185
    Mar  9 08:26:27.185: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:26:27.187
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:27.201
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:27.206
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:67
    STEP: Creating projection with secret that has name projected-secret-test-81d85efc-d2b7-44fb-940d-899077172b46 03/09/23 08:26:27.211
    STEP: Creating a pod to test consume secrets 03/09/23 08:26:27.217
    Mar  9 08:26:27.227: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb" in namespace "projected-1683" to be "Succeeded or Failed"
    Mar  9 08:26:27.232: INFO: Pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.195593ms
    Mar  9 08:26:29.237: INFO: Pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010034776s
    Mar  9 08:26:31.237: INFO: Pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009786274s
    STEP: Saw pod success 03/09/23 08:26:31.237
    Mar  9 08:26:31.237: INFO: Pod "pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb" satisfied condition "Succeeded or Failed"
    Mar  9 08:26:31.241: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 08:26:31.249
    Mar  9 08:26:31.264: INFO: Waiting for pod pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb to disappear
    Mar  9 08:26:31.268: INFO: Pod pod-projected-secrets-e34bdb91-beca-405c-9b3d-a774b21e7fdb no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:26:31.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1683" for this suite. 03/09/23 08:26:31.274
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:26:31.283
Mar  9 08:26:31.283: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replicaset 03/09/23 08:26:31.285
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:31.3
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:31.305
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
STEP: Create a ReplicaSet 03/09/23 08:26:31.31
STEP: Verify that the required pods have come up 03/09/23 08:26:31.317
Mar  9 08:26:31.321: INFO: Pod name sample-pod: Found 0 pods out of 3
Mar  9 08:26:36.327: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running 03/09/23 08:26:36.327
Mar  9 08:26:36.331: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets 03/09/23 08:26:36.331
STEP: DeleteCollection of the ReplicaSets 03/09/23 08:26:36.336
STEP: After DeleteCollection verify that ReplicaSets have been deleted 03/09/23 08:26:36.345
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:26:36.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-8876" for this suite. 03/09/23 08:26:36.356
------------------------------
â€¢ [SLOW TEST] [5.082 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:26:31.283
    Mar  9 08:26:31.283: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replicaset 03/09/23 08:26:31.285
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:31.3
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:31.305
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of ReplicaSets [Conformance]
      test/e2e/apps/replica_set.go:165
    STEP: Create a ReplicaSet 03/09/23 08:26:31.31
    STEP: Verify that the required pods have come up 03/09/23 08:26:31.317
    Mar  9 08:26:31.321: INFO: Pod name sample-pod: Found 0 pods out of 3
    Mar  9 08:26:36.327: INFO: Pod name sample-pod: Found 3 pods out of 3
    STEP: ensuring each pod is running 03/09/23 08:26:36.327
    Mar  9 08:26:36.331: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
    STEP: Listing all ReplicaSets 03/09/23 08:26:36.331
    STEP: DeleteCollection of the ReplicaSets 03/09/23 08:26:36.336
    STEP: After DeleteCollection verify that ReplicaSets have been deleted 03/09/23 08:26:36.345
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:26:36.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-8876" for this suite. 03/09/23 08:26:36.356
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:26:36.367
Mar  9 08:26:36.367: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-runtime 03/09/23 08:26:36.368
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:36.401
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:36.409
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
STEP: create the container 03/09/23 08:26:36.415
STEP: wait for the container to reach Succeeded 03/09/23 08:26:36.427
STEP: get the container status 03/09/23 08:26:40.453
STEP: the container should be terminated 03/09/23 08:26:40.456
STEP: the termination message should be set 03/09/23 08:26:40.457
Mar  9 08:26:40.457: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container 03/09/23 08:26:40.457
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar  9 08:26:40.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-2621" for this suite. 03/09/23 08:26:40.482
------------------------------
â€¢ [4.122 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:26:36.367
    Mar  9 08:26:36.367: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-runtime 03/09/23 08:26:36.368
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:36.401
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:36.409
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232
    STEP: create the container 03/09/23 08:26:36.415
    STEP: wait for the container to reach Succeeded 03/09/23 08:26:36.427
    STEP: get the container status 03/09/23 08:26:40.453
    STEP: the container should be terminated 03/09/23 08:26:40.456
    STEP: the termination message should be set 03/09/23 08:26:40.457
    Mar  9 08:26:40.457: INFO: Expected: &{} to match Container's Termination Message:  --
    STEP: delete the container 03/09/23 08:26:40.457
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:26:40.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-2621" for this suite. 03/09/23 08:26:40.482
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
[BeforeEach] [sig-network] HostPort
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:26:40.49
Mar  9 08:26:40.490: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename hostport 03/09/23 08:26:40.492
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:40.507
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:40.511
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 03/09/23 08:26:40.523
Mar  9 08:26:40.533: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-8908" to be "running and ready"
Mar  9 08:26:40.539: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.869286ms
Mar  9 08:26:40.539: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:26:42.544: INFO: Pod "pod1": Phase="Running", Reason="", readiness=false. Elapsed: 2.010945249s
Mar  9 08:26:42.544: INFO: The phase of Pod pod1 is Running (Ready = false)
Mar  9 08:26:44.543: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 4.010516485s
Mar  9 08:26:44.544: INFO: The phase of Pod pod1 is Running (Ready = true)
Mar  9 08:26:44.544: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.0.102 on the node which pod1 resides and expect scheduled 03/09/23 08:26:44.544
Mar  9 08:26:44.552: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-8908" to be "running and ready"
Mar  9 08:26:44.556: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.631197ms
Mar  9 08:26:44.556: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:26:46.561: INFO: Pod "pod2": Phase="Running", Reason="", readiness=false. Elapsed: 2.008588229s
Mar  9 08:26:46.561: INFO: The phase of Pod pod2 is Running (Ready = false)
Mar  9 08:26:48.561: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.00935853s
Mar  9 08:26:48.561: INFO: The phase of Pod pod2 is Running (Ready = true)
Mar  9 08:26:48.561: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.0.102 but use UDP protocol on the node which pod2 resides 03/09/23 08:26:48.561
Mar  9 08:26:48.569: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-8908" to be "running and ready"
Mar  9 08:26:48.572: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.321665ms
Mar  9 08:26:48.572: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:26:50.577: INFO: Pod "pod3": Phase="Running", Reason="", readiness=false. Elapsed: 2.008031433s
Mar  9 08:26:50.577: INFO: The phase of Pod pod3 is Running (Ready = false)
Mar  9 08:26:52.579: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 4.0096038s
Mar  9 08:26:52.579: INFO: The phase of Pod pod3 is Running (Ready = true)
Mar  9 08:26:52.579: INFO: Pod "pod3" satisfied condition "running and ready"
Mar  9 08:26:52.586: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-8908" to be "running and ready"
Mar  9 08:26:52.589: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 3.722928ms
Mar  9 08:26:52.589: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:26:54.595: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.009239294s
Mar  9 08:26:54.595: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
Mar  9 08:26:54.595: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 03/09/23 08:26:54.599
Mar  9 08:26:54.599: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.0.102 http://127.0.0.1:54323/hostname] Namespace:hostport-8908 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:26:54.599: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:26:54.600: INFO: ExecWithOptions: Clientset creation
Mar  9 08:26:54.600: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8908/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.0.102+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.0.102, port: 54323 03/09/23 08:26:54.729
Mar  9 08:26:54.730: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.0.102:54323/hostname] Namespace:hostport-8908 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:26:54.730: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:26:54.730: INFO: ExecWithOptions: Clientset creation
Mar  9 08:26:54.730: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8908/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.0.102%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.0.102, port: 54323 UDP 03/09/23 08:26:54.861
Mar  9 08:26:54.861: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.0.102 54323] Namespace:hostport-8908 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:26:54.861: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:26:54.862: INFO: ExecWithOptions: Clientset creation
Mar  9 08:26:54.862: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8908/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.0.102+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/node/init/init.go:32
Mar  9 08:26:59.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] HostPort
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] HostPort
  tear down framework | framework.go:193
STEP: Destroying namespace "hostport-8908" for this suite. 03/09/23 08:26:59.993
------------------------------
â€¢ [SLOW TEST] [19.512 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] HostPort
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:26:40.49
    Mar  9 08:26:40.490: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename hostport 03/09/23 08:26:40.492
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:26:40.507
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:26:40.511
    [BeforeEach] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] HostPort
      test/e2e/network/hostport.go:49
    [It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
      test/e2e/network/hostport.go:63
    STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 03/09/23 08:26:40.523
    Mar  9 08:26:40.533: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-8908" to be "running and ready"
    Mar  9 08:26:40.539: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.869286ms
    Mar  9 08:26:40.539: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:26:42.544: INFO: Pod "pod1": Phase="Running", Reason="", readiness=false. Elapsed: 2.010945249s
    Mar  9 08:26:42.544: INFO: The phase of Pod pod1 is Running (Ready = false)
    Mar  9 08:26:44.543: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 4.010516485s
    Mar  9 08:26:44.544: INFO: The phase of Pod pod1 is Running (Ready = true)
    Mar  9 08:26:44.544: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.0.102 on the node which pod1 resides and expect scheduled 03/09/23 08:26:44.544
    Mar  9 08:26:44.552: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-8908" to be "running and ready"
    Mar  9 08:26:44.556: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.631197ms
    Mar  9 08:26:44.556: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:26:46.561: INFO: Pod "pod2": Phase="Running", Reason="", readiness=false. Elapsed: 2.008588229s
    Mar  9 08:26:46.561: INFO: The phase of Pod pod2 is Running (Ready = false)
    Mar  9 08:26:48.561: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.00935853s
    Mar  9 08:26:48.561: INFO: The phase of Pod pod2 is Running (Ready = true)
    Mar  9 08:26:48.561: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.0.102 but use UDP protocol on the node which pod2 resides 03/09/23 08:26:48.561
    Mar  9 08:26:48.569: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-8908" to be "running and ready"
    Mar  9 08:26:48.572: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.321665ms
    Mar  9 08:26:48.572: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:26:50.577: INFO: Pod "pod3": Phase="Running", Reason="", readiness=false. Elapsed: 2.008031433s
    Mar  9 08:26:50.577: INFO: The phase of Pod pod3 is Running (Ready = false)
    Mar  9 08:26:52.579: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 4.0096038s
    Mar  9 08:26:52.579: INFO: The phase of Pod pod3 is Running (Ready = true)
    Mar  9 08:26:52.579: INFO: Pod "pod3" satisfied condition "running and ready"
    Mar  9 08:26:52.586: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-8908" to be "running and ready"
    Mar  9 08:26:52.589: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 3.722928ms
    Mar  9 08:26:52.589: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:26:54.595: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.009239294s
    Mar  9 08:26:54.595: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
    Mar  9 08:26:54.595: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 03/09/23 08:26:54.599
    Mar  9 08:26:54.599: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.0.102 http://127.0.0.1:54323/hostname] Namespace:hostport-8908 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:26:54.599: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:26:54.600: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:26:54.600: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8908/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.0.102+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.0.102, port: 54323 03/09/23 08:26:54.729
    Mar  9 08:26:54.730: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.0.102:54323/hostname] Namespace:hostport-8908 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:26:54.730: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:26:54.730: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:26:54.730: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8908/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.0.102%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.0.102, port: 54323 UDP 03/09/23 08:26:54.861
    Mar  9 08:26:54.861: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.0.102 54323] Namespace:hostport-8908 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:26:54.861: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:26:54.862: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:26:54.862: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-8908/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.0.102+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    [AfterEach] [sig-network] HostPort
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:26:59.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] HostPort
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] HostPort
      tear down framework | framework.go:193
    STEP: Destroying namespace "hostport-8908" for this suite. 03/09/23 08:26:59.993
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:00.003
Mar  9 08:27:00.003: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 08:27:00.005
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:00.02
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:00.025
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
STEP: fetching the /apis discovery document 03/09/23 08:27:00.03
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 03/09/23 08:27:00.032
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 03/09/23 08:27:00.032
STEP: fetching the /apis/apiextensions.k8s.io discovery document 03/09/23 08:27:00.032
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 03/09/23 08:27:00.035
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 03/09/23 08:27:00.035
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 03/09/23 08:27:00.037
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:00.037: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-7306" for this suite. 03/09/23 08:27:00.043
------------------------------
â€¢ [0.048 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:00.003
    Mar  9 08:27:00.003: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 08:27:00.005
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:00.02
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:00.025
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should include custom resource definition resources in discovery documents [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:198
    STEP: fetching the /apis discovery document 03/09/23 08:27:00.03
    STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 03/09/23 08:27:00.032
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 03/09/23 08:27:00.032
    STEP: fetching the /apis/apiextensions.k8s.io discovery document 03/09/23 08:27:00.032
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 03/09/23 08:27:00.035
    STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 03/09/23 08:27:00.035
    STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 03/09/23 08:27:00.037
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:00.037: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-7306" for this suite. 03/09/23 08:27:00.043
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:00.052
Mar  9 08:27:00.052: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 08:27:00.054
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:00.068
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:00.073
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
STEP: Creating secret with name secret-test-map-fd8582ea-f07f-4518-a2b7-db7d4bbba2f9 03/09/23 08:27:00.078
STEP: Creating a pod to test consume secrets 03/09/23 08:27:00.087
Mar  9 08:27:00.097: INFO: Waiting up to 5m0s for pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e" in namespace "secrets-5989" to be "Succeeded or Failed"
Mar  9 08:27:00.105: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.678934ms
Mar  9 08:27:02.110: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013050017s
Mar  9 08:27:04.110: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012708234s
Mar  9 08:27:06.110: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.012541832s
STEP: Saw pod success 03/09/23 08:27:06.11
Mar  9 08:27:06.110: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e" satisfied condition "Succeeded or Failed"
Mar  9 08:27:06.114: INFO: Trying to get logs from node k8s-worker2 pod pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e container secret-volume-test: <nil>
STEP: delete the pod 03/09/23 08:27:06.122
Mar  9 08:27:06.135: INFO: Waiting for pod pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e to disappear
Mar  9 08:27:06.138: INFO: Pod pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:06.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-5989" for this suite. 03/09/23 08:27:06.143
------------------------------
â€¢ [SLOW TEST] [6.097 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:00.052
    Mar  9 08:27:00.052: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 08:27:00.054
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:00.068
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:00.073
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:89
    STEP: Creating secret with name secret-test-map-fd8582ea-f07f-4518-a2b7-db7d4bbba2f9 03/09/23 08:27:00.078
    STEP: Creating a pod to test consume secrets 03/09/23 08:27:00.087
    Mar  9 08:27:00.097: INFO: Waiting up to 5m0s for pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e" in namespace "secrets-5989" to be "Succeeded or Failed"
    Mar  9 08:27:00.105: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.678934ms
    Mar  9 08:27:02.110: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013050017s
    Mar  9 08:27:04.110: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.012708234s
    Mar  9 08:27:06.110: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.012541832s
    STEP: Saw pod success 03/09/23 08:27:06.11
    Mar  9 08:27:06.110: INFO: Pod "pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e" satisfied condition "Succeeded or Failed"
    Mar  9 08:27:06.114: INFO: Trying to get logs from node k8s-worker2 pod pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e container secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 08:27:06.122
    Mar  9 08:27:06.135: INFO: Waiting for pod pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e to disappear
    Mar  9 08:27:06.138: INFO: Pod pod-secrets-a2d069b2-d184-4d51-8459-f108b2d1d90e no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:06.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-5989" for this suite. 03/09/23 08:27:06.143
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:06.156
Mar  9 08:27:06.156: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 08:27:06.157
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:06.172
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:06.177
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
Mar  9 08:27:06.182: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:07.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-6102" for this suite. 03/09/23 08:27:07.215
------------------------------
â€¢ [1.067 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    creating/deleting custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:58

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:06.156
    Mar  9 08:27:06.156: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 08:27:06.157
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:06.172
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:06.177
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] creating/deleting custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:58
    Mar  9 08:27:06.182: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:07.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-6102" for this suite. 03/09/23 08:27:07.215
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:07.228
Mar  9 08:27:07.228: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename gc 03/09/23 08:27:07.23
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:07.244
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:07.249
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
STEP: create the deployment 03/09/23 08:27:07.254
STEP: Wait for the Deployment to create new ReplicaSet 03/09/23 08:27:07.262
STEP: delete the deployment 03/09/23 08:27:07.774
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 03/09/23 08:27:07.783
STEP: Gathering metrics 03/09/23 08:27:08.305
Mar  9 08:27:08.349: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
Mar  9 08:27:08.353: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 3.922758ms
Mar  9 08:27:08.353: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
Mar  9 08:27:08.353: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
Mar  9 08:27:08.505: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:08.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-5543" for this suite. 03/09/23 08:27:08.511
------------------------------
â€¢ [1.291 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:07.228
    Mar  9 08:27:07.228: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename gc 03/09/23 08:27:07.23
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:07.244
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:07.249
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
      test/e2e/apimachinery/garbage_collector.go:550
    STEP: create the deployment 03/09/23 08:27:07.254
    STEP: Wait for the Deployment to create new ReplicaSet 03/09/23 08:27:07.262
    STEP: delete the deployment 03/09/23 08:27:07.774
    STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 03/09/23 08:27:07.783
    STEP: Gathering metrics 03/09/23 08:27:08.305
    Mar  9 08:27:08.349: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
    Mar  9 08:27:08.353: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 3.922758ms
    Mar  9 08:27:08.353: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
    Mar  9 08:27:08.353: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
    Mar  9 08:27:08.505: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:08.505: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-5543" for this suite. 03/09/23 08:27:08.511
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:08.519
Mar  9 08:27:08.519: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename svcaccounts 03/09/23 08:27:08.521
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:08.537
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:08.542
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
STEP: Creating a pod to test service account token:  03/09/23 08:27:08.547
Mar  9 08:27:08.557: INFO: Waiting up to 5m0s for pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a" in namespace "svcaccounts-5879" to be "Succeeded or Failed"
Mar  9 08:27:08.561: INFO: Pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015913ms
Mar  9 08:27:10.567: INFO: Pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009903345s
Mar  9 08:27:12.568: INFO: Pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010336375s
STEP: Saw pod success 03/09/23 08:27:12.568
Mar  9 08:27:12.568: INFO: Pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a" satisfied condition "Succeeded or Failed"
Mar  9 08:27:12.572: INFO: Trying to get logs from node k8s-worker1 pod test-pod-5a917676-8980-4b29-a78d-5a902c837c8a container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:27:12.581
Mar  9 08:27:12.598: INFO: Waiting for pod test-pod-5a917676-8980-4b29-a78d-5a902c837c8a to disappear
Mar  9 08:27:12.602: INFO: Pod test-pod-5a917676-8980-4b29-a78d-5a902c837c8a no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:12.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-5879" for this suite. 03/09/23 08:27:12.607
------------------------------
â€¢ [4.098 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:08.519
    Mar  9 08:27:08.519: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename svcaccounts 03/09/23 08:27:08.521
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:08.537
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:08.542
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount projected service account token [Conformance]
      test/e2e/auth/service_accounts.go:275
    STEP: Creating a pod to test service account token:  03/09/23 08:27:08.547
    Mar  9 08:27:08.557: INFO: Waiting up to 5m0s for pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a" in namespace "svcaccounts-5879" to be "Succeeded or Failed"
    Mar  9 08:27:08.561: INFO: Pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015913ms
    Mar  9 08:27:10.567: INFO: Pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009903345s
    Mar  9 08:27:12.568: INFO: Pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010336375s
    STEP: Saw pod success 03/09/23 08:27:12.568
    Mar  9 08:27:12.568: INFO: Pod "test-pod-5a917676-8980-4b29-a78d-5a902c837c8a" satisfied condition "Succeeded or Failed"
    Mar  9 08:27:12.572: INFO: Trying to get logs from node k8s-worker1 pod test-pod-5a917676-8980-4b29-a78d-5a902c837c8a container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:27:12.581
    Mar  9 08:27:12.598: INFO: Waiting for pod test-pod-5a917676-8980-4b29-a78d-5a902c837c8a to disappear
    Mar  9 08:27:12.602: INFO: Pod test-pod-5a917676-8980-4b29-a78d-5a902c837c8a no longer exists
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:12.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-5879" for this suite. 03/09/23 08:27:12.607
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:12.62
Mar  9 08:27:12.620: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replication-controller 03/09/23 08:27:12.622
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:12.64
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:12.644
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
STEP: Given a ReplicationController is created 03/09/23 08:27:12.649
STEP: When the matched label of one of its pods change 03/09/23 08:27:12.657
Mar  9 08:27:12.660: INFO: Pod name pod-release: Found 0 pods out of 1
Mar  9 08:27:17.665: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released 03/09/23 08:27:17.681
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:18.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-2214" for this suite. 03/09/23 08:27:18.697
------------------------------
â€¢ [SLOW TEST] [6.085 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:12.62
    Mar  9 08:27:12.620: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replication-controller 03/09/23 08:27:12.622
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:12.64
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:12.644
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should release no longer matching pods [Conformance]
      test/e2e/apps/rc.go:101
    STEP: Given a ReplicationController is created 03/09/23 08:27:12.649
    STEP: When the matched label of one of its pods change 03/09/23 08:27:12.657
    Mar  9 08:27:12.660: INFO: Pod name pod-release: Found 0 pods out of 1
    Mar  9 08:27:17.665: INFO: Pod name pod-release: Found 1 pods out of 1
    STEP: Then the pod is released 03/09/23 08:27:17.681
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:18.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-2214" for this suite. 03/09/23 08:27:18.697
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace
  should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:18.706
Mar  9 08:27:18.706: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:27:18.708
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:18.724
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:18.729
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1734
[It] should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/09/23 08:27:18.734
Mar  9 08:27:18.735: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8854 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Mar  9 08:27:18.932: INFO: stderr: ""
Mar  9 08:27:18.932: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running 03/09/23 08:27:18.932
STEP: verifying the pod e2e-test-httpd-pod was created 03/09/23 08:27:23.983
Mar  9 08:27:23.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8854 get pod e2e-test-httpd-pod -o json'
Mar  9 08:27:24.135: INFO: stderr: ""
Mar  9 08:27:24.135: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"7e9b6a0a80b14a5cbeb59a1da42b6f3982f6007b0bb32aab5bc4bb0585755ce1\",\n            \"cni.projectcalico.org/podIP\": \"172.16.0.37/32\",\n            \"cni.projectcalico.org/podIPs\": \"172.16.0.37/32\"\n        },\n        \"creationTimestamp\": \"2023-03-09T08:27:18Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8854\",\n        \"resourceVersion\": \"257893\",\n        \"uid\": \"e0b3ef8b-d1a1-40ac-9ac6-0c94eba95f5d\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-gn2mj\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-worker2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-gn2mj\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-09T08:27:18Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-09T08:27:20Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-09T08:27:20Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-09T08:27:18Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b5501f96cc723c6aea7ce1f5de2c8abf0557ffa35219b266ca6fc31e93bc4fd2\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-03-09T08:27:20Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.0.103\",\n        \"phase\": \"Running\",\n        \"podIP\": \"172.16.0.37\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.16.0.37\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-03-09T08:27:18Z\"\n    }\n}\n"
STEP: replace the image in the pod 03/09/23 08:27:24.135
Mar  9 08:27:24.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8854 replace -f -'
Mar  9 08:27:25.274: INFO: stderr: ""
Mar  9 08:27:25.274: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 03/09/23 08:27:25.274
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1738
Mar  9 08:27:25.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8854 delete pods e2e-test-httpd-pod'
Mar  9 08:27:27.309: INFO: stderr: ""
Mar  9 08:27:27.309: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:27.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8854" for this suite. 03/09/23 08:27:27.315
------------------------------
â€¢ [SLOW TEST] [8.615 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1731
    should update a single-container pod's image  [Conformance]
    test/e2e/kubectl/kubectl.go:1747

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:18.706
    Mar  9 08:27:18.706: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:27:18.708
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:18.724
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:18.729
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1734
    [It] should update a single-container pod's image  [Conformance]
      test/e2e/kubectl/kubectl.go:1747
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 03/09/23 08:27:18.734
    Mar  9 08:27:18.735: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8854 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Mar  9 08:27:18.932: INFO: stderr: ""
    Mar  9 08:27:18.932: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod is running 03/09/23 08:27:18.932
    STEP: verifying the pod e2e-test-httpd-pod was created 03/09/23 08:27:23.983
    Mar  9 08:27:23.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8854 get pod e2e-test-httpd-pod -o json'
    Mar  9 08:27:24.135: INFO: stderr: ""
    Mar  9 08:27:24.135: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"7e9b6a0a80b14a5cbeb59a1da42b6f3982f6007b0bb32aab5bc4bb0585755ce1\",\n            \"cni.projectcalico.org/podIP\": \"172.16.0.37/32\",\n            \"cni.projectcalico.org/podIPs\": \"172.16.0.37/32\"\n        },\n        \"creationTimestamp\": \"2023-03-09T08:27:18Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8854\",\n        \"resourceVersion\": \"257893\",\n        \"uid\": \"e0b3ef8b-d1a1-40ac-9ac6-0c94eba95f5d\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-gn2mj\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-worker2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-gn2mj\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-09T08:27:18Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-09T08:27:20Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-09T08:27:20Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-03-09T08:27:18Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b5501f96cc723c6aea7ce1f5de2c8abf0557ffa35219b266ca6fc31e93bc4fd2\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-03-09T08:27:20Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.0.103\",\n        \"phase\": \"Running\",\n        \"podIP\": \"172.16.0.37\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.16.0.37\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-03-09T08:27:18Z\"\n    }\n}\n"
    STEP: replace the image in the pod 03/09/23 08:27:24.135
    Mar  9 08:27:24.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8854 replace -f -'
    Mar  9 08:27:25.274: INFO: stderr: ""
    Mar  9 08:27:25.274: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 03/09/23 08:27:25.274
    [AfterEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1738
    Mar  9 08:27:25.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8854 delete pods e2e-test-httpd-pod'
    Mar  9 08:27:27.309: INFO: stderr: ""
    Mar  9 08:27:27.309: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:27.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8854" for this suite. 03/09/23 08:27:27.315
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Downward API
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:27.323
Mar  9 08:27:27.323: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:27:27.325
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:27.342
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:27.347
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
STEP: Creating a pod to test downward api env vars 03/09/23 08:27:27.352
Mar  9 08:27:27.362: INFO: Waiting up to 5m0s for pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f" in namespace "downward-api-5703" to be "Succeeded or Failed"
Mar  9 08:27:27.366: INFO: Pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.03622ms
Mar  9 08:27:29.372: INFO: Pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009813502s
Mar  9 08:27:31.371: INFO: Pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009332585s
STEP: Saw pod success 03/09/23 08:27:31.372
Mar  9 08:27:31.372: INFO: Pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f" satisfied condition "Succeeded or Failed"
Mar  9 08:27:31.376: INFO: Trying to get logs from node k8s-worker1 pod downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f container dapi-container: <nil>
STEP: delete the pod 03/09/23 08:27:31.384
Mar  9 08:27:31.402: INFO: Waiting for pod downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f to disappear
Mar  9 08:27:31.406: INFO: Pod downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:31.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5703" for this suite. 03/09/23 08:27:31.412
------------------------------
â€¢ [4.099 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:27.323
    Mar  9 08:27:27.323: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:27:27.325
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:27.342
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:27.347
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod UID as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:267
    STEP: Creating a pod to test downward api env vars 03/09/23 08:27:27.352
    Mar  9 08:27:27.362: INFO: Waiting up to 5m0s for pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f" in namespace "downward-api-5703" to be "Succeeded or Failed"
    Mar  9 08:27:27.366: INFO: Pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.03622ms
    Mar  9 08:27:29.372: INFO: Pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009813502s
    Mar  9 08:27:31.371: INFO: Pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009332585s
    STEP: Saw pod success 03/09/23 08:27:31.372
    Mar  9 08:27:31.372: INFO: Pod "downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f" satisfied condition "Succeeded or Failed"
    Mar  9 08:27:31.376: INFO: Trying to get logs from node k8s-worker1 pod downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f container dapi-container: <nil>
    STEP: delete the pod 03/09/23 08:27:31.384
    Mar  9 08:27:31.402: INFO: Waiting for pod downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f to disappear
    Mar  9 08:27:31.406: INFO: Pod downward-api-58e93fcd-6306-40ff-99df-d1440cfca81f no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:31.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5703" for this suite. 03/09/23 08:27:31.412
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:31.423
Mar  9 08:27:31.423: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 08:27:31.424
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:31.443
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:31.448
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
STEP: Creating a ResourceQuota 03/09/23 08:27:31.453
STEP: Getting a ResourceQuota 03/09/23 08:27:31.46
STEP: Listing all ResourceQuotas with LabelSelector 03/09/23 08:27:31.464
STEP: Patching the ResourceQuota 03/09/23 08:27:31.468
STEP: Deleting a Collection of ResourceQuotas 03/09/23 08:27:31.476
STEP: Verifying the deleted ResourceQuota 03/09/23 08:27:31.486
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:31.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-4530" for this suite. 03/09/23 08:27:31.496
------------------------------
â€¢ [0.080 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:31.423
    Mar  9 08:27:31.423: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 08:27:31.424
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:31.443
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:31.448
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a ResourceQuota [Conformance]
      test/e2e/apimachinery/resource_quota.go:943
    STEP: Creating a ResourceQuota 03/09/23 08:27:31.453
    STEP: Getting a ResourceQuota 03/09/23 08:27:31.46
    STEP: Listing all ResourceQuotas with LabelSelector 03/09/23 08:27:31.464
    STEP: Patching the ResourceQuota 03/09/23 08:27:31.468
    STEP: Deleting a Collection of ResourceQuotas 03/09/23 08:27:31.476
    STEP: Verifying the deleted ResourceQuota 03/09/23 08:27:31.486
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:31.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-4530" for this suite. 03/09/23 08:27:31.496
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:31.504
Mar  9 08:27:31.504: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:27:31.506
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:31.519
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:31.524
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
STEP: Creating projection with secret that has name projected-secret-test-map-3bd5d02e-9b72-4f5e-ba40-ee0f7cbc5494 03/09/23 08:27:31.53
STEP: Creating a pod to test consume secrets 03/09/23 08:27:31.536
Mar  9 08:27:31.550: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f" in namespace "projected-143" to be "Succeeded or Failed"
Mar  9 08:27:31.554: INFO: Pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.068149ms
Mar  9 08:27:33.559: INFO: Pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00918368s
Mar  9 08:27:35.559: INFO: Pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00850761s
STEP: Saw pod success 03/09/23 08:27:35.559
Mar  9 08:27:35.559: INFO: Pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f" satisfied condition "Succeeded or Failed"
Mar  9 08:27:35.563: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f container projected-secret-volume-test: <nil>
STEP: delete the pod 03/09/23 08:27:35.571
Mar  9 08:27:35.587: INFO: Waiting for pod pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f to disappear
Mar  9 08:27:35.590: INFO: Pod pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:35.590: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-143" for this suite. 03/09/23 08:27:35.597
------------------------------
â€¢ [4.102 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:31.504
    Mar  9 08:27:31.504: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:27:31.506
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:31.519
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:31.524
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:88
    STEP: Creating projection with secret that has name projected-secret-test-map-3bd5d02e-9b72-4f5e-ba40-ee0f7cbc5494 03/09/23 08:27:31.53
    STEP: Creating a pod to test consume secrets 03/09/23 08:27:31.536
    Mar  9 08:27:31.550: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f" in namespace "projected-143" to be "Succeeded or Failed"
    Mar  9 08:27:31.554: INFO: Pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.068149ms
    Mar  9 08:27:33.559: INFO: Pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00918368s
    Mar  9 08:27:35.559: INFO: Pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00850761s
    STEP: Saw pod success 03/09/23 08:27:35.559
    Mar  9 08:27:35.559: INFO: Pod "pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f" satisfied condition "Succeeded or Failed"
    Mar  9 08:27:35.563: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 08:27:35.571
    Mar  9 08:27:35.587: INFO: Waiting for pod pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f to disappear
    Mar  9 08:27:35.590: INFO: Pod pod-projected-secrets-56a63e53-fba6-4246-8f24-9c2ed6c0d20f no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:35.590: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-143" for this suite. 03/09/23 08:27:35.597
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version
  should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:35.607
Mar  9 08:27:35.607: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:27:35.609
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:35.626
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:35.631
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
Mar  9 08:27:35.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-4395 version'
Mar  9 08:27:35.778: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Mar  9 08:27:35.778: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.2\", GitCommit:\"fc04e732bb3e7198d2fa44efa5457c7c6f8c0f5b\", GitTreeState:\"clean\", BuildDate:\"2023-02-22T13:39:03Z\", GoVersion:\"go1.19.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.2\", GitCommit:\"fc04e732bb3e7198d2fa44efa5457c7c6f8c0f5b\", GitTreeState:\"clean\", BuildDate:\"2023-02-22T13:32:22Z\", GoVersion:\"go1.19.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:35.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4395" for this suite. 03/09/23 08:27:35.784
------------------------------
â€¢ [0.184 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl version
  test/e2e/kubectl/kubectl.go:1679
    should check is all data is printed  [Conformance]
    test/e2e/kubectl/kubectl.go:1685

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:35.607
    Mar  9 08:27:35.607: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:27:35.609
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:35.626
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:35.631
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check is all data is printed  [Conformance]
      test/e2e/kubectl/kubectl.go:1685
    Mar  9 08:27:35.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-4395 version'
    Mar  9 08:27:35.778: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
    Mar  9 08:27:35.778: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.2\", GitCommit:\"fc04e732bb3e7198d2fa44efa5457c7c6f8c0f5b\", GitTreeState:\"clean\", BuildDate:\"2023-02-22T13:39:03Z\", GoVersion:\"go1.19.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.2\", GitCommit:\"fc04e732bb3e7198d2fa44efa5457c7c6f8c0f5b\", GitTreeState:\"clean\", BuildDate:\"2023-02-22T13:32:22Z\", GoVersion:\"go1.19.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:35.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4395" for this suite. 03/09/23 08:27:35.784
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:35.793
Mar  9 08:27:35.793: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:27:35.795
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:35.816
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:35.82
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
STEP: Creating a pod to test emptydir 0666 on tmpfs 03/09/23 08:27:35.825
Mar  9 08:27:35.835: INFO: Waiting up to 5m0s for pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d" in namespace "emptydir-6743" to be "Succeeded or Failed"
Mar  9 08:27:35.840: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.876862ms
Mar  9 08:27:37.845: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009683879s
Mar  9 08:27:39.845: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010006791s
Mar  9 08:27:41.845: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009832545s
STEP: Saw pod success 03/09/23 08:27:41.845
Mar  9 08:27:41.845: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d" satisfied condition "Succeeded or Failed"
Mar  9 08:27:41.849: INFO: Trying to get logs from node k8s-worker1 pod pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d container test-container: <nil>
STEP: delete the pod 03/09/23 08:27:41.865
Mar  9 08:27:41.879: INFO: Waiting for pod pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d to disappear
Mar  9 08:27:41.882: INFO: Pod pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:41.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-6743" for this suite. 03/09/23 08:27:41.888
------------------------------
â€¢ [SLOW TEST] [6.102 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:35.793
    Mar  9 08:27:35.793: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:27:35.795
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:35.816
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:35.82
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:107
    STEP: Creating a pod to test emptydir 0666 on tmpfs 03/09/23 08:27:35.825
    Mar  9 08:27:35.835: INFO: Waiting up to 5m0s for pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d" in namespace "emptydir-6743" to be "Succeeded or Failed"
    Mar  9 08:27:35.840: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.876862ms
    Mar  9 08:27:37.845: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009683879s
    Mar  9 08:27:39.845: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010006791s
    Mar  9 08:27:41.845: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009832545s
    STEP: Saw pod success 03/09/23 08:27:41.845
    Mar  9 08:27:41.845: INFO: Pod "pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d" satisfied condition "Succeeded or Failed"
    Mar  9 08:27:41.849: INFO: Trying to get logs from node k8s-worker1 pod pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d container test-container: <nil>
    STEP: delete the pod 03/09/23 08:27:41.865
    Mar  9 08:27:41.879: INFO: Waiting for pod pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d to disappear
    Mar  9 08:27:41.882: INFO: Pod pod-3eb0de81-c1c1-4091-a0bb-d477680e2b0d no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:41.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-6743" for this suite. 03/09/23 08:27:41.888
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:41.897
Mar  9 08:27:41.897: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:27:41.899
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:41.913
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:41.917
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
STEP: Creating a pod to test emptydir 0666 on node default medium 03/09/23 08:27:41.922
Mar  9 08:27:41.932: INFO: Waiting up to 5m0s for pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080" in namespace "emptydir-8359" to be "Succeeded or Failed"
Mar  9 08:27:41.936: INFO: Pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080": Phase="Pending", Reason="", readiness=false. Elapsed: 3.898648ms
Mar  9 08:27:43.941: INFO: Pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008703029s
Mar  9 08:27:45.942: INFO: Pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009336412s
STEP: Saw pod success 03/09/23 08:27:45.942
Mar  9 08:27:45.942: INFO: Pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080" satisfied condition "Succeeded or Failed"
Mar  9 08:27:45.946: INFO: Trying to get logs from node k8s-worker1 pod pod-75ee51be-6727-4ebf-8a39-5c0a025a6080 container test-container: <nil>
STEP: delete the pod 03/09/23 08:27:45.954
Mar  9 08:27:45.966: INFO: Waiting for pod pod-75ee51be-6727-4ebf-8a39-5c0a025a6080 to disappear
Mar  9 08:27:45.969: INFO: Pod pod-75ee51be-6727-4ebf-8a39-5c0a025a6080 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:45.970: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8359" for this suite. 03/09/23 08:27:45.976
------------------------------
â€¢ [4.086 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:41.897
    Mar  9 08:27:41.897: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:27:41.899
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:41.913
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:41.917
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:207
    STEP: Creating a pod to test emptydir 0666 on node default medium 03/09/23 08:27:41.922
    Mar  9 08:27:41.932: INFO: Waiting up to 5m0s for pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080" in namespace "emptydir-8359" to be "Succeeded or Failed"
    Mar  9 08:27:41.936: INFO: Pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080": Phase="Pending", Reason="", readiness=false. Elapsed: 3.898648ms
    Mar  9 08:27:43.941: INFO: Pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008703029s
    Mar  9 08:27:45.942: INFO: Pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009336412s
    STEP: Saw pod success 03/09/23 08:27:45.942
    Mar  9 08:27:45.942: INFO: Pod "pod-75ee51be-6727-4ebf-8a39-5c0a025a6080" satisfied condition "Succeeded or Failed"
    Mar  9 08:27:45.946: INFO: Trying to get logs from node k8s-worker1 pod pod-75ee51be-6727-4ebf-8a39-5c0a025a6080 container test-container: <nil>
    STEP: delete the pod 03/09/23 08:27:45.954
    Mar  9 08:27:45.966: INFO: Waiting for pod pod-75ee51be-6727-4ebf-8a39-5c0a025a6080 to disappear
    Mar  9 08:27:45.969: INFO: Pod pod-75ee51be-6727-4ebf-8a39-5c0a025a6080 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:45.970: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8359" for this suite. 03/09/23 08:27:45.976
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:45.989
Mar  9 08:27:45.990: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:27:45.991
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:46.006
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:46.011
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
Mar  9 08:27:46.015: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/09/23 08:27:47.921
Mar  9 08:27:47.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 --namespace=crd-publish-openapi-9558 create -f -'
Mar  9 08:27:49.160: INFO: stderr: ""
Mar  9 08:27:49.160: INFO: stdout: "e2e-test-crd-publish-openapi-6317-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Mar  9 08:27:49.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 --namespace=crd-publish-openapi-9558 delete e2e-test-crd-publish-openapi-6317-crds test-cr'
Mar  9 08:27:49.317: INFO: stderr: ""
Mar  9 08:27:49.317: INFO: stdout: "e2e-test-crd-publish-openapi-6317-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Mar  9 08:27:49.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 --namespace=crd-publish-openapi-9558 apply -f -'
Mar  9 08:27:49.862: INFO: stderr: ""
Mar  9 08:27:49.862: INFO: stdout: "e2e-test-crd-publish-openapi-6317-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Mar  9 08:27:49.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 --namespace=crd-publish-openapi-9558 delete e2e-test-crd-publish-openapi-6317-crds test-cr'
Mar  9 08:27:50.022: INFO: stderr: ""
Mar  9 08:27:50.022: INFO: stdout: "e2e-test-crd-publish-openapi-6317-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema 03/09/23 08:27:50.022
Mar  9 08:27:50.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 explain e2e-test-crd-publish-openapi-6317-crds'
Mar  9 08:27:50.457: INFO: stderr: ""
Mar  9 08:27:50.457: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6317-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:27:52.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9558" for this suite. 03/09/23 08:27:52.862
------------------------------
â€¢ [SLOW TEST] [6.880 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:45.989
    Mar  9 08:27:45.990: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:27:45.991
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:46.006
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:46.011
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD without validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:153
    Mar  9 08:27:46.015: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/09/23 08:27:47.921
    Mar  9 08:27:47.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 --namespace=crd-publish-openapi-9558 create -f -'
    Mar  9 08:27:49.160: INFO: stderr: ""
    Mar  9 08:27:49.160: INFO: stdout: "e2e-test-crd-publish-openapi-6317-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Mar  9 08:27:49.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 --namespace=crd-publish-openapi-9558 delete e2e-test-crd-publish-openapi-6317-crds test-cr'
    Mar  9 08:27:49.317: INFO: stderr: ""
    Mar  9 08:27:49.317: INFO: stdout: "e2e-test-crd-publish-openapi-6317-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    Mar  9 08:27:49.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 --namespace=crd-publish-openapi-9558 apply -f -'
    Mar  9 08:27:49.862: INFO: stderr: ""
    Mar  9 08:27:49.862: INFO: stdout: "e2e-test-crd-publish-openapi-6317-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Mar  9 08:27:49.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 --namespace=crd-publish-openapi-9558 delete e2e-test-crd-publish-openapi-6317-crds test-cr'
    Mar  9 08:27:50.022: INFO: stderr: ""
    Mar  9 08:27:50.022: INFO: stdout: "e2e-test-crd-publish-openapi-6317-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR without validation schema 03/09/23 08:27:50.022
    Mar  9 08:27:50.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-9558 explain e2e-test-crd-publish-openapi-6317-crds'
    Mar  9 08:27:50.457: INFO: stderr: ""
    Mar  9 08:27:50.457: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6317-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:27:52.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9558" for this suite. 03/09/23 08:27:52.862
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:27:52.875
Mar  9 08:27:52.875: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename subpath 03/09/23 08:27:52.877
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:52.89
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:52.894
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/09/23 08:27:52.898
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
STEP: Creating pod pod-subpath-test-configmap-8jkk 03/09/23 08:27:52.908
STEP: Creating a pod to test atomic-volume-subpath 03/09/23 08:27:52.908
Mar  9 08:27:52.921: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-8jkk" in namespace "subpath-1356" to be "Succeeded or Failed"
Mar  9 08:27:52.924: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Pending", Reason="", readiness=false. Elapsed: 3.882884ms
Mar  9 08:27:54.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 2.00888867s
Mar  9 08:27:56.940: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 4.019181287s
Mar  9 08:27:58.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 6.009114029s
Mar  9 08:28:00.929: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 8.007930317s
Mar  9 08:28:02.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 10.009302511s
Mar  9 08:28:04.929: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 12.008380314s
Mar  9 08:28:06.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 14.009848842s
Mar  9 08:28:08.929: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 16.008796498s
Mar  9 08:28:10.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 18.009284354s
Mar  9 08:28:12.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 20.00988532s
Mar  9 08:28:14.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 22.009286487s
Mar  9 08:28:16.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=false. Elapsed: 24.008951775s
Mar  9 08:28:18.931: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.010131044s
STEP: Saw pod success 03/09/23 08:28:18.931
Mar  9 08:28:18.931: INFO: Pod "pod-subpath-test-configmap-8jkk" satisfied condition "Succeeded or Failed"
Mar  9 08:28:18.935: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-configmap-8jkk container test-container-subpath-configmap-8jkk: <nil>
STEP: delete the pod 03/09/23 08:28:18.945
Mar  9 08:28:18.961: INFO: Waiting for pod pod-subpath-test-configmap-8jkk to disappear
Mar  9 08:28:18.964: INFO: Pod pod-subpath-test-configmap-8jkk no longer exists
STEP: Deleting pod pod-subpath-test-configmap-8jkk 03/09/23 08:28:18.964
Mar  9 08:28:18.964: INFO: Deleting pod "pod-subpath-test-configmap-8jkk" in namespace "subpath-1356"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar  9 08:28:18.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-1356" for this suite. 03/09/23 08:28:18.975
------------------------------
â€¢ [SLOW TEST] [26.112 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/storage/subpath.go:80

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:27:52.875
    Mar  9 08:27:52.875: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename subpath 03/09/23 08:27:52.877
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:27:52.89
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:27:52.894
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/09/23 08:27:52.898
    [It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
      test/e2e/storage/subpath.go:80
    STEP: Creating pod pod-subpath-test-configmap-8jkk 03/09/23 08:27:52.908
    STEP: Creating a pod to test atomic-volume-subpath 03/09/23 08:27:52.908
    Mar  9 08:27:52.921: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-8jkk" in namespace "subpath-1356" to be "Succeeded or Failed"
    Mar  9 08:27:52.924: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Pending", Reason="", readiness=false. Elapsed: 3.882884ms
    Mar  9 08:27:54.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 2.00888867s
    Mar  9 08:27:56.940: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 4.019181287s
    Mar  9 08:27:58.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 6.009114029s
    Mar  9 08:28:00.929: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 8.007930317s
    Mar  9 08:28:02.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 10.009302511s
    Mar  9 08:28:04.929: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 12.008380314s
    Mar  9 08:28:06.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 14.009848842s
    Mar  9 08:28:08.929: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 16.008796498s
    Mar  9 08:28:10.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 18.009284354s
    Mar  9 08:28:12.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 20.00988532s
    Mar  9 08:28:14.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=true. Elapsed: 22.009286487s
    Mar  9 08:28:16.930: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Running", Reason="", readiness=false. Elapsed: 24.008951775s
    Mar  9 08:28:18.931: INFO: Pod "pod-subpath-test-configmap-8jkk": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.010131044s
    STEP: Saw pod success 03/09/23 08:28:18.931
    Mar  9 08:28:18.931: INFO: Pod "pod-subpath-test-configmap-8jkk" satisfied condition "Succeeded or Failed"
    Mar  9 08:28:18.935: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-configmap-8jkk container test-container-subpath-configmap-8jkk: <nil>
    STEP: delete the pod 03/09/23 08:28:18.945
    Mar  9 08:28:18.961: INFO: Waiting for pod pod-subpath-test-configmap-8jkk to disappear
    Mar  9 08:28:18.964: INFO: Pod pod-subpath-test-configmap-8jkk no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-8jkk 03/09/23 08:28:18.964
    Mar  9 08:28:18.964: INFO: Deleting pod "pod-subpath-test-configmap-8jkk" in namespace "subpath-1356"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:28:18.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-1356" for this suite. 03/09/23 08:28:18.975
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:814
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:28:18.988
Mar  9 08:28:18.988: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-preemption 03/09/23 08:28:18.99
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:28:19.008
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:28:19.013
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Mar  9 08:28:19.034: INFO: Waiting up to 1m0s for all nodes to be ready
Mar  9 08:29:19.085: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:29:19.09
Mar  9 08:29:19.090: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-preemption-path 03/09/23 08:29:19.091
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:19.109
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:19.114
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:771
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:814
Mar  9 08:29:19.138: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
Mar  9 08:29:19.143: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/node/init/init.go:32
Mar  9 08:29:19.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:787
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:29:19.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PriorityClass endpoints
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PriorityClass endpoints
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-7012" for this suite. 03/09/23 08:29:19.24
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-789" for this suite. 03/09/23 08:29:19.247
------------------------------
â€¢ [SLOW TEST] [60.267 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:764
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/scheduling/preemption.go:814

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:28:18.988
    Mar  9 08:28:18.988: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-preemption 03/09/23 08:28:18.99
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:28:19.008
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:28:19.013
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Mar  9 08:28:19.034: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar  9 08:29:19.085: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PriorityClass endpoints
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:29:19.09
    Mar  9 08:29:19.090: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-preemption-path 03/09/23 08:29:19.091
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:19.109
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:19.114
    [BeforeEach] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:771
    [It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
      test/e2e/scheduling/preemption.go:814
    Mar  9 08:29:19.138: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
    Mar  9 08:29:19.143: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
    [AfterEach] PriorityClass endpoints
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:29:19.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:787
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:29:19.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PriorityClass endpoints
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PriorityClass endpoints
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-7012" for this suite. 03/09/23 08:29:19.24
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-789" for this suite. 03/09/23 08:29:19.247
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:29:19.257
Mar  9 08:29:19.257: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pod-network-test 03/09/23 08:29:19.259
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:19.274
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:19.279
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
STEP: Performing setup for networking test in namespace pod-network-test-8031 03/09/23 08:29:19.284
STEP: creating a selector 03/09/23 08:29:19.284
STEP: Creating the service pods in kubernetes 03/09/23 08:29:19.285
Mar  9 08:29:19.285: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Mar  9 08:29:19.315: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-8031" to be "running and ready"
Mar  9 08:29:19.319: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.098574ms
Mar  9 08:29:19.320: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:29:21.325: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009697324s
Mar  9 08:29:21.325: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:29:23.324: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.008758053s
Mar  9 08:29:23.324: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:25.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.009529107s
Mar  9 08:29:25.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:27.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009537446s
Mar  9 08:29:27.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:29.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.009148018s
Mar  9 08:29:29.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:31.326: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.01031396s
Mar  9 08:29:31.326: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:33.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.009526376s
Mar  9 08:29:33.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:35.324: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.008361886s
Mar  9 08:29:35.324: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:37.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.009951078s
Mar  9 08:29:37.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:39.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.009897566s
Mar  9 08:29:39.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:29:41.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.009645009s
Mar  9 08:29:41.325: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Mar  9 08:29:41.325: INFO: Pod "netserver-0" satisfied condition "running and ready"
Mar  9 08:29:41.330: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-8031" to be "running and ready"
Mar  9 08:29:41.334: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 4.103983ms
Mar  9 08:29:41.334: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Mar  9 08:29:41.334: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 03/09/23 08:29:41.338
Mar  9 08:29:41.348: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-8031" to be "running"
Mar  9 08:29:41.352: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.036633ms
Mar  9 08:29:43.358: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009656616s
Mar  9 08:29:45.357: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.009255759s
Mar  9 08:29:45.357: INFO: Pod "test-container-pod" satisfied condition "running"
Mar  9 08:29:45.361: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Mar  9 08:29:45.361: INFO: Breadth first check of 172.16.0.82 on host 192.168.0.102...
Mar  9 08:29:45.365: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.0.83:9080/dial?request=hostname&protocol=udp&host=172.16.0.82&port=8081&tries=1'] Namespace:pod-network-test-8031 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:29:45.365: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:29:45.366: INFO: ExecWithOptions: Clientset creation
Mar  9 08:29:45.366: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8031/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.0.83%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.0.82%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Mar  9 08:29:45.495: INFO: Waiting for responses: map[]
Mar  9 08:29:45.495: INFO: reached 172.16.0.82 after 0/1 tries
Mar  9 08:29:45.495: INFO: Breadth first check of 172.16.0.35 on host 192.168.0.103...
Mar  9 08:29:45.499: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.0.83:9080/dial?request=hostname&protocol=udp&host=172.16.0.35&port=8081&tries=1'] Namespace:pod-network-test-8031 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:29:45.499: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:29:45.501: INFO: ExecWithOptions: Clientset creation
Mar  9 08:29:45.501: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8031/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.0.83%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.0.35%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Mar  9 08:29:45.615: INFO: Waiting for responses: map[]
Mar  9 08:29:45.615: INFO: reached 172.16.0.35 after 0/1 tries
Mar  9 08:29:45.615: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Mar  9 08:29:45.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-8031" for this suite. 03/09/23 08:29:45.621
------------------------------
â€¢ [SLOW TEST] [26.373 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:29:19.257
    Mar  9 08:29:19.257: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pod-network-test 03/09/23 08:29:19.259
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:19.274
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:19.279
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:93
    STEP: Performing setup for networking test in namespace pod-network-test-8031 03/09/23 08:29:19.284
    STEP: creating a selector 03/09/23 08:29:19.284
    STEP: Creating the service pods in kubernetes 03/09/23 08:29:19.285
    Mar  9 08:29:19.285: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Mar  9 08:29:19.315: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-8031" to be "running and ready"
    Mar  9 08:29:19.319: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.098574ms
    Mar  9 08:29:19.320: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:29:21.325: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009697324s
    Mar  9 08:29:21.325: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:29:23.324: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.008758053s
    Mar  9 08:29:23.324: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:25.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.009529107s
    Mar  9 08:29:25.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:27.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009537446s
    Mar  9 08:29:27.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:29.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.009148018s
    Mar  9 08:29:29.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:31.326: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.01031396s
    Mar  9 08:29:31.326: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:33.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.009526376s
    Mar  9 08:29:33.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:35.324: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.008361886s
    Mar  9 08:29:35.324: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:37.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.009951078s
    Mar  9 08:29:37.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:39.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.009897566s
    Mar  9 08:29:39.325: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:29:41.325: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.009645009s
    Mar  9 08:29:41.325: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Mar  9 08:29:41.325: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Mar  9 08:29:41.330: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-8031" to be "running and ready"
    Mar  9 08:29:41.334: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 4.103983ms
    Mar  9 08:29:41.334: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Mar  9 08:29:41.334: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 03/09/23 08:29:41.338
    Mar  9 08:29:41.348: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-8031" to be "running"
    Mar  9 08:29:41.352: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.036633ms
    Mar  9 08:29:43.358: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009656616s
    Mar  9 08:29:45.357: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.009255759s
    Mar  9 08:29:45.357: INFO: Pod "test-container-pod" satisfied condition "running"
    Mar  9 08:29:45.361: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Mar  9 08:29:45.361: INFO: Breadth first check of 172.16.0.82 on host 192.168.0.102...
    Mar  9 08:29:45.365: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.0.83:9080/dial?request=hostname&protocol=udp&host=172.16.0.82&port=8081&tries=1'] Namespace:pod-network-test-8031 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:29:45.365: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:29:45.366: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:29:45.366: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8031/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.0.83%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.0.82%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Mar  9 08:29:45.495: INFO: Waiting for responses: map[]
    Mar  9 08:29:45.495: INFO: reached 172.16.0.82 after 0/1 tries
    Mar  9 08:29:45.495: INFO: Breadth first check of 172.16.0.35 on host 192.168.0.103...
    Mar  9 08:29:45.499: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.0.83:9080/dial?request=hostname&protocol=udp&host=172.16.0.35&port=8081&tries=1'] Namespace:pod-network-test-8031 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:29:45.499: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:29:45.501: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:29:45.501: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8031/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.0.83%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.0.35%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Mar  9 08:29:45.615: INFO: Waiting for responses: map[]
    Mar  9 08:29:45.615: INFO: reached 172.16.0.35 after 0/1 tries
    Mar  9 08:29:45.615: INFO: Going to retry 0 out of 2 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:29:45.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-8031" for this suite. 03/09/23 08:29:45.621
  << End Captured GinkgoWriter Output
------------------------------
[sig-network] Ingress API
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
[BeforeEach] [sig-network] Ingress API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:29:45.63
Mar  9 08:29:45.631: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename ingress 03/09/23 08:29:45.633
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:45.649
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:45.654
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:31
[It] should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
STEP: getting /apis 03/09/23 08:29:45.659
STEP: getting /apis/networking.k8s.io 03/09/23 08:29:45.663
STEP: getting /apis/networking.k8s.iov1 03/09/23 08:29:45.665
STEP: creating 03/09/23 08:29:45.668
STEP: getting 03/09/23 08:29:45.689
STEP: listing 03/09/23 08:29:45.693
STEP: watching 03/09/23 08:29:45.697
Mar  9 08:29:45.697: INFO: starting watch
STEP: cluster-wide listing 03/09/23 08:29:45.7
STEP: cluster-wide watching 03/09/23 08:29:45.704
Mar  9 08:29:45.704: INFO: starting watch
STEP: patching 03/09/23 08:29:45.706
STEP: updating 03/09/23 08:29:45.713
Mar  9 08:29:45.725: INFO: waiting for watch events with expected annotations
Mar  9 08:29:45.725: INFO: saw patched and updated annotations
STEP: patching /status 03/09/23 08:29:45.725
STEP: updating /status 03/09/23 08:29:45.733
STEP: get /status 03/09/23 08:29:45.744
STEP: deleting 03/09/23 08:29:45.748
STEP: deleting a collection 03/09/23 08:29:45.762
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/node/init/init.go:32
Mar  9 08:29:45.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Ingress API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Ingress API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingress-4438" for this suite. 03/09/23 08:29:45.785
------------------------------
â€¢ [0.162 seconds]
[sig-network] Ingress API
test/e2e/network/common/framework.go:23
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Ingress API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:29:45.63
    Mar  9 08:29:45.631: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename ingress 03/09/23 08:29:45.633
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:45.649
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:45.654
    [BeforeEach] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:31
    [It] should support creating Ingress API operations [Conformance]
      test/e2e/network/ingress.go:552
    STEP: getting /apis 03/09/23 08:29:45.659
    STEP: getting /apis/networking.k8s.io 03/09/23 08:29:45.663
    STEP: getting /apis/networking.k8s.iov1 03/09/23 08:29:45.665
    STEP: creating 03/09/23 08:29:45.668
    STEP: getting 03/09/23 08:29:45.689
    STEP: listing 03/09/23 08:29:45.693
    STEP: watching 03/09/23 08:29:45.697
    Mar  9 08:29:45.697: INFO: starting watch
    STEP: cluster-wide listing 03/09/23 08:29:45.7
    STEP: cluster-wide watching 03/09/23 08:29:45.704
    Mar  9 08:29:45.704: INFO: starting watch
    STEP: patching 03/09/23 08:29:45.706
    STEP: updating 03/09/23 08:29:45.713
    Mar  9 08:29:45.725: INFO: waiting for watch events with expected annotations
    Mar  9 08:29:45.725: INFO: saw patched and updated annotations
    STEP: patching /status 03/09/23 08:29:45.725
    STEP: updating /status 03/09/23 08:29:45.733
    STEP: get /status 03/09/23 08:29:45.744
    STEP: deleting 03/09/23 08:29:45.748
    STEP: deleting a collection 03/09/23 08:29:45.762
    [AfterEach] [sig-network] Ingress API
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:29:45.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Ingress API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Ingress API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingress-4438" for this suite. 03/09/23 08:29:45.785
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:29:45.794
Mar  9 08:29:45.794: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename namespaces 03/09/23 08:29:45.796
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:45.812
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:45.816
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
STEP: Creating a test namespace 03/09/23 08:29:45.822
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:45.837
STEP: Creating a pod in the namespace 03/09/23 08:29:45.841
STEP: Waiting for the pod to have running status 03/09/23 08:29:45.853
Mar  9 08:29:45.853: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-5753" to be "running"
Mar  9 08:29:45.857: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.306578ms
Mar  9 08:29:47.864: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010794259s
Mar  9 08:29:47.864: INFO: Pod "test-pod" satisfied condition "running"
STEP: Deleting the namespace 03/09/23 08:29:47.864
STEP: Waiting for the namespace to be removed. 03/09/23 08:29:47.871
STEP: Recreating the namespace 03/09/23 08:29:58.876
STEP: Verifying there are no pods in the namespace 03/09/23 08:29:58.894
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:29:58.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-9267" for this suite. 03/09/23 08:29:58.903
STEP: Destroying namespace "nsdeletetest-5753" for this suite. 03/09/23 08:29:58.91
Mar  9 08:29:58.914: INFO: Namespace nsdeletetest-5753 was already deleted
STEP: Destroying namespace "nsdeletetest-1220" for this suite. 03/09/23 08:29:58.914
------------------------------
â€¢ [SLOW TEST] [13.127 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:29:45.794
    Mar  9 08:29:45.794: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename namespaces 03/09/23 08:29:45.796
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:45.812
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:45.816
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all pods are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:243
    STEP: Creating a test namespace 03/09/23 08:29:45.822
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:45.837
    STEP: Creating a pod in the namespace 03/09/23 08:29:45.841
    STEP: Waiting for the pod to have running status 03/09/23 08:29:45.853
    Mar  9 08:29:45.853: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-5753" to be "running"
    Mar  9 08:29:45.857: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.306578ms
    Mar  9 08:29:47.864: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010794259s
    Mar  9 08:29:47.864: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Deleting the namespace 03/09/23 08:29:47.864
    STEP: Waiting for the namespace to be removed. 03/09/23 08:29:47.871
    STEP: Recreating the namespace 03/09/23 08:29:58.876
    STEP: Verifying there are no pods in the namespace 03/09/23 08:29:58.894
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:29:58.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-9267" for this suite. 03/09/23 08:29:58.903
    STEP: Destroying namespace "nsdeletetest-5753" for this suite. 03/09/23 08:29:58.91
    Mar  9 08:29:58.914: INFO: Namespace nsdeletetest-5753 was already deleted
    STEP: Destroying namespace "nsdeletetest-1220" for this suite. 03/09/23 08:29:58.914
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:29:58.925
Mar  9 08:29:58.925: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename statefulset 03/09/23 08:29:58.927
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:58.941
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:58.946
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-5253 03/09/23 08:29:58.952
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
STEP: Initializing watcher for selector baz=blah,foo=bar 03/09/23 08:29:58.962
STEP: Creating stateful set ss in namespace statefulset-5253 03/09/23 08:29:58.966
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5253 03/09/23 08:29:58.974
Mar  9 08:29:58.978: INFO: Found 0 stateful pods, waiting for 1
Mar  9 08:30:08.984: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 03/09/23 08:30:08.984
Mar  9 08:30:08.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:30:09.269: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:30:09.269: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:30:09.269: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:30:09.273: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Mar  9 08:30:19.281: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Mar  9 08:30:19.281: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:30:19.302: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999422s
Mar  9 08:30:20.308: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995335383s
Mar  9 08:30:21.313: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990147348s
Mar  9 08:30:22.318: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984472164s
Mar  9 08:30:23.323: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.979675597s
Mar  9 08:30:24.329: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.973934766s
Mar  9 08:30:25.335: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.968139869s
Mar  9 08:30:26.340: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.963223659s
Mar  9 08:30:27.351: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.957661759s
Mar  9 08:30:28.356: INFO: Verifying statefulset ss doesn't scale past 1 for another 946.771942ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5253 03/09/23 08:30:29.356
Mar  9 08:30:29.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:30:29.642: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar  9 08:30:29.642: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:30:29.642: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar  9 08:30:29.646: INFO: Found 1 stateful pods, waiting for 3
Mar  9 08:30:39.657: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:30:39.657: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:30:39.657: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order 03/09/23 08:30:39.657
STEP: Scale down will halt with unhealthy stateful pod 03/09/23 08:30:39.658
Mar  9 08:30:39.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:30:39.971: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:30:39.971: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:30:39.971: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:30:39.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:30:40.228: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:30:40.228: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:30:40.228: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:30:40.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:30:40.511: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:30:40.511: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:30:40.511: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:30:40.511: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:30:40.515: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Mar  9 08:30:50.525: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Mar  9 08:30:50.525: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Mar  9 08:30:50.525: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Mar  9 08:30:50.544: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999412s
Mar  9 08:30:51.549: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994533142s
Mar  9 08:30:52.556: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988903191s
Mar  9 08:30:53.561: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982639622s
Mar  9 08:30:54.568: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976424455s
Mar  9 08:30:55.574: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.970032326s
Mar  9 08:30:56.580: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.964297695s
Mar  9 08:30:57.585: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.95879446s
Mar  9 08:30:58.591: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.953465942s
Mar  9 08:30:59.596: INFO: Verifying statefulset ss doesn't scale past 3 for another 947.844186ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5253 03/09/23 08:31:00.597
Mar  9 08:31:00.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:31:00.901: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar  9 08:31:00.901: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:31:00.901: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar  9 08:31:00.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:31:01.193: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar  9 08:31:01.193: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:31:01.193: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar  9 08:31:01.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:31:01.490: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar  9 08:31:01.490: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:31:01.490: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar  9 08:31:01.490: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order 03/09/23 08:31:11.512
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar  9 08:31:11.513: INFO: Deleting all statefulset in ns statefulset-5253
Mar  9 08:31:11.517: INFO: Scaling statefulset ss to 0
Mar  9 08:31:11.531: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:31:11.535: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:31:11.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-5253" for this suite. 03/09/23 08:31:11.56
------------------------------
â€¢ [SLOW TEST] [72.642 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/apps/statefulset.go:587

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:29:58.925
    Mar  9 08:29:58.925: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename statefulset 03/09/23 08:29:58.927
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:29:58.941
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:29:58.946
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-5253 03/09/23 08:29:58.952
    [It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
      test/e2e/apps/statefulset.go:587
    STEP: Initializing watcher for selector baz=blah,foo=bar 03/09/23 08:29:58.962
    STEP: Creating stateful set ss in namespace statefulset-5253 03/09/23 08:29:58.966
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5253 03/09/23 08:29:58.974
    Mar  9 08:29:58.978: INFO: Found 0 stateful pods, waiting for 1
    Mar  9 08:30:08.984: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 03/09/23 08:30:08.984
    Mar  9 08:30:08.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:30:09.269: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:30:09.269: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:30:09.269: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:30:09.273: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Mar  9 08:30:19.281: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Mar  9 08:30:19.281: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:30:19.302: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999422s
    Mar  9 08:30:20.308: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995335383s
    Mar  9 08:30:21.313: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990147348s
    Mar  9 08:30:22.318: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984472164s
    Mar  9 08:30:23.323: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.979675597s
    Mar  9 08:30:24.329: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.973934766s
    Mar  9 08:30:25.335: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.968139869s
    Mar  9 08:30:26.340: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.963223659s
    Mar  9 08:30:27.351: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.957661759s
    Mar  9 08:30:28.356: INFO: Verifying statefulset ss doesn't scale past 1 for another 946.771942ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5253 03/09/23 08:30:29.356
    Mar  9 08:30:29.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:30:29.642: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar  9 08:30:29.642: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:30:29.642: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar  9 08:30:29.646: INFO: Found 1 stateful pods, waiting for 3
    Mar  9 08:30:39.657: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:30:39.657: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:30:39.657: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Verifying that stateful set ss was scaled up in order 03/09/23 08:30:39.657
    STEP: Scale down will halt with unhealthy stateful pod 03/09/23 08:30:39.658
    Mar  9 08:30:39.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:30:39.971: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:30:39.971: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:30:39.971: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:30:39.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:30:40.228: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:30:40.228: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:30:40.228: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:30:40.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:30:40.511: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:30:40.511: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:30:40.511: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:30:40.511: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:30:40.515: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
    Mar  9 08:30:50.525: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Mar  9 08:30:50.525: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Mar  9 08:30:50.525: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Mar  9 08:30:50.544: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999412s
    Mar  9 08:30:51.549: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994533142s
    Mar  9 08:30:52.556: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988903191s
    Mar  9 08:30:53.561: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982639622s
    Mar  9 08:30:54.568: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976424455s
    Mar  9 08:30:55.574: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.970032326s
    Mar  9 08:30:56.580: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.964297695s
    Mar  9 08:30:57.585: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.95879446s
    Mar  9 08:30:58.591: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.953465942s
    Mar  9 08:30:59.596: INFO: Verifying statefulset ss doesn't scale past 3 for another 947.844186ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5253 03/09/23 08:31:00.597
    Mar  9 08:31:00.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:31:00.901: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar  9 08:31:00.901: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:31:00.901: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar  9 08:31:00.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:31:01.193: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar  9 08:31:01.193: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:31:01.193: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar  9 08:31:01.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-5253 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:31:01.490: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar  9 08:31:01.490: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:31:01.490: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar  9 08:31:01.490: INFO: Scaling statefulset ss to 0
    STEP: Verifying that stateful set ss was scaled down in reverse order 03/09/23 08:31:11.512
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar  9 08:31:11.513: INFO: Deleting all statefulset in ns statefulset-5253
    Mar  9 08:31:11.517: INFO: Scaling statefulset ss to 0
    Mar  9 08:31:11.531: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:31:11.535: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:31:11.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-5253" for this suite. 03/09/23 08:31:11.56
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:31:11.567
Mar  9 08:31:11.568: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:31:11.569
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:11.587
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:11.592
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:31:11.614
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:31:12.587
STEP: Deploying the webhook pod 03/09/23 08:31:12.599
STEP: Wait for the deployment to be ready 03/09/23 08:31:12.613
Mar  9 08:31:12.622: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Mar  9 08:31:14.636: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 31, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 31, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 31, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 31, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/09/23 08:31:16.641
STEP: Verifying the service has paired with the endpoint 03/09/23 08:31:16.661
Mar  9 08:31:17.661: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
Mar  9 08:31:17.666: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3898-crds.webhook.example.com via the AdmissionRegistration API 03/09/23 08:31:18.182
STEP: Creating a custom resource that should be mutated by the webhook 03/09/23 08:31:18.211
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:31:20.845: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3875" for this suite. 03/09/23 08:31:20.899
STEP: Destroying namespace "webhook-3875-markers" for this suite. 03/09/23 08:31:20.911
------------------------------
â€¢ [SLOW TEST] [9.358 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:31:11.567
    Mar  9 08:31:11.568: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:31:11.569
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:11.587
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:11.592
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:31:11.614
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:31:12.587
    STEP: Deploying the webhook pod 03/09/23 08:31:12.599
    STEP: Wait for the deployment to be ready 03/09/23 08:31:12.613
    Mar  9 08:31:12.622: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Mar  9 08:31:14.636: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 31, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 31, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 31, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 31, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/09/23 08:31:16.641
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:31:16.661
    Mar  9 08:31:17.661: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with pruning [Conformance]
      test/e2e/apimachinery/webhook.go:341
    Mar  9 08:31:17.666: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3898-crds.webhook.example.com via the AdmissionRegistration API 03/09/23 08:31:18.182
    STEP: Creating a custom resource that should be mutated by the webhook 03/09/23 08:31:18.211
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:31:20.845: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3875" for this suite. 03/09/23 08:31:20.899
    STEP: Destroying namespace "webhook-3875-markers" for this suite. 03/09/23 08:31:20.911
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:31:20.929
Mar  9 08:31:20.929: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 08:31:20.931
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:20.962
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:20.967
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
STEP: Creating secret with name secret-test-a3570930-66d1-48fc-8b08-29b2ac83cb76 03/09/23 08:31:20.973
STEP: Creating a pod to test consume secrets 03/09/23 08:31:20.979
Mar  9 08:31:21.001: INFO: Waiting up to 5m0s for pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43" in namespace "secrets-4140" to be "Succeeded or Failed"
Mar  9 08:31:21.005: INFO: Pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43": Phase="Pending", Reason="", readiness=false. Elapsed: 4.37418ms
Mar  9 08:31:23.011: INFO: Pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0103582s
Mar  9 08:31:25.010: INFO: Pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0090444s
STEP: Saw pod success 03/09/23 08:31:25.01
Mar  9 08:31:25.010: INFO: Pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43" satisfied condition "Succeeded or Failed"
Mar  9 08:31:25.014: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43 container secret-volume-test: <nil>
STEP: delete the pod 03/09/23 08:31:25.048
Mar  9 08:31:25.064: INFO: Waiting for pod pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43 to disappear
Mar  9 08:31:25.068: INFO: Pod pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 08:31:25.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4140" for this suite. 03/09/23 08:31:25.074
------------------------------
â€¢ [4.152 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:31:20.929
    Mar  9 08:31:20.929: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 08:31:20.931
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:20.962
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:20.967
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:47
    STEP: Creating secret with name secret-test-a3570930-66d1-48fc-8b08-29b2ac83cb76 03/09/23 08:31:20.973
    STEP: Creating a pod to test consume secrets 03/09/23 08:31:20.979
    Mar  9 08:31:21.001: INFO: Waiting up to 5m0s for pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43" in namespace "secrets-4140" to be "Succeeded or Failed"
    Mar  9 08:31:21.005: INFO: Pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43": Phase="Pending", Reason="", readiness=false. Elapsed: 4.37418ms
    Mar  9 08:31:23.011: INFO: Pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0103582s
    Mar  9 08:31:25.010: INFO: Pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0090444s
    STEP: Saw pod success 03/09/23 08:31:25.01
    Mar  9 08:31:25.010: INFO: Pod "pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43" satisfied condition "Succeeded or Failed"
    Mar  9 08:31:25.014: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43 container secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 08:31:25.048
    Mar  9 08:31:25.064: INFO: Waiting for pod pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43 to disappear
    Mar  9 08:31:25.068: INFO: Pod pod-secrets-1d386c5c-20e9-4c23-beea-a81ed78caa43 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:31:25.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4140" for this suite. 03/09/23 08:31:25.074
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:31:25.085
Mar  9 08:31:25.085: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:31:25.086
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:25.102
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:25.107
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
STEP: Creating configMap with name configmap-test-upd-819dab18-5974-4101-9d04-8d09cbac3d28 03/09/23 08:31:25.117
STEP: Creating the pod 03/09/23 08:31:25.124
Mar  9 08:31:25.137: INFO: Waiting up to 5m0s for pod "pod-configmaps-84832a82-b48f-4309-9cf2-90f90b508676" in namespace "configmap-7685" to be "running"
Mar  9 08:31:25.141: INFO: Pod "pod-configmaps-84832a82-b48f-4309-9cf2-90f90b508676": Phase="Pending", Reason="", readiness=false. Elapsed: 4.101185ms
Mar  9 08:31:27.147: INFO: Pod "pod-configmaps-84832a82-b48f-4309-9cf2-90f90b508676": Phase="Running", Reason="", readiness=false. Elapsed: 2.009624415s
Mar  9 08:31:27.147: INFO: Pod "pod-configmaps-84832a82-b48f-4309-9cf2-90f90b508676" satisfied condition "running"
STEP: Waiting for pod with text data 03/09/23 08:31:27.147
STEP: Waiting for pod with binary data 03/09/23 08:31:27.156
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:31:27.164: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-7685" for this suite. 03/09/23 08:31:27.169
------------------------------
â€¢ [2.093 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:31:25.085
    Mar  9 08:31:25.085: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:31:25.086
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:25.102
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:25.107
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] binary data should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:175
    STEP: Creating configMap with name configmap-test-upd-819dab18-5974-4101-9d04-8d09cbac3d28 03/09/23 08:31:25.117
    STEP: Creating the pod 03/09/23 08:31:25.124
    Mar  9 08:31:25.137: INFO: Waiting up to 5m0s for pod "pod-configmaps-84832a82-b48f-4309-9cf2-90f90b508676" in namespace "configmap-7685" to be "running"
    Mar  9 08:31:25.141: INFO: Pod "pod-configmaps-84832a82-b48f-4309-9cf2-90f90b508676": Phase="Pending", Reason="", readiness=false. Elapsed: 4.101185ms
    Mar  9 08:31:27.147: INFO: Pod "pod-configmaps-84832a82-b48f-4309-9cf2-90f90b508676": Phase="Running", Reason="", readiness=false. Elapsed: 2.009624415s
    Mar  9 08:31:27.147: INFO: Pod "pod-configmaps-84832a82-b48f-4309-9cf2-90f90b508676" satisfied condition "running"
    STEP: Waiting for pod with text data 03/09/23 08:31:27.147
    STEP: Waiting for pod with binary data 03/09/23 08:31:27.156
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:31:27.164: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-7685" for this suite. 03/09/23 08:31:27.169
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:31:27.18
Mar  9 08:31:27.180: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:31:27.182
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:27.198
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:27.203
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
STEP: creating service in namespace services-8463 03/09/23 08:31:27.208
STEP: creating service affinity-clusterip-transition in namespace services-8463 03/09/23 08:31:27.208
STEP: creating replication controller affinity-clusterip-transition in namespace services-8463 03/09/23 08:31:27.224
I0309 08:31:27.233115      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-8463, replica count: 3
I0309 08:31:30.284934      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 08:31:30.292: INFO: Creating new exec pod
Mar  9 08:31:30.300: INFO: Waiting up to 5m0s for pod "execpod-affinityrzkhq" in namespace "services-8463" to be "running"
Mar  9 08:31:30.304: INFO: Pod "execpod-affinityrzkhq": Phase="Pending", Reason="", readiness=false. Elapsed: 3.844141ms
Mar  9 08:31:32.309: INFO: Pod "execpod-affinityrzkhq": Phase="Running", Reason="", readiness=true. Elapsed: 2.008393998s
Mar  9 08:31:32.309: INFO: Pod "execpod-affinityrzkhq" satisfied condition "running"
Mar  9 08:31:33.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-8463 exec execpod-affinityrzkhq -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
Mar  9 08:31:33.579: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Mar  9 08:31:33.579: INFO: stdout: ""
Mar  9 08:31:33.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-8463 exec execpod-affinityrzkhq -- /bin/sh -x -c nc -v -z -w 2 10.101.244.66 80'
Mar  9 08:31:33.851: INFO: stderr: "+ nc -v -z -w 2 10.101.244.66 80\nConnection to 10.101.244.66 80 port [tcp/http] succeeded!\n"
Mar  9 08:31:33.851: INFO: stdout: ""
Mar  9 08:31:33.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-8463 exec execpod-affinityrzkhq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.101.244.66:80/ ; done'
Mar  9 08:31:34.326: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n"
Mar  9 08:31:34.326: INFO: stdout: "\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-2c8ms\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-2c8ms\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-2c8ms"
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-2c8ms
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-2c8ms
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-2c8ms
Mar  9 08:31:34.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-8463 exec execpod-affinityrzkhq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.101.244.66:80/ ; done'
Mar  9 08:31:34.762: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n"
Mar  9 08:31:34.762: INFO: stdout: "\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n"
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
Mar  9 08:31:34.762: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-8463, will wait for the garbage collector to delete the pods 03/09/23 08:31:34.777
Mar  9 08:31:34.839: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.108868ms
Mar  9 08:31:34.940: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.598293ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:31:37.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8463" for this suite. 03/09/23 08:31:37.273
------------------------------
â€¢ [SLOW TEST] [10.100 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:31:27.18
    Mar  9 08:31:27.180: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:31:27.182
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:27.198
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:27.203
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2213
    STEP: creating service in namespace services-8463 03/09/23 08:31:27.208
    STEP: creating service affinity-clusterip-transition in namespace services-8463 03/09/23 08:31:27.208
    STEP: creating replication controller affinity-clusterip-transition in namespace services-8463 03/09/23 08:31:27.224
    I0309 08:31:27.233115      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-8463, replica count: 3
    I0309 08:31:30.284934      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 08:31:30.292: INFO: Creating new exec pod
    Mar  9 08:31:30.300: INFO: Waiting up to 5m0s for pod "execpod-affinityrzkhq" in namespace "services-8463" to be "running"
    Mar  9 08:31:30.304: INFO: Pod "execpod-affinityrzkhq": Phase="Pending", Reason="", readiness=false. Elapsed: 3.844141ms
    Mar  9 08:31:32.309: INFO: Pod "execpod-affinityrzkhq": Phase="Running", Reason="", readiness=true. Elapsed: 2.008393998s
    Mar  9 08:31:32.309: INFO: Pod "execpod-affinityrzkhq" satisfied condition "running"
    Mar  9 08:31:33.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-8463 exec execpod-affinityrzkhq -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
    Mar  9 08:31:33.579: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
    Mar  9 08:31:33.579: INFO: stdout: ""
    Mar  9 08:31:33.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-8463 exec execpod-affinityrzkhq -- /bin/sh -x -c nc -v -z -w 2 10.101.244.66 80'
    Mar  9 08:31:33.851: INFO: stderr: "+ nc -v -z -w 2 10.101.244.66 80\nConnection to 10.101.244.66 80 port [tcp/http] succeeded!\n"
    Mar  9 08:31:33.851: INFO: stdout: ""
    Mar  9 08:31:33.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-8463 exec execpod-affinityrzkhq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.101.244.66:80/ ; done'
    Mar  9 08:31:34.326: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n"
    Mar  9 08:31:34.326: INFO: stdout: "\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-2c8ms\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-2c8ms\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-whq7b\naffinity-clusterip-transition-2c8ms"
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-2c8ms
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-2c8ms
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-whq7b
    Mar  9 08:31:34.326: INFO: Received response from host: affinity-clusterip-transition-2c8ms
    Mar  9 08:31:34.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-8463 exec execpod-affinityrzkhq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.101.244.66:80/ ; done'
    Mar  9 08:31:34.762: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.244.66:80/\n"
    Mar  9 08:31:34.762: INFO: stdout: "\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n\naffinity-clusterip-transition-lm26n"
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Received response from host: affinity-clusterip-transition-lm26n
    Mar  9 08:31:34.762: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-8463, will wait for the garbage collector to delete the pods 03/09/23 08:31:34.777
    Mar  9 08:31:34.839: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.108868ms
    Mar  9 08:31:34.940: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.598293ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:31:37.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8463" for this suite. 03/09/23 08:31:37.273
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Variable Expansion
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:31:37.281
Mar  9 08:31:37.281: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename var-expansion 03/09/23 08:31:37.283
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:37.298
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:37.303
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
STEP: Creating a pod to test env composition 03/09/23 08:31:37.308
Mar  9 08:31:37.320: INFO: Waiting up to 5m0s for pod "var-expansion-0703616f-330e-4280-959d-9130886367f4" in namespace "var-expansion-2455" to be "Succeeded or Failed"
Mar  9 08:31:37.324: INFO: Pod "var-expansion-0703616f-330e-4280-959d-9130886367f4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.270439ms
Mar  9 08:31:39.329: INFO: Pod "var-expansion-0703616f-330e-4280-959d-9130886367f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009347503s
Mar  9 08:31:41.330: INFO: Pod "var-expansion-0703616f-330e-4280-959d-9130886367f4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010058948s
STEP: Saw pod success 03/09/23 08:31:41.33
Mar  9 08:31:41.330: INFO: Pod "var-expansion-0703616f-330e-4280-959d-9130886367f4" satisfied condition "Succeeded or Failed"
Mar  9 08:31:41.334: INFO: Trying to get logs from node k8s-worker1 pod var-expansion-0703616f-330e-4280-959d-9130886367f4 container dapi-container: <nil>
STEP: delete the pod 03/09/23 08:31:41.343
Mar  9 08:31:41.358: INFO: Waiting for pod var-expansion-0703616f-330e-4280-959d-9130886367f4 to disappear
Mar  9 08:31:41.361: INFO: Pod var-expansion-0703616f-330e-4280-959d-9130886367f4 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar  9 08:31:41.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-2455" for this suite. 03/09/23 08:31:41.367
------------------------------
â€¢ [4.094 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:31:37.281
    Mar  9 08:31:37.281: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename var-expansion 03/09/23 08:31:37.283
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:37.298
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:37.303
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:44
    STEP: Creating a pod to test env composition 03/09/23 08:31:37.308
    Mar  9 08:31:37.320: INFO: Waiting up to 5m0s for pod "var-expansion-0703616f-330e-4280-959d-9130886367f4" in namespace "var-expansion-2455" to be "Succeeded or Failed"
    Mar  9 08:31:37.324: INFO: Pod "var-expansion-0703616f-330e-4280-959d-9130886367f4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.270439ms
    Mar  9 08:31:39.329: INFO: Pod "var-expansion-0703616f-330e-4280-959d-9130886367f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009347503s
    Mar  9 08:31:41.330: INFO: Pod "var-expansion-0703616f-330e-4280-959d-9130886367f4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010058948s
    STEP: Saw pod success 03/09/23 08:31:41.33
    Mar  9 08:31:41.330: INFO: Pod "var-expansion-0703616f-330e-4280-959d-9130886367f4" satisfied condition "Succeeded or Failed"
    Mar  9 08:31:41.334: INFO: Trying to get logs from node k8s-worker1 pod var-expansion-0703616f-330e-4280-959d-9130886367f4 container dapi-container: <nil>
    STEP: delete the pod 03/09/23 08:31:41.343
    Mar  9 08:31:41.358: INFO: Waiting for pod var-expansion-0703616f-330e-4280-959d-9130886367f4 to disappear
    Mar  9 08:31:41.361: INFO: Pod var-expansion-0703616f-330e-4280-959d-9130886367f4 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:31:41.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-2455" for this suite. 03/09/23 08:31:41.367
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:31:41.377
Mar  9 08:31:41.377: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename security-context 03/09/23 08:31:41.379
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:41.395
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:41.4
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 03/09/23 08:31:41.405
Mar  9 08:31:41.416: INFO: Waiting up to 5m0s for pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403" in namespace "security-context-5169" to be "Succeeded or Failed"
Mar  9 08:31:41.421: INFO: Pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403": Phase="Pending", Reason="", readiness=false. Elapsed: 4.240487ms
Mar  9 08:31:43.425: INFO: Pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008642779s
Mar  9 08:31:45.425: INFO: Pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008590808s
STEP: Saw pod success 03/09/23 08:31:45.425
Mar  9 08:31:45.425: INFO: Pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403" satisfied condition "Succeeded or Failed"
Mar  9 08:31:45.429: INFO: Trying to get logs from node k8s-worker1 pod security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403 container test-container: <nil>
STEP: delete the pod 03/09/23 08:31:45.437
Mar  9 08:31:45.454: INFO: Waiting for pod security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403 to disappear
Mar  9 08:31:45.458: INFO: Pod security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar  9 08:31:45.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-5169" for this suite. 03/09/23 08:31:45.464
------------------------------
â€¢ [4.093 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:31:41.377
    Mar  9 08:31:41.377: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename security-context 03/09/23 08:31:41.379
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:41.395
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:41.4
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:129
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 03/09/23 08:31:41.405
    Mar  9 08:31:41.416: INFO: Waiting up to 5m0s for pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403" in namespace "security-context-5169" to be "Succeeded or Failed"
    Mar  9 08:31:41.421: INFO: Pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403": Phase="Pending", Reason="", readiness=false. Elapsed: 4.240487ms
    Mar  9 08:31:43.425: INFO: Pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008642779s
    Mar  9 08:31:45.425: INFO: Pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008590808s
    STEP: Saw pod success 03/09/23 08:31:45.425
    Mar  9 08:31:45.425: INFO: Pod "security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403" satisfied condition "Succeeded or Failed"
    Mar  9 08:31:45.429: INFO: Trying to get logs from node k8s-worker1 pod security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403 container test-container: <nil>
    STEP: delete the pod 03/09/23 08:31:45.437
    Mar  9 08:31:45.454: INFO: Waiting for pod security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403 to disappear
    Mar  9 08:31:45.458: INFO: Pod security-context-b3b0e8e8-1f69-4892-b29d-9b9d58962403 no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:31:45.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-5169" for this suite. 03/09/23 08:31:45.464
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:31:45.471
Mar  9 08:31:45.471: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename subpath 03/09/23 08:31:45.472
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:45.487
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:45.491
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/09/23 08:31:45.496
[It] should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
STEP: Creating pod pod-subpath-test-projected-xlbj 03/09/23 08:31:45.508
STEP: Creating a pod to test atomic-volume-subpath 03/09/23 08:31:45.508
Mar  9 08:31:45.521: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-xlbj" in namespace "subpath-1648" to be "Succeeded or Failed"
Mar  9 08:31:45.525: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Pending", Reason="", readiness=false. Elapsed: 4.066059ms
Mar  9 08:31:47.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 2.009306513s
Mar  9 08:31:49.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 4.009261277s
Mar  9 08:31:51.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 6.009093171s
Mar  9 08:31:53.531: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 8.010595291s
Mar  9 08:31:55.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 10.009614664s
Mar  9 08:31:57.531: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 12.010038574s
Mar  9 08:31:59.529: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 14.008673403s
Mar  9 08:32:01.531: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 16.010234645s
Mar  9 08:32:03.529: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 18.008692887s
Mar  9 08:32:05.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 20.00928473s
Mar  9 08:32:07.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=false. Elapsed: 22.009755192s
Mar  9 08:32:09.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.009834208s
STEP: Saw pod success 03/09/23 08:32:09.53
Mar  9 08:32:09.531: INFO: Pod "pod-subpath-test-projected-xlbj" satisfied condition "Succeeded or Failed"
Mar  9 08:32:09.534: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-projected-xlbj container test-container-subpath-projected-xlbj: <nil>
STEP: delete the pod 03/09/23 08:32:09.544
Mar  9 08:32:09.560: INFO: Waiting for pod pod-subpath-test-projected-xlbj to disappear
Mar  9 08:32:09.564: INFO: Pod pod-subpath-test-projected-xlbj no longer exists
STEP: Deleting pod pod-subpath-test-projected-xlbj 03/09/23 08:32:09.564
Mar  9 08:32:09.564: INFO: Deleting pod "pod-subpath-test-projected-xlbj" in namespace "subpath-1648"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar  9 08:32:09.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-1648" for this suite. 03/09/23 08:32:09.575
------------------------------
â€¢ [SLOW TEST] [24.111 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/storage/subpath.go:106

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:31:45.471
    Mar  9 08:31:45.471: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename subpath 03/09/23 08:31:45.472
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:31:45.487
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:31:45.491
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/09/23 08:31:45.496
    [It] should support subpaths with projected pod [Conformance]
      test/e2e/storage/subpath.go:106
    STEP: Creating pod pod-subpath-test-projected-xlbj 03/09/23 08:31:45.508
    STEP: Creating a pod to test atomic-volume-subpath 03/09/23 08:31:45.508
    Mar  9 08:31:45.521: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-xlbj" in namespace "subpath-1648" to be "Succeeded or Failed"
    Mar  9 08:31:45.525: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Pending", Reason="", readiness=false. Elapsed: 4.066059ms
    Mar  9 08:31:47.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 2.009306513s
    Mar  9 08:31:49.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 4.009261277s
    Mar  9 08:31:51.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 6.009093171s
    Mar  9 08:31:53.531: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 8.010595291s
    Mar  9 08:31:55.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 10.009614664s
    Mar  9 08:31:57.531: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 12.010038574s
    Mar  9 08:31:59.529: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 14.008673403s
    Mar  9 08:32:01.531: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 16.010234645s
    Mar  9 08:32:03.529: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 18.008692887s
    Mar  9 08:32:05.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=true. Elapsed: 20.00928473s
    Mar  9 08:32:07.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Running", Reason="", readiness=false. Elapsed: 22.009755192s
    Mar  9 08:32:09.530: INFO: Pod "pod-subpath-test-projected-xlbj": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.009834208s
    STEP: Saw pod success 03/09/23 08:32:09.53
    Mar  9 08:32:09.531: INFO: Pod "pod-subpath-test-projected-xlbj" satisfied condition "Succeeded or Failed"
    Mar  9 08:32:09.534: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-projected-xlbj container test-container-subpath-projected-xlbj: <nil>
    STEP: delete the pod 03/09/23 08:32:09.544
    Mar  9 08:32:09.560: INFO: Waiting for pod pod-subpath-test-projected-xlbj to disappear
    Mar  9 08:32:09.564: INFO: Pod pod-subpath-test-projected-xlbj no longer exists
    STEP: Deleting pod pod-subpath-test-projected-xlbj 03/09/23 08:32:09.564
    Mar  9 08:32:09.564: INFO: Deleting pod "pod-subpath-test-projected-xlbj" in namespace "subpath-1648"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:32:09.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-1648" for this suite. 03/09/23 08:32:09.575
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] DNS
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:32:09.583
Mar  9 08:32:09.583: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename dns 03/09/23 08:32:09.585
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:09.602
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:09.606
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3249.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-3249.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
 03/09/23 08:32:09.612
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3249.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-3249.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
 03/09/23 08:32:09.612
STEP: creating a pod to probe /etc/hosts 03/09/23 08:32:09.612
STEP: submitting the pod to kubernetes 03/09/23 08:32:09.612
Mar  9 08:32:09.625: INFO: Waiting up to 15m0s for pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b" in namespace "dns-3249" to be "running"
Mar  9 08:32:09.629: INFO: Pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.968147ms
Mar  9 08:32:11.635: INFO: Pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00976615s
Mar  9 08:32:13.636: INFO: Pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b": Phase="Running", Reason="", readiness=true. Elapsed: 4.010470462s
Mar  9 08:32:13.636: INFO: Pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b" satisfied condition "running"
STEP: retrieving the pod 03/09/23 08:32:13.636
STEP: looking for the results for each expected name from probers 03/09/23 08:32:13.64
Mar  9 08:32:13.662: INFO: DNS probes using dns-3249/dns-test-a2399fcd-c734-40e3-88cf-5907e487304b succeeded

STEP: deleting the pod 03/09/23 08:32:13.662
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar  9 08:32:13.678: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-3249" for this suite. 03/09/23 08:32:13.684
------------------------------
â€¢ [4.110 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:32:09.583
    Mar  9 08:32:09.583: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename dns 03/09/23 08:32:09.585
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:09.602
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:09.606
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide /etc/hosts entries for the cluster [Conformance]
      test/e2e/network/dns.go:117
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3249.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-3249.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
     03/09/23 08:32:09.612
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3249.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-3249.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
     03/09/23 08:32:09.612
    STEP: creating a pod to probe /etc/hosts 03/09/23 08:32:09.612
    STEP: submitting the pod to kubernetes 03/09/23 08:32:09.612
    Mar  9 08:32:09.625: INFO: Waiting up to 15m0s for pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b" in namespace "dns-3249" to be "running"
    Mar  9 08:32:09.629: INFO: Pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.968147ms
    Mar  9 08:32:11.635: INFO: Pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00976615s
    Mar  9 08:32:13.636: INFO: Pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b": Phase="Running", Reason="", readiness=true. Elapsed: 4.010470462s
    Mar  9 08:32:13.636: INFO: Pod "dns-test-a2399fcd-c734-40e3-88cf-5907e487304b" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 08:32:13.636
    STEP: looking for the results for each expected name from probers 03/09/23 08:32:13.64
    Mar  9 08:32:13.662: INFO: DNS probes using dns-3249/dns-test-a2399fcd-c734-40e3-88cf-5907e487304b succeeded

    STEP: deleting the pod 03/09/23 08:32:13.662
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:32:13.678: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-3249" for this suite. 03/09/23 08:32:13.684
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:32:13.694
Mar  9 08:32:13.695: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:32:13.697
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:13.711
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:13.716
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:32:13.722
Mar  9 08:32:13.733: INFO: Waiting up to 5m0s for pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea" in namespace "projected-6978" to be "Succeeded or Failed"
Mar  9 08:32:13.738: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea": Phase="Pending", Reason="", readiness=false. Elapsed: 4.325972ms
Mar  9 08:32:15.743: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea": Phase="Running", Reason="", readiness=true. Elapsed: 2.009923676s
Mar  9 08:32:17.745: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea": Phase="Running", Reason="", readiness=false. Elapsed: 4.011079401s
Mar  9 08:32:19.743: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009399922s
STEP: Saw pod success 03/09/23 08:32:19.743
Mar  9 08:32:19.743: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea" satisfied condition "Succeeded or Failed"
Mar  9 08:32:19.747: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea container client-container: <nil>
STEP: delete the pod 03/09/23 08:32:19.755
Mar  9 08:32:19.770: INFO: Waiting for pod downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea to disappear
Mar  9 08:32:19.774: INFO: Pod downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:32:19.775: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6978" for this suite. 03/09/23 08:32:19.781
------------------------------
â€¢ [SLOW TEST] [6.102 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:32:13.694
    Mar  9 08:32:13.695: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:32:13.697
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:13.711
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:13.716
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:193
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:32:13.722
    Mar  9 08:32:13.733: INFO: Waiting up to 5m0s for pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea" in namespace "projected-6978" to be "Succeeded or Failed"
    Mar  9 08:32:13.738: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea": Phase="Pending", Reason="", readiness=false. Elapsed: 4.325972ms
    Mar  9 08:32:15.743: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea": Phase="Running", Reason="", readiness=true. Elapsed: 2.009923676s
    Mar  9 08:32:17.745: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea": Phase="Running", Reason="", readiness=false. Elapsed: 4.011079401s
    Mar  9 08:32:19.743: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009399922s
    STEP: Saw pod success 03/09/23 08:32:19.743
    Mar  9 08:32:19.743: INFO: Pod "downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea" satisfied condition "Succeeded or Failed"
    Mar  9 08:32:19.747: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea container client-container: <nil>
    STEP: delete the pod 03/09/23 08:32:19.755
    Mar  9 08:32:19.770: INFO: Waiting for pod downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea to disappear
    Mar  9 08:32:19.774: INFO: Pod downwardapi-volume-36601136-fcfa-4dc4-9006-bd288e05c7ea no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:32:19.775: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6978" for this suite. 03/09/23 08:32:19.781
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:32:19.797
Mar  9 08:32:19.797: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:32:19.798
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:19.813
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:19.818
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
STEP: set up a multi version CRD 03/09/23 08:32:19.823
Mar  9 08:32:19.824: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: rename a version 03/09/23 08:32:24.927
STEP: check the new version name is served 03/09/23 08:32:24.957
STEP: check the old version name is removed 03/09/23 08:32:26.777
STEP: check the other version is not changed 03/09/23 08:32:27.758
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:32:31.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-4104" for this suite. 03/09/23 08:32:31.732
------------------------------
â€¢ [SLOW TEST] [11.942 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:32:19.797
    Mar  9 08:32:19.797: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:32:19.798
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:19.813
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:19.818
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] updates the published spec when one version gets renamed [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:391
    STEP: set up a multi version CRD 03/09/23 08:32:19.823
    Mar  9 08:32:19.824: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: rename a version 03/09/23 08:32:24.927
    STEP: check the new version name is served 03/09/23 08:32:24.957
    STEP: check the old version name is removed 03/09/23 08:32:26.777
    STEP: check the other version is not changed 03/09/23 08:32:27.758
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:32:31.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-4104" for this suite. 03/09/23 08:32:31.732
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:32:31.74
Mar  9 08:32:31.740: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:32:31.741
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:31.754
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:31.758
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:32:31.762
Mar  9 08:32:31.773: INFO: Waiting up to 5m0s for pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6" in namespace "projected-6765" to be "Succeeded or Failed"
Mar  9 08:32:31.777: INFO: Pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.856567ms
Mar  9 08:32:33.782: INFO: Pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6": Phase="Running", Reason="", readiness=true. Elapsed: 2.008743692s
Mar  9 08:32:35.782: INFO: Pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00921903s
STEP: Saw pod success 03/09/23 08:32:35.783
Mar  9 08:32:35.783: INFO: Pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6" satisfied condition "Succeeded or Failed"
Mar  9 08:32:35.786: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6 container client-container: <nil>
STEP: delete the pod 03/09/23 08:32:35.795
Mar  9 08:32:35.812: INFO: Waiting for pod downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6 to disappear
Mar  9 08:32:35.816: INFO: Pod downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:32:35.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6765" for this suite. 03/09/23 08:32:35.822
------------------------------
â€¢ [4.089 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:32:31.74
    Mar  9 08:32:31.740: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:32:31.741
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:31.754
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:31.758
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:221
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:32:31.762
    Mar  9 08:32:31.773: INFO: Waiting up to 5m0s for pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6" in namespace "projected-6765" to be "Succeeded or Failed"
    Mar  9 08:32:31.777: INFO: Pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.856567ms
    Mar  9 08:32:33.782: INFO: Pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6": Phase="Running", Reason="", readiness=true. Elapsed: 2.008743692s
    Mar  9 08:32:35.782: INFO: Pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00921903s
    STEP: Saw pod success 03/09/23 08:32:35.783
    Mar  9 08:32:35.783: INFO: Pod "downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6" satisfied condition "Succeeded or Failed"
    Mar  9 08:32:35.786: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:32:35.795
    Mar  9 08:32:35.812: INFO: Waiting for pod downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6 to disappear
    Mar  9 08:32:35.816: INFO: Pod downwardapi-volume-26ea670c-6f03-4f8b-a654-ddecdffc0cc6 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:32:35.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6765" for this suite. 03/09/23 08:32:35.822
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:32:35.83
Mar  9 08:32:35.830: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename events 03/09/23 08:32:35.831
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:35.846
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:35.86
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
STEP: Create set of events 03/09/23 08:32:35.866
Mar  9 08:32:35.872: INFO: created test-event-1
Mar  9 08:32:35.877: INFO: created test-event-2
Mar  9 08:32:35.883: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace 03/09/23 08:32:35.883
STEP: delete collection of events 03/09/23 08:32:35.887
Mar  9 08:32:35.887: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 03/09/23 08:32:35.908
Mar  9 08:32:35.908: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Mar  9 08:32:35.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-3373" for this suite. 03/09/23 08:32:35.918
------------------------------
â€¢ [0.097 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:32:35.83
    Mar  9 08:32:35.830: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename events 03/09/23 08:32:35.831
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:35.846
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:35.86
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/core_events.go:175
    STEP: Create set of events 03/09/23 08:32:35.866
    Mar  9 08:32:35.872: INFO: created test-event-1
    Mar  9 08:32:35.877: INFO: created test-event-2
    Mar  9 08:32:35.883: INFO: created test-event-3
    STEP: get a list of Events with a label in the current namespace 03/09/23 08:32:35.883
    STEP: delete collection of events 03/09/23 08:32:35.887
    Mar  9 08:32:35.887: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 03/09/23 08:32:35.908
    Mar  9 08:32:35.908: INFO: requesting list of events to confirm quantity
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:32:35.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-3373" for this suite. 03/09/23 08:32:35.918
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:32:35.932
Mar  9 08:32:35.932: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:32:35.934
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:35.951
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:35.956
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:32:35.961
Mar  9 08:32:35.974: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38" in namespace "projected-6059" to be "Succeeded or Failed"
Mar  9 08:32:35.978: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38": Phase="Pending", Reason="", readiness=false. Elapsed: 4.336768ms
Mar  9 08:32:37.985: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010623741s
Mar  9 08:32:39.983: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009108511s
Mar  9 08:32:41.984: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.00953382s
STEP: Saw pod success 03/09/23 08:32:41.984
Mar  9 08:32:41.984: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38" satisfied condition "Succeeded or Failed"
Mar  9 08:32:41.988: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38 container client-container: <nil>
STEP: delete the pod 03/09/23 08:32:41.996
Mar  9 08:32:42.012: INFO: Waiting for pod downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38 to disappear
Mar  9 08:32:42.016: INFO: Pod downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:32:42.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6059" for this suite. 03/09/23 08:32:42.022
------------------------------
â€¢ [SLOW TEST] [6.097 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:32:35.932
    Mar  9 08:32:35.932: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:32:35.934
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:35.951
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:35.956
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:261
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:32:35.961
    Mar  9 08:32:35.974: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38" in namespace "projected-6059" to be "Succeeded or Failed"
    Mar  9 08:32:35.978: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38": Phase="Pending", Reason="", readiness=false. Elapsed: 4.336768ms
    Mar  9 08:32:37.985: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010623741s
    Mar  9 08:32:39.983: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009108511s
    Mar  9 08:32:41.984: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.00953382s
    STEP: Saw pod success 03/09/23 08:32:41.984
    Mar  9 08:32:41.984: INFO: Pod "downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38" satisfied condition "Succeeded or Failed"
    Mar  9 08:32:41.988: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:32:41.996
    Mar  9 08:32:42.012: INFO: Waiting for pod downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38 to disappear
    Mar  9 08:32:42.016: INFO: Pod downwardapi-volume-ae2b1825-0749-484c-ae3e-3e46ce13df38 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:32:42.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6059" for this suite. 03/09/23 08:32:42.022
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:32:42.032
Mar  9 08:32:42.032: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename dns 03/09/23 08:32:42.034
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:42.05
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:42.055
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
STEP: Creating a test headless service 03/09/23 08:32:42.06
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2485.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2485.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
 03/09/23 08:32:42.068
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2485.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2485.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
 03/09/23 08:32:42.068
STEP: creating a pod to probe DNS 03/09/23 08:32:42.068
STEP: submitting the pod to kubernetes 03/09/23 08:32:42.068
Mar  9 08:32:42.081: INFO: Waiting up to 15m0s for pod "dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b" in namespace "dns-2485" to be "running"
Mar  9 08:32:42.085: INFO: Pod "dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.477798ms
Mar  9 08:32:44.092: INFO: Pod "dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b": Phase="Running", Reason="", readiness=true. Elapsed: 2.010536979s
Mar  9 08:32:44.092: INFO: Pod "dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b" satisfied condition "running"
STEP: retrieving the pod 03/09/23 08:32:44.092
STEP: looking for the results for each expected name from probers 03/09/23 08:32:44.096
Mar  9 08:32:44.117: INFO: DNS probes using dns-2485/dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b succeeded

STEP: deleting the pod 03/09/23 08:32:44.117
STEP: deleting the test headless service 03/09/23 08:32:44.133
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar  9 08:32:44.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-2485" for this suite. 03/09/23 08:32:44.154
------------------------------
â€¢ [2.168 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:32:42.032
    Mar  9 08:32:42.032: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename dns 03/09/23 08:32:42.034
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:42.05
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:42.055
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Hostname [Conformance]
      test/e2e/network/dns.go:248
    STEP: Creating a test headless service 03/09/23 08:32:42.06
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2485.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2485.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
     03/09/23 08:32:42.068
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2485.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2485.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
     03/09/23 08:32:42.068
    STEP: creating a pod to probe DNS 03/09/23 08:32:42.068
    STEP: submitting the pod to kubernetes 03/09/23 08:32:42.068
    Mar  9 08:32:42.081: INFO: Waiting up to 15m0s for pod "dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b" in namespace "dns-2485" to be "running"
    Mar  9 08:32:42.085: INFO: Pod "dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.477798ms
    Mar  9 08:32:44.092: INFO: Pod "dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b": Phase="Running", Reason="", readiness=true. Elapsed: 2.010536979s
    Mar  9 08:32:44.092: INFO: Pod "dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 08:32:44.092
    STEP: looking for the results for each expected name from probers 03/09/23 08:32:44.096
    Mar  9 08:32:44.117: INFO: DNS probes using dns-2485/dns-test-cf15b19a-28b2-4213-bbd7-8f8b7a3d677b succeeded

    STEP: deleting the pod 03/09/23 08:32:44.117
    STEP: deleting the test headless service 03/09/23 08:32:44.133
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:32:44.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-2485" for this suite. 03/09/23 08:32:44.154
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:32:44.202
Mar  9 08:32:44.202: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-runtime 03/09/23 08:32:44.204
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:44.219
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:44.224
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 03/09/23 08:32:44.239
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 03/09/23 08:33:02.333
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 03/09/23 08:33:02.337
STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 03/09/23 08:33:02.345
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 03/09/23 08:33:02.345
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 03/09/23 08:33:02.37
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 03/09/23 08:33:05.389
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 03/09/23 08:33:07.402
STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 03/09/23 08:33:07.409
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 03/09/23 08:33:07.41
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 03/09/23 08:33:07.432
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 03/09/23 08:33:08.442
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 03/09/23 08:33:11.459
STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 03/09/23 08:33:11.467
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 03/09/23 08:33:11.467
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar  9 08:33:11.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-3063" for this suite. 03/09/23 08:33:11.505
------------------------------
â€¢ [SLOW TEST] [27.310 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    when starting a container that exits
    test/e2e/common/node/runtime.go:45
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:32:44.202
    Mar  9 08:32:44.202: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-runtime 03/09/23 08:32:44.204
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:32:44.219
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:32:44.224
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52
    STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 03/09/23 08:32:44.239
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 03/09/23 08:33:02.333
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 03/09/23 08:33:02.337
    STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 03/09/23 08:33:02.345
    STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 03/09/23 08:33:02.345
    STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 03/09/23 08:33:02.37
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 03/09/23 08:33:05.389
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 03/09/23 08:33:07.402
    STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 03/09/23 08:33:07.409
    STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 03/09/23 08:33:07.41
    STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 03/09/23 08:33:07.432
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 03/09/23 08:33:08.442
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 03/09/23 08:33:11.459
    STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 03/09/23 08:33:11.467
    STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 03/09/23 08:33:11.467
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:33:11.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-3063" for this suite. 03/09/23 08:33:11.505
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:33:11.514
Mar  9 08:33:11.514: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:33:11.516
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:33:11.535
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:33:11.54
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
STEP: creating service in namespace services-2482 03/09/23 08:33:11.546
STEP: creating service affinity-clusterip in namespace services-2482 03/09/23 08:33:11.546
STEP: creating replication controller affinity-clusterip in namespace services-2482 03/09/23 08:33:11.575
I0309 08:33:11.592300      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-2482, replica count: 3
I0309 08:33:14.643424      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:17.644480      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:20.644929      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:23.647171      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:26.648878      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:29.651068      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:32.653475      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:35.654503      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:38.656678      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:41.658073      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:33:44.658283      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 08:33:44.666: INFO: Creating new exec pod
Mar  9 08:33:44.680: INFO: Waiting up to 5m0s for pod "execpod-affinitymmhp9" in namespace "services-2482" to be "running"
Mar  9 08:33:44.684: INFO: Pod "execpod-affinitymmhp9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.987939ms
Mar  9 08:33:46.689: INFO: Pod "execpod-affinitymmhp9": Phase="Running", Reason="", readiness=true. Elapsed: 2.009174745s
Mar  9 08:33:46.689: INFO: Pod "execpod-affinitymmhp9" satisfied condition "running"
Mar  9 08:33:47.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2482 exec execpod-affinitymmhp9 -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
Mar  9 08:33:47.943: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Mar  9 08:33:47.943: INFO: stdout: ""
Mar  9 08:33:47.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2482 exec execpod-affinitymmhp9 -- /bin/sh -x -c nc -v -z -w 2 10.99.235.209 80'
Mar  9 08:33:48.235: INFO: stderr: "+ nc -v -z -w 2 10.99.235.209 80\nConnection to 10.99.235.209 80 port [tcp/http] succeeded!\n"
Mar  9 08:33:48.235: INFO: stdout: ""
Mar  9 08:33:48.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2482 exec execpod-affinitymmhp9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.235.209:80/ ; done'
Mar  9 08:33:48.672: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n"
Mar  9 08:33:48.672: INFO: stdout: "\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk"
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.673: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.673: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.673: INFO: Received response from host: affinity-clusterip-4d6sk
Mar  9 08:33:48.673: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-2482, will wait for the garbage collector to delete the pods 03/09/23 08:33:48.693
Mar  9 08:33:48.756: INFO: Deleting ReplicationController affinity-clusterip took: 7.100029ms
Mar  9 08:33:48.857: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.069192ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:33:51.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2482" for this suite. 03/09/23 08:33:51.386
------------------------------
â€¢ [SLOW TEST] [39.879 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:33:11.514
    Mar  9 08:33:11.514: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:33:11.516
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:33:11.535
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:33:11.54
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2191
    STEP: creating service in namespace services-2482 03/09/23 08:33:11.546
    STEP: creating service affinity-clusterip in namespace services-2482 03/09/23 08:33:11.546
    STEP: creating replication controller affinity-clusterip in namespace services-2482 03/09/23 08:33:11.575
    I0309 08:33:11.592300      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-2482, replica count: 3
    I0309 08:33:14.643424      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:17.644480      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:20.644929      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:23.647171      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:26.648878      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:29.651068      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:32.653475      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:35.654503      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:38.656678      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:41.658073      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:33:44.658283      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 08:33:44.666: INFO: Creating new exec pod
    Mar  9 08:33:44.680: INFO: Waiting up to 5m0s for pod "execpod-affinitymmhp9" in namespace "services-2482" to be "running"
    Mar  9 08:33:44.684: INFO: Pod "execpod-affinitymmhp9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.987939ms
    Mar  9 08:33:46.689: INFO: Pod "execpod-affinitymmhp9": Phase="Running", Reason="", readiness=true. Elapsed: 2.009174745s
    Mar  9 08:33:46.689: INFO: Pod "execpod-affinitymmhp9" satisfied condition "running"
    Mar  9 08:33:47.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2482 exec execpod-affinitymmhp9 -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
    Mar  9 08:33:47.943: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
    Mar  9 08:33:47.943: INFO: stdout: ""
    Mar  9 08:33:47.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2482 exec execpod-affinitymmhp9 -- /bin/sh -x -c nc -v -z -w 2 10.99.235.209 80'
    Mar  9 08:33:48.235: INFO: stderr: "+ nc -v -z -w 2 10.99.235.209 80\nConnection to 10.99.235.209 80 port [tcp/http] succeeded!\n"
    Mar  9 08:33:48.235: INFO: stdout: ""
    Mar  9 08:33:48.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2482 exec execpod-affinitymmhp9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.235.209:80/ ; done'
    Mar  9 08:33:48.672: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.235.209:80/\n"
    Mar  9 08:33:48.672: INFO: stdout: "\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk\naffinity-clusterip-4d6sk"
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.672: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.673: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.673: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.673: INFO: Received response from host: affinity-clusterip-4d6sk
    Mar  9 08:33:48.673: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip in namespace services-2482, will wait for the garbage collector to delete the pods 03/09/23 08:33:48.693
    Mar  9 08:33:48.756: INFO: Deleting ReplicationController affinity-clusterip took: 7.100029ms
    Mar  9 08:33:48.857: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.069192ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:33:51.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2482" for this suite. 03/09/23 08:33:51.386
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:33:51.393
Mar  9 08:33:51.394: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename endpointslice 03/09/23 08:33:51.398
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:33:51.411
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:33:51.416
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
STEP: referencing a single matching pod 03/09/23 08:33:56.533
STEP: referencing matching pods with named port 03/09/23 08:34:01.542
STEP: creating empty Endpoints and EndpointSlices for no matching Pods 03/09/23 08:34:06.553
STEP: recreating EndpointSlices after they've been deleted 03/09/23 08:34:11.563
Mar  9 08:34:11.585: INFO: EndpointSlice for Service endpointslice-9949/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Mar  9 08:34:21.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-9949" for this suite. 03/09/23 08:34:21.602
------------------------------
â€¢ [SLOW TEST] [30.218 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:33:51.393
    Mar  9 08:33:51.394: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename endpointslice 03/09/23 08:33:51.398
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:33:51.411
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:33:51.416
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
      test/e2e/network/endpointslice.go:205
    STEP: referencing a single matching pod 03/09/23 08:33:56.533
    STEP: referencing matching pods with named port 03/09/23 08:34:01.542
    STEP: creating empty Endpoints and EndpointSlices for no matching Pods 03/09/23 08:34:06.553
    STEP: recreating EndpointSlices after they've been deleted 03/09/23 08:34:11.563
    Mar  9 08:34:11.585: INFO: EndpointSlice for Service endpointslice-9949/example-named-port not found
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:34:21.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-9949" for this suite. 03/09/23 08:34:21.602
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
[BeforeEach] [sig-node] Pods Extended
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:34:21.612
Mar  9 08:34:21.612: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 08:34:21.614
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:21.631
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:21.636
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
STEP: creating the pod 03/09/23 08:34:21.641
STEP: submitting the pod to kubernetes 03/09/23 08:34:21.641
STEP: verifying QOS class is set on the pod 03/09/23 08:34:21.651
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/node/init/init.go:32
Mar  9 08:34:21.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods Extended
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods Extended
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-4837" for this suite. 03/09/23 08:34:21.661
------------------------------
â€¢ [0.056 seconds]
[sig-node] Pods Extended
test/e2e/node/framework.go:23
  Pods Set QOS Class
  test/e2e/node/pods.go:150
    should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
    test/e2e/node/pods.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods Extended
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:34:21.612
    Mar  9 08:34:21.612: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 08:34:21.614
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:21.631
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:21.636
    [BeforeEach] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Pods Set QOS Class
      test/e2e/node/pods.go:152
    [It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
      test/e2e/node/pods.go:161
    STEP: creating the pod 03/09/23 08:34:21.641
    STEP: submitting the pod to kubernetes 03/09/23 08:34:21.641
    STEP: verifying QOS class is set on the pod 03/09/23 08:34:21.651
    [AfterEach] [sig-node] Pods Extended
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:34:21.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods Extended
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods Extended
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-4837" for this suite. 03/09/23 08:34:21.661
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:34:21.67
Mar  9 08:34:21.671: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 03/09/23 08:34:21.672
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:21.688
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:21.693
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:31
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
STEP: Setting up the test 03/09/23 08:34:21.698
STEP: Creating hostNetwork=false pod 03/09/23 08:34:21.698
Mar  9 08:34:21.708: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-9958" to be "running and ready"
Mar  9 08:34:21.711: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.574188ms
Mar  9 08:34:21.712: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:34:23.716: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008444321s
Mar  9 08:34:23.716: INFO: The phase of Pod test-pod is Running (Ready = true)
Mar  9 08:34:23.716: INFO: Pod "test-pod" satisfied condition "running and ready"
STEP: Creating hostNetwork=true pod 03/09/23 08:34:23.72
Mar  9 08:34:23.727: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-9958" to be "running and ready"
Mar  9 08:34:23.731: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.624707ms
Mar  9 08:34:23.731: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:34:25.736: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008922906s
Mar  9 08:34:25.736: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
Mar  9 08:34:25.736: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
STEP: Running the test 03/09/23 08:34:25.74
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 03/09/23 08:34:25.74
Mar  9 08:34:25.740: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:25.740: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:25.741: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:25.741: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Mar  9 08:34:25.864: INFO: Exec stderr: ""
Mar  9 08:34:25.864: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:25.864: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:25.865: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:25.865: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Mar  9 08:34:25.976: INFO: Exec stderr: ""
Mar  9 08:34:25.976: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:25.976: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:25.977: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:25.977: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Mar  9 08:34:26.104: INFO: Exec stderr: ""
Mar  9 08:34:26.104: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:26.104: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:26.105: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:26.105: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Mar  9 08:34:26.221: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 03/09/23 08:34:26.221
Mar  9 08:34:26.222: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:26.222: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:26.223: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:26.223: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Mar  9 08:34:26.329: INFO: Exec stderr: ""
Mar  9 08:34:26.329: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:26.329: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:26.330: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:26.330: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Mar  9 08:34:26.434: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 03/09/23 08:34:26.434
Mar  9 08:34:26.434: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:26.434: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:26.435: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:26.436: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Mar  9 08:34:26.559: INFO: Exec stderr: ""
Mar  9 08:34:26.559: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:26.559: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:26.560: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:26.560: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Mar  9 08:34:26.687: INFO: Exec stderr: ""
Mar  9 08:34:26.687: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:26.688: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:26.689: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:26.689: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Mar  9 08:34:26.813: INFO: Exec stderr: ""
Mar  9 08:34:26.813: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:34:26.813: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:34:26.814: INFO: ExecWithOptions: Clientset creation
Mar  9 08:34:26.814: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Mar  9 08:34:26.928: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/node/init/init.go:32
Mar  9 08:34:26.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  tear down framework | framework.go:193
STEP: Destroying namespace "e2e-kubelet-etc-hosts-9958" for this suite. 03/09/23 08:34:26.933
------------------------------
â€¢ [SLOW TEST] [5.270 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:34:21.67
    Mar  9 08:34:21.671: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 03/09/23 08:34:21.672
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:21.688
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:21.693
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:31
    [It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet_etc_hosts.go:63
    STEP: Setting up the test 03/09/23 08:34:21.698
    STEP: Creating hostNetwork=false pod 03/09/23 08:34:21.698
    Mar  9 08:34:21.708: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-9958" to be "running and ready"
    Mar  9 08:34:21.711: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.574188ms
    Mar  9 08:34:21.712: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:34:23.716: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008444321s
    Mar  9 08:34:23.716: INFO: The phase of Pod test-pod is Running (Ready = true)
    Mar  9 08:34:23.716: INFO: Pod "test-pod" satisfied condition "running and ready"
    STEP: Creating hostNetwork=true pod 03/09/23 08:34:23.72
    Mar  9 08:34:23.727: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-9958" to be "running and ready"
    Mar  9 08:34:23.731: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.624707ms
    Mar  9 08:34:23.731: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:34:25.736: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008922906s
    Mar  9 08:34:25.736: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
    Mar  9 08:34:25.736: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
    STEP: Running the test 03/09/23 08:34:25.74
    STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 03/09/23 08:34:25.74
    Mar  9 08:34:25.740: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:25.740: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:25.741: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:25.741: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Mar  9 08:34:25.864: INFO: Exec stderr: ""
    Mar  9 08:34:25.864: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:25.864: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:25.865: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:25.865: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Mar  9 08:34:25.976: INFO: Exec stderr: ""
    Mar  9 08:34:25.976: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:25.976: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:25.977: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:25.977: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Mar  9 08:34:26.104: INFO: Exec stderr: ""
    Mar  9 08:34:26.104: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:26.104: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:26.105: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:26.105: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Mar  9 08:34:26.221: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 03/09/23 08:34:26.221
    Mar  9 08:34:26.222: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:26.222: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:26.223: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:26.223: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Mar  9 08:34:26.329: INFO: Exec stderr: ""
    Mar  9 08:34:26.329: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:26.329: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:26.330: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:26.330: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Mar  9 08:34:26.434: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 03/09/23 08:34:26.434
    Mar  9 08:34:26.434: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:26.434: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:26.435: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:26.436: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Mar  9 08:34:26.559: INFO: Exec stderr: ""
    Mar  9 08:34:26.559: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:26.559: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:26.560: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:26.560: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Mar  9 08:34:26.687: INFO: Exec stderr: ""
    Mar  9 08:34:26.687: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:26.688: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:26.689: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:26.689: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Mar  9 08:34:26.813: INFO: Exec stderr: ""
    Mar  9 08:34:26.813: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9958 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:34:26.813: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:34:26.814: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:34:26.814: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9958/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Mar  9 08:34:26.928: INFO: Exec stderr: ""
    [AfterEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:34:26.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      tear down framework | framework.go:193
    STEP: Destroying namespace "e2e-kubelet-etc-hosts-9958" for this suite. 03/09/23 08:34:26.933
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:34:26.943
Mar  9 08:34:26.943: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename gc 03/09/23 08:34:26.945
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:26.961
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:26.965
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
STEP: create the rc1 03/09/23 08:34:26.976
STEP: create the rc2 03/09/23 08:34:26.986
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 03/09/23 08:34:32
STEP: delete the rc simpletest-rc-to-be-deleted 03/09/23 08:34:32.965
STEP: wait for the rc to be deleted 03/09/23 08:34:32.971
Mar  9 08:34:37.994: INFO: 69 pods remaining
Mar  9 08:34:37.994: INFO: 69 pods has nil DeletionTimestamp
Mar  9 08:34:37.994: INFO: 
STEP: Gathering metrics 03/09/23 08:34:42.994
Mar  9 08:34:43.040: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
Mar  9 08:34:43.044: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 4.469927ms
Mar  9 08:34:43.044: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
Mar  9 08:34:43.044: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
Mar  9 08:34:43.206: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Mar  9 08:34:43.206: INFO: Deleting pod "simpletest-rc-to-be-deleted-27nns" in namespace "gc-2554"
Mar  9 08:34:43.221: INFO: Deleting pod "simpletest-rc-to-be-deleted-2dgxv" in namespace "gc-2554"
Mar  9 08:34:43.236: INFO: Deleting pod "simpletest-rc-to-be-deleted-2h2p8" in namespace "gc-2554"
Mar  9 08:34:43.248: INFO: Deleting pod "simpletest-rc-to-be-deleted-2jbvw" in namespace "gc-2554"
Mar  9 08:34:43.258: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qjc8" in namespace "gc-2554"
Mar  9 08:34:43.271: INFO: Deleting pod "simpletest-rc-to-be-deleted-2t9sk" in namespace "gc-2554"
Mar  9 08:34:43.286: INFO: Deleting pod "simpletest-rc-to-be-deleted-2z4xp" in namespace "gc-2554"
Mar  9 08:34:43.301: INFO: Deleting pod "simpletest-rc-to-be-deleted-49vfr" in namespace "gc-2554"
Mar  9 08:34:43.322: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dnwc" in namespace "gc-2554"
Mar  9 08:34:43.336: INFO: Deleting pod "simpletest-rc-to-be-deleted-4k4j8" in namespace "gc-2554"
Mar  9 08:34:43.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-4k6ff" in namespace "gc-2554"
Mar  9 08:34:43.366: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vxx8" in namespace "gc-2554"
Mar  9 08:34:43.383: INFO: Deleting pod "simpletest-rc-to-be-deleted-56cjh" in namespace "gc-2554"
Mar  9 08:34:43.409: INFO: Deleting pod "simpletest-rc-to-be-deleted-56tmw" in namespace "gc-2554"
Mar  9 08:34:43.426: INFO: Deleting pod "simpletest-rc-to-be-deleted-58fpm" in namespace "gc-2554"
Mar  9 08:34:43.448: INFO: Deleting pod "simpletest-rc-to-be-deleted-5cmdd" in namespace "gc-2554"
Mar  9 08:34:43.475: INFO: Deleting pod "simpletest-rc-to-be-deleted-5llzv" in namespace "gc-2554"
Mar  9 08:34:43.511: INFO: Deleting pod "simpletest-rc-to-be-deleted-5q6bp" in namespace "gc-2554"
Mar  9 08:34:43.530: INFO: Deleting pod "simpletest-rc-to-be-deleted-5qfr5" in namespace "gc-2554"
Mar  9 08:34:43.572: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rpc5" in namespace "gc-2554"
Mar  9 08:34:43.592: INFO: Deleting pod "simpletest-rc-to-be-deleted-6p9nq" in namespace "gc-2554"
Mar  9 08:34:43.611: INFO: Deleting pod "simpletest-rc-to-be-deleted-722px" in namespace "gc-2554"
Mar  9 08:34:43.632: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bd87" in namespace "gc-2554"
Mar  9 08:34:43.689: INFO: Deleting pod "simpletest-rc-to-be-deleted-7d22x" in namespace "gc-2554"
Mar  9 08:34:43.710: INFO: Deleting pod "simpletest-rc-to-be-deleted-7dl5c" in namespace "gc-2554"
Mar  9 08:34:43.725: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mz7x" in namespace "gc-2554"
Mar  9 08:34:43.741: INFO: Deleting pod "simpletest-rc-to-be-deleted-84tpf" in namespace "gc-2554"
Mar  9 08:34:43.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-85sgx" in namespace "gc-2554"
Mar  9 08:34:43.841: INFO: Deleting pod "simpletest-rc-to-be-deleted-86qjv" in namespace "gc-2554"
Mar  9 08:34:43.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bl9r" in namespace "gc-2554"
Mar  9 08:34:43.881: INFO: Deleting pod "simpletest-rc-to-be-deleted-8l2wd" in namespace "gc-2554"
Mar  9 08:34:43.892: INFO: Deleting pod "simpletest-rc-to-be-deleted-92djr" in namespace "gc-2554"
Mar  9 08:34:43.937: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mrdt" in namespace "gc-2554"
Mar  9 08:34:43.948: INFO: Deleting pod "simpletest-rc-to-be-deleted-9pn8r" in namespace "gc-2554"
Mar  9 08:34:43.960: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rfhs" in namespace "gc-2554"
Mar  9 08:34:43.984: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rwx2" in namespace "gc-2554"
Mar  9 08:34:44.007: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tds9" in namespace "gc-2554"
Mar  9 08:34:44.029: INFO: Deleting pod "simpletest-rc-to-be-deleted-b5tvx" in namespace "gc-2554"
Mar  9 08:34:44.063: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8z9m" in namespace "gc-2554"
Mar  9 08:34:44.089: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjdmn" in namespace "gc-2554"
Mar  9 08:34:44.103: INFO: Deleting pod "simpletest-rc-to-be-deleted-bp64k" in namespace "gc-2554"
Mar  9 08:34:44.117: INFO: Deleting pod "simpletest-rc-to-be-deleted-c444n" in namespace "gc-2554"
Mar  9 08:34:44.136: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgvlw" in namespace "gc-2554"
Mar  9 08:34:44.165: INFO: Deleting pod "simpletest-rc-to-be-deleted-cqlwk" in namespace "gc-2554"
Mar  9 08:34:44.201: INFO: Deleting pod "simpletest-rc-to-be-deleted-cvwfm" in namespace "gc-2554"
Mar  9 08:34:44.231: INFO: Deleting pod "simpletest-rc-to-be-deleted-cz65l" in namespace "gc-2554"
Mar  9 08:34:44.259: INFO: Deleting pod "simpletest-rc-to-be-deleted-dcxks" in namespace "gc-2554"
Mar  9 08:34:44.282: INFO: Deleting pod "simpletest-rc-to-be-deleted-dskkn" in namespace "gc-2554"
Mar  9 08:34:44.297: INFO: Deleting pod "simpletest-rc-to-be-deleted-fgztn" in namespace "gc-2554"
Mar  9 08:34:44.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhst2" in namespace "gc-2554"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar  9 08:34:44.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-2554" for this suite. 03/09/23 08:34:44.422
------------------------------
â€¢ [SLOW TEST] [17.488 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:34:26.943
    Mar  9 08:34:26.943: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename gc 03/09/23 08:34:26.945
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:26.961
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:26.965
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
      test/e2e/apimachinery/garbage_collector.go:735
    STEP: create the rc1 03/09/23 08:34:26.976
    STEP: create the rc2 03/09/23 08:34:26.986
    STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 03/09/23 08:34:32
    STEP: delete the rc simpletest-rc-to-be-deleted 03/09/23 08:34:32.965
    STEP: wait for the rc to be deleted 03/09/23 08:34:32.971
    Mar  9 08:34:37.994: INFO: 69 pods remaining
    Mar  9 08:34:37.994: INFO: 69 pods has nil DeletionTimestamp
    Mar  9 08:34:37.994: INFO: 
    STEP: Gathering metrics 03/09/23 08:34:42.994
    Mar  9 08:34:43.040: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
    Mar  9 08:34:43.044: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 4.469927ms
    Mar  9 08:34:43.044: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
    Mar  9 08:34:43.044: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
    Mar  9 08:34:43.206: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Mar  9 08:34:43.206: INFO: Deleting pod "simpletest-rc-to-be-deleted-27nns" in namespace "gc-2554"
    Mar  9 08:34:43.221: INFO: Deleting pod "simpletest-rc-to-be-deleted-2dgxv" in namespace "gc-2554"
    Mar  9 08:34:43.236: INFO: Deleting pod "simpletest-rc-to-be-deleted-2h2p8" in namespace "gc-2554"
    Mar  9 08:34:43.248: INFO: Deleting pod "simpletest-rc-to-be-deleted-2jbvw" in namespace "gc-2554"
    Mar  9 08:34:43.258: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qjc8" in namespace "gc-2554"
    Mar  9 08:34:43.271: INFO: Deleting pod "simpletest-rc-to-be-deleted-2t9sk" in namespace "gc-2554"
    Mar  9 08:34:43.286: INFO: Deleting pod "simpletest-rc-to-be-deleted-2z4xp" in namespace "gc-2554"
    Mar  9 08:34:43.301: INFO: Deleting pod "simpletest-rc-to-be-deleted-49vfr" in namespace "gc-2554"
    Mar  9 08:34:43.322: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dnwc" in namespace "gc-2554"
    Mar  9 08:34:43.336: INFO: Deleting pod "simpletest-rc-to-be-deleted-4k4j8" in namespace "gc-2554"
    Mar  9 08:34:43.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-4k6ff" in namespace "gc-2554"
    Mar  9 08:34:43.366: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vxx8" in namespace "gc-2554"
    Mar  9 08:34:43.383: INFO: Deleting pod "simpletest-rc-to-be-deleted-56cjh" in namespace "gc-2554"
    Mar  9 08:34:43.409: INFO: Deleting pod "simpletest-rc-to-be-deleted-56tmw" in namespace "gc-2554"
    Mar  9 08:34:43.426: INFO: Deleting pod "simpletest-rc-to-be-deleted-58fpm" in namespace "gc-2554"
    Mar  9 08:34:43.448: INFO: Deleting pod "simpletest-rc-to-be-deleted-5cmdd" in namespace "gc-2554"
    Mar  9 08:34:43.475: INFO: Deleting pod "simpletest-rc-to-be-deleted-5llzv" in namespace "gc-2554"
    Mar  9 08:34:43.511: INFO: Deleting pod "simpletest-rc-to-be-deleted-5q6bp" in namespace "gc-2554"
    Mar  9 08:34:43.530: INFO: Deleting pod "simpletest-rc-to-be-deleted-5qfr5" in namespace "gc-2554"
    Mar  9 08:34:43.572: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rpc5" in namespace "gc-2554"
    Mar  9 08:34:43.592: INFO: Deleting pod "simpletest-rc-to-be-deleted-6p9nq" in namespace "gc-2554"
    Mar  9 08:34:43.611: INFO: Deleting pod "simpletest-rc-to-be-deleted-722px" in namespace "gc-2554"
    Mar  9 08:34:43.632: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bd87" in namespace "gc-2554"
    Mar  9 08:34:43.689: INFO: Deleting pod "simpletest-rc-to-be-deleted-7d22x" in namespace "gc-2554"
    Mar  9 08:34:43.710: INFO: Deleting pod "simpletest-rc-to-be-deleted-7dl5c" in namespace "gc-2554"
    Mar  9 08:34:43.725: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mz7x" in namespace "gc-2554"
    Mar  9 08:34:43.741: INFO: Deleting pod "simpletest-rc-to-be-deleted-84tpf" in namespace "gc-2554"
    Mar  9 08:34:43.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-85sgx" in namespace "gc-2554"
    Mar  9 08:34:43.841: INFO: Deleting pod "simpletest-rc-to-be-deleted-86qjv" in namespace "gc-2554"
    Mar  9 08:34:43.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bl9r" in namespace "gc-2554"
    Mar  9 08:34:43.881: INFO: Deleting pod "simpletest-rc-to-be-deleted-8l2wd" in namespace "gc-2554"
    Mar  9 08:34:43.892: INFO: Deleting pod "simpletest-rc-to-be-deleted-92djr" in namespace "gc-2554"
    Mar  9 08:34:43.937: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mrdt" in namespace "gc-2554"
    Mar  9 08:34:43.948: INFO: Deleting pod "simpletest-rc-to-be-deleted-9pn8r" in namespace "gc-2554"
    Mar  9 08:34:43.960: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rfhs" in namespace "gc-2554"
    Mar  9 08:34:43.984: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rwx2" in namespace "gc-2554"
    Mar  9 08:34:44.007: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tds9" in namespace "gc-2554"
    Mar  9 08:34:44.029: INFO: Deleting pod "simpletest-rc-to-be-deleted-b5tvx" in namespace "gc-2554"
    Mar  9 08:34:44.063: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8z9m" in namespace "gc-2554"
    Mar  9 08:34:44.089: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjdmn" in namespace "gc-2554"
    Mar  9 08:34:44.103: INFO: Deleting pod "simpletest-rc-to-be-deleted-bp64k" in namespace "gc-2554"
    Mar  9 08:34:44.117: INFO: Deleting pod "simpletest-rc-to-be-deleted-c444n" in namespace "gc-2554"
    Mar  9 08:34:44.136: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgvlw" in namespace "gc-2554"
    Mar  9 08:34:44.165: INFO: Deleting pod "simpletest-rc-to-be-deleted-cqlwk" in namespace "gc-2554"
    Mar  9 08:34:44.201: INFO: Deleting pod "simpletest-rc-to-be-deleted-cvwfm" in namespace "gc-2554"
    Mar  9 08:34:44.231: INFO: Deleting pod "simpletest-rc-to-be-deleted-cz65l" in namespace "gc-2554"
    Mar  9 08:34:44.259: INFO: Deleting pod "simpletest-rc-to-be-deleted-dcxks" in namespace "gc-2554"
    Mar  9 08:34:44.282: INFO: Deleting pod "simpletest-rc-to-be-deleted-dskkn" in namespace "gc-2554"
    Mar  9 08:34:44.297: INFO: Deleting pod "simpletest-rc-to-be-deleted-fgztn" in namespace "gc-2554"
    Mar  9 08:34:44.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhst2" in namespace "gc-2554"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:34:44.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-2554" for this suite. 03/09/23 08:34:44.422
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:34:44.454
Mar  9 08:34:44.455: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:34:44.456
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:44.469
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:44.473
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
STEP: Starting the proxy 03/09/23 08:34:44.48
Mar  9 08:34:44.481: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-1039 proxy --unix-socket=/tmp/kubectl-proxy-unix860295540/test'
STEP: retrieving proxy /api/ output 03/09/23 08:34:44.682
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:34:44.683: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1039" for this suite. 03/09/23 08:34:44.69
------------------------------
â€¢ [0.245 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support --unix-socket=/path  [Conformance]
    test/e2e/kubectl/kubectl.go:1812

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:34:44.454
    Mar  9 08:34:44.455: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:34:44.456
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:44.469
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:44.473
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support --unix-socket=/path  [Conformance]
      test/e2e/kubectl/kubectl.go:1812
    STEP: Starting the proxy 03/09/23 08:34:44.48
    Mar  9 08:34:44.481: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-1039 proxy --unix-socket=/tmp/kubectl-proxy-unix860295540/test'
    STEP: retrieving proxy /api/ output 03/09/23 08:34:44.682
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:34:44.683: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1039" for this suite. 03/09/23 08:34:44.69
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:34:44.702
Mar  9 08:34:44.702: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 08:34:44.71
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:44.762
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:44.779
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
STEP: Counting existing ResourceQuota 03/09/23 08:34:44.788
STEP: Creating a ResourceQuota 03/09/23 08:34:49.792
STEP: Ensuring resource quota status is calculated 03/09/23 08:34:49.799
STEP: Creating a ReplicationController 03/09/23 08:34:51.804
STEP: Ensuring resource quota status captures replication controller creation 03/09/23 08:34:51.826
STEP: Deleting a ReplicationController 03/09/23 08:34:53.833
STEP: Ensuring resource quota status released usage 03/09/23 08:34:53.84
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 08:34:55.845: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-2103" for this suite. 03/09/23 08:34:55.851
------------------------------
â€¢ [SLOW TEST] [11.158 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:34:44.702
    Mar  9 08:34:44.702: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 08:34:44.71
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:44.762
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:44.779
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
      test/e2e/apimachinery/resource_quota.go:392
    STEP: Counting existing ResourceQuota 03/09/23 08:34:44.788
    STEP: Creating a ResourceQuota 03/09/23 08:34:49.792
    STEP: Ensuring resource quota status is calculated 03/09/23 08:34:49.799
    STEP: Creating a ReplicationController 03/09/23 08:34:51.804
    STEP: Ensuring resource quota status captures replication controller creation 03/09/23 08:34:51.826
    STEP: Deleting a ReplicationController 03/09/23 08:34:53.833
    STEP: Ensuring resource quota status released usage 03/09/23 08:34:53.84
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:34:55.845: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-2103" for this suite. 03/09/23 08:34:55.851
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:34:55.862
Mar  9 08:34:55.862: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename daemonsets 03/09/23 08:34:55.864
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:55.88
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:55.885
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862
STEP: Creating simple DaemonSet "daemon-set" 03/09/23 08:34:55.922
STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 08:34:55.929
Mar  9 08:34:55.935: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:34:55.941: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:34:55.941: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:34:56.948: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:34:56.953: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:34:56.953: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:34:57.948: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:34:57.953: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 08:34:57.953: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Getting /status 03/09/23 08:34:57.957
Mar  9 08:34:57.963: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status 03/09/23 08:34:57.963
Mar  9 08:34:57.981: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated 03/09/23 08:34:57.981
Mar  9 08:34:57.985: INFO: Observed &DaemonSet event: ADDED
Mar  9 08:34:57.985: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:57.985: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:57.985: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:57.986: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:57.986: INFO: Found daemon set daemon-set in namespace daemonsets-1325 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Mar  9 08:34:57.986: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status 03/09/23 08:34:57.986
STEP: watching for the daemon set status to be patched 03/09/23 08:34:57.998
Mar  9 08:34:58.001: INFO: Observed &DaemonSet event: ADDED
Mar  9 08:34:58.001: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:58.001: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:58.002: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:58.002: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:58.002: INFO: Observed daemon set daemon-set in namespace daemonsets-1325 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Mar  9 08:34:58.002: INFO: Observed &DaemonSet event: MODIFIED
Mar  9 08:34:58.002: INFO: Found daemon set daemon-set in namespace daemonsets-1325 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Mar  9 08:34:58.002: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/09/23 08:34:58.007
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1325, will wait for the garbage collector to delete the pods 03/09/23 08:34:58.007
Mar  9 08:34:58.069: INFO: Deleting DaemonSet.extensions daemon-set took: 7.007803ms
Mar  9 08:34:58.170: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.873258ms
Mar  9 08:35:00.973: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:35:00.973: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar  9 08:35:00.977: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"262128"},"items":null}

Mar  9 08:35:00.980: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"262128"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:00.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-1325" for this suite. 03/09/23 08:35:01.001
------------------------------
â€¢ [SLOW TEST] [5.147 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:862

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:34:55.862
    Mar  9 08:34:55.862: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename daemonsets 03/09/23 08:34:55.864
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:34:55.88
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:34:55.885
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should verify changes to a daemon set status [Conformance]
      test/e2e/apps/daemon_set.go:862
    STEP: Creating simple DaemonSet "daemon-set" 03/09/23 08:34:55.922
    STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 08:34:55.929
    Mar  9 08:34:55.935: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:34:55.941: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:34:55.941: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:34:56.948: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:34:56.953: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:34:56.953: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:34:57.948: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:34:57.953: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 08:34:57.953: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Getting /status 03/09/23 08:34:57.957
    Mar  9 08:34:57.963: INFO: Daemon Set daemon-set has Conditions: []
    STEP: updating the DaemonSet Status 03/09/23 08:34:57.963
    Mar  9 08:34:57.981: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the daemon set status to be updated 03/09/23 08:34:57.981
    Mar  9 08:34:57.985: INFO: Observed &DaemonSet event: ADDED
    Mar  9 08:34:57.985: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:57.985: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:57.985: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:57.986: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:57.986: INFO: Found daemon set daemon-set in namespace daemonsets-1325 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Mar  9 08:34:57.986: INFO: Daemon set daemon-set has an updated status
    STEP: patching the DaemonSet Status 03/09/23 08:34:57.986
    STEP: watching for the daemon set status to be patched 03/09/23 08:34:57.998
    Mar  9 08:34:58.001: INFO: Observed &DaemonSet event: ADDED
    Mar  9 08:34:58.001: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:58.001: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:58.002: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:58.002: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:58.002: INFO: Observed daemon set daemon-set in namespace daemonsets-1325 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Mar  9 08:34:58.002: INFO: Observed &DaemonSet event: MODIFIED
    Mar  9 08:34:58.002: INFO: Found daemon set daemon-set in namespace daemonsets-1325 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
    Mar  9 08:34:58.002: INFO: Daemon set daemon-set has a patched status
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/09/23 08:34:58.007
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1325, will wait for the garbage collector to delete the pods 03/09/23 08:34:58.007
    Mar  9 08:34:58.069: INFO: Deleting DaemonSet.extensions daemon-set took: 7.007803ms
    Mar  9 08:34:58.170: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.873258ms
    Mar  9 08:35:00.973: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:35:00.973: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar  9 08:35:00.977: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"262128"},"items":null}

    Mar  9 08:35:00.980: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"262128"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:00.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-1325" for this suite. 03/09/23 08:35:01.001
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] PodTemplates
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:01.01
Mar  9 08:35:01.010: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename podtemplate 03/09/23 08:35:01.012
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:01.025
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:01.03
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
STEP: Create set of pod templates 03/09/23 08:35:01.035
Mar  9 08:35:01.043: INFO: created test-podtemplate-1
Mar  9 08:35:01.049: INFO: created test-podtemplate-2
Mar  9 08:35:01.055: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace 03/09/23 08:35:01.055
STEP: delete collection of pod templates 03/09/23 08:35:01.059
Mar  9 08:35:01.059: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity 03/09/23 08:35:01.073
Mar  9 08:35:01.074: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:01.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-8675" for this suite. 03/09/23 08:35:01.083
------------------------------
â€¢ [0.080 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:01.01
    Mar  9 08:35:01.010: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename podtemplate 03/09/23 08:35:01.012
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:01.025
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:01.03
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of pod templates [Conformance]
      test/e2e/common/node/podtemplates.go:122
    STEP: Create set of pod templates 03/09/23 08:35:01.035
    Mar  9 08:35:01.043: INFO: created test-podtemplate-1
    Mar  9 08:35:01.049: INFO: created test-podtemplate-2
    Mar  9 08:35:01.055: INFO: created test-podtemplate-3
    STEP: get a list of pod templates with a label in the current namespace 03/09/23 08:35:01.055
    STEP: delete collection of pod templates 03/09/23 08:35:01.059
    Mar  9 08:35:01.059: INFO: requesting DeleteCollection of pod templates
    STEP: check that the list of pod templates matches the requested quantity 03/09/23 08:35:01.073
    Mar  9 08:35:01.074: INFO: requesting list of pod templates to confirm quantity
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:01.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-8675" for this suite. 03/09/23 08:35:01.083
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Downward API
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:01.09
Mar  9 08:35:01.091: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:35:01.093
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:01.109
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:01.114
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
STEP: Creating a pod to test downward api env vars 03/09/23 08:35:01.12
Mar  9 08:35:01.130: INFO: Waiting up to 5m0s for pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc" in namespace "downward-api-2381" to be "Succeeded or Failed"
Mar  9 08:35:01.134: INFO: Pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc": Phase="Pending", Reason="", readiness=false. Elapsed: 3.868848ms
Mar  9 08:35:03.139: INFO: Pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009067584s
Mar  9 08:35:05.138: INFO: Pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008017827s
STEP: Saw pod success 03/09/23 08:35:05.138
Mar  9 08:35:05.138: INFO: Pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc" satisfied condition "Succeeded or Failed"
Mar  9 08:35:05.142: INFO: Trying to get logs from node k8s-worker1 pod downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc container dapi-container: <nil>
STEP: delete the pod 03/09/23 08:35:05.166
Mar  9 08:35:05.178: INFO: Waiting for pod downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc to disappear
Mar  9 08:35:05.181: INFO: Pod downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:05.181: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-2381" for this suite. 03/09/23 08:35:05.186
------------------------------
â€¢ [4.101 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:01.09
    Mar  9 08:35:01.091: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:35:01.093
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:01.109
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:01.114
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:217
    STEP: Creating a pod to test downward api env vars 03/09/23 08:35:01.12
    Mar  9 08:35:01.130: INFO: Waiting up to 5m0s for pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc" in namespace "downward-api-2381" to be "Succeeded or Failed"
    Mar  9 08:35:01.134: INFO: Pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc": Phase="Pending", Reason="", readiness=false. Elapsed: 3.868848ms
    Mar  9 08:35:03.139: INFO: Pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009067584s
    Mar  9 08:35:05.138: INFO: Pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008017827s
    STEP: Saw pod success 03/09/23 08:35:05.138
    Mar  9 08:35:05.138: INFO: Pod "downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc" satisfied condition "Succeeded or Failed"
    Mar  9 08:35:05.142: INFO: Trying to get logs from node k8s-worker1 pod downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc container dapi-container: <nil>
    STEP: delete the pod 03/09/23 08:35:05.166
    Mar  9 08:35:05.178: INFO: Waiting for pod downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc to disappear
    Mar  9 08:35:05.181: INFO: Pod downward-api-60731eb9-0260-4ab6-b45f-a684dcfad2dc no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:05.181: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-2381" for this suite. 03/09/23 08:35:05.186
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:05.196
Mar  9 08:35:05.197: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename job 03/09/23 08:35:05.198
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:05.211
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:05.216
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
STEP: Creating Indexed job 03/09/23 08:35:05.22
STEP: Ensuring job reaches completions 03/09/23 08:35:05.227
STEP: Ensuring pods with index for job exist 03/09/23 08:35:15.231
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:15.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-7540" for this suite. 03/09/23 08:35:15.243
------------------------------
â€¢ [SLOW TEST] [10.054 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:05.196
    Mar  9 08:35:05.197: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename job 03/09/23 08:35:05.198
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:05.211
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:05.216
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
      test/e2e/apps/job.go:366
    STEP: Creating Indexed job 03/09/23 08:35:05.22
    STEP: Ensuring job reaches completions 03/09/23 08:35:05.227
    STEP: Ensuring pods with index for job exist 03/09/23 08:35:15.231
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:15.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-7540" for this suite. 03/09/23 08:35:15.243
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:15.251
Mar  9 08:35:15.251: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 08:35:15.253
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:15.273
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:15.277
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
STEP: Discovering how many secrets are in namespace by default 03/09/23 08:35:15.282
STEP: Counting existing ResourceQuota 03/09/23 08:35:20.286
STEP: Creating a ResourceQuota 03/09/23 08:35:25.291
STEP: Ensuring resource quota status is calculated 03/09/23 08:35:25.298
STEP: Creating a Secret 03/09/23 08:35:27.304
STEP: Ensuring resource quota status captures secret creation 03/09/23 08:35:27.322
STEP: Deleting a secret 03/09/23 08:35:29.327
STEP: Ensuring resource quota status released usage 03/09/23 08:35:29.335
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:31.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-466" for this suite. 03/09/23 08:35:31.349
------------------------------
â€¢ [SLOW TEST] [16.106 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:15.251
    Mar  9 08:35:15.251: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 08:35:15.253
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:15.273
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:15.277
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a secret. [Conformance]
      test/e2e/apimachinery/resource_quota.go:160
    STEP: Discovering how many secrets are in namespace by default 03/09/23 08:35:15.282
    STEP: Counting existing ResourceQuota 03/09/23 08:35:20.286
    STEP: Creating a ResourceQuota 03/09/23 08:35:25.291
    STEP: Ensuring resource quota status is calculated 03/09/23 08:35:25.298
    STEP: Creating a Secret 03/09/23 08:35:27.304
    STEP: Ensuring resource quota status captures secret creation 03/09/23 08:35:27.322
    STEP: Deleting a secret 03/09/23 08:35:29.327
    STEP: Ensuring resource quota status released usage 03/09/23 08:35:29.335
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:31.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-466" for this suite. 03/09/23 08:35:31.349
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:31.362
Mar  9 08:35:31.362: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:35:31.363
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:31.381
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:31.385
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:35:31.406
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:35:32.978
STEP: Deploying the webhook pod 03/09/23 08:35:32.986
STEP: Wait for the deployment to be ready 03/09/23 08:35:33.001
Mar  9 08:35:33.008: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Mar  9 08:35:35.021: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 35, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 35, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 35, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 35, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/09/23 08:35:37.026
STEP: Verifying the service has paired with the endpoint 03/09/23 08:35:37.043
Mar  9 08:35:38.043: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
STEP: Creating a validating webhook configuration 03/09/23 08:35:38.048
STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:35:38.076
STEP: Updating a validating webhook configuration's rules to not include the create operation 03/09/23 08:35:38.097
STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:35:38.112
STEP: Patching a validating webhook configuration's rules to include the create operation 03/09/23 08:35:38.124
STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:35:38.137
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:38.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9577" for this suite. 03/09/23 08:35:38.211
STEP: Destroying namespace "webhook-9577-markers" for this suite. 03/09/23 08:35:38.224
------------------------------
â€¢ [SLOW TEST] [6.877 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:31.362
    Mar  9 08:35:31.362: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:35:31.363
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:31.381
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:31.385
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:35:31.406
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:35:32.978
    STEP: Deploying the webhook pod 03/09/23 08:35:32.986
    STEP: Wait for the deployment to be ready 03/09/23 08:35:33.001
    Mar  9 08:35:33.008: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Mar  9 08:35:35.021: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 35, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 35, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 35, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 35, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/09/23 08:35:37.026
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:35:37.043
    Mar  9 08:35:38.043: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a validating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:413
    STEP: Creating a validating webhook configuration 03/09/23 08:35:38.048
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:35:38.076
    STEP: Updating a validating webhook configuration's rules to not include the create operation 03/09/23 08:35:38.097
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:35:38.112
    STEP: Patching a validating webhook configuration's rules to include the create operation 03/09/23 08:35:38.124
    STEP: Creating a configMap that does not comply to the validation webhook rules 03/09/23 08:35:38.137
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:38.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9577" for this suite. 03/09/23 08:35:38.211
    STEP: Destroying namespace "webhook-9577-markers" for this suite. 03/09/23 08:35:38.224
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:38.24
Mar  9 08:35:38.240: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename events 03/09/23 08:35:38.242
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:38.257
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:38.262
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
STEP: creating a test event 03/09/23 08:35:38.267
STEP: listing all events in all namespaces 03/09/23 08:35:38.273
STEP: patching the test event 03/09/23 08:35:38.279
STEP: fetching the test event 03/09/23 08:35:38.287
STEP: updating the test event 03/09/23 08:35:38.291
STEP: getting the test event 03/09/23 08:35:38.302
STEP: deleting the test event 03/09/23 08:35:38.306
STEP: listing all events in all namespaces 03/09/23 08:35:38.314
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:38.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-9138" for this suite. 03/09/23 08:35:38.326
------------------------------
â€¢ [0.103 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:38.24
    Mar  9 08:35:38.240: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename events 03/09/23 08:35:38.242
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:38.257
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:38.262
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of an event [Conformance]
      test/e2e/instrumentation/core_events.go:57
    STEP: creating a test event 03/09/23 08:35:38.267
    STEP: listing all events in all namespaces 03/09/23 08:35:38.273
    STEP: patching the test event 03/09/23 08:35:38.279
    STEP: fetching the test event 03/09/23 08:35:38.287
    STEP: updating the test event 03/09/23 08:35:38.291
    STEP: getting the test event 03/09/23 08:35:38.302
    STEP: deleting the test event 03/09/23 08:35:38.306
    STEP: listing all events in all namespaces 03/09/23 08:35:38.314
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:38.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-9138" for this suite. 03/09/23 08:35:38.326
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:38.349
Mar  9 08:35:38.349: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replication-controller 03/09/23 08:35:38.351
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:38.367
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:38.372
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
STEP: Given a Pod with a 'name' label pod-adoption is created 03/09/23 08:35:38.376
Mar  9 08:35:38.386: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-4569" to be "running and ready"
Mar  9 08:35:38.393: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 6.776327ms
Mar  9 08:35:38.393: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:35:40.398: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 2.01150786s
Mar  9 08:35:40.398: INFO: The phase of Pod pod-adoption is Running (Ready = true)
Mar  9 08:35:40.398: INFO: Pod "pod-adoption" satisfied condition "running and ready"
STEP: When a replication controller with a matching selector is created 03/09/23 08:35:40.402
STEP: Then the orphan pod is adopted 03/09/23 08:35:40.41
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:41.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-4569" for this suite. 03/09/23 08:35:41.427
------------------------------
â€¢ [3.085 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:38.349
    Mar  9 08:35:38.349: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replication-controller 03/09/23 08:35:38.351
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:38.367
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:38.372
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should adopt matching pods on creation [Conformance]
      test/e2e/apps/rc.go:92
    STEP: Given a Pod with a 'name' label pod-adoption is created 03/09/23 08:35:38.376
    Mar  9 08:35:38.386: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-4569" to be "running and ready"
    Mar  9 08:35:38.393: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 6.776327ms
    Mar  9 08:35:38.393: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:35:40.398: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 2.01150786s
    Mar  9 08:35:40.398: INFO: The phase of Pod pod-adoption is Running (Ready = true)
    Mar  9 08:35:40.398: INFO: Pod "pod-adoption" satisfied condition "running and ready"
    STEP: When a replication controller with a matching selector is created 03/09/23 08:35:40.402
    STEP: Then the orphan pod is adopted 03/09/23 08:35:40.41
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:41.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-4569" for this suite. 03/09/23 08:35:41.427
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:41.444
Mar  9 08:35:41.444: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename watch 03/09/23 08:35:41.446
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:41.462
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:41.466
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
STEP: getting a starting resourceVersion 03/09/23 08:35:41.471
STEP: starting a background goroutine to produce watch events 03/09/23 08:35:41.475
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 03/09/23 08:35:41.475
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:44.253: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-3966" for this suite. 03/09/23 08:35:44.303
------------------------------
â€¢ [2.911 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:41.444
    Mar  9 08:35:41.444: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename watch 03/09/23 08:35:41.446
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:41.462
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:41.466
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should receive events on concurrent watches in same order [Conformance]
      test/e2e/apimachinery/watch.go:334
    STEP: getting a starting resourceVersion 03/09/23 08:35:41.471
    STEP: starting a background goroutine to produce watch events 03/09/23 08:35:41.475
    STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 03/09/23 08:35:41.475
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:44.253: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-3966" for this suite. 03/09/23 08:35:44.303
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:44.362
Mar  9 08:35:44.362: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 08:35:44.364
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:44.401
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:44.406
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
Mar  9 08:35:44.412: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: creating the pod 03/09/23 08:35:44.413
STEP: submitting the pod to kubernetes 03/09/23 08:35:44.413
Mar  9 08:35:44.430: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02" in namespace "pods-5034" to be "running and ready"
Mar  9 08:35:44.434: INFO: Pod "pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02": Phase="Pending", Reason="", readiness=false. Elapsed: 3.955801ms
Mar  9 08:35:44.434: INFO: The phase of Pod pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:35:46.439: INFO: Pod "pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02": Phase="Running", Reason="", readiness=true. Elapsed: 2.008566378s
Mar  9 08:35:46.439: INFO: The phase of Pod pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02 is Running (Ready = true)
Mar  9 08:35:46.439: INFO: Pod "pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:46.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-5034" for this suite. 03/09/23 08:35:46.652
------------------------------
â€¢ [2.297 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:44.362
    Mar  9 08:35:44.362: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 08:35:44.364
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:44.401
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:44.406
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support remote command execution over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:536
    Mar  9 08:35:44.412: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: creating the pod 03/09/23 08:35:44.413
    STEP: submitting the pod to kubernetes 03/09/23 08:35:44.413
    Mar  9 08:35:44.430: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02" in namespace "pods-5034" to be "running and ready"
    Mar  9 08:35:44.434: INFO: Pod "pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02": Phase="Pending", Reason="", readiness=false. Elapsed: 3.955801ms
    Mar  9 08:35:44.434: INFO: The phase of Pod pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:35:46.439: INFO: Pod "pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02": Phase="Running", Reason="", readiness=true. Elapsed: 2.008566378s
    Mar  9 08:35:46.439: INFO: The phase of Pod pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02 is Running (Ready = true)
    Mar  9 08:35:46.439: INFO: Pod "pod-exec-websocket-6f0e78ad-8750-4854-81ae-407bd97b3b02" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:46.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-5034" for this suite. 03/09/23 08:35:46.652
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:46.661
Mar  9 08:35:46.661: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:35:46.663
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:46.688
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:46.693
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:35:46.699
Mar  9 08:35:46.710: INFO: Waiting up to 5m0s for pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198" in namespace "projected-103" to be "Succeeded or Failed"
Mar  9 08:35:46.714: INFO: Pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198": Phase="Pending", Reason="", readiness=false. Elapsed: 4.230373ms
Mar  9 08:35:48.719: INFO: Pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009221076s
Mar  9 08:35:50.719: INFO: Pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009488739s
STEP: Saw pod success 03/09/23 08:35:50.719
Mar  9 08:35:50.720: INFO: Pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198" satisfied condition "Succeeded or Failed"
Mar  9 08:35:50.724: INFO: Trying to get logs from node k8s-worker2 pod downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198 container client-container: <nil>
STEP: delete the pod 03/09/23 08:35:50.765
Mar  9 08:35:50.782: INFO: Waiting for pod downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198 to disappear
Mar  9 08:35:50.786: INFO: Pod downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:35:50.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-103" for this suite. 03/09/23 08:35:50.793
------------------------------
â€¢ [4.149 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:46.661
    Mar  9 08:35:46.661: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:35:46.663
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:46.688
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:46.693
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:68
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:35:46.699
    Mar  9 08:35:46.710: INFO: Waiting up to 5m0s for pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198" in namespace "projected-103" to be "Succeeded or Failed"
    Mar  9 08:35:46.714: INFO: Pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198": Phase="Pending", Reason="", readiness=false. Elapsed: 4.230373ms
    Mar  9 08:35:48.719: INFO: Pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009221076s
    Mar  9 08:35:50.719: INFO: Pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009488739s
    STEP: Saw pod success 03/09/23 08:35:50.719
    Mar  9 08:35:50.720: INFO: Pod "downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198" satisfied condition "Succeeded or Failed"
    Mar  9 08:35:50.724: INFO: Trying to get logs from node k8s-worker2 pod downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:35:50.765
    Mar  9 08:35:50.782: INFO: Waiting for pod downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198 to disappear
    Mar  9 08:35:50.786: INFO: Pod downwardapi-volume-52ffbc42-456e-43ec-887d-771b2b61a198 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:35:50.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-103" for this suite. 03/09/23 08:35:50.793
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:35:50.812
Mar  9 08:35:50.812: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename statefulset 03/09/23 08:35:50.813
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:50.828
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:50.832
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-8283 03/09/23 08:35:50.837
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
STEP: Creating a new StatefulSet 03/09/23 08:35:50.843
Mar  9 08:35:50.854: INFO: Found 0 stateful pods, waiting for 3
Mar  9 08:36:00.861: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:36:00.861: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:36:00.861: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 03/09/23 08:36:00.875
Mar  9 08:36:00.900: INFO: Updating stateful set ss2
STEP: Creating a new revision 03/09/23 08:36:00.9
STEP: Not applying an update when the partition is greater than the number of replicas 03/09/23 08:36:10.917
STEP: Performing a canary update 03/09/23 08:36:10.917
Mar  9 08:36:10.940: INFO: Updating stateful set ss2
Mar  9 08:36:10.949: INFO: Waiting for Pod statefulset-8283/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
STEP: Restoring Pods to the correct revision when they are deleted 03/09/23 08:36:20.959
Mar  9 08:36:20.993: INFO: Found 1 stateful pods, waiting for 3
Mar  9 08:36:31.001: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:36:31.001: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:36:31.001: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update 03/09/23 08:36:31.01
Mar  9 08:36:31.035: INFO: Updating stateful set ss2
Mar  9 08:36:31.044: INFO: Waiting for Pod statefulset-8283/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Mar  9 08:36:41.077: INFO: Updating stateful set ss2
Mar  9 08:36:41.086: INFO: Waiting for StatefulSet statefulset-8283/ss2 to complete update
Mar  9 08:36:41.086: INFO: Waiting for Pod statefulset-8283/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar  9 08:36:51.097: INFO: Deleting all statefulset in ns statefulset-8283
Mar  9 08:36:51.101: INFO: Scaling statefulset ss2 to 0
Mar  9 08:37:01.125: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:37:01.129: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:37:01.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-8283" for this suite. 03/09/23 08:37:01.152
------------------------------
â€¢ [SLOW TEST] [70.348 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/apps/statefulset.go:317

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:35:50.812
    Mar  9 08:35:50.812: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename statefulset 03/09/23 08:35:50.813
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:35:50.828
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:35:50.832
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-8283 03/09/23 08:35:50.837
    [It] should perform canary updates and phased rolling updates of template modifications [Conformance]
      test/e2e/apps/statefulset.go:317
    STEP: Creating a new StatefulSet 03/09/23 08:35:50.843
    Mar  9 08:35:50.854: INFO: Found 0 stateful pods, waiting for 3
    Mar  9 08:36:00.861: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:36:00.861: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:36:00.861: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 03/09/23 08:36:00.875
    Mar  9 08:36:00.900: INFO: Updating stateful set ss2
    STEP: Creating a new revision 03/09/23 08:36:00.9
    STEP: Not applying an update when the partition is greater than the number of replicas 03/09/23 08:36:10.917
    STEP: Performing a canary update 03/09/23 08:36:10.917
    Mar  9 08:36:10.940: INFO: Updating stateful set ss2
    Mar  9 08:36:10.949: INFO: Waiting for Pod statefulset-8283/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    STEP: Restoring Pods to the correct revision when they are deleted 03/09/23 08:36:20.959
    Mar  9 08:36:20.993: INFO: Found 1 stateful pods, waiting for 3
    Mar  9 08:36:31.001: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:36:31.001: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:36:31.001: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Performing a phased rolling update 03/09/23 08:36:31.01
    Mar  9 08:36:31.035: INFO: Updating stateful set ss2
    Mar  9 08:36:31.044: INFO: Waiting for Pod statefulset-8283/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Mar  9 08:36:41.077: INFO: Updating stateful set ss2
    Mar  9 08:36:41.086: INFO: Waiting for StatefulSet statefulset-8283/ss2 to complete update
    Mar  9 08:36:41.086: INFO: Waiting for Pod statefulset-8283/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar  9 08:36:51.097: INFO: Deleting all statefulset in ns statefulset-8283
    Mar  9 08:36:51.101: INFO: Scaling statefulset ss2 to 0
    Mar  9 08:37:01.125: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:37:01.129: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:37:01.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-8283" for this suite. 03/09/23 08:37:01.152
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:37:01.16
Mar  9 08:37:01.160: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:37:01.162
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:01.197
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:01.202
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:37:01.207
Mar  9 08:37:01.219: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2" in namespace "downward-api-3616" to be "Succeeded or Failed"
Mar  9 08:37:01.223: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.959387ms
Mar  9 08:37:03.228: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2": Phase="Running", Reason="", readiness=true. Elapsed: 2.009623528s
Mar  9 08:37:05.228: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2": Phase="Running", Reason="", readiness=false. Elapsed: 4.009046307s
Mar  9 08:37:07.229: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010245361s
STEP: Saw pod success 03/09/23 08:37:07.229
Mar  9 08:37:07.229: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2" satisfied condition "Succeeded or Failed"
Mar  9 08:37:07.234: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2 container client-container: <nil>
STEP: delete the pod 03/09/23 08:37:07.267
Mar  9 08:37:07.285: INFO: Waiting for pod downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2 to disappear
Mar  9 08:37:07.288: INFO: Pod downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 08:37:07.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3616" for this suite. 03/09/23 08:37:07.294
------------------------------
â€¢ [SLOW TEST] [6.146 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:37:01.16
    Mar  9 08:37:01.160: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:37:01.162
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:01.197
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:01.202
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:207
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:37:01.207
    Mar  9 08:37:01.219: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2" in namespace "downward-api-3616" to be "Succeeded or Failed"
    Mar  9 08:37:01.223: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.959387ms
    Mar  9 08:37:03.228: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2": Phase="Running", Reason="", readiness=true. Elapsed: 2.009623528s
    Mar  9 08:37:05.228: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2": Phase="Running", Reason="", readiness=false. Elapsed: 4.009046307s
    Mar  9 08:37:07.229: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010245361s
    STEP: Saw pod success 03/09/23 08:37:07.229
    Mar  9 08:37:07.229: INFO: Pod "downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2" satisfied condition "Succeeded or Failed"
    Mar  9 08:37:07.234: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:37:07.267
    Mar  9 08:37:07.285: INFO: Waiting for pod downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2 to disappear
    Mar  9 08:37:07.288: INFO: Pod downwardapi-volume-1fa6d4ef-16d7-48b3-a56e-8268323bd4f2 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:37:07.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3616" for this suite. 03/09/23 08:37:07.294
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:37:07.308
Mar  9 08:37:07.308: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename daemonsets 03/09/23 08:37:07.31
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:07.325
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:07.333
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823
STEP: Creating simple DaemonSet "daemon-set" 03/09/23 08:37:07.361
STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 08:37:07.368
Mar  9 08:37:07.374: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:37:07.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:37:07.377: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:37:08.384: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:37:08.389: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:37:08.389: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:37:09.384: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:37:09.389: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 08:37:09.389: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 08:37:10.384: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 08:37:10.389: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 08:37:10.389: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: listing all DeamonSets 03/09/23 08:37:10.393
STEP: DeleteCollection of the DaemonSets 03/09/23 08:37:10.398
STEP: Verify that ReplicaSets have been deleted 03/09/23 08:37:10.407
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
Mar  9 08:37:10.423: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"263227"},"items":null}

Mar  9 08:37:10.429: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"263227"},"items":[{"metadata":{"name":"daemon-set-8lx8b","generateName":"daemon-set-","namespace":"daemonsets-5979","uid":"b6e6ef88-5589-44cc-8026-ac75eb97b5f6","resourceVersion":"263226","creationTimestamp":"2023-03-09T08:37:07Z","deletionTimestamp":"2023-03-09T08:37:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"94fdbf774a75055f51419faabf8de11b18f6d29de28efbbc775a3e1ad25c65e3","cni.projectcalico.org/podIP":"172.16.0.86/32","cni.projectcalico.org/podIPs":"172.16.0.86/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8326d6f9-296e-4364-b81c-70a8c1664be2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"Go-http-client","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8326d6f9-296e-4364-b81c-70a8c1664be2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.86\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2ppc4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2ppc4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-worker1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-worker1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:06Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:07Z"}],"hostIP":"192.168.0.102","podIP":"172.16.0.86","podIPs":[{"ip":"172.16.0.86"}],"startTime":"2023-03-09T08:37:06Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-03-09T08:37:07Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9e91914c09f6e977be591d848f497699779cc2053bc93a511f2ffd9793adcb05","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-sbtjc","generateName":"daemon-set-","namespace":"daemonsets-5979","uid":"4e5aa37a-5c62-4bd6-bbfd-f15902d4a305","resourceVersion":"263227","creationTimestamp":"2023-03-09T08:37:07Z","deletionTimestamp":"2023-03-09T08:37:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"3400b95b17681b43b1f70a14f67be40839f63688ad473b43d8701c3f465b9757","cni.projectcalico.org/podIP":"172.16.0.18/32","cni.projectcalico.org/podIPs":"172.16.0.18/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8326d6f9-296e-4364-b81c-70a8c1664be2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"Go-http-client","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8326d6f9-296e-4364-b81c-70a8c1664be2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.18\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-w58tn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-w58tn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-worker2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-worker2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:07Z"}],"hostIP":"192.168.0.103","podIP":"172.16.0.18","podIPs":[{"ip":"172.16.0.18"}],"startTime":"2023-03-09T08:37:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-03-09T08:37:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://22e45c0be3520b4b933e94f57071ebc29d87c7ab9c50eef2aa1cac071135135b","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:37:10.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-5979" for this suite. 03/09/23 08:37:10.449
------------------------------
â€¢ [3.148 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:823

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:37:07.308
    Mar  9 08:37:07.308: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename daemonsets 03/09/23 08:37:07.31
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:07.325
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:07.333
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should list and delete a collection of DaemonSets [Conformance]
      test/e2e/apps/daemon_set.go:823
    STEP: Creating simple DaemonSet "daemon-set" 03/09/23 08:37:07.361
    STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 08:37:07.368
    Mar  9 08:37:07.374: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:37:07.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:37:07.377: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:37:08.384: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:37:08.389: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:37:08.389: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:37:09.384: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:37:09.389: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 08:37:09.389: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 08:37:10.384: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 08:37:10.389: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 08:37:10.389: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: listing all DeamonSets 03/09/23 08:37:10.393
    STEP: DeleteCollection of the DaemonSets 03/09/23 08:37:10.398
    STEP: Verify that ReplicaSets have been deleted 03/09/23 08:37:10.407
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    Mar  9 08:37:10.423: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"263227"},"items":null}

    Mar  9 08:37:10.429: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"263227"},"items":[{"metadata":{"name":"daemon-set-8lx8b","generateName":"daemon-set-","namespace":"daemonsets-5979","uid":"b6e6ef88-5589-44cc-8026-ac75eb97b5f6","resourceVersion":"263226","creationTimestamp":"2023-03-09T08:37:07Z","deletionTimestamp":"2023-03-09T08:37:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"94fdbf774a75055f51419faabf8de11b18f6d29de28efbbc775a3e1ad25c65e3","cni.projectcalico.org/podIP":"172.16.0.86/32","cni.projectcalico.org/podIPs":"172.16.0.86/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8326d6f9-296e-4364-b81c-70a8c1664be2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"Go-http-client","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8326d6f9-296e-4364-b81c-70a8c1664be2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.86\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2ppc4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2ppc4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-worker1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-worker1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:06Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:07Z"}],"hostIP":"192.168.0.102","podIP":"172.16.0.86","podIPs":[{"ip":"172.16.0.86"}],"startTime":"2023-03-09T08:37:06Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-03-09T08:37:07Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9e91914c09f6e977be591d848f497699779cc2053bc93a511f2ffd9793adcb05","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-sbtjc","generateName":"daemon-set-","namespace":"daemonsets-5979","uid":"4e5aa37a-5c62-4bd6-bbfd-f15902d4a305","resourceVersion":"263227","creationTimestamp":"2023-03-09T08:37:07Z","deletionTimestamp":"2023-03-09T08:37:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"3400b95b17681b43b1f70a14f67be40839f63688ad473b43d8701c3f465b9757","cni.projectcalico.org/podIP":"172.16.0.18/32","cni.projectcalico.org/podIPs":"172.16.0.18/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8326d6f9-296e-4364-b81c-70a8c1664be2","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"Go-http-client","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8326d6f9-296e-4364-b81c-70a8c1664be2\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-03-09T08:37:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.18\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-w58tn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-w58tn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-worker2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-worker2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-03-09T08:37:07Z"}],"hostIP":"192.168.0.103","podIP":"172.16.0.18","podIPs":[{"ip":"172.16.0.18"}],"startTime":"2023-03-09T08:37:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-03-09T08:37:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://22e45c0be3520b4b933e94f57071ebc29d87c7ab9c50eef2aa1cac071135135b","started":true}],"qosClass":"BestEffort"}}]}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:37:10.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-5979" for this suite. 03/09/23 08:37:10.449
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
[BeforeEach] [sig-api-machinery] Aggregator
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:37:10.458
Mar  9 08:37:10.458: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename aggregator 03/09/23 08:37:10.46
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:10.474
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:10.48
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:78
Mar  9 08:37:10.486: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
STEP: Registering the sample API server. 03/09/23 08:37:10.487
Mar  9 08:37:12.017: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Mar  9 08:37:14.112: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:16.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:18.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:20.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:22.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:24.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:26.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:28.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:30.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:32.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:34.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 08:37:36.264: INFO: Waited 136.956918ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com 03/09/23 08:37:36.34
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 03/09/23 08:37:36.344
STEP: List APIServices 03/09/23 08:37:36.354
Mar  9 08:37:36.367: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:68
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/node/init/init.go:32
Mar  9 08:37:36.549: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  tear down framework | framework.go:193
STEP: Destroying namespace "aggregator-9402" for this suite. 03/09/23 08:37:36.561
------------------------------
â€¢ [SLOW TEST] [26.134 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Aggregator
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:37:10.458
    Mar  9 08:37:10.458: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename aggregator 03/09/23 08:37:10.46
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:10.474
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:10.48
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:78
    Mar  9 08:37:10.486: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
      test/e2e/apimachinery/aggregator.go:100
    STEP: Registering the sample API server. 03/09/23 08:37:10.487
    Mar  9 08:37:12.017: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
    Mar  9 08:37:14.112: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:16.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:18.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:20.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:22.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:24.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:26.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:28.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:30.117: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:32.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:34.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 37, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 08:37:36.264: INFO: Waited 136.956918ms for the sample-apiserver to be ready to handle requests.
    STEP: Read Status for v1alpha1.wardle.example.com 03/09/23 08:37:36.34
    STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 03/09/23 08:37:36.344
    STEP: List APIServices 03/09/23 08:37:36.354
    Mar  9 08:37:36.367: INFO: Found v1alpha1.wardle.example.com in APIServiceList
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:68
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:37:36.549: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      tear down framework | framework.go:193
    STEP: Destroying namespace "aggregator-9402" for this suite. 03/09/23 08:37:36.561
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] Services
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:37:36.603
Mar  9 08:37:36.603: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:37:36.605
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:36.62
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:36.625
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
STEP: creating service multi-endpoint-test in namespace services-2222 03/09/23 08:37:36.63
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[] 03/09/23 08:37:36.648
Mar  9 08:37:36.660: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-2222 03/09/23 08:37:36.66
Mar  9 08:37:36.670: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-2222" to be "running and ready"
Mar  9 08:37:36.673: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.265859ms
Mar  9 08:37:36.674: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:37:38.679: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.008390918s
Mar  9 08:37:38.679: INFO: The phase of Pod pod1 is Running (Ready = true)
Mar  9 08:37:38.679: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[pod1:[100]] 03/09/23 08:37:38.682
Mar  9 08:37:38.697: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-2222 03/09/23 08:37:38.697
Mar  9 08:37:38.704: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-2222" to be "running and ready"
Mar  9 08:37:38.709: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.582336ms
Mar  9 08:37:38.709: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:37:40.714: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010387149s
Mar  9 08:37:40.714: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:37:42.715: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.011903645s
Mar  9 08:37:42.716: INFO: The phase of Pod pod2 is Running (Ready = true)
Mar  9 08:37:42.716: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[pod1:[100] pod2:[101]] 03/09/23 08:37:42.719
Mar  9 08:37:42.736: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods 03/09/23 08:37:42.736
Mar  9 08:37:42.736: INFO: Creating new exec pod
Mar  9 08:37:42.743: INFO: Waiting up to 5m0s for pod "execpod5hzgm" in namespace "services-2222" to be "running"
Mar  9 08:37:42.747: INFO: Pod "execpod5hzgm": Phase="Pending", Reason="", readiness=false. Elapsed: 4.278985ms
Mar  9 08:37:44.753: INFO: Pod "execpod5hzgm": Phase="Running", Reason="", readiness=true. Elapsed: 2.009708046s
Mar  9 08:37:44.753: INFO: Pod "execpod5hzgm" satisfied condition "running"
Mar  9 08:37:45.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2222 exec execpod5hzgm -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
Mar  9 08:37:46.026: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Mar  9 08:37:46.026: INFO: stdout: ""
Mar  9 08:37:46.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2222 exec execpod5hzgm -- /bin/sh -x -c nc -v -z -w 2 10.98.139.126 80'
Mar  9 08:37:46.304: INFO: stderr: "+ nc -v -z -w 2 10.98.139.126 80\nConnection to 10.98.139.126 80 port [tcp/http] succeeded!\n"
Mar  9 08:37:46.304: INFO: stdout: ""
Mar  9 08:37:46.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2222 exec execpod5hzgm -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
Mar  9 08:37:46.587: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Mar  9 08:37:46.587: INFO: stdout: ""
Mar  9 08:37:46.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2222 exec execpod5hzgm -- /bin/sh -x -c nc -v -z -w 2 10.98.139.126 81'
Mar  9 08:37:46.878: INFO: stderr: "+ nc -v -z -w 2 10.98.139.126 81\nConnection to 10.98.139.126 81 port [tcp/*] succeeded!\n"
Mar  9 08:37:46.878: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-2222 03/09/23 08:37:46.878
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[pod2:[101]] 03/09/23 08:37:46.893
Mar  9 08:37:46.909: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-2222 03/09/23 08:37:46.909
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[] 03/09/23 08:37:46.931
Mar  9 08:37:47.951: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:37:47.973: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2222" for this suite. 03/09/23 08:37:47.98
------------------------------
â€¢ [SLOW TEST] [11.384 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:37:36.603
    Mar  9 08:37:36.603: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:37:36.605
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:36.62
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:36.625
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve multiport endpoints from pods  [Conformance]
      test/e2e/network/service.go:848
    STEP: creating service multi-endpoint-test in namespace services-2222 03/09/23 08:37:36.63
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[] 03/09/23 08:37:36.648
    Mar  9 08:37:36.660: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-2222 03/09/23 08:37:36.66
    Mar  9 08:37:36.670: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-2222" to be "running and ready"
    Mar  9 08:37:36.673: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.265859ms
    Mar  9 08:37:36.674: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:37:38.679: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.008390918s
    Mar  9 08:37:38.679: INFO: The phase of Pod pod1 is Running (Ready = true)
    Mar  9 08:37:38.679: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[pod1:[100]] 03/09/23 08:37:38.682
    Mar  9 08:37:38.697: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[pod1:[100]]
    STEP: Creating pod pod2 in namespace services-2222 03/09/23 08:37:38.697
    Mar  9 08:37:38.704: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-2222" to be "running and ready"
    Mar  9 08:37:38.709: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.582336ms
    Mar  9 08:37:38.709: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:37:40.714: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010387149s
    Mar  9 08:37:40.714: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:37:42.715: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 4.011903645s
    Mar  9 08:37:42.716: INFO: The phase of Pod pod2 is Running (Ready = true)
    Mar  9 08:37:42.716: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[pod1:[100] pod2:[101]] 03/09/23 08:37:42.719
    Mar  9 08:37:42.736: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[pod1:[100] pod2:[101]]
    STEP: Checking if the Service forwards traffic to pods 03/09/23 08:37:42.736
    Mar  9 08:37:42.736: INFO: Creating new exec pod
    Mar  9 08:37:42.743: INFO: Waiting up to 5m0s for pod "execpod5hzgm" in namespace "services-2222" to be "running"
    Mar  9 08:37:42.747: INFO: Pod "execpod5hzgm": Phase="Pending", Reason="", readiness=false. Elapsed: 4.278985ms
    Mar  9 08:37:44.753: INFO: Pod "execpod5hzgm": Phase="Running", Reason="", readiness=true. Elapsed: 2.009708046s
    Mar  9 08:37:44.753: INFO: Pod "execpod5hzgm" satisfied condition "running"
    Mar  9 08:37:45.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2222 exec execpod5hzgm -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
    Mar  9 08:37:46.026: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
    Mar  9 08:37:46.026: INFO: stdout: ""
    Mar  9 08:37:46.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2222 exec execpod5hzgm -- /bin/sh -x -c nc -v -z -w 2 10.98.139.126 80'
    Mar  9 08:37:46.304: INFO: stderr: "+ nc -v -z -w 2 10.98.139.126 80\nConnection to 10.98.139.126 80 port [tcp/http] succeeded!\n"
    Mar  9 08:37:46.304: INFO: stdout: ""
    Mar  9 08:37:46.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2222 exec execpod5hzgm -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
    Mar  9 08:37:46.587: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
    Mar  9 08:37:46.587: INFO: stdout: ""
    Mar  9 08:37:46.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-2222 exec execpod5hzgm -- /bin/sh -x -c nc -v -z -w 2 10.98.139.126 81'
    Mar  9 08:37:46.878: INFO: stderr: "+ nc -v -z -w 2 10.98.139.126 81\nConnection to 10.98.139.126 81 port [tcp/*] succeeded!\n"
    Mar  9 08:37:46.878: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-2222 03/09/23 08:37:46.878
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[pod2:[101]] 03/09/23 08:37:46.893
    Mar  9 08:37:46.909: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[pod2:[101]]
    STEP: Deleting pod pod2 in namespace services-2222 03/09/23 08:37:46.909
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2222 to expose endpoints map[] 03/09/23 08:37:46.931
    Mar  9 08:37:47.951: INFO: successfully validated that service multi-endpoint-test in namespace services-2222 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:37:47.973: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2222" for this suite. 03/09/23 08:37:47.98
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:37:47.992
Mar  9 08:37:47.992: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 08:37:47.994
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:48.009
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:48.015
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
STEP: Creating a ResourceQuota with best effort scope 03/09/23 08:37:48.02
STEP: Ensuring ResourceQuota status is calculated 03/09/23 08:37:48.026
STEP: Creating a ResourceQuota with not best effort scope 03/09/23 08:37:50.031
STEP: Ensuring ResourceQuota status is calculated 03/09/23 08:37:50.037
STEP: Creating a best-effort pod 03/09/23 08:37:52.043
STEP: Ensuring resource quota with best effort scope captures the pod usage 03/09/23 08:37:52.062
STEP: Ensuring resource quota with not best effort ignored the pod usage 03/09/23 08:37:54.067
STEP: Deleting the pod 03/09/23 08:37:56.072
STEP: Ensuring resource quota status released the pod usage 03/09/23 08:37:56.086
STEP: Creating a not best-effort pod 03/09/23 08:37:58.09
STEP: Ensuring resource quota with not best effort scope captures the pod usage 03/09/23 08:37:58.106
STEP: Ensuring resource quota with best effort scope ignored the pod usage 03/09/23 08:38:00.112
STEP: Deleting the pod 03/09/23 08:38:02.116
STEP: Ensuring resource quota status released the pod usage 03/09/23 08:38:02.133
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 08:38:04.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6912" for this suite. 03/09/23 08:38:04.144
------------------------------
â€¢ [SLOW TEST] [16.160 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:37:47.992
    Mar  9 08:37:47.992: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 08:37:47.994
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:37:48.009
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:37:48.015
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with best effort scope. [Conformance]
      test/e2e/apimachinery/resource_quota.go:803
    STEP: Creating a ResourceQuota with best effort scope 03/09/23 08:37:48.02
    STEP: Ensuring ResourceQuota status is calculated 03/09/23 08:37:48.026
    STEP: Creating a ResourceQuota with not best effort scope 03/09/23 08:37:50.031
    STEP: Ensuring ResourceQuota status is calculated 03/09/23 08:37:50.037
    STEP: Creating a best-effort pod 03/09/23 08:37:52.043
    STEP: Ensuring resource quota with best effort scope captures the pod usage 03/09/23 08:37:52.062
    STEP: Ensuring resource quota with not best effort ignored the pod usage 03/09/23 08:37:54.067
    STEP: Deleting the pod 03/09/23 08:37:56.072
    STEP: Ensuring resource quota status released the pod usage 03/09/23 08:37:56.086
    STEP: Creating a not best-effort pod 03/09/23 08:37:58.09
    STEP: Ensuring resource quota with not best effort scope captures the pod usage 03/09/23 08:37:58.106
    STEP: Ensuring resource quota with best effort scope ignored the pod usage 03/09/23 08:38:00.112
    STEP: Deleting the pod 03/09/23 08:38:02.116
    STEP: Ensuring resource quota status released the pod usage 03/09/23 08:38:02.133
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:38:04.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6912" for this suite. 03/09/23 08:38:04.144
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:38:04.155
Mar  9 08:38:04.155: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-probe 03/09/23 08:38:04.157
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:38:04.174
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:38:04.18
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
STEP: Creating pod busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46 in namespace container-probe-9940 03/09/23 08:38:04.185
Mar  9 08:38:04.196: INFO: Waiting up to 5m0s for pod "busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46" in namespace "container-probe-9940" to be "not pending"
Mar  9 08:38:04.201: INFO: Pod "busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46": Phase="Pending", Reason="", readiness=false. Elapsed: 4.131485ms
Mar  9 08:38:06.207: INFO: Pod "busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46": Phase="Running", Reason="", readiness=true. Elapsed: 2.010401172s
Mar  9 08:38:06.207: INFO: Pod "busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46" satisfied condition "not pending"
Mar  9 08:38:06.207: INFO: Started pod busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46 in namespace container-probe-9940
STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 08:38:06.207
Mar  9 08:38:06.211: INFO: Initial restart count of pod busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46 is 0
Mar  9 08:38:56.350: INFO: Restart count of pod container-probe-9940/busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46 is now 1 (50.138616535s elapsed)
STEP: deleting the pod 03/09/23 08:38:56.35
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar  9 08:38:56.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-9940" for this suite. 03/09/23 08:38:56.371
------------------------------
â€¢ [SLOW TEST] [52.224 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:38:04.155
    Mar  9 08:38:04.155: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-probe 03/09/23 08:38:04.157
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:38:04.174
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:38:04.18
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:135
    STEP: Creating pod busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46 in namespace container-probe-9940 03/09/23 08:38:04.185
    Mar  9 08:38:04.196: INFO: Waiting up to 5m0s for pod "busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46" in namespace "container-probe-9940" to be "not pending"
    Mar  9 08:38:04.201: INFO: Pod "busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46": Phase="Pending", Reason="", readiness=false. Elapsed: 4.131485ms
    Mar  9 08:38:06.207: INFO: Pod "busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46": Phase="Running", Reason="", readiness=true. Elapsed: 2.010401172s
    Mar  9 08:38:06.207: INFO: Pod "busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46" satisfied condition "not pending"
    Mar  9 08:38:06.207: INFO: Started pod busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46 in namespace container-probe-9940
    STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 08:38:06.207
    Mar  9 08:38:06.211: INFO: Initial restart count of pod busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46 is 0
    Mar  9 08:38:56.350: INFO: Restart count of pod container-probe-9940/busybox-12a9c7f9-5097-4fea-9750-85cb5012cd46 is now 1 (50.138616535s elapsed)
    STEP: deleting the pod 03/09/23 08:38:56.35
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:38:56.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-9940" for this suite. 03/09/23 08:38:56.371
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:38:56.38
Mar  9 08:38:56.380: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename cronjob 03/09/23 08:38:56.382
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:38:56.396
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:38:56.401
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
STEP: Creating a cronjob 03/09/23 08:38:56.406
STEP: creating 03/09/23 08:38:56.406
STEP: getting 03/09/23 08:38:56.414
STEP: listing 03/09/23 08:38:56.418
STEP: watching 03/09/23 08:38:56.422
Mar  9 08:38:56.422: INFO: starting watch
STEP: cluster-wide listing 03/09/23 08:38:56.424
STEP: cluster-wide watching 03/09/23 08:38:56.428
Mar  9 08:38:56.429: INFO: starting watch
STEP: patching 03/09/23 08:38:56.43
STEP: updating 03/09/23 08:38:56.441
Mar  9 08:38:56.453: INFO: waiting for watch events with expected annotations
Mar  9 08:38:56.453: INFO: saw patched and updated annotations
STEP: patching /status 03/09/23 08:38:56.453
STEP: updating /status 03/09/23 08:38:56.463
STEP: get /status 03/09/23 08:38:56.476
STEP: deleting 03/09/23 08:38:56.48
STEP: deleting a collection 03/09/23 08:38:56.497
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar  9 08:38:56.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-4180" for this suite. 03/09/23 08:38:56.514
------------------------------
â€¢ [0.142 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:38:56.38
    Mar  9 08:38:56.380: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename cronjob 03/09/23 08:38:56.382
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:38:56.396
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:38:56.401
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CronJob API operations [Conformance]
      test/e2e/apps/cronjob.go:319
    STEP: Creating a cronjob 03/09/23 08:38:56.406
    STEP: creating 03/09/23 08:38:56.406
    STEP: getting 03/09/23 08:38:56.414
    STEP: listing 03/09/23 08:38:56.418
    STEP: watching 03/09/23 08:38:56.422
    Mar  9 08:38:56.422: INFO: starting watch
    STEP: cluster-wide listing 03/09/23 08:38:56.424
    STEP: cluster-wide watching 03/09/23 08:38:56.428
    Mar  9 08:38:56.429: INFO: starting watch
    STEP: patching 03/09/23 08:38:56.43
    STEP: updating 03/09/23 08:38:56.441
    Mar  9 08:38:56.453: INFO: waiting for watch events with expected annotations
    Mar  9 08:38:56.453: INFO: saw patched and updated annotations
    STEP: patching /status 03/09/23 08:38:56.453
    STEP: updating /status 03/09/23 08:38:56.463
    STEP: get /status 03/09/23 08:38:56.476
    STEP: deleting 03/09/23 08:38:56.48
    STEP: deleting a collection 03/09/23 08:38:56.497
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:38:56.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-4180" for this suite. 03/09/23 08:38:56.514
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:38:56.522
Mar  9 08:38:56.523: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 08:38:56.524
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:38:56.54
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:38:56.546
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
STEP: Counting existing ResourceQuota 03/09/23 08:38:56.551
STEP: Creating a ResourceQuota 03/09/23 08:39:01.555
STEP: Ensuring resource quota status is calculated 03/09/23 08:39:01.565
STEP: Creating a ReplicaSet 03/09/23 08:39:03.57
STEP: Ensuring resource quota status captures replicaset creation 03/09/23 08:39:03.586
STEP: Deleting a ReplicaSet 03/09/23 08:39:05.592
STEP: Ensuring resource quota status released usage 03/09/23 08:39:05.599
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 08:39:07.606: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-1521" for this suite. 03/09/23 08:39:07.612
------------------------------
â€¢ [SLOW TEST] [11.098 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:38:56.522
    Mar  9 08:38:56.523: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 08:38:56.524
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:38:56.54
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:38:56.546
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
      test/e2e/apimachinery/resource_quota.go:448
    STEP: Counting existing ResourceQuota 03/09/23 08:38:56.551
    STEP: Creating a ResourceQuota 03/09/23 08:39:01.555
    STEP: Ensuring resource quota status is calculated 03/09/23 08:39:01.565
    STEP: Creating a ReplicaSet 03/09/23 08:39:03.57
    STEP: Ensuring resource quota status captures replicaset creation 03/09/23 08:39:03.586
    STEP: Deleting a ReplicaSet 03/09/23 08:39:05.592
    STEP: Ensuring resource quota status released usage 03/09/23 08:39:05.599
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:39:07.606: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-1521" for this suite. 03/09/23 08:39:07.612
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:39:07.623
Mar  9 08:39:07.623: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:39:07.625
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:07.641
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:07.646
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
STEP: creating an Endpoint 03/09/23 08:39:07.655
STEP: waiting for available Endpoint 03/09/23 08:39:07.661
STEP: listing all Endpoints 03/09/23 08:39:07.664
STEP: updating the Endpoint 03/09/23 08:39:07.668
STEP: fetching the Endpoint 03/09/23 08:39:07.677
STEP: patching the Endpoint 03/09/23 08:39:07.681
STEP: fetching the Endpoint 03/09/23 08:39:07.69
STEP: deleting the Endpoint by Collection 03/09/23 08:39:07.694
STEP: waiting for Endpoint deletion 03/09/23 08:39:07.703
STEP: fetching the Endpoint 03/09/23 08:39:07.705
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:39:07.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1620" for this suite. 03/09/23 08:39:07.716
------------------------------
â€¢ [0.102 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:39:07.623
    Mar  9 08:39:07.623: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:39:07.625
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:07.641
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:07.646
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should test the lifecycle of an Endpoint [Conformance]
      test/e2e/network/service.go:3244
    STEP: creating an Endpoint 03/09/23 08:39:07.655
    STEP: waiting for available Endpoint 03/09/23 08:39:07.661
    STEP: listing all Endpoints 03/09/23 08:39:07.664
    STEP: updating the Endpoint 03/09/23 08:39:07.668
    STEP: fetching the Endpoint 03/09/23 08:39:07.677
    STEP: patching the Endpoint 03/09/23 08:39:07.681
    STEP: fetching the Endpoint 03/09/23 08:39:07.69
    STEP: deleting the Endpoint by Collection 03/09/23 08:39:07.694
    STEP: waiting for Endpoint deletion 03/09/23 08:39:07.703
    STEP: fetching the Endpoint 03/09/23 08:39:07.705
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:39:07.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1620" for this suite. 03/09/23 08:39:07.716
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:39:07.727
Mar  9 08:39:07.727: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-webhook 03/09/23 08:39:07.729
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:07.744
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:07.749
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 03/09/23 08:39:07.754
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 03/09/23 08:39:08.272
STEP: Deploying the custom resource conversion webhook pod 03/09/23 08:39:08.283
STEP: Wait for the deployment to be ready 03/09/23 08:39:08.302
Mar  9 08:39:08.313: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:39:10.326
STEP: Verifying the service has paired with the endpoint 03/09/23 08:39:10.342
Mar  9 08:39:11.342: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
Mar  9 08:39:11.347: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Creating a v1 custom resource 03/09/23 08:39:14.032
STEP: v2 custom resource should be converted 03/09/23 08:39:14.039
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:39:14.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-6907" for this suite. 03/09/23 08:39:14.614
------------------------------
â€¢ [SLOW TEST] [6.895 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:39:07.727
    Mar  9 08:39:07.727: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-webhook 03/09/23 08:39:07.729
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:07.744
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:07.749
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 03/09/23 08:39:07.754
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 03/09/23 08:39:08.272
    STEP: Deploying the custom resource conversion webhook pod 03/09/23 08:39:08.283
    STEP: Wait for the deployment to be ready 03/09/23 08:39:08.302
    Mar  9 08:39:08.313: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:39:10.326
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:39:10.342
    Mar  9 08:39:11.342: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert from CR v1 to CR v2 [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:149
    Mar  9 08:39:11.347: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Creating a v1 custom resource 03/09/23 08:39:14.032
    STEP: v2 custom resource should be converted 03/09/23 08:39:14.039
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:39:14.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-6907" for this suite. 03/09/23 08:39:14.614
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:39:14.624
Mar  9 08:39:14.624: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename job 03/09/23 08:39:14.626
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:14.641
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:14.646
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
STEP: Creating a job 03/09/23 08:39:14.651
STEP: Ensure pods equal to parallelism count is attached to the job 03/09/23 08:39:14.658
STEP: patching /status 03/09/23 08:39:18.664
STEP: updating /status 03/09/23 08:39:18.677
STEP: get /status 03/09/23 08:39:18.69
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar  9 08:39:18.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-5662" for this suite. 03/09/23 08:39:18.701
------------------------------
â€¢ [4.084 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:39:14.624
    Mar  9 08:39:14.624: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename job 03/09/23 08:39:14.626
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:14.641
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:14.646
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a job status [Conformance]
      test/e2e/apps/job.go:636
    STEP: Creating a job 03/09/23 08:39:14.651
    STEP: Ensure pods equal to parallelism count is attached to the job 03/09/23 08:39:14.658
    STEP: patching /status 03/09/23 08:39:18.664
    STEP: updating /status 03/09/23 08:39:18.677
    STEP: get /status 03/09/23 08:39:18.69
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:39:18.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-5662" for this suite. 03/09/23 08:39:18.701
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
[BeforeEach] [sig-storage] Projected combined
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:39:18.713
Mar  9 08:39:18.714: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:39:18.715
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:18.73
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:18.736
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:31
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
STEP: Creating configMap with name configmap-projected-all-test-volume-3d8c5117-aa39-43c7-b3f5-0c3bdaeaf91e 03/09/23 08:39:18.741
STEP: Creating secret with name secret-projected-all-test-volume-dc056bb1-2ce6-495b-b9a4-a99ef766e17d 03/09/23 08:39:18.747
STEP: Creating a pod to test Check all projections for projected volume plugin 03/09/23 08:39:18.754
Mar  9 08:39:18.764: INFO: Waiting up to 5m0s for pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2" in namespace "projected-6533" to be "Succeeded or Failed"
Mar  9 08:39:18.768: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.96ms
Mar  9 08:39:20.773: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009220621s
Mar  9 08:39:22.772: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008196956s
Mar  9 08:39:24.774: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010427868s
STEP: Saw pod success 03/09/23 08:39:24.774
Mar  9 08:39:24.774: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2" satisfied condition "Succeeded or Failed"
Mar  9 08:39:24.778: INFO: Trying to get logs from node k8s-worker1 pod projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2 container projected-all-volume-test: <nil>
STEP: delete the pod 03/09/23 08:39:24.809
Mar  9 08:39:24.822: INFO: Waiting for pod projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2 to disappear
Mar  9 08:39:24.826: INFO: Pod projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/node/init/init.go:32
Mar  9 08:39:24.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected combined
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected combined
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6533" for this suite. 03/09/23 08:39:24.831
------------------------------
â€¢ [SLOW TEST] [6.125 seconds]
[sig-storage] Projected combined
test/e2e/common/storage/framework.go:23
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected combined
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:39:18.713
    Mar  9 08:39:18.714: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:39:18.715
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:18.73
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:18.736
    [BeforeEach] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:31
    [It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
      test/e2e/common/storage/projected_combined.go:44
    STEP: Creating configMap with name configmap-projected-all-test-volume-3d8c5117-aa39-43c7-b3f5-0c3bdaeaf91e 03/09/23 08:39:18.741
    STEP: Creating secret with name secret-projected-all-test-volume-dc056bb1-2ce6-495b-b9a4-a99ef766e17d 03/09/23 08:39:18.747
    STEP: Creating a pod to test Check all projections for projected volume plugin 03/09/23 08:39:18.754
    Mar  9 08:39:18.764: INFO: Waiting up to 5m0s for pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2" in namespace "projected-6533" to be "Succeeded or Failed"
    Mar  9 08:39:18.768: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.96ms
    Mar  9 08:39:20.773: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009220621s
    Mar  9 08:39:22.772: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008196956s
    Mar  9 08:39:24.774: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010427868s
    STEP: Saw pod success 03/09/23 08:39:24.774
    Mar  9 08:39:24.774: INFO: Pod "projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2" satisfied condition "Succeeded or Failed"
    Mar  9 08:39:24.778: INFO: Trying to get logs from node k8s-worker1 pod projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2 container projected-all-volume-test: <nil>
    STEP: delete the pod 03/09/23 08:39:24.809
    Mar  9 08:39:24.822: INFO: Waiting for pod projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2 to disappear
    Mar  9 08:39:24.826: INFO: Pod projected-volume-9b687331-ad9d-4ecd-9f26-7cfb71f82fb2 no longer exists
    [AfterEach] [sig-storage] Projected combined
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:39:24.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected combined
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected combined
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6533" for this suite. 03/09/23 08:39:24.831
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Probing container
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:39:24.839
Mar  9 08:39:24.839: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-probe 03/09/23 08:39:24.841
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:24.868
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:24.873
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
STEP: Creating pod liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6 in namespace container-probe-2951 03/09/23 08:39:24.878
Mar  9 08:39:24.890: INFO: Waiting up to 5m0s for pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6" in namespace "container-probe-2951" to be "not pending"
Mar  9 08:39:24.894: INFO: Pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.919569ms
Mar  9 08:39:26.899: INFO: Pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008985678s
Mar  9 08:39:28.900: INFO: Pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6": Phase="Running", Reason="", readiness=true. Elapsed: 4.010008625s
Mar  9 08:39:28.900: INFO: Pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6" satisfied condition "not pending"
Mar  9 08:39:28.900: INFO: Started pod liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6 in namespace container-probe-2951
STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 08:39:28.9
Mar  9 08:39:28.904: INFO: Initial restart count of pod liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6 is 0
Mar  9 08:39:46.956: INFO: Restart count of pod container-probe-2951/liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6 is now 1 (18.051693126s elapsed)
STEP: deleting the pod 03/09/23 08:39:46.956
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar  9 08:39:46.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-2951" for this suite. 03/09/23 08:39:46.978
------------------------------
â€¢ [SLOW TEST] [22.146 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:39:24.839
    Mar  9 08:39:24.839: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-probe 03/09/23 08:39:24.841
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:24.868
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:24.873
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:169
    STEP: Creating pod liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6 in namespace container-probe-2951 03/09/23 08:39:24.878
    Mar  9 08:39:24.890: INFO: Waiting up to 5m0s for pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6" in namespace "container-probe-2951" to be "not pending"
    Mar  9 08:39:24.894: INFO: Pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.919569ms
    Mar  9 08:39:26.899: INFO: Pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008985678s
    Mar  9 08:39:28.900: INFO: Pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6": Phase="Running", Reason="", readiness=true. Elapsed: 4.010008625s
    Mar  9 08:39:28.900: INFO: Pod "liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6" satisfied condition "not pending"
    Mar  9 08:39:28.900: INFO: Started pod liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6 in namespace container-probe-2951
    STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 08:39:28.9
    Mar  9 08:39:28.904: INFO: Initial restart count of pod liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6 is 0
    Mar  9 08:39:46.956: INFO: Restart count of pod container-probe-2951/liveness-08c50bd6-cd2d-4f03-82a4-b4568eaa99f6 is now 1 (18.051693126s elapsed)
    STEP: deleting the pod 03/09/23 08:39:46.956
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:39:46.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-2951" for this suite. 03/09/23 08:39:46.978
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:39:46.988
Mar  9 08:39:46.988: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename statefulset 03/09/23 08:39:46.99
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:47.005
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:47.011
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-8289 03/09/23 08:39:47.016
[It] should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
STEP: Creating statefulset ss in namespace statefulset-8289 03/09/23 08:39:47.023
Mar  9 08:39:47.036: INFO: Found 0 stateful pods, waiting for 1
Mar  9 08:39:57.041: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource 03/09/23 08:39:57.049
STEP: updating a scale subresource 03/09/23 08:39:57.053
STEP: verifying the statefulset Spec.Replicas was modified 03/09/23 08:39:57.064
STEP: Patch a scale subresource 03/09/23 08:39:57.067
STEP: verifying the statefulset Spec.Replicas was modified 03/09/23 08:39:57.079
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar  9 08:39:57.086: INFO: Deleting all statefulset in ns statefulset-8289
Mar  9 08:39:57.090: INFO: Scaling statefulset ss to 0
Mar  9 08:40:07.115: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:40:07.118: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:40:07.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-8289" for this suite. 03/09/23 08:40:07.145
------------------------------
â€¢ [SLOW TEST] [20.167 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should have a working scale subresource [Conformance]
    test/e2e/apps/statefulset.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:39:46.988
    Mar  9 08:39:46.988: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename statefulset 03/09/23 08:39:46.99
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:39:47.005
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:39:47.011
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-8289 03/09/23 08:39:47.016
    [It] should have a working scale subresource [Conformance]
      test/e2e/apps/statefulset.go:848
    STEP: Creating statefulset ss in namespace statefulset-8289 03/09/23 08:39:47.023
    Mar  9 08:39:47.036: INFO: Found 0 stateful pods, waiting for 1
    Mar  9 08:39:57.041: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: getting scale subresource 03/09/23 08:39:57.049
    STEP: updating a scale subresource 03/09/23 08:39:57.053
    STEP: verifying the statefulset Spec.Replicas was modified 03/09/23 08:39:57.064
    STEP: Patch a scale subresource 03/09/23 08:39:57.067
    STEP: verifying the statefulset Spec.Replicas was modified 03/09/23 08:39:57.079
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar  9 08:39:57.086: INFO: Deleting all statefulset in ns statefulset-8289
    Mar  9 08:39:57.090: INFO: Scaling statefulset ss to 0
    Mar  9 08:40:07.115: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:40:07.118: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:40:07.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-8289" for this suite. 03/09/23 08:40:07.145
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:40:07.157
Mar  9 08:40:07.157: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename containers 03/09/23 08:40:07.16
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:40:07.176
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:40:07.181
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
Mar  9 08:40:07.196: INFO: Waiting up to 5m0s for pod "client-containers-3a5c04ec-334d-4844-a670-aaea9ec3a468" in namespace "containers-6636" to be "running"
Mar  9 08:40:07.200: INFO: Pod "client-containers-3a5c04ec-334d-4844-a670-aaea9ec3a468": Phase="Pending", Reason="", readiness=false. Elapsed: 4.115706ms
Mar  9 08:40:09.205: INFO: Pod "client-containers-3a5c04ec-334d-4844-a670-aaea9ec3a468": Phase="Running", Reason="", readiness=true. Elapsed: 2.009310049s
Mar  9 08:40:09.205: INFO: Pod "client-containers-3a5c04ec-334d-4844-a670-aaea9ec3a468" satisfied condition "running"
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Mar  9 08:40:09.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-6636" for this suite. 03/09/23 08:40:09.22
------------------------------
â€¢ [2.072 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:40:07.157
    Mar  9 08:40:07.157: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename containers 03/09/23 08:40:07.16
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:40:07.176
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:40:07.181
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:39
    Mar  9 08:40:07.196: INFO: Waiting up to 5m0s for pod "client-containers-3a5c04ec-334d-4844-a670-aaea9ec3a468" in namespace "containers-6636" to be "running"
    Mar  9 08:40:07.200: INFO: Pod "client-containers-3a5c04ec-334d-4844-a670-aaea9ec3a468": Phase="Pending", Reason="", readiness=false. Elapsed: 4.115706ms
    Mar  9 08:40:09.205: INFO: Pod "client-containers-3a5c04ec-334d-4844-a670-aaea9ec3a468": Phase="Running", Reason="", readiness=true. Elapsed: 2.009310049s
    Mar  9 08:40:09.205: INFO: Pod "client-containers-3a5c04ec-334d-4844-a670-aaea9ec3a468" satisfied condition "running"
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:40:09.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-6636" for this suite. 03/09/23 08:40:09.22
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:40:09.229
Mar  9 08:40:09.230: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:40:09.231
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:40:09.246
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:40:09.251
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:40:09.273
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:40:10.39
STEP: Deploying the webhook pod 03/09/23 08:40:10.4
STEP: Wait for the deployment to be ready 03/09/23 08:40:10.414
Mar  9 08:40:10.423: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:40:12.446
STEP: Verifying the service has paired with the endpoint 03/09/23 08:40:12.463
Mar  9 08:40:13.463: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
STEP: Listing all of the created validation webhooks 03/09/23 08:40:13.549
STEP: Creating a configMap that should be mutated 03/09/23 08:40:13.579
STEP: Deleting the collection of validation webhooks 03/09/23 08:40:13.629
STEP: Creating a configMap that should not be mutated 03/09/23 08:40:13.68
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:40:13.694: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6999" for this suite. 03/09/23 08:40:13.752
STEP: Destroying namespace "webhook-6999-markers" for this suite. 03/09/23 08:40:13.771
------------------------------
â€¢ [4.551 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:40:09.229
    Mar  9 08:40:09.230: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:40:09.231
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:40:09.246
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:40:09.251
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:40:09.273
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:40:10.39
    STEP: Deploying the webhook pod 03/09/23 08:40:10.4
    STEP: Wait for the deployment to be ready 03/09/23 08:40:10.414
    Mar  9 08:40:10.423: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:40:12.446
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:40:12.463
    Mar  9 08:40:13.463: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing mutating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:656
    STEP: Listing all of the created validation webhooks 03/09/23 08:40:13.549
    STEP: Creating a configMap that should be mutated 03/09/23 08:40:13.579
    STEP: Deleting the collection of validation webhooks 03/09/23 08:40:13.629
    STEP: Creating a configMap that should not be mutated 03/09/23 08:40:13.68
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:40:13.694: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6999" for this suite. 03/09/23 08:40:13.752
    STEP: Destroying namespace "webhook-6999-markers" for this suite. 03/09/23 08:40:13.771
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:40:13.782
Mar  9 08:40:13.782: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename statefulset 03/09/23 08:40:13.784
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:40:13.803
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:40:13.808
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-7898 03/09/23 08:40:13.813
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
STEP: Creating stateful set ss in namespace statefulset-7898 03/09/23 08:40:13.82
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7898 03/09/23 08:40:13.829
Mar  9 08:40:13.833: INFO: Found 0 stateful pods, waiting for 1
Mar  9 08:40:23.840: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 03/09/23 08:40:23.84
Mar  9 08:40:23.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:40:24.152: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:40:24.152: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:40:24.152: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:40:24.156: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Mar  9 08:40:34.162: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Mar  9 08:40:34.162: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:40:34.181: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
Mar  9 08:40:34.181: INFO: ss-0  k8s-worker1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:13 +0000 UTC  }]
Mar  9 08:40:34.182: INFO: 
Mar  9 08:40:34.182: INFO: StatefulSet ss has not reached scale 3, at 1
Mar  9 08:40:35.188: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994660431s
Mar  9 08:40:36.193: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989399164s
Mar  9 08:40:37.198: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984094635s
Mar  9 08:40:38.204: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978525198s
Mar  9 08:40:39.209: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.973153365s
Mar  9 08:40:40.214: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967827333s
Mar  9 08:40:41.219: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963020144s
Mar  9 08:40:42.226: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.956739167s
Mar  9 08:40:43.231: INFO: Verifying statefulset ss doesn't scale past 3 for another 950.912776ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7898 03/09/23 08:40:44.232
Mar  9 08:40:44.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:40:44.516: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar  9 08:40:44.516: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:40:44.516: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar  9 08:40:44.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:40:44.784: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Mar  9 08:40:44.784: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:40:44.784: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar  9 08:40:44.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:40:45.076: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Mar  9 08:40:45.076: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:40:45.076: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar  9 08:40:45.081: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Mar  9 08:40:55.087: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:40:55.087: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:40:55.087: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod 03/09/23 08:40:55.087
Mar  9 08:40:55.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:40:55.363: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:40:55.363: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:40:55.363: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:40:55.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:40:55.637: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:40:55.638: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:40:55.638: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:40:55.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:40:55.927: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:40:55.927: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:40:55.927: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:40:55.927: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:40:55.931: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Mar  9 08:41:05.942: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Mar  9 08:41:05.942: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Mar  9 08:41:05.942: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Mar  9 08:41:05.959: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
Mar  9 08:41:05.959: INFO: ss-0  k8s-worker1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:13 +0000 UTC  }]
Mar  9 08:41:05.959: INFO: ss-1  k8s-worker2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  }]
Mar  9 08:41:05.959: INFO: ss-2  k8s-worker1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  }]
Mar  9 08:41:05.959: INFO: 
Mar  9 08:41:05.959: INFO: StatefulSet ss has not reached scale 0, at 3
Mar  9 08:41:06.965: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
Mar  9 08:41:06.965: INFO: ss-0  k8s-worker1  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:13 +0000 UTC  }]
Mar  9 08:41:06.965: INFO: ss-1  k8s-worker2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  }]
Mar  9 08:41:06.965: INFO: ss-2  k8s-worker1  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  }]
Mar  9 08:41:06.965: INFO: 
Mar  9 08:41:06.965: INFO: StatefulSet ss has not reached scale 0, at 3
Mar  9 08:41:07.970: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.987965372s
Mar  9 08:41:08.974: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.983769391s
Mar  9 08:41:09.979: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.979044548s
Mar  9 08:41:10.983: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.974906906s
Mar  9 08:41:11.989: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.970367687s
Mar  9 08:41:12.993: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.964709668s
Mar  9 08:41:13.998: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.959455274s
Mar  9 08:41:15.002: INFO: Verifying statefulset ss doesn't scale past 0 for another 955.279615ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7898 03/09/23 08:41:16.003
Mar  9 08:41:16.008: INFO: Scaling statefulset ss to 0
Mar  9 08:41:16.022: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar  9 08:41:16.026: INFO: Deleting all statefulset in ns statefulset-7898
Mar  9 08:41:16.030: INFO: Scaling statefulset ss to 0
Mar  9 08:41:16.044: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:41:16.048: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:41:16.063: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-7898" for this suite. 03/09/23 08:41:16.071
------------------------------
â€¢ [SLOW TEST] [62.296 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/apps/statefulset.go:697

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:40:13.782
    Mar  9 08:40:13.782: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename statefulset 03/09/23 08:40:13.784
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:40:13.803
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:40:13.808
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-7898 03/09/23 08:40:13.813
    [It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
      test/e2e/apps/statefulset.go:697
    STEP: Creating stateful set ss in namespace statefulset-7898 03/09/23 08:40:13.82
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7898 03/09/23 08:40:13.829
    Mar  9 08:40:13.833: INFO: Found 0 stateful pods, waiting for 1
    Mar  9 08:40:23.840: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 03/09/23 08:40:23.84
    Mar  9 08:40:23.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:40:24.152: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:40:24.152: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:40:24.152: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:40:24.156: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Mar  9 08:40:34.162: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Mar  9 08:40:34.162: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:40:34.181: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
    Mar  9 08:40:34.181: INFO: ss-0  k8s-worker1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:13 +0000 UTC  }]
    Mar  9 08:40:34.182: INFO: 
    Mar  9 08:40:34.182: INFO: StatefulSet ss has not reached scale 3, at 1
    Mar  9 08:40:35.188: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994660431s
    Mar  9 08:40:36.193: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989399164s
    Mar  9 08:40:37.198: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984094635s
    Mar  9 08:40:38.204: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978525198s
    Mar  9 08:40:39.209: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.973153365s
    Mar  9 08:40:40.214: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967827333s
    Mar  9 08:40:41.219: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963020144s
    Mar  9 08:40:42.226: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.956739167s
    Mar  9 08:40:43.231: INFO: Verifying statefulset ss doesn't scale past 3 for another 950.912776ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7898 03/09/23 08:40:44.232
    Mar  9 08:40:44.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:40:44.516: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar  9 08:40:44.516: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:40:44.516: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar  9 08:40:44.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:40:44.784: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Mar  9 08:40:44.784: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:40:44.784: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar  9 08:40:44.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:40:45.076: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Mar  9 08:40:45.076: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:40:45.076: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar  9 08:40:45.081: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
    Mar  9 08:40:55.087: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:40:55.087: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:40:55.087: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Scale down will not halt with unhealthy stateful pod 03/09/23 08:40:55.087
    Mar  9 08:40:55.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:40:55.363: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:40:55.363: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:40:55.363: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:40:55.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:40:55.637: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:40:55.638: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:40:55.638: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:40:55.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-7898 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:40:55.927: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:40:55.927: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:40:55.927: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:40:55.927: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:40:55.931: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
    Mar  9 08:41:05.942: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Mar  9 08:41:05.942: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Mar  9 08:41:05.942: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Mar  9 08:41:05.959: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
    Mar  9 08:41:05.959: INFO: ss-0  k8s-worker1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:13 +0000 UTC  }]
    Mar  9 08:41:05.959: INFO: ss-1  k8s-worker2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  }]
    Mar  9 08:41:05.959: INFO: ss-2  k8s-worker1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  }]
    Mar  9 08:41:05.959: INFO: 
    Mar  9 08:41:05.959: INFO: StatefulSet ss has not reached scale 0, at 3
    Mar  9 08:41:06.965: INFO: POD   NODE         PHASE    GRACE  CONDITIONS
    Mar  9 08:41:06.965: INFO: ss-0  k8s-worker1  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:13 +0000 UTC  }]
    Mar  9 08:41:06.965: INFO: ss-1  k8s-worker2  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  }]
    Mar  9 08:41:06.965: INFO: ss-2  k8s-worker1  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:33 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:40:34 +0000 UTC  }]
    Mar  9 08:41:06.965: INFO: 
    Mar  9 08:41:06.965: INFO: StatefulSet ss has not reached scale 0, at 3
    Mar  9 08:41:07.970: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.987965372s
    Mar  9 08:41:08.974: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.983769391s
    Mar  9 08:41:09.979: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.979044548s
    Mar  9 08:41:10.983: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.974906906s
    Mar  9 08:41:11.989: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.970367687s
    Mar  9 08:41:12.993: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.964709668s
    Mar  9 08:41:13.998: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.959455274s
    Mar  9 08:41:15.002: INFO: Verifying statefulset ss doesn't scale past 0 for another 955.279615ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7898 03/09/23 08:41:16.003
    Mar  9 08:41:16.008: INFO: Scaling statefulset ss to 0
    Mar  9 08:41:16.022: INFO: Waiting for statefulset status.replicas updated to 0
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar  9 08:41:16.026: INFO: Deleting all statefulset in ns statefulset-7898
    Mar  9 08:41:16.030: INFO: Scaling statefulset ss to 0
    Mar  9 08:41:16.044: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:41:16.048: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:41:16.063: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-7898" for this suite. 03/09/23 08:41:16.071
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
[BeforeEach] [sig-network] Service endpoints latency
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:41:16.08
Mar  9 08:41:16.080: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename svc-latency 03/09/23 08:41:16.082
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:41:16.097
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:41:16.102
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:31
[It] should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
Mar  9 08:41:16.107: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: creating replication controller svc-latency-rc in namespace svc-latency-3905 03/09/23 08:41:16.108
I0309 08:41:16.116221      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3905, replica count: 1
I0309 08:41:17.167752      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 08:41:18.168640      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 08:41:18.287: INFO: Created: latency-svc-wk8ww
Mar  9 08:41:18.295: INFO: Got endpoints: latency-svc-wk8ww [25.639524ms]
Mar  9 08:41:18.318: INFO: Created: latency-svc-5nxbw
Mar  9 08:41:18.326: INFO: Got endpoints: latency-svc-5nxbw [30.713815ms]
Mar  9 08:41:18.338: INFO: Created: latency-svc-7zpdh
Mar  9 08:41:18.346: INFO: Got endpoints: latency-svc-7zpdh [50.64666ms]
Mar  9 08:41:18.355: INFO: Created: latency-svc-2d2r2
Mar  9 08:41:18.362: INFO: Got endpoints: latency-svc-2d2r2 [66.162967ms]
Mar  9 08:41:18.375: INFO: Created: latency-svc-blh62
Mar  9 08:41:18.383: INFO: Got endpoints: latency-svc-blh62 [87.584675ms]
Mar  9 08:41:18.392: INFO: Created: latency-svc-tf9ng
Mar  9 08:41:18.399: INFO: Got endpoints: latency-svc-tf9ng [103.462216ms]
Mar  9 08:41:18.408: INFO: Created: latency-svc-bc2xm
Mar  9 08:41:18.417: INFO: Got endpoints: latency-svc-bc2xm [121.961081ms]
Mar  9 08:41:18.436: INFO: Created: latency-svc-fffx8
Mar  9 08:41:18.445: INFO: Got endpoints: latency-svc-fffx8 [149.314033ms]
Mar  9 08:41:18.446: INFO: Created: latency-svc-m28b6
Mar  9 08:41:18.468: INFO: Got endpoints: latency-svc-m28b6 [172.287931ms]
Mar  9 08:41:18.475: INFO: Created: latency-svc-k8twz
Mar  9 08:41:18.481: INFO: Got endpoints: latency-svc-k8twz [185.500259ms]
Mar  9 08:41:18.486: INFO: Created: latency-svc-xgb9s
Mar  9 08:41:18.495: INFO: Got endpoints: latency-svc-xgb9s [199.105555ms]
Mar  9 08:41:18.499: INFO: Created: latency-svc-tlszb
Mar  9 08:41:18.504: INFO: Got endpoints: latency-svc-tlszb [208.053595ms]
Mar  9 08:41:18.513: INFO: Created: latency-svc-7fn6t
Mar  9 08:41:18.521: INFO: Got endpoints: latency-svc-7fn6t [224.722049ms]
Mar  9 08:41:18.530: INFO: Created: latency-svc-fpswg
Mar  9 08:41:18.546: INFO: Got endpoints: latency-svc-fpswg [250.407773ms]
Mar  9 08:41:18.551: INFO: Created: latency-svc-n2599
Mar  9 08:41:18.556: INFO: Got endpoints: latency-svc-n2599 [260.40143ms]
Mar  9 08:41:18.564: INFO: Created: latency-svc-b2qhd
Mar  9 08:41:18.569: INFO: Got endpoints: latency-svc-b2qhd [274.268943ms]
Mar  9 08:41:18.580: INFO: Created: latency-svc-l79wq
Mar  9 08:41:18.590: INFO: Got endpoints: latency-svc-l79wq [264.534553ms]
Mar  9 08:41:18.596: INFO: Created: latency-svc-wsfvr
Mar  9 08:41:18.601: INFO: Got endpoints: latency-svc-wsfvr [255.00128ms]
Mar  9 08:41:18.614: INFO: Created: latency-svc-75x2p
Mar  9 08:41:18.645: INFO: Got endpoints: latency-svc-75x2p [283.730032ms]
Mar  9 08:41:18.671: INFO: Created: latency-svc-ht86r
Mar  9 08:41:18.687: INFO: Got endpoints: latency-svc-ht86r [303.812627ms]
Mar  9 08:41:18.699: INFO: Created: latency-svc-7lldt
Mar  9 08:41:18.704: INFO: Got endpoints: latency-svc-7lldt [305.28247ms]
Mar  9 08:41:18.712: INFO: Created: latency-svc-wdkks
Mar  9 08:41:18.715: INFO: Got endpoints: latency-svc-wdkks [297.878845ms]
Mar  9 08:41:18.727: INFO: Created: latency-svc-2hfjz
Mar  9 08:41:18.736: INFO: Got endpoints: latency-svc-2hfjz [290.603693ms]
Mar  9 08:41:18.739: INFO: Created: latency-svc-47vg2
Mar  9 08:41:18.747: INFO: Got endpoints: latency-svc-47vg2 [278.689983ms]
Mar  9 08:41:18.749: INFO: Created: latency-svc-4v62v
Mar  9 08:41:18.753: INFO: Got endpoints: latency-svc-4v62v [272.406275ms]
Mar  9 08:41:18.761: INFO: Created: latency-svc-p4lmb
Mar  9 08:41:18.766: INFO: Got endpoints: latency-svc-p4lmb [271.170657ms]
Mar  9 08:41:18.770: INFO: Created: latency-svc-v7wsj
Mar  9 08:41:18.780: INFO: Got endpoints: latency-svc-v7wsj [276.340521ms]
Mar  9 08:41:18.784: INFO: Created: latency-svc-2kfb8
Mar  9 08:41:18.788: INFO: Got endpoints: latency-svc-2kfb8 [267.06275ms]
Mar  9 08:41:18.795: INFO: Created: latency-svc-c8ksx
Mar  9 08:41:18.802: INFO: Got endpoints: latency-svc-c8ksx [256.78707ms]
Mar  9 08:41:18.805: INFO: Created: latency-svc-w9gpt
Mar  9 08:41:18.809: INFO: Got endpoints: latency-svc-w9gpt [252.485471ms]
Mar  9 08:41:18.818: INFO: Created: latency-svc-qw2zx
Mar  9 08:41:18.825: INFO: Got endpoints: latency-svc-qw2zx [255.274271ms]
Mar  9 08:41:18.828: INFO: Created: latency-svc-m5b2h
Mar  9 08:41:18.832: INFO: Got endpoints: latency-svc-m5b2h [241.530186ms]
Mar  9 08:41:18.838: INFO: Created: latency-svc-ktm8l
Mar  9 08:41:18.842: INFO: Got endpoints: latency-svc-ktm8l [240.906383ms]
Mar  9 08:41:18.851: INFO: Created: latency-svc-2v9cl
Mar  9 08:41:18.857: INFO: Got endpoints: latency-svc-2v9cl [211.449579ms]
Mar  9 08:41:18.859: INFO: Created: latency-svc-95fdz
Mar  9 08:41:18.867: INFO: Got endpoints: latency-svc-95fdz [179.762805ms]
Mar  9 08:41:18.868: INFO: Created: latency-svc-zfcdb
Mar  9 08:41:18.872: INFO: Got endpoints: latency-svc-zfcdb [167.822265ms]
Mar  9 08:41:18.893: INFO: Created: latency-svc-8hpwm
Mar  9 08:41:18.897: INFO: Created: latency-svc-g2pfx
Mar  9 08:41:18.899: INFO: Got endpoints: latency-svc-8hpwm [184.366299ms]
Mar  9 08:41:18.905: INFO: Got endpoints: latency-svc-g2pfx [168.715471ms]
Mar  9 08:41:18.908: INFO: Created: latency-svc-6xvhk
Mar  9 08:41:18.915: INFO: Got endpoints: latency-svc-6xvhk [167.998007ms]
Mar  9 08:41:18.918: INFO: Created: latency-svc-tpvbt
Mar  9 08:41:18.923: INFO: Got endpoints: latency-svc-tpvbt [169.540557ms]
Mar  9 08:41:18.935: INFO: Created: latency-svc-phtm7
Mar  9 08:41:18.943: INFO: Got endpoints: latency-svc-phtm7 [176.347784ms]
Mar  9 08:41:18.944: INFO: Created: latency-svc-s5d42
Mar  9 08:41:18.949: INFO: Got endpoints: latency-svc-s5d42 [168.615682ms]
Mar  9 08:41:18.955: INFO: Created: latency-svc-xcfbv
Mar  9 08:41:18.962: INFO: Got endpoints: latency-svc-xcfbv [173.838284ms]
Mar  9 08:41:18.969: INFO: Created: latency-svc-zczh9
Mar  9 08:41:18.977: INFO: Created: latency-svc-g5nzg
Mar  9 08:41:18.987: INFO: Created: latency-svc-xgbxv
Mar  9 08:41:19.004: INFO: Got endpoints: latency-svc-zczh9 [201.777762ms]
Mar  9 08:41:19.008: INFO: Created: latency-svc-tscb6
Mar  9 08:41:19.017: INFO: Created: latency-svc-849vz
Mar  9 08:41:19.028: INFO: Created: latency-svc-fhzgk
Mar  9 08:41:19.037: INFO: Created: latency-svc-lqpdb
Mar  9 08:41:19.045: INFO: Got endpoints: latency-svc-g5nzg [236.792157ms]
Mar  9 08:41:19.049: INFO: Created: latency-svc-k2xts
Mar  9 08:41:19.061: INFO: Created: latency-svc-pv6b7
Mar  9 08:41:19.072: INFO: Created: latency-svc-8sqf6
Mar  9 08:41:19.083: INFO: Created: latency-svc-tr4bn
Mar  9 08:41:19.100: INFO: Got endpoints: latency-svc-xgbxv [274.983785ms]
Mar  9 08:41:19.101: INFO: Created: latency-svc-cbspw
Mar  9 08:41:19.121: INFO: Created: latency-svc-czqd6
Mar  9 08:41:19.130: INFO: Created: latency-svc-f8xm6
Mar  9 08:41:19.143: INFO: Created: latency-svc-dt9bk
Mar  9 08:41:19.144: INFO: Got endpoints: latency-svc-tscb6 [312.118068ms]
Mar  9 08:41:19.153: INFO: Created: latency-svc-sqp7r
Mar  9 08:41:19.165: INFO: Created: latency-svc-t28zr
Mar  9 08:41:19.173: INFO: Created: latency-svc-ngvzn
Mar  9 08:41:19.182: INFO: Created: latency-svc-gjgh5
Mar  9 08:41:19.192: INFO: Got endpoints: latency-svc-849vz [349.845711ms]
Mar  9 08:41:19.206: INFO: Created: latency-svc-lwlwh
Mar  9 08:41:19.242: INFO: Got endpoints: latency-svc-fhzgk [384.811635ms]
Mar  9 08:41:19.255: INFO: Created: latency-svc-r5mkv
Mar  9 08:41:19.292: INFO: Got endpoints: latency-svc-lqpdb [425.134814ms]
Mar  9 08:41:19.307: INFO: Created: latency-svc-cqkcz
Mar  9 08:41:19.344: INFO: Got endpoints: latency-svc-k2xts [471.368678ms]
Mar  9 08:41:19.360: INFO: Created: latency-svc-tbh67
Mar  9 08:41:19.392: INFO: Got endpoints: latency-svc-pv6b7 [492.922693ms]
Mar  9 08:41:19.409: INFO: Created: latency-svc-sl7cl
Mar  9 08:41:19.449: INFO: Got endpoints: latency-svc-8sqf6 [544.584154ms]
Mar  9 08:41:19.469: INFO: Created: latency-svc-g7vzl
Mar  9 08:41:19.498: INFO: Got endpoints: latency-svc-tr4bn [583.027465ms]
Mar  9 08:41:19.519: INFO: Created: latency-svc-tqwkc
Mar  9 08:41:19.544: INFO: Got endpoints: latency-svc-cbspw [621.36136ms]
Mar  9 08:41:19.565: INFO: Created: latency-svc-rrzxb
Mar  9 08:41:19.593: INFO: Got endpoints: latency-svc-czqd6 [650.527103ms]
Mar  9 08:41:19.615: INFO: Created: latency-svc-lvjtw
Mar  9 08:41:19.644: INFO: Got endpoints: latency-svc-f8xm6 [694.464434ms]
Mar  9 08:41:19.668: INFO: Created: latency-svc-c7ww9
Mar  9 08:41:19.696: INFO: Got endpoints: latency-svc-dt9bk [734.032069ms]
Mar  9 08:41:19.718: INFO: Created: latency-svc-6vwkz
Mar  9 08:41:19.743: INFO: Got endpoints: latency-svc-sqp7r [738.86423ms]
Mar  9 08:41:19.772: INFO: Created: latency-svc-4fjnr
Mar  9 08:41:19.796: INFO: Got endpoints: latency-svc-t28zr [750.395112ms]
Mar  9 08:41:19.815: INFO: Created: latency-svc-48qvr
Mar  9 08:41:19.843: INFO: Got endpoints: latency-svc-ngvzn [743.185878ms]
Mar  9 08:41:19.870: INFO: Created: latency-svc-bk7z5
Mar  9 08:41:19.893: INFO: Got endpoints: latency-svc-gjgh5 [748.724894ms]
Mar  9 08:41:19.913: INFO: Created: latency-svc-s4hbk
Mar  9 08:41:19.943: INFO: Got endpoints: latency-svc-lwlwh [750.925024ms]
Mar  9 08:41:19.963: INFO: Created: latency-svc-b4mft
Mar  9 08:41:19.994: INFO: Got endpoints: latency-svc-r5mkv [751.750147ms]
Mar  9 08:41:20.017: INFO: Created: latency-svc-z4tmg
Mar  9 08:41:20.043: INFO: Got endpoints: latency-svc-cqkcz [751.233724ms]
Mar  9 08:41:20.067: INFO: Created: latency-svc-s45t2
Mar  9 08:41:20.095: INFO: Got endpoints: latency-svc-tbh67 [750.962203ms]
Mar  9 08:41:20.115: INFO: Created: latency-svc-c75tz
Mar  9 08:41:20.145: INFO: Got endpoints: latency-svc-sl7cl [752.096834ms]
Mar  9 08:41:20.164: INFO: Created: latency-svc-h8f9t
Mar  9 08:41:20.193: INFO: Got endpoints: latency-svc-g7vzl [744.258015ms]
Mar  9 08:41:20.217: INFO: Created: latency-svc-p9qln
Mar  9 08:41:20.245: INFO: Got endpoints: latency-svc-tqwkc [746.967237ms]
Mar  9 08:41:20.267: INFO: Created: latency-svc-zrtdj
Mar  9 08:41:20.295: INFO: Got endpoints: latency-svc-rrzxb [750.116125ms]
Mar  9 08:41:20.316: INFO: Created: latency-svc-vdvnh
Mar  9 08:41:20.345: INFO: Got endpoints: latency-svc-lvjtw [751.826156ms]
Mar  9 08:41:20.366: INFO: Created: latency-svc-bnt7l
Mar  9 08:41:20.398: INFO: Got endpoints: latency-svc-c7ww9 [753.741961ms]
Mar  9 08:41:20.418: INFO: Created: latency-svc-47mq6
Mar  9 08:41:20.444: INFO: Got endpoints: latency-svc-6vwkz [747.833576ms]
Mar  9 08:41:20.470: INFO: Created: latency-svc-rl7rj
Mar  9 08:41:20.494: INFO: Got endpoints: latency-svc-4fjnr [750.755828ms]
Mar  9 08:41:20.518: INFO: Created: latency-svc-mtr49
Mar  9 08:41:20.543: INFO: Got endpoints: latency-svc-48qvr [747.035671ms]
Mar  9 08:41:20.570: INFO: Created: latency-svc-27w57
Mar  9 08:41:20.593: INFO: Got endpoints: latency-svc-bk7z5 [750.195508ms]
Mar  9 08:41:20.615: INFO: Created: latency-svc-xhcfb
Mar  9 08:41:20.645: INFO: Got endpoints: latency-svc-s4hbk [752.542493ms]
Mar  9 08:41:20.667: INFO: Created: latency-svc-w62vj
Mar  9 08:41:20.693: INFO: Got endpoints: latency-svc-b4mft [750.686249ms]
Mar  9 08:41:20.721: INFO: Created: latency-svc-95zn9
Mar  9 08:41:20.746: INFO: Got endpoints: latency-svc-z4tmg [752.576538ms]
Mar  9 08:41:20.767: INFO: Created: latency-svc-7xl48
Mar  9 08:41:20.794: INFO: Got endpoints: latency-svc-s45t2 [750.775185ms]
Mar  9 08:41:20.816: INFO: Created: latency-svc-6mzxv
Mar  9 08:41:20.844: INFO: Got endpoints: latency-svc-c75tz [749.394914ms]
Mar  9 08:41:20.866: INFO: Created: latency-svc-pspgl
Mar  9 08:41:20.894: INFO: Got endpoints: latency-svc-h8f9t [749.28282ms]
Mar  9 08:41:20.914: INFO: Created: latency-svc-hb7lg
Mar  9 08:41:20.945: INFO: Got endpoints: latency-svc-p9qln [750.924562ms]
Mar  9 08:41:20.964: INFO: Created: latency-svc-kh7wt
Mar  9 08:41:20.993: INFO: Got endpoints: latency-svc-zrtdj [748.309559ms]
Mar  9 08:41:21.013: INFO: Created: latency-svc-mvb8z
Mar  9 08:41:21.044: INFO: Got endpoints: latency-svc-vdvnh [749.896621ms]
Mar  9 08:41:21.065: INFO: Created: latency-svc-grvw5
Mar  9 08:41:21.099: INFO: Got endpoints: latency-svc-bnt7l [753.789973ms]
Mar  9 08:41:21.152: INFO: Created: latency-svc-t5klh
Mar  9 08:41:21.154: INFO: Got endpoints: latency-svc-47mq6 [756.100185ms]
Mar  9 08:41:21.191: INFO: Created: latency-svc-m5rkv
Mar  9 08:41:21.201: INFO: Got endpoints: latency-svc-rl7rj [757.117351ms]
Mar  9 08:41:21.221: INFO: Created: latency-svc-qc5jb
Mar  9 08:41:21.242: INFO: Got endpoints: latency-svc-mtr49 [748.061733ms]
Mar  9 08:41:21.260: INFO: Created: latency-svc-6nbsf
Mar  9 08:41:21.292: INFO: Got endpoints: latency-svc-27w57 [749.358363ms]
Mar  9 08:41:21.306: INFO: Created: latency-svc-v9l48
Mar  9 08:41:21.342: INFO: Got endpoints: latency-svc-xhcfb [748.258844ms]
Mar  9 08:41:21.365: INFO: Created: latency-svc-vz4mj
Mar  9 08:41:21.396: INFO: Got endpoints: latency-svc-w62vj [751.15332ms]
Mar  9 08:41:21.410: INFO: Created: latency-svc-6rlw9
Mar  9 08:41:21.441: INFO: Got endpoints: latency-svc-95zn9 [747.638122ms]
Mar  9 08:41:21.458: INFO: Created: latency-svc-mkf7d
Mar  9 08:41:21.497: INFO: Got endpoints: latency-svc-7xl48 [750.869856ms]
Mar  9 08:41:21.523: INFO: Created: latency-svc-bxbjm
Mar  9 08:41:21.542: INFO: Got endpoints: latency-svc-6mzxv [747.629813ms]
Mar  9 08:41:21.555: INFO: Created: latency-svc-dm5ck
Mar  9 08:41:21.594: INFO: Got endpoints: latency-svc-pspgl [749.933271ms]
Mar  9 08:41:21.608: INFO: Created: latency-svc-p6vl6
Mar  9 08:41:21.642: INFO: Got endpoints: latency-svc-hb7lg [748.302203ms]
Mar  9 08:41:21.658: INFO: Created: latency-svc-4crf6
Mar  9 08:41:21.693: INFO: Got endpoints: latency-svc-kh7wt [748.82777ms]
Mar  9 08:41:21.711: INFO: Created: latency-svc-24sc5
Mar  9 08:41:21.744: INFO: Got endpoints: latency-svc-mvb8z [750.573113ms]
Mar  9 08:41:21.762: INFO: Created: latency-svc-46gcl
Mar  9 08:41:21.795: INFO: Got endpoints: latency-svc-grvw5 [750.367468ms]
Mar  9 08:41:21.812: INFO: Created: latency-svc-gk2qx
Mar  9 08:41:21.893: INFO: Got endpoints: latency-svc-t5klh [794.424181ms]
Mar  9 08:41:21.912: INFO: Created: latency-svc-7g4z5
Mar  9 08:41:21.943: INFO: Got endpoints: latency-svc-m5rkv [789.131835ms]
Mar  9 08:41:21.965: INFO: Created: latency-svc-58ngj
Mar  9 08:41:21.994: INFO: Got endpoints: latency-svc-qc5jb [793.299015ms]
Mar  9 08:41:22.017: INFO: Created: latency-svc-l67bt
Mar  9 08:41:22.044: INFO: Got endpoints: latency-svc-6nbsf [801.863393ms]
Mar  9 08:41:22.062: INFO: Created: latency-svc-47j6f
Mar  9 08:41:22.100: INFO: Got endpoints: latency-svc-v9l48 [807.331753ms]
Mar  9 08:41:22.117: INFO: Created: latency-svc-c4hmk
Mar  9 08:41:22.144: INFO: Got endpoints: latency-svc-vz4mj [802.368892ms]
Mar  9 08:41:22.162: INFO: Created: latency-svc-ds97b
Mar  9 08:41:22.193: INFO: Got endpoints: latency-svc-6rlw9 [796.958977ms]
Mar  9 08:41:22.213: INFO: Created: latency-svc-fcnzp
Mar  9 08:41:22.243: INFO: Got endpoints: latency-svc-mkf7d [802.016987ms]
Mar  9 08:41:22.263: INFO: Created: latency-svc-vhnnv
Mar  9 08:41:22.295: INFO: Got endpoints: latency-svc-bxbjm [798.052974ms]
Mar  9 08:41:22.329: INFO: Created: latency-svc-c57x6
Mar  9 08:41:22.344: INFO: Got endpoints: latency-svc-dm5ck [801.763245ms]
Mar  9 08:41:22.362: INFO: Created: latency-svc-8vgl9
Mar  9 08:41:22.394: INFO: Got endpoints: latency-svc-p6vl6 [799.644879ms]
Mar  9 08:41:22.412: INFO: Created: latency-svc-vm6bw
Mar  9 08:41:22.444: INFO: Got endpoints: latency-svc-4crf6 [801.248989ms]
Mar  9 08:41:22.464: INFO: Created: latency-svc-vgz7q
Mar  9 08:41:22.496: INFO: Got endpoints: latency-svc-24sc5 [802.4034ms]
Mar  9 08:41:22.515: INFO: Created: latency-svc-7xndl
Mar  9 08:41:22.544: INFO: Got endpoints: latency-svc-46gcl [799.961258ms]
Mar  9 08:41:22.564: INFO: Created: latency-svc-zp4pr
Mar  9 08:41:22.593: INFO: Got endpoints: latency-svc-gk2qx [798.348065ms]
Mar  9 08:41:22.613: INFO: Created: latency-svc-mc7lq
Mar  9 08:41:22.646: INFO: Got endpoints: latency-svc-7g4z5 [752.28175ms]
Mar  9 08:41:22.665: INFO: Created: latency-svc-njbz5
Mar  9 08:41:22.693: INFO: Got endpoints: latency-svc-58ngj [750.21946ms]
Mar  9 08:41:22.712: INFO: Created: latency-svc-6tnwj
Mar  9 08:41:22.743: INFO: Got endpoints: latency-svc-l67bt [749.096501ms]
Mar  9 08:41:22.762: INFO: Created: latency-svc-tw7kr
Mar  9 08:41:22.793: INFO: Got endpoints: latency-svc-47j6f [748.89487ms]
Mar  9 08:41:22.812: INFO: Created: latency-svc-tgthm
Mar  9 08:41:22.846: INFO: Got endpoints: latency-svc-c4hmk [745.880012ms]
Mar  9 08:41:22.867: INFO: Created: latency-svc-dbmnf
Mar  9 08:41:22.894: INFO: Got endpoints: latency-svc-ds97b [750.104969ms]
Mar  9 08:41:22.913: INFO: Created: latency-svc-8cjlw
Mar  9 08:41:22.945: INFO: Got endpoints: latency-svc-fcnzp [751.252921ms]
Mar  9 08:41:22.966: INFO: Created: latency-svc-cz5s8
Mar  9 08:41:22.996: INFO: Got endpoints: latency-svc-vhnnv [752.821343ms]
Mar  9 08:41:23.014: INFO: Created: latency-svc-rc92x
Mar  9 08:41:23.043: INFO: Got endpoints: latency-svc-c57x6 [747.891374ms]
Mar  9 08:41:23.065: INFO: Created: latency-svc-tk7zr
Mar  9 08:41:23.093: INFO: Got endpoints: latency-svc-8vgl9 [749.305474ms]
Mar  9 08:41:23.113: INFO: Created: latency-svc-72lvs
Mar  9 08:41:23.146: INFO: Got endpoints: latency-svc-vm6bw [751.910734ms]
Mar  9 08:41:23.171: INFO: Created: latency-svc-vkqt9
Mar  9 08:41:23.193: INFO: Got endpoints: latency-svc-vgz7q [749.820666ms]
Mar  9 08:41:23.218: INFO: Created: latency-svc-6jvrl
Mar  9 08:41:23.246: INFO: Got endpoints: latency-svc-7xndl [749.85821ms]
Mar  9 08:41:23.265: INFO: Created: latency-svc-d7z2l
Mar  9 08:41:23.294: INFO: Got endpoints: latency-svc-zp4pr [750.698535ms]
Mar  9 08:41:23.316: INFO: Created: latency-svc-zmjcn
Mar  9 08:41:23.343: INFO: Got endpoints: latency-svc-mc7lq [749.951764ms]
Mar  9 08:41:23.372: INFO: Created: latency-svc-bscch
Mar  9 08:41:23.395: INFO: Got endpoints: latency-svc-njbz5 [749.156661ms]
Mar  9 08:41:23.415: INFO: Created: latency-svc-gjl9b
Mar  9 08:41:23.443: INFO: Got endpoints: latency-svc-6tnwj [749.732977ms]
Mar  9 08:41:23.461: INFO: Created: latency-svc-7pj5q
Mar  9 08:41:23.493: INFO: Got endpoints: latency-svc-tw7kr [749.629483ms]
Mar  9 08:41:23.509: INFO: Created: latency-svc-ls9hd
Mar  9 08:41:23.544: INFO: Got endpoints: latency-svc-tgthm [750.349464ms]
Mar  9 08:41:23.562: INFO: Created: latency-svc-tscxf
Mar  9 08:41:23.592: INFO: Got endpoints: latency-svc-dbmnf [746.55486ms]
Mar  9 08:41:23.613: INFO: Created: latency-svc-q9stg
Mar  9 08:41:23.644: INFO: Got endpoints: latency-svc-8cjlw [750.006594ms]
Mar  9 08:41:23.661: INFO: Created: latency-svc-cklgh
Mar  9 08:41:23.697: INFO: Got endpoints: latency-svc-cz5s8 [751.912665ms]
Mar  9 08:41:23.716: INFO: Created: latency-svc-z9czr
Mar  9 08:41:23.745: INFO: Got endpoints: latency-svc-rc92x [748.918116ms]
Mar  9 08:41:23.763: INFO: Created: latency-svc-wq4lq
Mar  9 08:41:23.795: INFO: Got endpoints: latency-svc-tk7zr [751.220071ms]
Mar  9 08:41:23.819: INFO: Created: latency-svc-5lpmj
Mar  9 08:41:23.843: INFO: Got endpoints: latency-svc-72lvs [749.427224ms]
Mar  9 08:41:23.861: INFO: Created: latency-svc-xhdm7
Mar  9 08:41:23.893: INFO: Got endpoints: latency-svc-vkqt9 [747.113647ms]
Mar  9 08:41:23.915: INFO: Created: latency-svc-756hd
Mar  9 08:41:23.944: INFO: Got endpoints: latency-svc-6jvrl [750.853131ms]
Mar  9 08:41:23.963: INFO: Created: latency-svc-z2b49
Mar  9 08:41:23.995: INFO: Got endpoints: latency-svc-d7z2l [748.756748ms]
Mar  9 08:41:24.016: INFO: Created: latency-svc-dbjr9
Mar  9 08:41:24.044: INFO: Got endpoints: latency-svc-zmjcn [749.059816ms]
Mar  9 08:41:24.064: INFO: Created: latency-svc-r4zgr
Mar  9 08:41:24.095: INFO: Got endpoints: latency-svc-bscch [751.913894ms]
Mar  9 08:41:24.114: INFO: Created: latency-svc-9rvnk
Mar  9 08:41:24.144: INFO: Got endpoints: latency-svc-gjl9b [748.592266ms]
Mar  9 08:41:24.164: INFO: Created: latency-svc-dg8lp
Mar  9 08:41:24.194: INFO: Got endpoints: latency-svc-7pj5q [751.134806ms]
Mar  9 08:41:24.214: INFO: Created: latency-svc-h7z8h
Mar  9 08:41:24.245: INFO: Got endpoints: latency-svc-ls9hd [751.750231ms]
Mar  9 08:41:24.264: INFO: Created: latency-svc-vcq2b
Mar  9 08:41:24.295: INFO: Got endpoints: latency-svc-tscxf [751.283972ms]
Mar  9 08:41:24.315: INFO: Created: latency-svc-sb8rx
Mar  9 08:41:24.343: INFO: Got endpoints: latency-svc-q9stg [750.91725ms]
Mar  9 08:41:24.365: INFO: Created: latency-svc-nwk8m
Mar  9 08:41:24.393: INFO: Got endpoints: latency-svc-cklgh [748.981225ms]
Mar  9 08:41:24.421: INFO: Created: latency-svc-jt56l
Mar  9 08:41:24.444: INFO: Got endpoints: latency-svc-z9czr [746.982875ms]
Mar  9 08:41:24.463: INFO: Created: latency-svc-8895l
Mar  9 08:41:24.494: INFO: Got endpoints: latency-svc-wq4lq [748.82082ms]
Mar  9 08:41:24.514: INFO: Created: latency-svc-gcpct
Mar  9 08:41:24.548: INFO: Got endpoints: latency-svc-5lpmj [753.338715ms]
Mar  9 08:41:24.566: INFO: Created: latency-svc-5xxww
Mar  9 08:41:24.594: INFO: Got endpoints: latency-svc-xhdm7 [751.4303ms]
Mar  9 08:41:24.613: INFO: Created: latency-svc-2gz9r
Mar  9 08:41:24.643: INFO: Got endpoints: latency-svc-756hd [750.635953ms]
Mar  9 08:41:24.666: INFO: Created: latency-svc-7nbv7
Mar  9 08:41:24.707: INFO: Got endpoints: latency-svc-z2b49 [762.82756ms]
Mar  9 08:41:24.725: INFO: Created: latency-svc-gqkkt
Mar  9 08:41:24.744: INFO: Got endpoints: latency-svc-dbjr9 [749.653213ms]
Mar  9 08:41:24.765: INFO: Created: latency-svc-q4d5r
Mar  9 08:41:24.792: INFO: Got endpoints: latency-svc-r4zgr [748.840285ms]
Mar  9 08:41:24.811: INFO: Created: latency-svc-cvs4k
Mar  9 08:41:24.843: INFO: Got endpoints: latency-svc-9rvnk [747.816225ms]
Mar  9 08:41:24.868: INFO: Created: latency-svc-vlgfr
Mar  9 08:41:24.892: INFO: Got endpoints: latency-svc-dg8lp [748.80834ms]
Mar  9 08:41:24.912: INFO: Created: latency-svc-5r6dj
Mar  9 08:41:24.943: INFO: Got endpoints: latency-svc-h7z8h [748.605042ms]
Mar  9 08:41:24.961: INFO: Created: latency-svc-cnnhs
Mar  9 08:41:24.994: INFO: Got endpoints: latency-svc-vcq2b [749.814125ms]
Mar  9 08:41:25.013: INFO: Created: latency-svc-g7p65
Mar  9 08:41:25.043: INFO: Got endpoints: latency-svc-sb8rx [747.993871ms]
Mar  9 08:41:25.061: INFO: Created: latency-svc-fbl79
Mar  9 08:41:25.093: INFO: Got endpoints: latency-svc-nwk8m [749.700613ms]
Mar  9 08:41:25.111: INFO: Created: latency-svc-lk6cr
Mar  9 08:41:25.144: INFO: Got endpoints: latency-svc-jt56l [751.195838ms]
Mar  9 08:41:25.166: INFO: Created: latency-svc-hjlhl
Mar  9 08:41:25.194: INFO: Got endpoints: latency-svc-8895l [749.740254ms]
Mar  9 08:41:25.213: INFO: Created: latency-svc-vn6g5
Mar  9 08:41:25.244: INFO: Got endpoints: latency-svc-gcpct [750.463851ms]
Mar  9 08:41:25.266: INFO: Created: latency-svc-5bw8m
Mar  9 08:41:25.296: INFO: Got endpoints: latency-svc-5xxww [748.043148ms]
Mar  9 08:41:25.317: INFO: Created: latency-svc-7s7hl
Mar  9 08:41:25.343: INFO: Got endpoints: latency-svc-2gz9r [749.184635ms]
Mar  9 08:41:25.387: INFO: Created: latency-svc-mwsb5
Mar  9 08:41:25.411: INFO: Got endpoints: latency-svc-7nbv7 [767.660406ms]
Mar  9 08:41:25.442: INFO: Created: latency-svc-zdcdd
Mar  9 08:41:25.447: INFO: Got endpoints: latency-svc-gqkkt [739.463413ms]
Mar  9 08:41:25.461: INFO: Created: latency-svc-hhgjm
Mar  9 08:41:25.494: INFO: Got endpoints: latency-svc-q4d5r [749.286435ms]
Mar  9 08:41:25.512: INFO: Created: latency-svc-vgspk
Mar  9 08:41:25.542: INFO: Got endpoints: latency-svc-cvs4k [749.292662ms]
Mar  9 08:41:25.559: INFO: Created: latency-svc-m7bdq
Mar  9 08:41:25.592: INFO: Got endpoints: latency-svc-vlgfr [748.66134ms]
Mar  9 08:41:25.607: INFO: Created: latency-svc-gbv6f
Mar  9 08:41:25.643: INFO: Got endpoints: latency-svc-5r6dj [750.773311ms]
Mar  9 08:41:25.658: INFO: Created: latency-svc-95zfl
Mar  9 08:41:25.695: INFO: Got endpoints: latency-svc-cnnhs [751.839324ms]
Mar  9 08:41:25.710: INFO: Created: latency-svc-4shrc
Mar  9 08:41:25.743: INFO: Got endpoints: latency-svc-g7p65 [748.541213ms]
Mar  9 08:41:25.761: INFO: Created: latency-svc-8kdxs
Mar  9 08:41:25.794: INFO: Got endpoints: latency-svc-fbl79 [750.703255ms]
Mar  9 08:41:25.813: INFO: Created: latency-svc-gnxss
Mar  9 08:41:25.845: INFO: Got endpoints: latency-svc-lk6cr [751.718372ms]
Mar  9 08:41:25.865: INFO: Created: latency-svc-7hmk4
Mar  9 08:41:25.892: INFO: Got endpoints: latency-svc-hjlhl [747.892461ms]
Mar  9 08:41:25.912: INFO: Created: latency-svc-p4h69
Mar  9 08:41:25.944: INFO: Got endpoints: latency-svc-vn6g5 [750.430235ms]
Mar  9 08:41:25.962: INFO: Created: latency-svc-krrdj
Mar  9 08:41:25.994: INFO: Got endpoints: latency-svc-5bw8m [750.016966ms]
Mar  9 08:41:26.012: INFO: Created: latency-svc-jtmgf
Mar  9 08:41:26.043: INFO: Got endpoints: latency-svc-7s7hl [747.178112ms]
Mar  9 08:41:26.062: INFO: Created: latency-svc-g6bgr
Mar  9 08:41:26.094: INFO: Got endpoints: latency-svc-mwsb5 [750.226525ms]
Mar  9 08:41:26.112: INFO: Created: latency-svc-np5g6
Mar  9 08:41:26.149: INFO: Got endpoints: latency-svc-zdcdd [738.255447ms]
Mar  9 08:41:26.169: INFO: Created: latency-svc-8qmxh
Mar  9 08:41:26.194: INFO: Got endpoints: latency-svc-hhgjm [746.80988ms]
Mar  9 08:41:26.246: INFO: Got endpoints: latency-svc-vgspk [752.458307ms]
Mar  9 08:41:26.293: INFO: Got endpoints: latency-svc-m7bdq [751.520336ms]
Mar  9 08:41:26.344: INFO: Got endpoints: latency-svc-gbv6f [752.279985ms]
Mar  9 08:41:26.394: INFO: Got endpoints: latency-svc-95zfl [750.681669ms]
Mar  9 08:41:26.446: INFO: Got endpoints: latency-svc-4shrc [750.84372ms]
Mar  9 08:41:26.494: INFO: Got endpoints: latency-svc-8kdxs [750.410641ms]
Mar  9 08:41:26.543: INFO: Got endpoints: latency-svc-gnxss [749.055073ms]
Mar  9 08:41:26.593: INFO: Got endpoints: latency-svc-7hmk4 [748.336578ms]
Mar  9 08:41:26.643: INFO: Got endpoints: latency-svc-p4h69 [750.303899ms]
Mar  9 08:41:26.692: INFO: Got endpoints: latency-svc-krrdj [748.375904ms]
Mar  9 08:41:26.743: INFO: Got endpoints: latency-svc-jtmgf [748.92766ms]
Mar  9 08:41:26.793: INFO: Got endpoints: latency-svc-g6bgr [749.270886ms]
Mar  9 08:41:26.845: INFO: Got endpoints: latency-svc-np5g6 [751.138688ms]
Mar  9 08:41:26.893: INFO: Got endpoints: latency-svc-8qmxh [743.788259ms]
Mar  9 08:41:26.893: INFO: Latencies: [30.713815ms 50.64666ms 66.162967ms 87.584675ms 103.462216ms 121.961081ms 149.314033ms 167.822265ms 167.998007ms 168.615682ms 168.715471ms 169.540557ms 172.287931ms 173.838284ms 176.347784ms 179.762805ms 184.366299ms 185.500259ms 199.105555ms 201.777762ms 208.053595ms 211.449579ms 224.722049ms 236.792157ms 240.906383ms 241.530186ms 250.407773ms 252.485471ms 255.00128ms 255.274271ms 256.78707ms 260.40143ms 264.534553ms 267.06275ms 271.170657ms 272.406275ms 274.268943ms 274.983785ms 276.340521ms 278.689983ms 283.730032ms 290.603693ms 297.878845ms 303.812627ms 305.28247ms 312.118068ms 349.845711ms 384.811635ms 425.134814ms 471.368678ms 492.922693ms 544.584154ms 583.027465ms 621.36136ms 650.527103ms 694.464434ms 734.032069ms 738.255447ms 738.86423ms 739.463413ms 743.185878ms 743.788259ms 744.258015ms 745.880012ms 746.55486ms 746.80988ms 746.967237ms 746.982875ms 747.035671ms 747.113647ms 747.178112ms 747.629813ms 747.638122ms 747.816225ms 747.833576ms 747.891374ms 747.892461ms 747.993871ms 748.043148ms 748.061733ms 748.258844ms 748.302203ms 748.309559ms 748.336578ms 748.375904ms 748.541213ms 748.592266ms 748.605042ms 748.66134ms 748.724894ms 748.756748ms 748.80834ms 748.82082ms 748.82777ms 748.840285ms 748.89487ms 748.918116ms 748.92766ms 748.981225ms 749.055073ms 749.059816ms 749.096501ms 749.156661ms 749.184635ms 749.270886ms 749.28282ms 749.286435ms 749.292662ms 749.305474ms 749.358363ms 749.394914ms 749.427224ms 749.629483ms 749.653213ms 749.700613ms 749.732977ms 749.740254ms 749.814125ms 749.820666ms 749.85821ms 749.896621ms 749.933271ms 749.951764ms 750.006594ms 750.016966ms 750.104969ms 750.116125ms 750.195508ms 750.21946ms 750.226525ms 750.303899ms 750.349464ms 750.367468ms 750.395112ms 750.410641ms 750.430235ms 750.463851ms 750.573113ms 750.635953ms 750.681669ms 750.686249ms 750.698535ms 750.703255ms 750.755828ms 750.773311ms 750.775185ms 750.84372ms 750.853131ms 750.869856ms 750.91725ms 750.924562ms 750.925024ms 750.962203ms 751.134806ms 751.138688ms 751.15332ms 751.195838ms 751.220071ms 751.233724ms 751.252921ms 751.283972ms 751.4303ms 751.520336ms 751.718372ms 751.750147ms 751.750231ms 751.826156ms 751.839324ms 751.910734ms 751.912665ms 751.913894ms 752.096834ms 752.279985ms 752.28175ms 752.458307ms 752.542493ms 752.576538ms 752.821343ms 753.338715ms 753.741961ms 753.789973ms 756.100185ms 757.117351ms 762.82756ms 767.660406ms 789.131835ms 793.299015ms 794.424181ms 796.958977ms 798.052974ms 798.348065ms 799.644879ms 799.961258ms 801.248989ms 801.763245ms 801.863393ms 802.016987ms 802.368892ms 802.4034ms 807.331753ms]
Mar  9 08:41:26.894: INFO: 50 %ile: 749.059816ms
Mar  9 08:41:26.894: INFO: 90 %ile: 753.789973ms
Mar  9 08:41:26.894: INFO: 99 %ile: 802.4034ms
Mar  9 08:41:26.894: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/node/init/init.go:32
Mar  9 08:41:26.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  tear down framework | framework.go:193
STEP: Destroying namespace "svc-latency-3905" for this suite. 03/09/23 08:41:26.903
------------------------------
â€¢ [SLOW TEST] [10.831 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Service endpoints latency
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:41:16.08
    Mar  9 08:41:16.080: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename svc-latency 03/09/23 08:41:16.082
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:41:16.097
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:41:16.102
    [BeforeEach] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be very high  [Conformance]
      test/e2e/network/service_latency.go:59
    Mar  9 08:41:16.107: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: creating replication controller svc-latency-rc in namespace svc-latency-3905 03/09/23 08:41:16.108
    I0309 08:41:16.116221      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3905, replica count: 1
    I0309 08:41:17.167752      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 08:41:18.168640      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 08:41:18.287: INFO: Created: latency-svc-wk8ww
    Mar  9 08:41:18.295: INFO: Got endpoints: latency-svc-wk8ww [25.639524ms]
    Mar  9 08:41:18.318: INFO: Created: latency-svc-5nxbw
    Mar  9 08:41:18.326: INFO: Got endpoints: latency-svc-5nxbw [30.713815ms]
    Mar  9 08:41:18.338: INFO: Created: latency-svc-7zpdh
    Mar  9 08:41:18.346: INFO: Got endpoints: latency-svc-7zpdh [50.64666ms]
    Mar  9 08:41:18.355: INFO: Created: latency-svc-2d2r2
    Mar  9 08:41:18.362: INFO: Got endpoints: latency-svc-2d2r2 [66.162967ms]
    Mar  9 08:41:18.375: INFO: Created: latency-svc-blh62
    Mar  9 08:41:18.383: INFO: Got endpoints: latency-svc-blh62 [87.584675ms]
    Mar  9 08:41:18.392: INFO: Created: latency-svc-tf9ng
    Mar  9 08:41:18.399: INFO: Got endpoints: latency-svc-tf9ng [103.462216ms]
    Mar  9 08:41:18.408: INFO: Created: latency-svc-bc2xm
    Mar  9 08:41:18.417: INFO: Got endpoints: latency-svc-bc2xm [121.961081ms]
    Mar  9 08:41:18.436: INFO: Created: latency-svc-fffx8
    Mar  9 08:41:18.445: INFO: Got endpoints: latency-svc-fffx8 [149.314033ms]
    Mar  9 08:41:18.446: INFO: Created: latency-svc-m28b6
    Mar  9 08:41:18.468: INFO: Got endpoints: latency-svc-m28b6 [172.287931ms]
    Mar  9 08:41:18.475: INFO: Created: latency-svc-k8twz
    Mar  9 08:41:18.481: INFO: Got endpoints: latency-svc-k8twz [185.500259ms]
    Mar  9 08:41:18.486: INFO: Created: latency-svc-xgb9s
    Mar  9 08:41:18.495: INFO: Got endpoints: latency-svc-xgb9s [199.105555ms]
    Mar  9 08:41:18.499: INFO: Created: latency-svc-tlszb
    Mar  9 08:41:18.504: INFO: Got endpoints: latency-svc-tlszb [208.053595ms]
    Mar  9 08:41:18.513: INFO: Created: latency-svc-7fn6t
    Mar  9 08:41:18.521: INFO: Got endpoints: latency-svc-7fn6t [224.722049ms]
    Mar  9 08:41:18.530: INFO: Created: latency-svc-fpswg
    Mar  9 08:41:18.546: INFO: Got endpoints: latency-svc-fpswg [250.407773ms]
    Mar  9 08:41:18.551: INFO: Created: latency-svc-n2599
    Mar  9 08:41:18.556: INFO: Got endpoints: latency-svc-n2599 [260.40143ms]
    Mar  9 08:41:18.564: INFO: Created: latency-svc-b2qhd
    Mar  9 08:41:18.569: INFO: Got endpoints: latency-svc-b2qhd [274.268943ms]
    Mar  9 08:41:18.580: INFO: Created: latency-svc-l79wq
    Mar  9 08:41:18.590: INFO: Got endpoints: latency-svc-l79wq [264.534553ms]
    Mar  9 08:41:18.596: INFO: Created: latency-svc-wsfvr
    Mar  9 08:41:18.601: INFO: Got endpoints: latency-svc-wsfvr [255.00128ms]
    Mar  9 08:41:18.614: INFO: Created: latency-svc-75x2p
    Mar  9 08:41:18.645: INFO: Got endpoints: latency-svc-75x2p [283.730032ms]
    Mar  9 08:41:18.671: INFO: Created: latency-svc-ht86r
    Mar  9 08:41:18.687: INFO: Got endpoints: latency-svc-ht86r [303.812627ms]
    Mar  9 08:41:18.699: INFO: Created: latency-svc-7lldt
    Mar  9 08:41:18.704: INFO: Got endpoints: latency-svc-7lldt [305.28247ms]
    Mar  9 08:41:18.712: INFO: Created: latency-svc-wdkks
    Mar  9 08:41:18.715: INFO: Got endpoints: latency-svc-wdkks [297.878845ms]
    Mar  9 08:41:18.727: INFO: Created: latency-svc-2hfjz
    Mar  9 08:41:18.736: INFO: Got endpoints: latency-svc-2hfjz [290.603693ms]
    Mar  9 08:41:18.739: INFO: Created: latency-svc-47vg2
    Mar  9 08:41:18.747: INFO: Got endpoints: latency-svc-47vg2 [278.689983ms]
    Mar  9 08:41:18.749: INFO: Created: latency-svc-4v62v
    Mar  9 08:41:18.753: INFO: Got endpoints: latency-svc-4v62v [272.406275ms]
    Mar  9 08:41:18.761: INFO: Created: latency-svc-p4lmb
    Mar  9 08:41:18.766: INFO: Got endpoints: latency-svc-p4lmb [271.170657ms]
    Mar  9 08:41:18.770: INFO: Created: latency-svc-v7wsj
    Mar  9 08:41:18.780: INFO: Got endpoints: latency-svc-v7wsj [276.340521ms]
    Mar  9 08:41:18.784: INFO: Created: latency-svc-2kfb8
    Mar  9 08:41:18.788: INFO: Got endpoints: latency-svc-2kfb8 [267.06275ms]
    Mar  9 08:41:18.795: INFO: Created: latency-svc-c8ksx
    Mar  9 08:41:18.802: INFO: Got endpoints: latency-svc-c8ksx [256.78707ms]
    Mar  9 08:41:18.805: INFO: Created: latency-svc-w9gpt
    Mar  9 08:41:18.809: INFO: Got endpoints: latency-svc-w9gpt [252.485471ms]
    Mar  9 08:41:18.818: INFO: Created: latency-svc-qw2zx
    Mar  9 08:41:18.825: INFO: Got endpoints: latency-svc-qw2zx [255.274271ms]
    Mar  9 08:41:18.828: INFO: Created: latency-svc-m5b2h
    Mar  9 08:41:18.832: INFO: Got endpoints: latency-svc-m5b2h [241.530186ms]
    Mar  9 08:41:18.838: INFO: Created: latency-svc-ktm8l
    Mar  9 08:41:18.842: INFO: Got endpoints: latency-svc-ktm8l [240.906383ms]
    Mar  9 08:41:18.851: INFO: Created: latency-svc-2v9cl
    Mar  9 08:41:18.857: INFO: Got endpoints: latency-svc-2v9cl [211.449579ms]
    Mar  9 08:41:18.859: INFO: Created: latency-svc-95fdz
    Mar  9 08:41:18.867: INFO: Got endpoints: latency-svc-95fdz [179.762805ms]
    Mar  9 08:41:18.868: INFO: Created: latency-svc-zfcdb
    Mar  9 08:41:18.872: INFO: Got endpoints: latency-svc-zfcdb [167.822265ms]
    Mar  9 08:41:18.893: INFO: Created: latency-svc-8hpwm
    Mar  9 08:41:18.897: INFO: Created: latency-svc-g2pfx
    Mar  9 08:41:18.899: INFO: Got endpoints: latency-svc-8hpwm [184.366299ms]
    Mar  9 08:41:18.905: INFO: Got endpoints: latency-svc-g2pfx [168.715471ms]
    Mar  9 08:41:18.908: INFO: Created: latency-svc-6xvhk
    Mar  9 08:41:18.915: INFO: Got endpoints: latency-svc-6xvhk [167.998007ms]
    Mar  9 08:41:18.918: INFO: Created: latency-svc-tpvbt
    Mar  9 08:41:18.923: INFO: Got endpoints: latency-svc-tpvbt [169.540557ms]
    Mar  9 08:41:18.935: INFO: Created: latency-svc-phtm7
    Mar  9 08:41:18.943: INFO: Got endpoints: latency-svc-phtm7 [176.347784ms]
    Mar  9 08:41:18.944: INFO: Created: latency-svc-s5d42
    Mar  9 08:41:18.949: INFO: Got endpoints: latency-svc-s5d42 [168.615682ms]
    Mar  9 08:41:18.955: INFO: Created: latency-svc-xcfbv
    Mar  9 08:41:18.962: INFO: Got endpoints: latency-svc-xcfbv [173.838284ms]
    Mar  9 08:41:18.969: INFO: Created: latency-svc-zczh9
    Mar  9 08:41:18.977: INFO: Created: latency-svc-g5nzg
    Mar  9 08:41:18.987: INFO: Created: latency-svc-xgbxv
    Mar  9 08:41:19.004: INFO: Got endpoints: latency-svc-zczh9 [201.777762ms]
    Mar  9 08:41:19.008: INFO: Created: latency-svc-tscb6
    Mar  9 08:41:19.017: INFO: Created: latency-svc-849vz
    Mar  9 08:41:19.028: INFO: Created: latency-svc-fhzgk
    Mar  9 08:41:19.037: INFO: Created: latency-svc-lqpdb
    Mar  9 08:41:19.045: INFO: Got endpoints: latency-svc-g5nzg [236.792157ms]
    Mar  9 08:41:19.049: INFO: Created: latency-svc-k2xts
    Mar  9 08:41:19.061: INFO: Created: latency-svc-pv6b7
    Mar  9 08:41:19.072: INFO: Created: latency-svc-8sqf6
    Mar  9 08:41:19.083: INFO: Created: latency-svc-tr4bn
    Mar  9 08:41:19.100: INFO: Got endpoints: latency-svc-xgbxv [274.983785ms]
    Mar  9 08:41:19.101: INFO: Created: latency-svc-cbspw
    Mar  9 08:41:19.121: INFO: Created: latency-svc-czqd6
    Mar  9 08:41:19.130: INFO: Created: latency-svc-f8xm6
    Mar  9 08:41:19.143: INFO: Created: latency-svc-dt9bk
    Mar  9 08:41:19.144: INFO: Got endpoints: latency-svc-tscb6 [312.118068ms]
    Mar  9 08:41:19.153: INFO: Created: latency-svc-sqp7r
    Mar  9 08:41:19.165: INFO: Created: latency-svc-t28zr
    Mar  9 08:41:19.173: INFO: Created: latency-svc-ngvzn
    Mar  9 08:41:19.182: INFO: Created: latency-svc-gjgh5
    Mar  9 08:41:19.192: INFO: Got endpoints: latency-svc-849vz [349.845711ms]
    Mar  9 08:41:19.206: INFO: Created: latency-svc-lwlwh
    Mar  9 08:41:19.242: INFO: Got endpoints: latency-svc-fhzgk [384.811635ms]
    Mar  9 08:41:19.255: INFO: Created: latency-svc-r5mkv
    Mar  9 08:41:19.292: INFO: Got endpoints: latency-svc-lqpdb [425.134814ms]
    Mar  9 08:41:19.307: INFO: Created: latency-svc-cqkcz
    Mar  9 08:41:19.344: INFO: Got endpoints: latency-svc-k2xts [471.368678ms]
    Mar  9 08:41:19.360: INFO: Created: latency-svc-tbh67
    Mar  9 08:41:19.392: INFO: Got endpoints: latency-svc-pv6b7 [492.922693ms]
    Mar  9 08:41:19.409: INFO: Created: latency-svc-sl7cl
    Mar  9 08:41:19.449: INFO: Got endpoints: latency-svc-8sqf6 [544.584154ms]
    Mar  9 08:41:19.469: INFO: Created: latency-svc-g7vzl
    Mar  9 08:41:19.498: INFO: Got endpoints: latency-svc-tr4bn [583.027465ms]
    Mar  9 08:41:19.519: INFO: Created: latency-svc-tqwkc
    Mar  9 08:41:19.544: INFO: Got endpoints: latency-svc-cbspw [621.36136ms]
    Mar  9 08:41:19.565: INFO: Created: latency-svc-rrzxb
    Mar  9 08:41:19.593: INFO: Got endpoints: latency-svc-czqd6 [650.527103ms]
    Mar  9 08:41:19.615: INFO: Created: latency-svc-lvjtw
    Mar  9 08:41:19.644: INFO: Got endpoints: latency-svc-f8xm6 [694.464434ms]
    Mar  9 08:41:19.668: INFO: Created: latency-svc-c7ww9
    Mar  9 08:41:19.696: INFO: Got endpoints: latency-svc-dt9bk [734.032069ms]
    Mar  9 08:41:19.718: INFO: Created: latency-svc-6vwkz
    Mar  9 08:41:19.743: INFO: Got endpoints: latency-svc-sqp7r [738.86423ms]
    Mar  9 08:41:19.772: INFO: Created: latency-svc-4fjnr
    Mar  9 08:41:19.796: INFO: Got endpoints: latency-svc-t28zr [750.395112ms]
    Mar  9 08:41:19.815: INFO: Created: latency-svc-48qvr
    Mar  9 08:41:19.843: INFO: Got endpoints: latency-svc-ngvzn [743.185878ms]
    Mar  9 08:41:19.870: INFO: Created: latency-svc-bk7z5
    Mar  9 08:41:19.893: INFO: Got endpoints: latency-svc-gjgh5 [748.724894ms]
    Mar  9 08:41:19.913: INFO: Created: latency-svc-s4hbk
    Mar  9 08:41:19.943: INFO: Got endpoints: latency-svc-lwlwh [750.925024ms]
    Mar  9 08:41:19.963: INFO: Created: latency-svc-b4mft
    Mar  9 08:41:19.994: INFO: Got endpoints: latency-svc-r5mkv [751.750147ms]
    Mar  9 08:41:20.017: INFO: Created: latency-svc-z4tmg
    Mar  9 08:41:20.043: INFO: Got endpoints: latency-svc-cqkcz [751.233724ms]
    Mar  9 08:41:20.067: INFO: Created: latency-svc-s45t2
    Mar  9 08:41:20.095: INFO: Got endpoints: latency-svc-tbh67 [750.962203ms]
    Mar  9 08:41:20.115: INFO: Created: latency-svc-c75tz
    Mar  9 08:41:20.145: INFO: Got endpoints: latency-svc-sl7cl [752.096834ms]
    Mar  9 08:41:20.164: INFO: Created: latency-svc-h8f9t
    Mar  9 08:41:20.193: INFO: Got endpoints: latency-svc-g7vzl [744.258015ms]
    Mar  9 08:41:20.217: INFO: Created: latency-svc-p9qln
    Mar  9 08:41:20.245: INFO: Got endpoints: latency-svc-tqwkc [746.967237ms]
    Mar  9 08:41:20.267: INFO: Created: latency-svc-zrtdj
    Mar  9 08:41:20.295: INFO: Got endpoints: latency-svc-rrzxb [750.116125ms]
    Mar  9 08:41:20.316: INFO: Created: latency-svc-vdvnh
    Mar  9 08:41:20.345: INFO: Got endpoints: latency-svc-lvjtw [751.826156ms]
    Mar  9 08:41:20.366: INFO: Created: latency-svc-bnt7l
    Mar  9 08:41:20.398: INFO: Got endpoints: latency-svc-c7ww9 [753.741961ms]
    Mar  9 08:41:20.418: INFO: Created: latency-svc-47mq6
    Mar  9 08:41:20.444: INFO: Got endpoints: latency-svc-6vwkz [747.833576ms]
    Mar  9 08:41:20.470: INFO: Created: latency-svc-rl7rj
    Mar  9 08:41:20.494: INFO: Got endpoints: latency-svc-4fjnr [750.755828ms]
    Mar  9 08:41:20.518: INFO: Created: latency-svc-mtr49
    Mar  9 08:41:20.543: INFO: Got endpoints: latency-svc-48qvr [747.035671ms]
    Mar  9 08:41:20.570: INFO: Created: latency-svc-27w57
    Mar  9 08:41:20.593: INFO: Got endpoints: latency-svc-bk7z5 [750.195508ms]
    Mar  9 08:41:20.615: INFO: Created: latency-svc-xhcfb
    Mar  9 08:41:20.645: INFO: Got endpoints: latency-svc-s4hbk [752.542493ms]
    Mar  9 08:41:20.667: INFO: Created: latency-svc-w62vj
    Mar  9 08:41:20.693: INFO: Got endpoints: latency-svc-b4mft [750.686249ms]
    Mar  9 08:41:20.721: INFO: Created: latency-svc-95zn9
    Mar  9 08:41:20.746: INFO: Got endpoints: latency-svc-z4tmg [752.576538ms]
    Mar  9 08:41:20.767: INFO: Created: latency-svc-7xl48
    Mar  9 08:41:20.794: INFO: Got endpoints: latency-svc-s45t2 [750.775185ms]
    Mar  9 08:41:20.816: INFO: Created: latency-svc-6mzxv
    Mar  9 08:41:20.844: INFO: Got endpoints: latency-svc-c75tz [749.394914ms]
    Mar  9 08:41:20.866: INFO: Created: latency-svc-pspgl
    Mar  9 08:41:20.894: INFO: Got endpoints: latency-svc-h8f9t [749.28282ms]
    Mar  9 08:41:20.914: INFO: Created: latency-svc-hb7lg
    Mar  9 08:41:20.945: INFO: Got endpoints: latency-svc-p9qln [750.924562ms]
    Mar  9 08:41:20.964: INFO: Created: latency-svc-kh7wt
    Mar  9 08:41:20.993: INFO: Got endpoints: latency-svc-zrtdj [748.309559ms]
    Mar  9 08:41:21.013: INFO: Created: latency-svc-mvb8z
    Mar  9 08:41:21.044: INFO: Got endpoints: latency-svc-vdvnh [749.896621ms]
    Mar  9 08:41:21.065: INFO: Created: latency-svc-grvw5
    Mar  9 08:41:21.099: INFO: Got endpoints: latency-svc-bnt7l [753.789973ms]
    Mar  9 08:41:21.152: INFO: Created: latency-svc-t5klh
    Mar  9 08:41:21.154: INFO: Got endpoints: latency-svc-47mq6 [756.100185ms]
    Mar  9 08:41:21.191: INFO: Created: latency-svc-m5rkv
    Mar  9 08:41:21.201: INFO: Got endpoints: latency-svc-rl7rj [757.117351ms]
    Mar  9 08:41:21.221: INFO: Created: latency-svc-qc5jb
    Mar  9 08:41:21.242: INFO: Got endpoints: latency-svc-mtr49 [748.061733ms]
    Mar  9 08:41:21.260: INFO: Created: latency-svc-6nbsf
    Mar  9 08:41:21.292: INFO: Got endpoints: latency-svc-27w57 [749.358363ms]
    Mar  9 08:41:21.306: INFO: Created: latency-svc-v9l48
    Mar  9 08:41:21.342: INFO: Got endpoints: latency-svc-xhcfb [748.258844ms]
    Mar  9 08:41:21.365: INFO: Created: latency-svc-vz4mj
    Mar  9 08:41:21.396: INFO: Got endpoints: latency-svc-w62vj [751.15332ms]
    Mar  9 08:41:21.410: INFO: Created: latency-svc-6rlw9
    Mar  9 08:41:21.441: INFO: Got endpoints: latency-svc-95zn9 [747.638122ms]
    Mar  9 08:41:21.458: INFO: Created: latency-svc-mkf7d
    Mar  9 08:41:21.497: INFO: Got endpoints: latency-svc-7xl48 [750.869856ms]
    Mar  9 08:41:21.523: INFO: Created: latency-svc-bxbjm
    Mar  9 08:41:21.542: INFO: Got endpoints: latency-svc-6mzxv [747.629813ms]
    Mar  9 08:41:21.555: INFO: Created: latency-svc-dm5ck
    Mar  9 08:41:21.594: INFO: Got endpoints: latency-svc-pspgl [749.933271ms]
    Mar  9 08:41:21.608: INFO: Created: latency-svc-p6vl6
    Mar  9 08:41:21.642: INFO: Got endpoints: latency-svc-hb7lg [748.302203ms]
    Mar  9 08:41:21.658: INFO: Created: latency-svc-4crf6
    Mar  9 08:41:21.693: INFO: Got endpoints: latency-svc-kh7wt [748.82777ms]
    Mar  9 08:41:21.711: INFO: Created: latency-svc-24sc5
    Mar  9 08:41:21.744: INFO: Got endpoints: latency-svc-mvb8z [750.573113ms]
    Mar  9 08:41:21.762: INFO: Created: latency-svc-46gcl
    Mar  9 08:41:21.795: INFO: Got endpoints: latency-svc-grvw5 [750.367468ms]
    Mar  9 08:41:21.812: INFO: Created: latency-svc-gk2qx
    Mar  9 08:41:21.893: INFO: Got endpoints: latency-svc-t5klh [794.424181ms]
    Mar  9 08:41:21.912: INFO: Created: latency-svc-7g4z5
    Mar  9 08:41:21.943: INFO: Got endpoints: latency-svc-m5rkv [789.131835ms]
    Mar  9 08:41:21.965: INFO: Created: latency-svc-58ngj
    Mar  9 08:41:21.994: INFO: Got endpoints: latency-svc-qc5jb [793.299015ms]
    Mar  9 08:41:22.017: INFO: Created: latency-svc-l67bt
    Mar  9 08:41:22.044: INFO: Got endpoints: latency-svc-6nbsf [801.863393ms]
    Mar  9 08:41:22.062: INFO: Created: latency-svc-47j6f
    Mar  9 08:41:22.100: INFO: Got endpoints: latency-svc-v9l48 [807.331753ms]
    Mar  9 08:41:22.117: INFO: Created: latency-svc-c4hmk
    Mar  9 08:41:22.144: INFO: Got endpoints: latency-svc-vz4mj [802.368892ms]
    Mar  9 08:41:22.162: INFO: Created: latency-svc-ds97b
    Mar  9 08:41:22.193: INFO: Got endpoints: latency-svc-6rlw9 [796.958977ms]
    Mar  9 08:41:22.213: INFO: Created: latency-svc-fcnzp
    Mar  9 08:41:22.243: INFO: Got endpoints: latency-svc-mkf7d [802.016987ms]
    Mar  9 08:41:22.263: INFO: Created: latency-svc-vhnnv
    Mar  9 08:41:22.295: INFO: Got endpoints: latency-svc-bxbjm [798.052974ms]
    Mar  9 08:41:22.329: INFO: Created: latency-svc-c57x6
    Mar  9 08:41:22.344: INFO: Got endpoints: latency-svc-dm5ck [801.763245ms]
    Mar  9 08:41:22.362: INFO: Created: latency-svc-8vgl9
    Mar  9 08:41:22.394: INFO: Got endpoints: latency-svc-p6vl6 [799.644879ms]
    Mar  9 08:41:22.412: INFO: Created: latency-svc-vm6bw
    Mar  9 08:41:22.444: INFO: Got endpoints: latency-svc-4crf6 [801.248989ms]
    Mar  9 08:41:22.464: INFO: Created: latency-svc-vgz7q
    Mar  9 08:41:22.496: INFO: Got endpoints: latency-svc-24sc5 [802.4034ms]
    Mar  9 08:41:22.515: INFO: Created: latency-svc-7xndl
    Mar  9 08:41:22.544: INFO: Got endpoints: latency-svc-46gcl [799.961258ms]
    Mar  9 08:41:22.564: INFO: Created: latency-svc-zp4pr
    Mar  9 08:41:22.593: INFO: Got endpoints: latency-svc-gk2qx [798.348065ms]
    Mar  9 08:41:22.613: INFO: Created: latency-svc-mc7lq
    Mar  9 08:41:22.646: INFO: Got endpoints: latency-svc-7g4z5 [752.28175ms]
    Mar  9 08:41:22.665: INFO: Created: latency-svc-njbz5
    Mar  9 08:41:22.693: INFO: Got endpoints: latency-svc-58ngj [750.21946ms]
    Mar  9 08:41:22.712: INFO: Created: latency-svc-6tnwj
    Mar  9 08:41:22.743: INFO: Got endpoints: latency-svc-l67bt [749.096501ms]
    Mar  9 08:41:22.762: INFO: Created: latency-svc-tw7kr
    Mar  9 08:41:22.793: INFO: Got endpoints: latency-svc-47j6f [748.89487ms]
    Mar  9 08:41:22.812: INFO: Created: latency-svc-tgthm
    Mar  9 08:41:22.846: INFO: Got endpoints: latency-svc-c4hmk [745.880012ms]
    Mar  9 08:41:22.867: INFO: Created: latency-svc-dbmnf
    Mar  9 08:41:22.894: INFO: Got endpoints: latency-svc-ds97b [750.104969ms]
    Mar  9 08:41:22.913: INFO: Created: latency-svc-8cjlw
    Mar  9 08:41:22.945: INFO: Got endpoints: latency-svc-fcnzp [751.252921ms]
    Mar  9 08:41:22.966: INFO: Created: latency-svc-cz5s8
    Mar  9 08:41:22.996: INFO: Got endpoints: latency-svc-vhnnv [752.821343ms]
    Mar  9 08:41:23.014: INFO: Created: latency-svc-rc92x
    Mar  9 08:41:23.043: INFO: Got endpoints: latency-svc-c57x6 [747.891374ms]
    Mar  9 08:41:23.065: INFO: Created: latency-svc-tk7zr
    Mar  9 08:41:23.093: INFO: Got endpoints: latency-svc-8vgl9 [749.305474ms]
    Mar  9 08:41:23.113: INFO: Created: latency-svc-72lvs
    Mar  9 08:41:23.146: INFO: Got endpoints: latency-svc-vm6bw [751.910734ms]
    Mar  9 08:41:23.171: INFO: Created: latency-svc-vkqt9
    Mar  9 08:41:23.193: INFO: Got endpoints: latency-svc-vgz7q [749.820666ms]
    Mar  9 08:41:23.218: INFO: Created: latency-svc-6jvrl
    Mar  9 08:41:23.246: INFO: Got endpoints: latency-svc-7xndl [749.85821ms]
    Mar  9 08:41:23.265: INFO: Created: latency-svc-d7z2l
    Mar  9 08:41:23.294: INFO: Got endpoints: latency-svc-zp4pr [750.698535ms]
    Mar  9 08:41:23.316: INFO: Created: latency-svc-zmjcn
    Mar  9 08:41:23.343: INFO: Got endpoints: latency-svc-mc7lq [749.951764ms]
    Mar  9 08:41:23.372: INFO: Created: latency-svc-bscch
    Mar  9 08:41:23.395: INFO: Got endpoints: latency-svc-njbz5 [749.156661ms]
    Mar  9 08:41:23.415: INFO: Created: latency-svc-gjl9b
    Mar  9 08:41:23.443: INFO: Got endpoints: latency-svc-6tnwj [749.732977ms]
    Mar  9 08:41:23.461: INFO: Created: latency-svc-7pj5q
    Mar  9 08:41:23.493: INFO: Got endpoints: latency-svc-tw7kr [749.629483ms]
    Mar  9 08:41:23.509: INFO: Created: latency-svc-ls9hd
    Mar  9 08:41:23.544: INFO: Got endpoints: latency-svc-tgthm [750.349464ms]
    Mar  9 08:41:23.562: INFO: Created: latency-svc-tscxf
    Mar  9 08:41:23.592: INFO: Got endpoints: latency-svc-dbmnf [746.55486ms]
    Mar  9 08:41:23.613: INFO: Created: latency-svc-q9stg
    Mar  9 08:41:23.644: INFO: Got endpoints: latency-svc-8cjlw [750.006594ms]
    Mar  9 08:41:23.661: INFO: Created: latency-svc-cklgh
    Mar  9 08:41:23.697: INFO: Got endpoints: latency-svc-cz5s8 [751.912665ms]
    Mar  9 08:41:23.716: INFO: Created: latency-svc-z9czr
    Mar  9 08:41:23.745: INFO: Got endpoints: latency-svc-rc92x [748.918116ms]
    Mar  9 08:41:23.763: INFO: Created: latency-svc-wq4lq
    Mar  9 08:41:23.795: INFO: Got endpoints: latency-svc-tk7zr [751.220071ms]
    Mar  9 08:41:23.819: INFO: Created: latency-svc-5lpmj
    Mar  9 08:41:23.843: INFO: Got endpoints: latency-svc-72lvs [749.427224ms]
    Mar  9 08:41:23.861: INFO: Created: latency-svc-xhdm7
    Mar  9 08:41:23.893: INFO: Got endpoints: latency-svc-vkqt9 [747.113647ms]
    Mar  9 08:41:23.915: INFO: Created: latency-svc-756hd
    Mar  9 08:41:23.944: INFO: Got endpoints: latency-svc-6jvrl [750.853131ms]
    Mar  9 08:41:23.963: INFO: Created: latency-svc-z2b49
    Mar  9 08:41:23.995: INFO: Got endpoints: latency-svc-d7z2l [748.756748ms]
    Mar  9 08:41:24.016: INFO: Created: latency-svc-dbjr9
    Mar  9 08:41:24.044: INFO: Got endpoints: latency-svc-zmjcn [749.059816ms]
    Mar  9 08:41:24.064: INFO: Created: latency-svc-r4zgr
    Mar  9 08:41:24.095: INFO: Got endpoints: latency-svc-bscch [751.913894ms]
    Mar  9 08:41:24.114: INFO: Created: latency-svc-9rvnk
    Mar  9 08:41:24.144: INFO: Got endpoints: latency-svc-gjl9b [748.592266ms]
    Mar  9 08:41:24.164: INFO: Created: latency-svc-dg8lp
    Mar  9 08:41:24.194: INFO: Got endpoints: latency-svc-7pj5q [751.134806ms]
    Mar  9 08:41:24.214: INFO: Created: latency-svc-h7z8h
    Mar  9 08:41:24.245: INFO: Got endpoints: latency-svc-ls9hd [751.750231ms]
    Mar  9 08:41:24.264: INFO: Created: latency-svc-vcq2b
    Mar  9 08:41:24.295: INFO: Got endpoints: latency-svc-tscxf [751.283972ms]
    Mar  9 08:41:24.315: INFO: Created: latency-svc-sb8rx
    Mar  9 08:41:24.343: INFO: Got endpoints: latency-svc-q9stg [750.91725ms]
    Mar  9 08:41:24.365: INFO: Created: latency-svc-nwk8m
    Mar  9 08:41:24.393: INFO: Got endpoints: latency-svc-cklgh [748.981225ms]
    Mar  9 08:41:24.421: INFO: Created: latency-svc-jt56l
    Mar  9 08:41:24.444: INFO: Got endpoints: latency-svc-z9czr [746.982875ms]
    Mar  9 08:41:24.463: INFO: Created: latency-svc-8895l
    Mar  9 08:41:24.494: INFO: Got endpoints: latency-svc-wq4lq [748.82082ms]
    Mar  9 08:41:24.514: INFO: Created: latency-svc-gcpct
    Mar  9 08:41:24.548: INFO: Got endpoints: latency-svc-5lpmj [753.338715ms]
    Mar  9 08:41:24.566: INFO: Created: latency-svc-5xxww
    Mar  9 08:41:24.594: INFO: Got endpoints: latency-svc-xhdm7 [751.4303ms]
    Mar  9 08:41:24.613: INFO: Created: latency-svc-2gz9r
    Mar  9 08:41:24.643: INFO: Got endpoints: latency-svc-756hd [750.635953ms]
    Mar  9 08:41:24.666: INFO: Created: latency-svc-7nbv7
    Mar  9 08:41:24.707: INFO: Got endpoints: latency-svc-z2b49 [762.82756ms]
    Mar  9 08:41:24.725: INFO: Created: latency-svc-gqkkt
    Mar  9 08:41:24.744: INFO: Got endpoints: latency-svc-dbjr9 [749.653213ms]
    Mar  9 08:41:24.765: INFO: Created: latency-svc-q4d5r
    Mar  9 08:41:24.792: INFO: Got endpoints: latency-svc-r4zgr [748.840285ms]
    Mar  9 08:41:24.811: INFO: Created: latency-svc-cvs4k
    Mar  9 08:41:24.843: INFO: Got endpoints: latency-svc-9rvnk [747.816225ms]
    Mar  9 08:41:24.868: INFO: Created: latency-svc-vlgfr
    Mar  9 08:41:24.892: INFO: Got endpoints: latency-svc-dg8lp [748.80834ms]
    Mar  9 08:41:24.912: INFO: Created: latency-svc-5r6dj
    Mar  9 08:41:24.943: INFO: Got endpoints: latency-svc-h7z8h [748.605042ms]
    Mar  9 08:41:24.961: INFO: Created: latency-svc-cnnhs
    Mar  9 08:41:24.994: INFO: Got endpoints: latency-svc-vcq2b [749.814125ms]
    Mar  9 08:41:25.013: INFO: Created: latency-svc-g7p65
    Mar  9 08:41:25.043: INFO: Got endpoints: latency-svc-sb8rx [747.993871ms]
    Mar  9 08:41:25.061: INFO: Created: latency-svc-fbl79
    Mar  9 08:41:25.093: INFO: Got endpoints: latency-svc-nwk8m [749.700613ms]
    Mar  9 08:41:25.111: INFO: Created: latency-svc-lk6cr
    Mar  9 08:41:25.144: INFO: Got endpoints: latency-svc-jt56l [751.195838ms]
    Mar  9 08:41:25.166: INFO: Created: latency-svc-hjlhl
    Mar  9 08:41:25.194: INFO: Got endpoints: latency-svc-8895l [749.740254ms]
    Mar  9 08:41:25.213: INFO: Created: latency-svc-vn6g5
    Mar  9 08:41:25.244: INFO: Got endpoints: latency-svc-gcpct [750.463851ms]
    Mar  9 08:41:25.266: INFO: Created: latency-svc-5bw8m
    Mar  9 08:41:25.296: INFO: Got endpoints: latency-svc-5xxww [748.043148ms]
    Mar  9 08:41:25.317: INFO: Created: latency-svc-7s7hl
    Mar  9 08:41:25.343: INFO: Got endpoints: latency-svc-2gz9r [749.184635ms]
    Mar  9 08:41:25.387: INFO: Created: latency-svc-mwsb5
    Mar  9 08:41:25.411: INFO: Got endpoints: latency-svc-7nbv7 [767.660406ms]
    Mar  9 08:41:25.442: INFO: Created: latency-svc-zdcdd
    Mar  9 08:41:25.447: INFO: Got endpoints: latency-svc-gqkkt [739.463413ms]
    Mar  9 08:41:25.461: INFO: Created: latency-svc-hhgjm
    Mar  9 08:41:25.494: INFO: Got endpoints: latency-svc-q4d5r [749.286435ms]
    Mar  9 08:41:25.512: INFO: Created: latency-svc-vgspk
    Mar  9 08:41:25.542: INFO: Got endpoints: latency-svc-cvs4k [749.292662ms]
    Mar  9 08:41:25.559: INFO: Created: latency-svc-m7bdq
    Mar  9 08:41:25.592: INFO: Got endpoints: latency-svc-vlgfr [748.66134ms]
    Mar  9 08:41:25.607: INFO: Created: latency-svc-gbv6f
    Mar  9 08:41:25.643: INFO: Got endpoints: latency-svc-5r6dj [750.773311ms]
    Mar  9 08:41:25.658: INFO: Created: latency-svc-95zfl
    Mar  9 08:41:25.695: INFO: Got endpoints: latency-svc-cnnhs [751.839324ms]
    Mar  9 08:41:25.710: INFO: Created: latency-svc-4shrc
    Mar  9 08:41:25.743: INFO: Got endpoints: latency-svc-g7p65 [748.541213ms]
    Mar  9 08:41:25.761: INFO: Created: latency-svc-8kdxs
    Mar  9 08:41:25.794: INFO: Got endpoints: latency-svc-fbl79 [750.703255ms]
    Mar  9 08:41:25.813: INFO: Created: latency-svc-gnxss
    Mar  9 08:41:25.845: INFO: Got endpoints: latency-svc-lk6cr [751.718372ms]
    Mar  9 08:41:25.865: INFO: Created: latency-svc-7hmk4
    Mar  9 08:41:25.892: INFO: Got endpoints: latency-svc-hjlhl [747.892461ms]
    Mar  9 08:41:25.912: INFO: Created: latency-svc-p4h69
    Mar  9 08:41:25.944: INFO: Got endpoints: latency-svc-vn6g5 [750.430235ms]
    Mar  9 08:41:25.962: INFO: Created: latency-svc-krrdj
    Mar  9 08:41:25.994: INFO: Got endpoints: latency-svc-5bw8m [750.016966ms]
    Mar  9 08:41:26.012: INFO: Created: latency-svc-jtmgf
    Mar  9 08:41:26.043: INFO: Got endpoints: latency-svc-7s7hl [747.178112ms]
    Mar  9 08:41:26.062: INFO: Created: latency-svc-g6bgr
    Mar  9 08:41:26.094: INFO: Got endpoints: latency-svc-mwsb5 [750.226525ms]
    Mar  9 08:41:26.112: INFO: Created: latency-svc-np5g6
    Mar  9 08:41:26.149: INFO: Got endpoints: latency-svc-zdcdd [738.255447ms]
    Mar  9 08:41:26.169: INFO: Created: latency-svc-8qmxh
    Mar  9 08:41:26.194: INFO: Got endpoints: latency-svc-hhgjm [746.80988ms]
    Mar  9 08:41:26.246: INFO: Got endpoints: latency-svc-vgspk [752.458307ms]
    Mar  9 08:41:26.293: INFO: Got endpoints: latency-svc-m7bdq [751.520336ms]
    Mar  9 08:41:26.344: INFO: Got endpoints: latency-svc-gbv6f [752.279985ms]
    Mar  9 08:41:26.394: INFO: Got endpoints: latency-svc-95zfl [750.681669ms]
    Mar  9 08:41:26.446: INFO: Got endpoints: latency-svc-4shrc [750.84372ms]
    Mar  9 08:41:26.494: INFO: Got endpoints: latency-svc-8kdxs [750.410641ms]
    Mar  9 08:41:26.543: INFO: Got endpoints: latency-svc-gnxss [749.055073ms]
    Mar  9 08:41:26.593: INFO: Got endpoints: latency-svc-7hmk4 [748.336578ms]
    Mar  9 08:41:26.643: INFO: Got endpoints: latency-svc-p4h69 [750.303899ms]
    Mar  9 08:41:26.692: INFO: Got endpoints: latency-svc-krrdj [748.375904ms]
    Mar  9 08:41:26.743: INFO: Got endpoints: latency-svc-jtmgf [748.92766ms]
    Mar  9 08:41:26.793: INFO: Got endpoints: latency-svc-g6bgr [749.270886ms]
    Mar  9 08:41:26.845: INFO: Got endpoints: latency-svc-np5g6 [751.138688ms]
    Mar  9 08:41:26.893: INFO: Got endpoints: latency-svc-8qmxh [743.788259ms]
    Mar  9 08:41:26.893: INFO: Latencies: [30.713815ms 50.64666ms 66.162967ms 87.584675ms 103.462216ms 121.961081ms 149.314033ms 167.822265ms 167.998007ms 168.615682ms 168.715471ms 169.540557ms 172.287931ms 173.838284ms 176.347784ms 179.762805ms 184.366299ms 185.500259ms 199.105555ms 201.777762ms 208.053595ms 211.449579ms 224.722049ms 236.792157ms 240.906383ms 241.530186ms 250.407773ms 252.485471ms 255.00128ms 255.274271ms 256.78707ms 260.40143ms 264.534553ms 267.06275ms 271.170657ms 272.406275ms 274.268943ms 274.983785ms 276.340521ms 278.689983ms 283.730032ms 290.603693ms 297.878845ms 303.812627ms 305.28247ms 312.118068ms 349.845711ms 384.811635ms 425.134814ms 471.368678ms 492.922693ms 544.584154ms 583.027465ms 621.36136ms 650.527103ms 694.464434ms 734.032069ms 738.255447ms 738.86423ms 739.463413ms 743.185878ms 743.788259ms 744.258015ms 745.880012ms 746.55486ms 746.80988ms 746.967237ms 746.982875ms 747.035671ms 747.113647ms 747.178112ms 747.629813ms 747.638122ms 747.816225ms 747.833576ms 747.891374ms 747.892461ms 747.993871ms 748.043148ms 748.061733ms 748.258844ms 748.302203ms 748.309559ms 748.336578ms 748.375904ms 748.541213ms 748.592266ms 748.605042ms 748.66134ms 748.724894ms 748.756748ms 748.80834ms 748.82082ms 748.82777ms 748.840285ms 748.89487ms 748.918116ms 748.92766ms 748.981225ms 749.055073ms 749.059816ms 749.096501ms 749.156661ms 749.184635ms 749.270886ms 749.28282ms 749.286435ms 749.292662ms 749.305474ms 749.358363ms 749.394914ms 749.427224ms 749.629483ms 749.653213ms 749.700613ms 749.732977ms 749.740254ms 749.814125ms 749.820666ms 749.85821ms 749.896621ms 749.933271ms 749.951764ms 750.006594ms 750.016966ms 750.104969ms 750.116125ms 750.195508ms 750.21946ms 750.226525ms 750.303899ms 750.349464ms 750.367468ms 750.395112ms 750.410641ms 750.430235ms 750.463851ms 750.573113ms 750.635953ms 750.681669ms 750.686249ms 750.698535ms 750.703255ms 750.755828ms 750.773311ms 750.775185ms 750.84372ms 750.853131ms 750.869856ms 750.91725ms 750.924562ms 750.925024ms 750.962203ms 751.134806ms 751.138688ms 751.15332ms 751.195838ms 751.220071ms 751.233724ms 751.252921ms 751.283972ms 751.4303ms 751.520336ms 751.718372ms 751.750147ms 751.750231ms 751.826156ms 751.839324ms 751.910734ms 751.912665ms 751.913894ms 752.096834ms 752.279985ms 752.28175ms 752.458307ms 752.542493ms 752.576538ms 752.821343ms 753.338715ms 753.741961ms 753.789973ms 756.100185ms 757.117351ms 762.82756ms 767.660406ms 789.131835ms 793.299015ms 794.424181ms 796.958977ms 798.052974ms 798.348065ms 799.644879ms 799.961258ms 801.248989ms 801.763245ms 801.863393ms 802.016987ms 802.368892ms 802.4034ms 807.331753ms]
    Mar  9 08:41:26.894: INFO: 50 %ile: 749.059816ms
    Mar  9 08:41:26.894: INFO: 90 %ile: 753.789973ms
    Mar  9 08:41:26.894: INFO: 99 %ile: 802.4034ms
    Mar  9 08:41:26.894: INFO: Total sample count: 200
    [AfterEach] [sig-network] Service endpoints latency
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:41:26.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      tear down framework | framework.go:193
    STEP: Destroying namespace "svc-latency-3905" for this suite. 03/09/23 08:41:26.903
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:41:26.911
Mar  9 08:41:26.912: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:41:26.914
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:41:26.929
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:41:26.934
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:41:26.955
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:41:28.036
STEP: Deploying the webhook pod 03/09/23 08:41:28.047
STEP: Wait for the deployment to be ready 03/09/23 08:41:28.061
Mar  9 08:41:28.071: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:41:30.084
STEP: Verifying the service has paired with the endpoint 03/09/23 08:41:30.104
Mar  9 08:41:31.104: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
STEP: Registering the webhook via the AdmissionRegistration API 03/09/23 08:41:31.108
STEP: create a pod 03/09/23 08:41:31.144
Mar  9 08:41:31.150: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-7928" to be "running"
Mar  9 08:41:31.155: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.038203ms
Mar  9 08:41:33.161: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010953046s
Mar  9 08:41:33.162: INFO: Pod "to-be-attached-pod" satisfied condition "running"
STEP: 'kubectl attach' the pod, should be denied by the webhook 03/09/23 08:41:33.162
Mar  9 08:41:33.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=webhook-7928 attach --namespace=webhook-7928 to-be-attached-pod -i -c=container1'
Mar  9 08:41:33.349: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:41:33.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7928" for this suite. 03/09/23 08:41:33.403
STEP: Destroying namespace "webhook-7928-markers" for this suite. 03/09/23 08:41:33.413
------------------------------
â€¢ [SLOW TEST] [6.507 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:41:26.911
    Mar  9 08:41:26.912: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:41:26.914
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:41:26.929
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:41:26.934
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:41:26.955
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:41:28.036
    STEP: Deploying the webhook pod 03/09/23 08:41:28.047
    STEP: Wait for the deployment to be ready 03/09/23 08:41:28.061
    Mar  9 08:41:28.071: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:41:30.084
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:41:30.104
    Mar  9 08:41:31.104: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny attaching pod [Conformance]
      test/e2e/apimachinery/webhook.go:209
    STEP: Registering the webhook via the AdmissionRegistration API 03/09/23 08:41:31.108
    STEP: create a pod 03/09/23 08:41:31.144
    Mar  9 08:41:31.150: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-7928" to be "running"
    Mar  9 08:41:31.155: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.038203ms
    Mar  9 08:41:33.161: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010953046s
    Mar  9 08:41:33.162: INFO: Pod "to-be-attached-pod" satisfied condition "running"
    STEP: 'kubectl attach' the pod, should be denied by the webhook 03/09/23 08:41:33.162
    Mar  9 08:41:33.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=webhook-7928 attach --namespace=webhook-7928 to-be-attached-pod -i -c=container1'
    Mar  9 08:41:33.349: INFO: rc: 1
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:41:33.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7928" for this suite. 03/09/23 08:41:33.403
    STEP: Destroying namespace "webhook-7928-markers" for this suite. 03/09/23 08:41:33.413
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:41:33.421
Mar  9 08:41:33.421: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename deployment 03/09/23 08:41:33.422
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:41:33.45
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:41:33.454
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
Mar  9 08:41:33.460: INFO: Creating deployment "test-recreate-deployment"
Mar  9 08:41:33.476: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Mar  9 08:41:33.496: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Mar  9 08:41:35.505: INFO: Waiting deployment "test-recreate-deployment" to complete
Mar  9 08:41:35.507: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Mar  9 08:41:35.516: INFO: Updating deployment test-recreate-deployment
Mar  9 08:41:35.516: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar  9 08:41:35.592: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-229  93790859-a692-465a-8a61-ce34ae467fc8 266347 2 2023-03-09 08:41:33 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc005a6c348 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-03-09 08:41:35 +0000 UTC,LastTransitionTime:2023-03-09 08:41:35 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-03-09 08:41:35 +0000 UTC,LastTransitionTime:2023-03-09 08:41:33 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Mar  9 08:41:35.596: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-229  b515b2b5-9e24-40be-a7d1-9d5e7361b0f9 266341 1 2023-03-09 08:41:35 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 93790859-a692-465a-8a61-ce34ae467fc8 0xc0036cbe10 0xc0036cbe11}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"93790859-a692-465a-8a61-ce34ae467fc8\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0036cbea8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar  9 08:41:35.596: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Mar  9 08:41:35.597: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-229  7757a84d-0357-41d3-9e00-9ab71889359c 266329 2 2023-03-09 08:41:33 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 93790859-a692-465a-8a61-ce34ae467fc8 0xc0036cbcf7 0xc0036cbcf8}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"93790859-a692-465a-8a61-ce34ae467fc8\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0036cbda8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar  9 08:41:35.600: INFO: Pod "test-recreate-deployment-cff6dc657-v4s5q" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-v4s5q test-recreate-deployment-cff6dc657- deployment-229  8305992b-e9be-4d26-bf65-51d3cf403df3 266345 0 2023-03-09 08:41:35 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 b515b2b5-9e24-40be-a7d1-9d5e7361b0f9 0xc000666540 0xc000666541}] [] [{kube-controller-manager Update v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b515b2b5-9e24-40be-a7d1-9d5e7361b0f9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l8zx2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l8zx2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:41:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:41:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:41:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:41:35 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:,StartTime:2023-03-09 08:41:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar  9 08:41:35.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-229" for this suite. 03/09/23 08:41:35.609
------------------------------
â€¢ [2.192 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:41:33.421
    Mar  9 08:41:33.421: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename deployment 03/09/23 08:41:33.422
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:41:33.45
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:41:33.454
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RecreateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:113
    Mar  9 08:41:33.460: INFO: Creating deployment "test-recreate-deployment"
    Mar  9 08:41:33.476: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
    Mar  9 08:41:33.496: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
    Mar  9 08:41:35.505: INFO: Waiting deployment "test-recreate-deployment" to complete
    Mar  9 08:41:35.507: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
    Mar  9 08:41:35.516: INFO: Updating deployment test-recreate-deployment
    Mar  9 08:41:35.516: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar  9 08:41:35.592: INFO: Deployment "test-recreate-deployment":
    &Deployment{ObjectMeta:{test-recreate-deployment  deployment-229  93790859-a692-465a-8a61-ce34ae467fc8 266347 2 2023-03-09 08:41:33 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc005a6c348 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-03-09 08:41:35 +0000 UTC,LastTransitionTime:2023-03-09 08:41:35 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-03-09 08:41:35 +0000 UTC,LastTransitionTime:2023-03-09 08:41:33 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

    Mar  9 08:41:35.596: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
    &ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-229  b515b2b5-9e24-40be-a7d1-9d5e7361b0f9 266341 1 2023-03-09 08:41:35 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 93790859-a692-465a-8a61-ce34ae467fc8 0xc0036cbe10 0xc0036cbe11}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"93790859-a692-465a-8a61-ce34ae467fc8\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0036cbea8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 08:41:35.596: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
    Mar  9 08:41:35.597: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-229  7757a84d-0357-41d3-9e00-9ab71889359c 266329 2 2023-03-09 08:41:33 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 93790859-a692-465a-8a61-ce34ae467fc8 0xc0036cbcf7 0xc0036cbcf8}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"93790859-a692-465a-8a61-ce34ae467fc8\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0036cbda8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 08:41:35.600: INFO: Pod "test-recreate-deployment-cff6dc657-v4s5q" is not available:
    &Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-v4s5q test-recreate-deployment-cff6dc657- deployment-229  8305992b-e9be-4d26-bf65-51d3cf403df3 266345 0 2023-03-09 08:41:35 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 b515b2b5-9e24-40be-a7d1-9d5e7361b0f9 0xc000666540 0xc000666541}] [] [{kube-controller-manager Update v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b515b2b5-9e24-40be-a7d1-9d5e7361b0f9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:41:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l8zx2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l8zx2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:41:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:41:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:41:34 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:41:35 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:,StartTime:2023-03-09 08:41:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:41:35.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-229" for this suite. 03/09/23 08:41:35.609
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:41:35.616
Mar  9 08:41:35.616: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pod-network-test 03/09/23 08:41:35.618
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:41:35.629
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:41:35.633
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
STEP: Performing setup for networking test in namespace pod-network-test-6302 03/09/23 08:41:35.636
STEP: creating a selector 03/09/23 08:41:35.637
STEP: Creating the service pods in kubernetes 03/09/23 08:41:35.637
Mar  9 08:41:35.637: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Mar  9 08:41:35.668: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-6302" to be "running and ready"
Mar  9 08:41:35.671: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.273443ms
Mar  9 08:41:35.671: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:41:37.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.008349486s
Mar  9 08:41:37.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:39.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.009140974s
Mar  9 08:41:39.677: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:41.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.007854591s
Mar  9 08:41:41.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:43.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.007905003s
Mar  9 08:41:43.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:45.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.008713189s
Mar  9 08:41:45.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:47.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.008488994s
Mar  9 08:41:47.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:49.679: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.01095027s
Mar  9 08:41:49.679: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:51.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.008966391s
Mar  9 08:41:51.677: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:53.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.009473108s
Mar  9 08:41:53.677: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:55.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.008972584s
Mar  9 08:41:55.677: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 08:41:57.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.009768314s
Mar  9 08:41:57.678: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Mar  9 08:41:57.678: INFO: Pod "netserver-0" satisfied condition "running and ready"
Mar  9 08:41:57.682: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-6302" to be "running and ready"
Mar  9 08:41:57.686: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 4.146176ms
Mar  9 08:41:57.686: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Mar  9 08:41:57.686: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 03/09/23 08:41:57.69
Mar  9 08:41:57.700: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-6302" to be "running"
Mar  9 08:41:57.704: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.153261ms
Mar  9 08:41:59.710: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010629675s
Mar  9 08:41:59.711: INFO: Pod "test-container-pod" satisfied condition "running"
Mar  9 08:41:59.714: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Mar  9 08:41:59.714: INFO: Breadth first check of 172.16.0.87 on host 192.168.0.102...
Mar  9 08:41:59.718: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.0.124:9080/dial?request=hostname&protocol=http&host=172.16.0.87&port=8083&tries=1'] Namespace:pod-network-test-6302 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:41:59.718: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:41:59.719: INFO: ExecWithOptions: Clientset creation
Mar  9 08:41:59.719: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6302/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.0.124%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.0.87%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Mar  9 08:41:59.863: INFO: Waiting for responses: map[]
Mar  9 08:41:59.863: INFO: reached 172.16.0.87 after 0/1 tries
Mar  9 08:41:59.863: INFO: Breadth first check of 172.16.0.1 on host 192.168.0.103...
Mar  9 08:41:59.867: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.0.124:9080/dial?request=hostname&protocol=http&host=172.16.0.1&port=8083&tries=1'] Namespace:pod-network-test-6302 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:41:59.867: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:41:59.868: INFO: ExecWithOptions: Clientset creation
Mar  9 08:41:59.868: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6302/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.0.124%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.0.1%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Mar  9 08:41:59.988: INFO: Waiting for responses: map[]
Mar  9 08:41:59.988: INFO: reached 172.16.0.1 after 0/1 tries
Mar  9 08:41:59.988: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Mar  9 08:41:59.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-6302" for this suite. 03/09/23 08:41:59.994
------------------------------
â€¢ [SLOW TEST] [24.387 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:82

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:41:35.616
    Mar  9 08:41:35.616: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pod-network-test 03/09/23 08:41:35.618
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:41:35.629
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:41:35.633
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: http [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:82
    STEP: Performing setup for networking test in namespace pod-network-test-6302 03/09/23 08:41:35.636
    STEP: creating a selector 03/09/23 08:41:35.637
    STEP: Creating the service pods in kubernetes 03/09/23 08:41:35.637
    Mar  9 08:41:35.637: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Mar  9 08:41:35.668: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-6302" to be "running and ready"
    Mar  9 08:41:35.671: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.273443ms
    Mar  9 08:41:35.671: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:41:37.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.008349486s
    Mar  9 08:41:37.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:39.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.009140974s
    Mar  9 08:41:39.677: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:41.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.007854591s
    Mar  9 08:41:41.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:43.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.007905003s
    Mar  9 08:41:43.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:45.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.008713189s
    Mar  9 08:41:45.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:47.676: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.008488994s
    Mar  9 08:41:47.676: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:49.679: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.01095027s
    Mar  9 08:41:49.679: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:51.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.008966391s
    Mar  9 08:41:51.677: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:53.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.009473108s
    Mar  9 08:41:53.677: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:55.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.008972584s
    Mar  9 08:41:55.677: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 08:41:57.677: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.009768314s
    Mar  9 08:41:57.678: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Mar  9 08:41:57.678: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Mar  9 08:41:57.682: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-6302" to be "running and ready"
    Mar  9 08:41:57.686: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 4.146176ms
    Mar  9 08:41:57.686: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Mar  9 08:41:57.686: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 03/09/23 08:41:57.69
    Mar  9 08:41:57.700: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-6302" to be "running"
    Mar  9 08:41:57.704: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.153261ms
    Mar  9 08:41:59.710: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010629675s
    Mar  9 08:41:59.711: INFO: Pod "test-container-pod" satisfied condition "running"
    Mar  9 08:41:59.714: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Mar  9 08:41:59.714: INFO: Breadth first check of 172.16.0.87 on host 192.168.0.102...
    Mar  9 08:41:59.718: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.0.124:9080/dial?request=hostname&protocol=http&host=172.16.0.87&port=8083&tries=1'] Namespace:pod-network-test-6302 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:41:59.718: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:41:59.719: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:41:59.719: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6302/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.0.124%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.0.87%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Mar  9 08:41:59.863: INFO: Waiting for responses: map[]
    Mar  9 08:41:59.863: INFO: reached 172.16.0.87 after 0/1 tries
    Mar  9 08:41:59.863: INFO: Breadth first check of 172.16.0.1 on host 192.168.0.103...
    Mar  9 08:41:59.867: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.0.124:9080/dial?request=hostname&protocol=http&host=172.16.0.1&port=8083&tries=1'] Namespace:pod-network-test-6302 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:41:59.867: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:41:59.868: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:41:59.868: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6302/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.0.124%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.0.1%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Mar  9 08:41:59.988: INFO: Waiting for responses: map[]
    Mar  9 08:41:59.988: INFO: reached 172.16.0.1 after 0/1 tries
    Mar  9 08:41:59.988: INFO: Going to retry 0 out of 2 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:41:59.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-6302" for this suite. 03/09/23 08:41:59.994
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:00.004
Mar  9 08:42:00.004: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-runtime 03/09/23 08:42:00.006
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:00.022
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:00.026
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
STEP: create the container 03/09/23 08:42:00.032
STEP: wait for the container to reach Failed 03/09/23 08:42:00.043
STEP: get the container status 03/09/23 08:42:04.067
STEP: the container should be terminated 03/09/23 08:42:04.071
STEP: the termination message should be set 03/09/23 08:42:04.071
Mar  9 08:42:04.071: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 03/09/23 08:42:04.071
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:04.094: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-4068" for this suite. 03/09/23 08:42:04.1
------------------------------
â€¢ [4.103 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:00.004
    Mar  9 08:42:00.004: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-runtime 03/09/23 08:42:00.006
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:00.022
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:00.026
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216
    STEP: create the container 03/09/23 08:42:00.032
    STEP: wait for the container to reach Failed 03/09/23 08:42:00.043
    STEP: get the container status 03/09/23 08:42:04.067
    STEP: the container should be terminated 03/09/23 08:42:04.071
    STEP: the termination message should be set 03/09/23 08:42:04.071
    Mar  9 08:42:04.071: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 03/09/23 08:42:04.071
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:04.094: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-4068" for this suite. 03/09/23 08:42:04.1
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:04.108
Mar  9 08:42:04.108: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:42:04.11
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:04.126
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:04.131
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
STEP: fetching services 03/09/23 08:42:04.136
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:04.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-9345" for this suite. 03/09/23 08:42:04.147
------------------------------
â€¢ [0.047 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:04.108
    Mar  9 08:42:04.108: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:42:04.11
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:04.126
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:04.131
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should find a service from listing all namespaces [Conformance]
      test/e2e/network/service.go:3219
    STEP: fetching services 03/09/23 08:42:04.136
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:04.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-9345" for this suite. 03/09/23 08:42:04.147
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:04.159
Mar  9 08:42:04.159: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-lifecycle-hook 03/09/23 08:42:04.161
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:04.176
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:04.181
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 03/09/23 08:42:04.191
Mar  9 08:42:04.202: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-328" to be "running and ready"
Mar  9 08:42:04.206: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 4.093045ms
Mar  9 08:42:04.206: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:42:06.212: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009530381s
Mar  9 08:42:06.212: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:42:08.212: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.009950301s
Mar  9 08:42:08.212: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Mar  9 08:42:08.212: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
STEP: create the pod with lifecycle hook 03/09/23 08:42:08.216
Mar  9 08:42:08.225: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-328" to be "running and ready"
Mar  9 08:42:08.229: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024749ms
Mar  9 08:42:08.229: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:42:10.235: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.00964027s
Mar  9 08:42:10.235: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
Mar  9 08:42:10.235: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 03/09/23 08:42:10.238
Mar  9 08:42:10.249: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Mar  9 08:42:10.254: INFO: Pod pod-with-prestop-http-hook still exists
Mar  9 08:42:12.255: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Mar  9 08:42:12.260: INFO: Pod pod-with-prestop-http-hook still exists
Mar  9 08:42:14.254: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Mar  9 08:42:14.259: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook 03/09/23 08:42:14.259
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:14.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-328" for this suite. 03/09/23 08:42:14.3
------------------------------
â€¢ [SLOW TEST] [10.148 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:212

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:04.159
    Mar  9 08:42:04.159: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-lifecycle-hook 03/09/23 08:42:04.161
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:04.176
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:04.181
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 03/09/23 08:42:04.191
    Mar  9 08:42:04.202: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-328" to be "running and ready"
    Mar  9 08:42:04.206: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 4.093045ms
    Mar  9 08:42:04.206: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:42:06.212: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009530381s
    Mar  9 08:42:06.212: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:42:08.212: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.009950301s
    Mar  9 08:42:08.212: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Mar  9 08:42:08.212: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:212
    STEP: create the pod with lifecycle hook 03/09/23 08:42:08.216
    Mar  9 08:42:08.225: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-328" to be "running and ready"
    Mar  9 08:42:08.229: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 4.024749ms
    Mar  9 08:42:08.229: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:42:10.235: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.00964027s
    Mar  9 08:42:10.235: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
    Mar  9 08:42:10.235: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 03/09/23 08:42:10.238
    Mar  9 08:42:10.249: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Mar  9 08:42:10.254: INFO: Pod pod-with-prestop-http-hook still exists
    Mar  9 08:42:12.255: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Mar  9 08:42:12.260: INFO: Pod pod-with-prestop-http-hook still exists
    Mar  9 08:42:14.254: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Mar  9 08:42:14.259: INFO: Pod pod-with-prestop-http-hook no longer exists
    STEP: check prestop hook 03/09/23 08:42:14.259
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:14.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-328" for this suite. 03/09/23 08:42:14.3
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:14.312
Mar  9 08:42:14.312: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:42:14.314
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:14.33
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:14.338
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
STEP: Creating a pod to test emptydir 0644 on node default medium 03/09/23 08:42:14.343
Mar  9 08:42:14.353: INFO: Waiting up to 5m0s for pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793" in namespace "emptydir-7488" to be "Succeeded or Failed"
Mar  9 08:42:14.357: INFO: Pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793": Phase="Pending", Reason="", readiness=false. Elapsed: 3.98179ms
Mar  9 08:42:16.361: INFO: Pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008704818s
Mar  9 08:42:18.362: INFO: Pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009371667s
STEP: Saw pod success 03/09/23 08:42:18.362
Mar  9 08:42:18.362: INFO: Pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793" satisfied condition "Succeeded or Failed"
Mar  9 08:42:18.366: INFO: Trying to get logs from node k8s-worker2 pod pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793 container test-container: <nil>
STEP: delete the pod 03/09/23 08:42:18.402
Mar  9 08:42:18.416: INFO: Waiting for pod pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793 to disappear
Mar  9 08:42:18.420: INFO: Pod pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:18.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7488" for this suite. 03/09/23 08:42:18.426
------------------------------
â€¢ [4.121 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:14.312
    Mar  9 08:42:14.312: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:42:14.314
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:14.33
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:14.338
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:197
    STEP: Creating a pod to test emptydir 0644 on node default medium 03/09/23 08:42:14.343
    Mar  9 08:42:14.353: INFO: Waiting up to 5m0s for pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793" in namespace "emptydir-7488" to be "Succeeded or Failed"
    Mar  9 08:42:14.357: INFO: Pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793": Phase="Pending", Reason="", readiness=false. Elapsed: 3.98179ms
    Mar  9 08:42:16.361: INFO: Pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008704818s
    Mar  9 08:42:18.362: INFO: Pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009371667s
    STEP: Saw pod success 03/09/23 08:42:18.362
    Mar  9 08:42:18.362: INFO: Pod "pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793" satisfied condition "Succeeded or Failed"
    Mar  9 08:42:18.366: INFO: Trying to get logs from node k8s-worker2 pod pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793 container test-container: <nil>
    STEP: delete the pod 03/09/23 08:42:18.402
    Mar  9 08:42:18.416: INFO: Waiting for pod pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793 to disappear
    Mar  9 08:42:18.420: INFO: Pod pod-63f8067a-89b7-4e20-a72d-bdd9b37bf793 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:18.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7488" for this suite. 03/09/23 08:42:18.426
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:18.435
Mar  9 08:42:18.435: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 08:42:18.436
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:18.453
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:18.461
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
STEP: Creating projection with secret that has name secret-emptykey-test-763f79b1-431d-4012-82f0-0a40d9980135 03/09/23 08:42:18.466
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:18.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9338" for this suite. 03/09/23 08:42:18.475
------------------------------
â€¢ [0.048 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:18.435
    Mar  9 08:42:18.435: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 08:42:18.436
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:18.453
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:18.461
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create secret due to empty secret key [Conformance]
      test/e2e/common/node/secrets.go:140
    STEP: Creating projection with secret that has name secret-emptykey-test-763f79b1-431d-4012-82f0-0a40d9980135 03/09/23 08:42:18.466
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:18.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9338" for this suite. 03/09/23 08:42:18.475
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:18.484
Mar  9 08:42:18.484: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 08:42:18.485
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:18.504
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:18.508
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
STEP: Create set of pods 03/09/23 08:42:18.514
Mar  9 08:42:18.524: INFO: created test-pod-1
Mar  9 08:42:18.531: INFO: created test-pod-2
Mar  9 08:42:18.542: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running 03/09/23 08:42:18.542
Mar  9 08:42:18.542: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-2910' to be running and ready
Mar  9 08:42:18.557: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Mar  9 08:42:18.557: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Mar  9 08:42:18.557: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Mar  9 08:42:18.557: INFO: 0 / 3 pods in namespace 'pods-2910' are running and ready (0 seconds elapsed)
Mar  9 08:42:18.557: INFO: expected 0 pod replicas in namespace 'pods-2910', 0 are Running and Ready.
Mar  9 08:42:18.557: INFO: POD         NODE         PHASE    GRACE  CONDITIONS
Mar  9 08:42:18.557: INFO: test-pod-1  k8s-worker2  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  }]
Mar  9 08:42:18.557: INFO: test-pod-2  k8s-worker2  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  }]
Mar  9 08:42:18.557: INFO: test-pod-3  k8s-worker2  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  }]
Mar  9 08:42:18.557: INFO: 
Mar  9 08:42:20.570: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Mar  9 08:42:20.570: INFO: 2 / 3 pods in namespace 'pods-2910' are running and ready (2 seconds elapsed)
Mar  9 08:42:20.570: INFO: expected 0 pod replicas in namespace 'pods-2910', 0 are Running and Ready.
Mar  9 08:42:20.570: INFO: POD         NODE         PHASE    GRACE  CONDITIONS
Mar  9 08:42:20.570: INFO: test-pod-3  k8s-worker2  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  }]
Mar  9 08:42:20.570: INFO: 
Mar  9 08:42:22.571: INFO: 3 / 3 pods in namespace 'pods-2910' are running and ready (4 seconds elapsed)
Mar  9 08:42:22.571: INFO: expected 0 pod replicas in namespace 'pods-2910', 0 are Running and Ready.
STEP: waiting for all pods to be deleted 03/09/23 08:42:22.597
Mar  9 08:42:22.604: INFO: Pod quantity 3 is different from expected quantity 0
Mar  9 08:42:23.609: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:24.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2910" for this suite. 03/09/23 08:42:24.613
------------------------------
â€¢ [SLOW TEST] [6.136 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:18.484
    Mar  9 08:42:18.484: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 08:42:18.485
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:18.504
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:18.508
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should delete a collection of pods [Conformance]
      test/e2e/common/node/pods.go:845
    STEP: Create set of pods 03/09/23 08:42:18.514
    Mar  9 08:42:18.524: INFO: created test-pod-1
    Mar  9 08:42:18.531: INFO: created test-pod-2
    Mar  9 08:42:18.542: INFO: created test-pod-3
    STEP: waiting for all 3 pods to be running 03/09/23 08:42:18.542
    Mar  9 08:42:18.542: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-2910' to be running and ready
    Mar  9 08:42:18.557: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Mar  9 08:42:18.557: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Mar  9 08:42:18.557: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Mar  9 08:42:18.557: INFO: 0 / 3 pods in namespace 'pods-2910' are running and ready (0 seconds elapsed)
    Mar  9 08:42:18.557: INFO: expected 0 pod replicas in namespace 'pods-2910', 0 are Running and Ready.
    Mar  9 08:42:18.557: INFO: POD         NODE         PHASE    GRACE  CONDITIONS
    Mar  9 08:42:18.557: INFO: test-pod-1  k8s-worker2  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  }]
    Mar  9 08:42:18.557: INFO: test-pod-2  k8s-worker2  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  }]
    Mar  9 08:42:18.557: INFO: test-pod-3  k8s-worker2  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  }]
    Mar  9 08:42:18.557: INFO: 
    Mar  9 08:42:20.570: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Mar  9 08:42:20.570: INFO: 2 / 3 pods in namespace 'pods-2910' are running and ready (2 seconds elapsed)
    Mar  9 08:42:20.570: INFO: expected 0 pod replicas in namespace 'pods-2910', 0 are Running and Ready.
    Mar  9 08:42:20.570: INFO: POD         NODE         PHASE    GRACE  CONDITIONS
    Mar  9 08:42:20.570: INFO: test-pod-3  k8s-worker2  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-03-09 08:42:18 +0000 UTC  }]
    Mar  9 08:42:20.570: INFO: 
    Mar  9 08:42:22.571: INFO: 3 / 3 pods in namespace 'pods-2910' are running and ready (4 seconds elapsed)
    Mar  9 08:42:22.571: INFO: expected 0 pod replicas in namespace 'pods-2910', 0 are Running and Ready.
    STEP: waiting for all pods to be deleted 03/09/23 08:42:22.597
    Mar  9 08:42:22.604: INFO: Pod quantity 3 is different from expected quantity 0
    Mar  9 08:42:23.609: INFO: Pod quantity 3 is different from expected quantity 0
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:24.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2910" for this suite. 03/09/23 08:42:24.613
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:24.622
Mar  9 08:42:24.622: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-pred 03/09/23 08:42:24.623
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:24.64
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:24.645
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Mar  9 08:42:24.650: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Mar  9 08:42:24.661: INFO: Waiting for terminating namespaces to be deleted...
Mar  9 08:42:24.665: INFO: 
Logging pods the apiserver thinks is on node k8s-worker1 before test
Mar  9 08:42:24.677: INFO: calico-kube-controllers-79568db7f8-dgf8v from kube-system started at 2023-03-08 10:49:58 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.677: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Mar  9 08:42:24.677: INFO: calico-node-kzddq from kube-system started at 2023-03-08 01:45:28 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.677: INFO: 	Container calico-node ready: true, restart count 0
Mar  9 08:42:24.677: INFO: kube-proxy-2blnw from kube-system started at 2023-03-08 01:45:23 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.677: INFO: 	Container kube-proxy ready: true, restart count 0
Mar  9 08:42:24.677: INFO: sonobuoy from sonobuoy started at 2023-03-09 07:56:46 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.677: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Mar  9 08:42:24.677: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 from sonobuoy started at 2023-03-09 07:56:47 +0000 UTC (2 container statuses recorded)
Mar  9 08:42:24.677: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:42:24.677: INFO: 	Container systemd-logs ready: true, restart count 0
Mar  9 08:42:24.677: INFO: 
Logging pods the apiserver thinks is on node k8s-worker2 before test
Mar  9 08:42:24.691: INFO: admin-front from default started at 2023-03-08 19:24:01 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container admin-front ready: true, restart count 0
Mar  9 08:42:24.691: INFO: bizmicro-api-webapp from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container bizmicro-api-webapp ready: true, restart count 0
Mar  9 08:42:24.691: INFO: bizmicro-daemon-webapp from default started at 2023-03-08 19:23:28 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container bizmicro-daemon-webapp ready: true, restart count 0
Mar  9 08:42:24.691: INFO: bizmicro-sockjs-webapp from default started at 2023-03-08 19:23:36 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container bizmicro-sockjs-webapp ready: true, restart count 0
Mar  9 08:42:24.691: INFO: user-front from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container user-front ready: true, restart count 0
Mar  9 08:42:24.691: INFO: calico-node-zdhvf from kube-system started at 2023-03-08 01:45:27 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container calico-node ready: true, restart count 3
Mar  9 08:42:24.691: INFO: kube-proxy-dn7ts from kube-system started at 2023-03-08 01:44:47 +0000 UTC (1 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container kube-proxy ready: true, restart count 3
Mar  9 08:42:24.691: INFO: sonobuoy-e2e-job-2a17a947d7c74874 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container e2e ready: true, restart count 0
Mar  9 08:42:24.691: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:42:24.691: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
Mar  9 08:42:24.691: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:42:24.691: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
STEP: verifying the node has the label node k8s-worker1 03/09/23 08:42:24.727
STEP: verifying the node has the label node k8s-worker2 03/09/23 08:42:24.756
Mar  9 08:42:24.785: INFO: Pod admin-front requesting resource cpu=0m on Node k8s-worker2
Mar  9 08:42:24.785: INFO: Pod bizmicro-api-webapp requesting resource cpu=0m on Node k8s-worker2
Mar  9 08:42:24.785: INFO: Pod bizmicro-daemon-webapp requesting resource cpu=0m on Node k8s-worker2
Mar  9 08:42:24.785: INFO: Pod bizmicro-sockjs-webapp requesting resource cpu=0m on Node k8s-worker2
Mar  9 08:42:24.785: INFO: Pod user-front requesting resource cpu=0m on Node k8s-worker2
Mar  9 08:42:24.786: INFO: Pod calico-kube-controllers-79568db7f8-dgf8v requesting resource cpu=0m on Node k8s-worker1
Mar  9 08:42:24.786: INFO: Pod calico-node-kzddq requesting resource cpu=250m on Node k8s-worker1
Mar  9 08:42:24.786: INFO: Pod calico-node-zdhvf requesting resource cpu=250m on Node k8s-worker2
Mar  9 08:42:24.786: INFO: Pod kube-proxy-2blnw requesting resource cpu=0m on Node k8s-worker1
Mar  9 08:42:24.786: INFO: Pod kube-proxy-dn7ts requesting resource cpu=0m on Node k8s-worker2
Mar  9 08:42:24.786: INFO: Pod sonobuoy requesting resource cpu=0m on Node k8s-worker1
Mar  9 08:42:24.786: INFO: Pod sonobuoy-e2e-job-2a17a947d7c74874 requesting resource cpu=0m on Node k8s-worker2
Mar  9 08:42:24.786: INFO: Pod sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 requesting resource cpu=0m on Node k8s-worker2
Mar  9 08:42:24.786: INFO: Pod sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 requesting resource cpu=0m on Node k8s-worker1
STEP: Starting Pods to consume most of the cluster CPU. 03/09/23 08:42:24.786
Mar  9 08:42:24.786: INFO: Creating a pod which consumes cpu=5425m on Node k8s-worker1
Mar  9 08:42:24.798: INFO: Creating a pod which consumes cpu=5425m on Node k8s-worker2
Mar  9 08:42:24.807: INFO: Waiting up to 5m0s for pod "filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86" in namespace "sched-pred-5107" to be "running"
Mar  9 08:42:24.811: INFO: Pod "filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86": Phase="Pending", Reason="", readiness=false. Elapsed: 4.052349ms
Mar  9 08:42:26.817: INFO: Pod "filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86": Phase="Running", Reason="", readiness=true. Elapsed: 2.009941395s
Mar  9 08:42:26.817: INFO: Pod "filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86" satisfied condition "running"
Mar  9 08:42:26.817: INFO: Waiting up to 5m0s for pod "filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69" in namespace "sched-pred-5107" to be "running"
Mar  9 08:42:26.821: INFO: Pod "filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69": Phase="Running", Reason="", readiness=true. Elapsed: 4.155097ms
Mar  9 08:42:26.821: INFO: Pod "filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69" satisfied condition "running"
STEP: Creating another pod that requires unavailable amount of CPU. 03/09/23 08:42:26.821
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86.174ab3a7d84381a3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 03/09/23 08:42:26.827
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86.174ab3a7da57222b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5107/filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86 to k8s-worker1] 03/09/23 08:42:26.827
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86.174ab3a7db135de7], Reason = [Created], Message = [Created container filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86] 03/09/23 08:42:26.827
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86.174ab3a7e86416c1], Reason = [Started], Message = [Started container filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86] 03/09/23 08:42:26.827
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69.174ab3a7daeedf2f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5107/filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69 to k8s-worker2] 03/09/23 08:42:26.827
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69.174ab3a81cc924ff], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 03/09/23 08:42:26.827
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69.174ab3a81fa682b8], Reason = [Created], Message = [Created container filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69] 03/09/23 08:42:26.828
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69.174ab3a82ca96869], Reason = [Started], Message = [Started container filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69] 03/09/23 08:42:26.828
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.174ab3a853790215], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod..] 03/09/23 08:42:26.853
STEP: removing the label node off the node k8s-worker2 03/09/23 08:42:27.858
STEP: verifying the node doesn't have the label node 03/09/23 08:42:27.897
STEP: removing the label node off the node k8s-worker1 03/09/23 08:42:27.901
STEP: verifying the node doesn't have the label node 03/09/23 08:42:27.936
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:27.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-5107" for this suite. 03/09/23 08:42:27.948
------------------------------
â€¢ [3.333 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:24.622
    Mar  9 08:42:24.622: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-pred 03/09/23 08:42:24.623
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:24.64
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:24.645
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Mar  9 08:42:24.650: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Mar  9 08:42:24.661: INFO: Waiting for terminating namespaces to be deleted...
    Mar  9 08:42:24.665: INFO: 
    Logging pods the apiserver thinks is on node k8s-worker1 before test
    Mar  9 08:42:24.677: INFO: calico-kube-controllers-79568db7f8-dgf8v from kube-system started at 2023-03-08 10:49:58 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.677: INFO: 	Container calico-kube-controllers ready: true, restart count 0
    Mar  9 08:42:24.677: INFO: calico-node-kzddq from kube-system started at 2023-03-08 01:45:28 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.677: INFO: 	Container calico-node ready: true, restart count 0
    Mar  9 08:42:24.677: INFO: kube-proxy-2blnw from kube-system started at 2023-03-08 01:45:23 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.677: INFO: 	Container kube-proxy ready: true, restart count 0
    Mar  9 08:42:24.677: INFO: sonobuoy from sonobuoy started at 2023-03-09 07:56:46 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.677: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Mar  9 08:42:24.677: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 from sonobuoy started at 2023-03-09 07:56:47 +0000 UTC (2 container statuses recorded)
    Mar  9 08:42:24.677: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:42:24.677: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar  9 08:42:24.677: INFO: 
    Logging pods the apiserver thinks is on node k8s-worker2 before test
    Mar  9 08:42:24.691: INFO: admin-front from default started at 2023-03-08 19:24:01 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container admin-front ready: true, restart count 0
    Mar  9 08:42:24.691: INFO: bizmicro-api-webapp from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container bizmicro-api-webapp ready: true, restart count 0
    Mar  9 08:42:24.691: INFO: bizmicro-daemon-webapp from default started at 2023-03-08 19:23:28 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container bizmicro-daemon-webapp ready: true, restart count 0
    Mar  9 08:42:24.691: INFO: bizmicro-sockjs-webapp from default started at 2023-03-08 19:23:36 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container bizmicro-sockjs-webapp ready: true, restart count 0
    Mar  9 08:42:24.691: INFO: user-front from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container user-front ready: true, restart count 0
    Mar  9 08:42:24.691: INFO: calico-node-zdhvf from kube-system started at 2023-03-08 01:45:27 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container calico-node ready: true, restart count 3
    Mar  9 08:42:24.691: INFO: kube-proxy-dn7ts from kube-system started at 2023-03-08 01:44:47 +0000 UTC (1 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container kube-proxy ready: true, restart count 3
    Mar  9 08:42:24.691: INFO: sonobuoy-e2e-job-2a17a947d7c74874 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container e2e ready: true, restart count 0
    Mar  9 08:42:24.691: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:42:24.691: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
    Mar  9 08:42:24.691: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:42:24.691: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates resource limits of pods that are allowed to run  [Conformance]
      test/e2e/scheduling/predicates.go:331
    STEP: verifying the node has the label node k8s-worker1 03/09/23 08:42:24.727
    STEP: verifying the node has the label node k8s-worker2 03/09/23 08:42:24.756
    Mar  9 08:42:24.785: INFO: Pod admin-front requesting resource cpu=0m on Node k8s-worker2
    Mar  9 08:42:24.785: INFO: Pod bizmicro-api-webapp requesting resource cpu=0m on Node k8s-worker2
    Mar  9 08:42:24.785: INFO: Pod bizmicro-daemon-webapp requesting resource cpu=0m on Node k8s-worker2
    Mar  9 08:42:24.785: INFO: Pod bizmicro-sockjs-webapp requesting resource cpu=0m on Node k8s-worker2
    Mar  9 08:42:24.785: INFO: Pod user-front requesting resource cpu=0m on Node k8s-worker2
    Mar  9 08:42:24.786: INFO: Pod calico-kube-controllers-79568db7f8-dgf8v requesting resource cpu=0m on Node k8s-worker1
    Mar  9 08:42:24.786: INFO: Pod calico-node-kzddq requesting resource cpu=250m on Node k8s-worker1
    Mar  9 08:42:24.786: INFO: Pod calico-node-zdhvf requesting resource cpu=250m on Node k8s-worker2
    Mar  9 08:42:24.786: INFO: Pod kube-proxy-2blnw requesting resource cpu=0m on Node k8s-worker1
    Mar  9 08:42:24.786: INFO: Pod kube-proxy-dn7ts requesting resource cpu=0m on Node k8s-worker2
    Mar  9 08:42:24.786: INFO: Pod sonobuoy requesting resource cpu=0m on Node k8s-worker1
    Mar  9 08:42:24.786: INFO: Pod sonobuoy-e2e-job-2a17a947d7c74874 requesting resource cpu=0m on Node k8s-worker2
    Mar  9 08:42:24.786: INFO: Pod sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 requesting resource cpu=0m on Node k8s-worker2
    Mar  9 08:42:24.786: INFO: Pod sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 requesting resource cpu=0m on Node k8s-worker1
    STEP: Starting Pods to consume most of the cluster CPU. 03/09/23 08:42:24.786
    Mar  9 08:42:24.786: INFO: Creating a pod which consumes cpu=5425m on Node k8s-worker1
    Mar  9 08:42:24.798: INFO: Creating a pod which consumes cpu=5425m on Node k8s-worker2
    Mar  9 08:42:24.807: INFO: Waiting up to 5m0s for pod "filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86" in namespace "sched-pred-5107" to be "running"
    Mar  9 08:42:24.811: INFO: Pod "filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86": Phase="Pending", Reason="", readiness=false. Elapsed: 4.052349ms
    Mar  9 08:42:26.817: INFO: Pod "filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86": Phase="Running", Reason="", readiness=true. Elapsed: 2.009941395s
    Mar  9 08:42:26.817: INFO: Pod "filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86" satisfied condition "running"
    Mar  9 08:42:26.817: INFO: Waiting up to 5m0s for pod "filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69" in namespace "sched-pred-5107" to be "running"
    Mar  9 08:42:26.821: INFO: Pod "filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69": Phase="Running", Reason="", readiness=true. Elapsed: 4.155097ms
    Mar  9 08:42:26.821: INFO: Pod "filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69" satisfied condition "running"
    STEP: Creating another pod that requires unavailable amount of CPU. 03/09/23 08:42:26.821
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86.174ab3a7d84381a3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 03/09/23 08:42:26.827
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86.174ab3a7da57222b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5107/filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86 to k8s-worker1] 03/09/23 08:42:26.827
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86.174ab3a7db135de7], Reason = [Created], Message = [Created container filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86] 03/09/23 08:42:26.827
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86.174ab3a7e86416c1], Reason = [Started], Message = [Started container filler-pod-1e2474ed-70a2-4879-8d5e-52488afe5e86] 03/09/23 08:42:26.827
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69.174ab3a7daeedf2f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5107/filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69 to k8s-worker2] 03/09/23 08:42:26.827
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69.174ab3a81cc924ff], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 03/09/23 08:42:26.827
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69.174ab3a81fa682b8], Reason = [Created], Message = [Created container filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69] 03/09/23 08:42:26.828
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69.174ab3a82ca96869], Reason = [Started], Message = [Started container filler-pod-d4e00a3b-2bcc-4bbe-b08f-3b6654715e69] 03/09/23 08:42:26.828
    STEP: Considering event: 
    Type = [Warning], Name = [additional-pod.174ab3a853790215], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod..] 03/09/23 08:42:26.853
    STEP: removing the label node off the node k8s-worker2 03/09/23 08:42:27.858
    STEP: verifying the node doesn't have the label node 03/09/23 08:42:27.897
    STEP: removing the label node off the node k8s-worker1 03/09/23 08:42:27.901
    STEP: verifying the node doesn't have the label node 03/09/23 08:42:27.936
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:27.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-5107" for this suite. 03/09/23 08:42:27.948
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance]
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:27.958
Mar  9 08:42:27.958: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename ephemeral-containers-test 03/09/23 08:42:27.962
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:27.976
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:27.98
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/common/node/ephemeral_containers.go:38
[It] will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
STEP: creating a target pod 03/09/23 08:42:27.985
Mar  9 08:42:27.996: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-4342" to be "running and ready"
Mar  9 08:42:27.999: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.545559ms
Mar  9 08:42:27.999: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:42:30.005: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008862595s
Mar  9 08:42:30.005: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
Mar  9 08:42:30.005: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
STEP: adding an ephemeral container 03/09/23 08:42:30.009
Mar  9 08:42:30.024: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-4342" to be "container debugger running"
Mar  9 08:42:30.028: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 3.99404ms
Mar  9 08:42:32.034: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010248813s
Mar  9 08:42:34.033: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.008971686s
Mar  9 08:42:34.033: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
STEP: checking pod container endpoints 03/09/23 08:42:34.033
Mar  9 08:42:34.034: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4342 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 08:42:34.034: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:42:34.035: INFO: ExecWithOptions: Clientset creation
Mar  9 08:42:34.035: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-4342/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
Mar  9 08:42:34.153: INFO: Exec stderr: ""
[AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:34.160: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "ephemeral-containers-test-4342" for this suite. 03/09/23 08:42:34.167
------------------------------
â€¢ [SLOW TEST] [6.217 seconds]
[sig-node] Ephemeral Containers [NodeConformance]
test/e2e/common/node/framework.go:23
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:27.958
    Mar  9 08:42:27.958: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename ephemeral-containers-test 03/09/23 08:42:27.962
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:27.976
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:27.98
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/common/node/ephemeral_containers.go:38
    [It] will start an ephemeral container in an existing pod [Conformance]
      test/e2e/common/node/ephemeral_containers.go:45
    STEP: creating a target pod 03/09/23 08:42:27.985
    Mar  9 08:42:27.996: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-4342" to be "running and ready"
    Mar  9 08:42:27.999: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 3.545559ms
    Mar  9 08:42:27.999: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:42:30.005: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008862595s
    Mar  9 08:42:30.005: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
    Mar  9 08:42:30.005: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
    STEP: adding an ephemeral container 03/09/23 08:42:30.009
    Mar  9 08:42:30.024: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-4342" to be "container debugger running"
    Mar  9 08:42:30.028: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 3.99404ms
    Mar  9 08:42:32.034: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.010248813s
    Mar  9 08:42:34.033: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.008971686s
    Mar  9 08:42:34.033: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
    STEP: checking pod container endpoints 03/09/23 08:42:34.033
    Mar  9 08:42:34.034: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4342 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 08:42:34.034: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:42:34.035: INFO: ExecWithOptions: Clientset creation
    Mar  9 08:42:34.035: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-4342/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
    Mar  9 08:42:34.153: INFO: Exec stderr: ""
    [AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:34.160: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "ephemeral-containers-test-4342" for this suite. 03/09/23 08:42:34.167
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] Services
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:34.176
Mar  9 08:42:34.176: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:42:34.177
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:34.192
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:34.197
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
STEP: creating a Service 03/09/23 08:42:34.206
STEP: watching for the Service to be added 03/09/23 08:42:34.223
Mar  9 08:42:34.226: INFO: Found Service test-service-qzgzd in namespace services-8468 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Mar  9 08:42:34.226: INFO: Service test-service-qzgzd created
STEP: Getting /status 03/09/23 08:42:34.226
Mar  9 08:42:34.236: INFO: Service test-service-qzgzd has LoadBalancer: {[]}
STEP: patching the ServiceStatus 03/09/23 08:42:34.236
STEP: watching for the Service to be patched 03/09/23 08:42:34.249
Mar  9 08:42:34.251: INFO: observed Service test-service-qzgzd in namespace services-8468 with annotations: map[] & LoadBalancer: {[]}
Mar  9 08:42:34.251: INFO: Found Service test-service-qzgzd in namespace services-8468 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Mar  9 08:42:34.251: INFO: Service test-service-qzgzd has service status patched
STEP: updating the ServiceStatus 03/09/23 08:42:34.251
Mar  9 08:42:34.263: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated 03/09/23 08:42:34.263
Mar  9 08:42:34.266: INFO: Observed Service test-service-qzgzd in namespace services-8468 with annotations: map[] & Conditions: {[]}
Mar  9 08:42:34.266: INFO: Observed event: &Service{ObjectMeta:{test-service-qzgzd  services-8468  637013b0-909a-4b37-8a97-029db4333307 267038 0 2023-03-09 08:42:34 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-03-09 08:42:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-03-09 08:42:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.108.166.228,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.108.166.228],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Mar  9 08:42:34.267: INFO: Found Service test-service-qzgzd in namespace services-8468 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Mar  9 08:42:34.267: INFO: Service test-service-qzgzd has service status updated
STEP: patching the service 03/09/23 08:42:34.267
STEP: watching for the Service to be patched 03/09/23 08:42:34.277
Mar  9 08:42:34.280: INFO: observed Service test-service-qzgzd in namespace services-8468 with labels: map[test-service-static:true]
Mar  9 08:42:34.280: INFO: observed Service test-service-qzgzd in namespace services-8468 with labels: map[test-service-static:true]
Mar  9 08:42:34.280: INFO: observed Service test-service-qzgzd in namespace services-8468 with labels: map[test-service-static:true]
Mar  9 08:42:34.280: INFO: Found Service test-service-qzgzd in namespace services-8468 with labels: map[test-service:patched test-service-static:true]
Mar  9 08:42:34.280: INFO: Service test-service-qzgzd patched
STEP: deleting the service 03/09/23 08:42:34.28
STEP: watching for the Service to be deleted 03/09/23 08:42:34.301
Mar  9 08:42:34.304: INFO: Observed event: ADDED
Mar  9 08:42:34.304: INFO: Observed event: MODIFIED
Mar  9 08:42:34.304: INFO: Observed event: MODIFIED
Mar  9 08:42:34.304: INFO: Observed event: MODIFIED
Mar  9 08:42:34.304: INFO: Found Service test-service-qzgzd in namespace services-8468 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Mar  9 08:42:34.304: INFO: Service test-service-qzgzd deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:34.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8468" for this suite. 03/09/23 08:42:34.31
------------------------------
â€¢ [0.143 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:34.176
    Mar  9 08:42:34.176: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:42:34.177
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:34.192
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:34.197
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should complete a service status lifecycle [Conformance]
      test/e2e/network/service.go:3428
    STEP: creating a Service 03/09/23 08:42:34.206
    STEP: watching for the Service to be added 03/09/23 08:42:34.223
    Mar  9 08:42:34.226: INFO: Found Service test-service-qzgzd in namespace services-8468 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
    Mar  9 08:42:34.226: INFO: Service test-service-qzgzd created
    STEP: Getting /status 03/09/23 08:42:34.226
    Mar  9 08:42:34.236: INFO: Service test-service-qzgzd has LoadBalancer: {[]}
    STEP: patching the ServiceStatus 03/09/23 08:42:34.236
    STEP: watching for the Service to be patched 03/09/23 08:42:34.249
    Mar  9 08:42:34.251: INFO: observed Service test-service-qzgzd in namespace services-8468 with annotations: map[] & LoadBalancer: {[]}
    Mar  9 08:42:34.251: INFO: Found Service test-service-qzgzd in namespace services-8468 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
    Mar  9 08:42:34.251: INFO: Service test-service-qzgzd has service status patched
    STEP: updating the ServiceStatus 03/09/23 08:42:34.251
    Mar  9 08:42:34.263: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Service to be updated 03/09/23 08:42:34.263
    Mar  9 08:42:34.266: INFO: Observed Service test-service-qzgzd in namespace services-8468 with annotations: map[] & Conditions: {[]}
    Mar  9 08:42:34.266: INFO: Observed event: &Service{ObjectMeta:{test-service-qzgzd  services-8468  637013b0-909a-4b37-8a97-029db4333307 267038 0 2023-03-09 08:42:34 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-03-09 08:42:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-03-09 08:42:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.108.166.228,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.108.166.228],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
    Mar  9 08:42:34.267: INFO: Found Service test-service-qzgzd in namespace services-8468 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Mar  9 08:42:34.267: INFO: Service test-service-qzgzd has service status updated
    STEP: patching the service 03/09/23 08:42:34.267
    STEP: watching for the Service to be patched 03/09/23 08:42:34.277
    Mar  9 08:42:34.280: INFO: observed Service test-service-qzgzd in namespace services-8468 with labels: map[test-service-static:true]
    Mar  9 08:42:34.280: INFO: observed Service test-service-qzgzd in namespace services-8468 with labels: map[test-service-static:true]
    Mar  9 08:42:34.280: INFO: observed Service test-service-qzgzd in namespace services-8468 with labels: map[test-service-static:true]
    Mar  9 08:42:34.280: INFO: Found Service test-service-qzgzd in namespace services-8468 with labels: map[test-service:patched test-service-static:true]
    Mar  9 08:42:34.280: INFO: Service test-service-qzgzd patched
    STEP: deleting the service 03/09/23 08:42:34.28
    STEP: watching for the Service to be deleted 03/09/23 08:42:34.301
    Mar  9 08:42:34.304: INFO: Observed event: ADDED
    Mar  9 08:42:34.304: INFO: Observed event: MODIFIED
    Mar  9 08:42:34.304: INFO: Observed event: MODIFIED
    Mar  9 08:42:34.304: INFO: Observed event: MODIFIED
    Mar  9 08:42:34.304: INFO: Found Service test-service-qzgzd in namespace services-8468 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
    Mar  9 08:42:34.304: INFO: Service test-service-qzgzd deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:34.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8468" for this suite. 03/09/23 08:42:34.31
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:34.322
Mar  9 08:42:34.322: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:42:34.324
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:34.339
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:34.344
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:42:34.369
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:42:34.888
STEP: Deploying the webhook pod 03/09/23 08:42:34.898
STEP: Wait for the deployment to be ready 03/09/23 08:42:34.912
Mar  9 08:42:34.920: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service 03/09/23 08:42:36.934
STEP: Verifying the service has paired with the endpoint 03/09/23 08:42:36.952
Mar  9 08:42:37.952: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
STEP: Setting timeout (1s) shorter than webhook latency (5s) 03/09/23 08:42:37.956
STEP: Registering slow webhook via the AdmissionRegistration API 03/09/23 08:42:37.957
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 03/09/23 08:42:37.986
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 03/09/23 08:42:38.997
STEP: Registering slow webhook via the AdmissionRegistration API 03/09/23 08:42:38.998
STEP: Having no error when timeout is longer than webhook latency 03/09/23 08:42:40.031
STEP: Registering slow webhook via the AdmissionRegistration API 03/09/23 08:42:40.031
STEP: Having no error when timeout is empty (defaulted to 10s in v1) 03/09/23 08:42:45.076
STEP: Registering slow webhook via the AdmissionRegistration API 03/09/23 08:42:45.076
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:50.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5359" for this suite. 03/09/23 08:42:50.166
STEP: Destroying namespace "webhook-5359-markers" for this suite. 03/09/23 08:42:50.173
------------------------------
â€¢ [SLOW TEST] [15.869 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:34.322
    Mar  9 08:42:34.322: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:42:34.324
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:34.339
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:34.344
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:42:34.369
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:42:34.888
    STEP: Deploying the webhook pod 03/09/23 08:42:34.898
    STEP: Wait for the deployment to be ready 03/09/23 08:42:34.912
    Mar  9 08:42:34.920: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
    STEP: Deploying the webhook service 03/09/23 08:42:36.934
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:42:36.952
    Mar  9 08:42:37.952: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should honor timeout [Conformance]
      test/e2e/apimachinery/webhook.go:381
    STEP: Setting timeout (1s) shorter than webhook latency (5s) 03/09/23 08:42:37.956
    STEP: Registering slow webhook via the AdmissionRegistration API 03/09/23 08:42:37.957
    STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 03/09/23 08:42:37.986
    STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 03/09/23 08:42:38.997
    STEP: Registering slow webhook via the AdmissionRegistration API 03/09/23 08:42:38.998
    STEP: Having no error when timeout is longer than webhook latency 03/09/23 08:42:40.031
    STEP: Registering slow webhook via the AdmissionRegistration API 03/09/23 08:42:40.031
    STEP: Having no error when timeout is empty (defaulted to 10s in v1) 03/09/23 08:42:45.076
    STEP: Registering slow webhook via the AdmissionRegistration API 03/09/23 08:42:45.076
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:50.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5359" for this suite. 03/09/23 08:42:50.166
    STEP: Destroying namespace "webhook-5359-markers" for this suite. 03/09/23 08:42:50.173
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:50.194
Mar  9 08:42:50.194: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:42:50.196
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:50.21
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:50.214
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:42:50.219
Mar  9 08:42:50.229: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda" in namespace "downward-api-9862" to be "Succeeded or Failed"
Mar  9 08:42:50.233: INFO: Pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda": Phase="Pending", Reason="", readiness=false. Elapsed: 3.490099ms
Mar  9 08:42:52.238: INFO: Pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008978064s
Mar  9 08:42:54.237: INFO: Pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00819272s
STEP: Saw pod success 03/09/23 08:42:54.237
Mar  9 08:42:54.238: INFO: Pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda" satisfied condition "Succeeded or Failed"
Mar  9 08:42:54.242: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda container client-container: <nil>
STEP: delete the pod 03/09/23 08:42:54.25
Mar  9 08:42:54.264: INFO: Waiting for pod downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda to disappear
Mar  9 08:42:54.268: INFO: Pod downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:54.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9862" for this suite. 03/09/23 08:42:54.275
------------------------------
â€¢ [4.089 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:50.194
    Mar  9 08:42:50.194: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:42:50.196
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:50.21
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:50.214
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:68
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:42:50.219
    Mar  9 08:42:50.229: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda" in namespace "downward-api-9862" to be "Succeeded or Failed"
    Mar  9 08:42:50.233: INFO: Pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda": Phase="Pending", Reason="", readiness=false. Elapsed: 3.490099ms
    Mar  9 08:42:52.238: INFO: Pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008978064s
    Mar  9 08:42:54.237: INFO: Pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00819272s
    STEP: Saw pod success 03/09/23 08:42:54.237
    Mar  9 08:42:54.238: INFO: Pod "downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda" satisfied condition "Succeeded or Failed"
    Mar  9 08:42:54.242: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda container client-container: <nil>
    STEP: delete the pod 03/09/23 08:42:54.25
    Mar  9 08:42:54.264: INFO: Waiting for pod downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda to disappear
    Mar  9 08:42:54.268: INFO: Pod downwardapi-volume-c1df512f-a3d6-4a5a-a002-fd22be633dda no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:54.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9862" for this suite. 03/09/23 08:42:54.275
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:54.283
Mar  9 08:42:54.284: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 08:42:54.285
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:54.3
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:54.304
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
STEP: Create a pod 03/09/23 08:42:54.309
Mar  9 08:42:54.324: INFO: Waiting up to 5m0s for pod "pod-q7zgg" in namespace "pods-407" to be "running"
Mar  9 08:42:54.330: INFO: Pod "pod-q7zgg": Phase="Pending", Reason="", readiness=false. Elapsed: 5.409269ms
Mar  9 08:42:56.336: INFO: Pod "pod-q7zgg": Phase="Running", Reason="", readiness=true. Elapsed: 2.01158457s
Mar  9 08:42:56.336: INFO: Pod "pod-q7zgg" satisfied condition "running"
STEP: patching /status 03/09/23 08:42:56.336
Mar  9 08:42:56.349: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 08:42:56.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-407" for this suite. 03/09/23 08:42:56.356
------------------------------
â€¢ [2.081 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:54.283
    Mar  9 08:42:54.284: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 08:42:54.285
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:54.3
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:54.304
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should patch a pod status [Conformance]
      test/e2e/common/node/pods.go:1083
    STEP: Create a pod 03/09/23 08:42:54.309
    Mar  9 08:42:54.324: INFO: Waiting up to 5m0s for pod "pod-q7zgg" in namespace "pods-407" to be "running"
    Mar  9 08:42:54.330: INFO: Pod "pod-q7zgg": Phase="Pending", Reason="", readiness=false. Elapsed: 5.409269ms
    Mar  9 08:42:56.336: INFO: Pod "pod-q7zgg": Phase="Running", Reason="", readiness=true. Elapsed: 2.01158457s
    Mar  9 08:42:56.336: INFO: Pod "pod-q7zgg" satisfied condition "running"
    STEP: patching /status 03/09/23 08:42:56.336
    Mar  9 08:42:56.349: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:42:56.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-407" for this suite. 03/09/23 08:42:56.356
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:42:56.364
Mar  9 08:42:56.365: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:42:56.366
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:56.382
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:56.387
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
STEP: Creating configMap with name configmap-test-volume-885a7072-926f-499d-98f7-7ec387337abc 03/09/23 08:42:56.392
STEP: Creating a pod to test consume configMaps 03/09/23 08:42:56.398
Mar  9 08:42:56.410: INFO: Waiting up to 5m0s for pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701" in namespace "configmap-3425" to be "Succeeded or Failed"
Mar  9 08:42:56.414: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019217ms
Mar  9 08:42:58.420: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701": Phase="Running", Reason="", readiness=true. Elapsed: 2.009312428s
Mar  9 08:43:00.419: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701": Phase="Running", Reason="", readiness=false. Elapsed: 4.009149305s
Mar  9 08:43:02.420: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009858084s
STEP: Saw pod success 03/09/23 08:43:02.42
Mar  9 08:43:02.420: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701" satisfied condition "Succeeded or Failed"
Mar  9 08:43:02.424: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:43:02.433
Mar  9 08:43:02.448: INFO: Waiting for pod pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701 to disappear
Mar  9 08:43:02.451: INFO: Pod pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:43:02.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3425" for this suite. 03/09/23 08:43:02.458
------------------------------
â€¢ [SLOW TEST] [6.100 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:42:56.364
    Mar  9 08:42:56.365: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:42:56.366
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:42:56.382
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:42:56.387
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:74
    STEP: Creating configMap with name configmap-test-volume-885a7072-926f-499d-98f7-7ec387337abc 03/09/23 08:42:56.392
    STEP: Creating a pod to test consume configMaps 03/09/23 08:42:56.398
    Mar  9 08:42:56.410: INFO: Waiting up to 5m0s for pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701" in namespace "configmap-3425" to be "Succeeded or Failed"
    Mar  9 08:42:56.414: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701": Phase="Pending", Reason="", readiness=false. Elapsed: 4.019217ms
    Mar  9 08:42:58.420: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701": Phase="Running", Reason="", readiness=true. Elapsed: 2.009312428s
    Mar  9 08:43:00.419: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701": Phase="Running", Reason="", readiness=false. Elapsed: 4.009149305s
    Mar  9 08:43:02.420: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009858084s
    STEP: Saw pod success 03/09/23 08:43:02.42
    Mar  9 08:43:02.420: INFO: Pod "pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701" satisfied condition "Succeeded or Failed"
    Mar  9 08:43:02.424: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:43:02.433
    Mar  9 08:43:02.448: INFO: Waiting for pod pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701 to disappear
    Mar  9 08:43:02.451: INFO: Pod pod-configmaps-b19b7951-881c-4ccf-8ed3-408e8c4da701 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:43:02.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3425" for this suite. 03/09/23 08:43:02.458
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:43:02.47
Mar  9 08:43:02.470: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 08:43:02.472
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:43:02.497
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:43:02.503
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
STEP: Creating a ResourceQuota with terminating scope 03/09/23 08:43:02.508
STEP: Ensuring ResourceQuota status is calculated 03/09/23 08:43:02.516
STEP: Creating a ResourceQuota with not terminating scope 03/09/23 08:43:04.521
STEP: Ensuring ResourceQuota status is calculated 03/09/23 08:43:04.528
STEP: Creating a long running pod 03/09/23 08:43:06.534
STEP: Ensuring resource quota with not terminating scope captures the pod usage 03/09/23 08:43:06.552
STEP: Ensuring resource quota with terminating scope ignored the pod usage 03/09/23 08:43:08.563
STEP: Deleting the pod 03/09/23 08:43:10.567
STEP: Ensuring resource quota status released the pod usage 03/09/23 08:43:10.584
STEP: Creating a terminating pod 03/09/23 08:43:12.591
STEP: Ensuring resource quota with terminating scope captures the pod usage 03/09/23 08:43:12.611
STEP: Ensuring resource quota with not terminating scope ignored the pod usage 03/09/23 08:43:14.616
STEP: Deleting the pod 03/09/23 08:43:16.625
STEP: Ensuring resource quota status released the pod usage 03/09/23 08:43:16.637
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 08:43:18.643: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8195" for this suite. 03/09/23 08:43:18.65
------------------------------
â€¢ [SLOW TEST] [16.188 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:43:02.47
    Mar  9 08:43:02.470: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 08:43:02.472
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:43:02.497
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:43:02.503
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with terminating scopes. [Conformance]
      test/e2e/apimachinery/resource_quota.go:690
    STEP: Creating a ResourceQuota with terminating scope 03/09/23 08:43:02.508
    STEP: Ensuring ResourceQuota status is calculated 03/09/23 08:43:02.516
    STEP: Creating a ResourceQuota with not terminating scope 03/09/23 08:43:04.521
    STEP: Ensuring ResourceQuota status is calculated 03/09/23 08:43:04.528
    STEP: Creating a long running pod 03/09/23 08:43:06.534
    STEP: Ensuring resource quota with not terminating scope captures the pod usage 03/09/23 08:43:06.552
    STEP: Ensuring resource quota with terminating scope ignored the pod usage 03/09/23 08:43:08.563
    STEP: Deleting the pod 03/09/23 08:43:10.567
    STEP: Ensuring resource quota status released the pod usage 03/09/23 08:43:10.584
    STEP: Creating a terminating pod 03/09/23 08:43:12.591
    STEP: Ensuring resource quota with terminating scope captures the pod usage 03/09/23 08:43:12.611
    STEP: Ensuring resource quota with not terminating scope ignored the pod usage 03/09/23 08:43:14.616
    STEP: Deleting the pod 03/09/23 08:43:16.625
    STEP: Ensuring resource quota status released the pod usage 03/09/23 08:43:16.637
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:43:18.643: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8195" for this suite. 03/09/23 08:43:18.65
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:43:18.66
Mar  9 08:43:18.660: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename subpath 03/09/23 08:43:18.661
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:43:18.677
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:43:18.683
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/09/23 08:43:18.688
[It] should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
STEP: Creating pod pod-subpath-test-downwardapi-dn67 03/09/23 08:43:18.701
STEP: Creating a pod to test atomic-volume-subpath 03/09/23 08:43:18.701
Mar  9 08:43:18.712: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-dn67" in namespace "subpath-1404" to be "Succeeded or Failed"
Mar  9 08:43:18.718: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Pending", Reason="", readiness=false. Elapsed: 6.631721ms
Mar  9 08:43:20.723: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011563597s
Mar  9 08:43:22.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 4.01226162s
Mar  9 08:43:24.723: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 6.011458629s
Mar  9 08:43:26.726: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 8.013998727s
Mar  9 08:43:28.723: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 10.0114814s
Mar  9 08:43:30.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 12.012572759s
Mar  9 08:43:32.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 14.012880552s
Mar  9 08:43:34.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 16.012191775s
Mar  9 08:43:36.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 18.012552921s
Mar  9 08:43:38.725: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 20.013448454s
Mar  9 08:43:40.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 22.012281195s
Mar  9 08:43:42.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=false. Elapsed: 24.012451895s
Mar  9 08:43:44.725: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.013042575s
STEP: Saw pod success 03/09/23 08:43:44.725
Mar  9 08:43:44.725: INFO: Pod "pod-subpath-test-downwardapi-dn67" satisfied condition "Succeeded or Failed"
Mar  9 08:43:44.729: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-downwardapi-dn67 container test-container-subpath-downwardapi-dn67: <nil>
STEP: delete the pod 03/09/23 08:43:44.738
Mar  9 08:43:44.753: INFO: Waiting for pod pod-subpath-test-downwardapi-dn67 to disappear
Mar  9 08:43:44.757: INFO: Pod pod-subpath-test-downwardapi-dn67 no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-dn67 03/09/23 08:43:44.757
Mar  9 08:43:44.757: INFO: Deleting pod "pod-subpath-test-downwardapi-dn67" in namespace "subpath-1404"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar  9 08:43:44.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-1404" for this suite. 03/09/23 08:43:44.767
------------------------------
â€¢ [SLOW TEST] [26.115 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/storage/subpath.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:43:18.66
    Mar  9 08:43:18.660: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename subpath 03/09/23 08:43:18.661
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:43:18.677
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:43:18.683
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/09/23 08:43:18.688
    [It] should support subpaths with downward pod [Conformance]
      test/e2e/storage/subpath.go:92
    STEP: Creating pod pod-subpath-test-downwardapi-dn67 03/09/23 08:43:18.701
    STEP: Creating a pod to test atomic-volume-subpath 03/09/23 08:43:18.701
    Mar  9 08:43:18.712: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-dn67" in namespace "subpath-1404" to be "Succeeded or Failed"
    Mar  9 08:43:18.718: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Pending", Reason="", readiness=false. Elapsed: 6.631721ms
    Mar  9 08:43:20.723: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011563597s
    Mar  9 08:43:22.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 4.01226162s
    Mar  9 08:43:24.723: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 6.011458629s
    Mar  9 08:43:26.726: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 8.013998727s
    Mar  9 08:43:28.723: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 10.0114814s
    Mar  9 08:43:30.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 12.012572759s
    Mar  9 08:43:32.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 14.012880552s
    Mar  9 08:43:34.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 16.012191775s
    Mar  9 08:43:36.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 18.012552921s
    Mar  9 08:43:38.725: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 20.013448454s
    Mar  9 08:43:40.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=true. Elapsed: 22.012281195s
    Mar  9 08:43:42.724: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Running", Reason="", readiness=false. Elapsed: 24.012451895s
    Mar  9 08:43:44.725: INFO: Pod "pod-subpath-test-downwardapi-dn67": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.013042575s
    STEP: Saw pod success 03/09/23 08:43:44.725
    Mar  9 08:43:44.725: INFO: Pod "pod-subpath-test-downwardapi-dn67" satisfied condition "Succeeded or Failed"
    Mar  9 08:43:44.729: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-downwardapi-dn67 container test-container-subpath-downwardapi-dn67: <nil>
    STEP: delete the pod 03/09/23 08:43:44.738
    Mar  9 08:43:44.753: INFO: Waiting for pod pod-subpath-test-downwardapi-dn67 to disappear
    Mar  9 08:43:44.757: INFO: Pod pod-subpath-test-downwardapi-dn67 no longer exists
    STEP: Deleting pod pod-subpath-test-downwardapi-dn67 03/09/23 08:43:44.757
    Mar  9 08:43:44.757: INFO: Deleting pod "pod-subpath-test-downwardapi-dn67" in namespace "subpath-1404"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:43:44.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-1404" for this suite. 03/09/23 08:43:44.767
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:43:44.781
Mar  9 08:43:44.781: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename deployment 03/09/23 08:43:44.783
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:43:44.801
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:43:44.806
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
Mar  9 08:43:44.811: INFO: Creating deployment "webserver-deployment"
Mar  9 08:43:44.818: INFO: Waiting for observed generation 1
Mar  9 08:43:46.827: INFO: Waiting for all required pods to come up
Mar  9 08:43:46.834: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running 03/09/23 08:43:46.834
Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-xjkfq" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-j5zzc" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-pcdz4" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-gztxm" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-tgzfw" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-vstw9" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-xfn29" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-tkvx8" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-xhwvk" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-bjqzj" in namespace "deployment-8433" to be "running"
Mar  9 08:43:46.840: INFO: Pod "webserver-deployment-7f5969cbc7-xjkfq": Phase="Pending", Reason="", readiness=false. Elapsed: 5.536839ms
Mar  9 08:43:46.841: INFO: Pod "webserver-deployment-7f5969cbc7-tgzfw": Phase="Pending", Reason="", readiness=false. Elapsed: 6.823521ms
Mar  9 08:43:46.841: INFO: Pod "webserver-deployment-7f5969cbc7-tkvx8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.709784ms
Mar  9 08:43:46.841: INFO: Pod "webserver-deployment-7f5969cbc7-gztxm": Phase="Pending", Reason="", readiness=false. Elapsed: 7.032782ms
Mar  9 08:43:46.842: INFO: Pod "webserver-deployment-7f5969cbc7-xhwvk": Phase="Pending", Reason="", readiness=false. Elapsed: 7.471749ms
Mar  9 08:43:46.842: INFO: Pod "webserver-deployment-7f5969cbc7-bjqzj": Phase="Pending", Reason="", readiness=false. Elapsed: 7.426282ms
Mar  9 08:43:46.842: INFO: Pod "webserver-deployment-7f5969cbc7-xfn29": Phase="Pending", Reason="", readiness=false. Elapsed: 7.841365ms
Mar  9 08:43:46.843: INFO: Pod "webserver-deployment-7f5969cbc7-vstw9": Phase="Pending", Reason="", readiness=false. Elapsed: 8.145658ms
Mar  9 08:43:46.843: INFO: Pod "webserver-deployment-7f5969cbc7-j5zzc": Phase="Pending", Reason="", readiness=false. Elapsed: 8.642474ms
Mar  9 08:43:46.844: INFO: Pod "webserver-deployment-7f5969cbc7-pcdz4": Phase="Pending", Reason="", readiness=false. Elapsed: 9.437736ms
Mar  9 08:43:48.845: INFO: Pod "webserver-deployment-7f5969cbc7-xjkfq": Phase="Running", Reason="", readiness=true. Elapsed: 2.010892039s
Mar  9 08:43:48.845: INFO: Pod "webserver-deployment-7f5969cbc7-xjkfq" satisfied condition "running"
Mar  9 08:43:48.847: INFO: Pod "webserver-deployment-7f5969cbc7-gztxm": Phase="Running", Reason="", readiness=true. Elapsed: 2.013086891s
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-gztxm" satisfied condition "running"
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-tkvx8": Phase="Running", Reason="", readiness=true. Elapsed: 2.013080499s
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-tkvx8" satisfied condition "running"
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-j5zzc": Phase="Running", Reason="", readiness=true. Elapsed: 2.014095266s
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-j5zzc" satisfied condition "running"
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-tgzfw": Phase="Running", Reason="", readiness=true. Elapsed: 2.013930499s
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-tgzfw" satisfied condition "running"
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-bjqzj": Phase="Running", Reason="", readiness=true. Elapsed: 2.013528902s
Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-bjqzj" satisfied condition "running"
Mar  9 08:43:48.849: INFO: Pod "webserver-deployment-7f5969cbc7-xhwvk": Phase="Running", Reason="", readiness=true. Elapsed: 2.013869427s
Mar  9 08:43:48.849: INFO: Pod "webserver-deployment-7f5969cbc7-xhwvk" satisfied condition "running"
Mar  9 08:43:48.850: INFO: Pod "webserver-deployment-7f5969cbc7-xfn29": Phase="Running", Reason="", readiness=true. Elapsed: 2.015677887s
Mar  9 08:43:48.850: INFO: Pod "webserver-deployment-7f5969cbc7-xfn29" satisfied condition "running"
Mar  9 08:43:48.851: INFO: Pod "webserver-deployment-7f5969cbc7-pcdz4": Phase="Running", Reason="", readiness=true. Elapsed: 2.016342764s
Mar  9 08:43:48.851: INFO: Pod "webserver-deployment-7f5969cbc7-pcdz4" satisfied condition "running"
Mar  9 08:43:48.851: INFO: Pod "webserver-deployment-7f5969cbc7-vstw9": Phase="Running", Reason="", readiness=true. Elapsed: 2.016356422s
Mar  9 08:43:48.851: INFO: Pod "webserver-deployment-7f5969cbc7-vstw9" satisfied condition "running"
Mar  9 08:43:48.851: INFO: Waiting for deployment "webserver-deployment" to complete
Mar  9 08:43:48.859: INFO: Updating deployment "webserver-deployment" with a non-existent image
Mar  9 08:43:48.875: INFO: Updating deployment webserver-deployment
Mar  9 08:43:48.875: INFO: Waiting for observed generation 2
Mar  9 08:43:50.883: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Mar  9 08:43:50.887: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Mar  9 08:43:50.890: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Mar  9 08:43:50.901: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Mar  9 08:43:50.901: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Mar  9 08:43:50.906: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Mar  9 08:43:50.915: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Mar  9 08:43:50.915: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Mar  9 08:43:50.933: INFO: Updating deployment webserver-deployment
Mar  9 08:43:50.933: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Mar  9 08:43:50.940: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Mar  9 08:43:50.946: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar  9 08:43:50.958: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-8433  bd536993-458c-4e6c-8ad5-42025d4d9fd4 267669 3 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004889f88 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-09 08:43:47 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-03-09 08:43:48 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Mar  9 08:43:50.966: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-8433  f965b80d-6f7a-4239-affb-dbf2f7781747 267673 3 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment bd536993-458c-4e6c-8ad5-42025d4d9fd4 0xc002b421c7 0xc002b421c8}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bd536993-458c-4e6c-8ad5-42025d4d9fd4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b42528 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar  9 08:43:50.966: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Mar  9 08:43:50.967: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-8433  1a94a00d-63c7-4d53-865e-f9e895ed8946 267670 3 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment bd536993-458c-4e6c-8ad5-42025d4d9fd4 0xc002b42027 0xc002b42028}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bd536993-458c-4e6c-8ad5-42025d4d9fd4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b42108 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Mar  9 08:43:50.992: INFO: Pod "webserver-deployment-7f5969cbc7-9h496" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9h496 webserver-deployment-7f5969cbc7- deployment-8433  00f12223-35c4-4b0a-9433-84104d9c121d 267687 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036ca6d7 0xc0036ca6d8}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fzfcp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fzfcp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.993: INFO: Pod "webserver-deployment-7f5969cbc7-b7cvg" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-b7cvg webserver-deployment-7f5969cbc7- deployment-8433  19aa796e-47c1-47dd-a633-ecf341d8e01d 267685 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036ca820 0xc0036ca821}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9m2j6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9m2j6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.993: INFO: Pod "webserver-deployment-7f5969cbc7-bjqzj" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-bjqzj webserver-deployment-7f5969cbc7- deployment-8433  8066dfbc-4b2e-481b-ac32-8ea46bebf383 267557 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:73cc7c90c47eb129fbdf5d5301b67ba899fbe680f20c7411de94a11113e5a78c cni.projectcalico.org/podIP:172.16.0.99/32 cni.projectcalico.org/podIPs:172.16.0.99/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036ca980 0xc0036ca981}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-txmf2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-txmf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.99,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://8da42b4aea327acda62495641af54480664a6bb37512c1e07de59cf8f3f23073,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.99,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.994: INFO: Pod "webserver-deployment-7f5969cbc7-c7tsm" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-c7tsm webserver-deployment-7f5969cbc7- deployment-8433  5ca955c3-930f-4abc-83fc-528ebbbb3b53 267689 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cab97 0xc0036cab98}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qs656,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qs656,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.994: INFO: Pod "webserver-deployment-7f5969cbc7-gztxm" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-gztxm webserver-deployment-7f5969cbc7- deployment-8433  e6a4e29d-d22c-439f-b7e3-7f9763375b81 267570 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:9d9ad1e83a95fce22b9d29aabfb427efbc831a4f079c3a369f15e63514253625 cni.projectcalico.org/podIP:172.16.0.82/32 cni.projectcalico.org/podIPs:172.16.0.82/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cad20 0xc0036cad21}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.82\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t8tzp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t8tzp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.82,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://96c4dfea17381d6e10426f6f3e40f9f6e12e85c0f8fb06b1f42a81433b9f50a4,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.82,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.994: INFO: Pod "webserver-deployment-7f5969cbc7-lkfjd" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-lkfjd webserver-deployment-7f5969cbc7- deployment-8433  b681358c-31e2-4dd2-a982-28f96d1d69c0 267674 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036caf37 0xc0036caf38}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x94n4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x94n4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.995: INFO: Pod "webserver-deployment-7f5969cbc7-pm99v" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-pm99v webserver-deployment-7f5969cbc7- deployment-8433  f76c3e3d-0edb-4b00-adfc-8ab5c029130b 267684 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb110 0xc0036cb111}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lhh5l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lhh5l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.995: INFO: Pod "webserver-deployment-7f5969cbc7-qtn42" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qtn42 webserver-deployment-7f5969cbc7- deployment-8433  2782a097-3734-4e6e-bea8-0d30001f26c3 267688 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb250 0xc0036cb251}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mb28r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mb28r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.996: INFO: Pod "webserver-deployment-7f5969cbc7-tgzfw" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-tgzfw webserver-deployment-7f5969cbc7- deployment-8433  6183de49-6c24-4493-96ef-8e680067f6f0 267544 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:47fc41e9857b49d0aea0b7fe917825759bd28d3ff3d470999f0520931065248b cni.projectcalico.org/podIP:172.16.0.117/32 cni.projectcalico.org/podIPs:172.16.0.117/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb3b0 0xc0036cb3b1}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.117\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nkcnr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nkcnr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.117,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://8c5f10915bfc0d0807ed7555ec64d2ee80388cfd9e54c95f97e57421a2be72b7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.117,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.996: INFO: Pod "webserver-deployment-7f5969cbc7-tkvx8" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-tkvx8 webserver-deployment-7f5969cbc7- deployment-8433  fa07e0c8-e605-4ba0-bc5d-c0407997b403 267541 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:7ad76d7aa8f97486bcf73c8200847b9127da3b3349dc177884b7b54a4c70a872 cni.projectcalico.org/podIP:172.16.0.90/32 cni.projectcalico.org/podIPs:172.16.0.90/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb5e7 0xc0036cb5e8}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.90\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vdm5v,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vdm5v,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.90,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://de31e9f75df9e3992f07f274d48654d79673bb30c4904bd922677a2e698dea3f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.90,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.997: INFO: Pod "webserver-deployment-7f5969cbc7-vstw9" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vstw9 webserver-deployment-7f5969cbc7- deployment-8433  969decba-dbfb-4fe0-aa7f-a41b254bc6d6 267571 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:dbcb58eca7d714a049e9f01e5e2a80912d8c67cbd0b74064604a89ee2f0704ac cni.projectcalico.org/podIP:172.16.0.63/32 cni.projectcalico.org/podIPs:172.16.0.63/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb817 0xc0036cb818}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.63\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5jr58,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5jr58,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.63,StartTime:2023-03-09 08:43:44 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://5d2600bd18f7168622dd33062cf243f80565bd2929a98c328dc7cc4ba8e548f3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.63,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.997: INFO: Pod "webserver-deployment-7f5969cbc7-xfn29" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xfn29 webserver-deployment-7f5969cbc7- deployment-8433  e4742ff3-f5d1-4003-831c-57c7310f0584 267564 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:f58fc05f2cbe9c620dd0b803b31d26797c7ba3a7d46c0276abea8f2e7e2f7be0 cni.projectcalico.org/podIP:172.16.0.68/32 cni.projectcalico.org/podIPs:172.16.0.68/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cba47 0xc0036cba48}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t8s4p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t8s4p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.68,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://2b1610706bcd72645268ddd268f394ac9eff4d106c333757ac0caedda158b3b1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.68,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.997: INFO: Pod "webserver-deployment-7f5969cbc7-xhwvk" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xhwvk webserver-deployment-7f5969cbc7- deployment-8433  f2d48c15-f132-4bf0-b20d-e26c99450ba9 267558 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:9717bfec39190862ebfbee66461d3aa4d853d25fa7a4590d26323ea25b1d033f cni.projectcalico.org/podIP:172.16.0.22/32 cni.projectcalico.org/podIPs:172.16.0.22/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cbc77 0xc0036cbc78}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.22\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hfhjd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hfhjd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.22,StartTime:2023-03-09 08:43:44 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://a4b4b86ae1cfb1f0fc58f6a54da09c146857b0f032bd449b68e040b49ed84c7e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.22,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.998: INFO: Pod "webserver-deployment-7f5969cbc7-xjkfq" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xjkfq webserver-deployment-7f5969cbc7- deployment-8433  2833bb01-c59e-4b54-938c-b391601d6d25 267549 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:8e908f5870b219ba9bbd893c2e1b5a631bc6219cce825d8549ae3a0c184c7455 cni.projectcalico.org/podIP:172.16.0.53/32 cni.projectcalico.org/podIPs:172.16.0.53/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cbea7 0xc0036cbea8}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.53\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s8n7n,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s8n7n,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.53,StartTime:2023-03-09 08:43:44 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c89592b0d264e49ca03b773a99b45ca58c033e1e42b0ab119d0b52d97dfe338a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.53,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.998: INFO: Pod "webserver-deployment-7f5969cbc7-zpvv2" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-zpvv2 webserver-deployment-7f5969cbc7- deployment-8433  3adde3ff-bb19-4495-b84f-3c3f46e4914c 267690 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc003784187 0xc003784188}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4t425,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4t425,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.999: INFO: Pod "webserver-deployment-d9f79cb5-5s2zr" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-5s2zr webserver-deployment-d9f79cb5- deployment-8433  06807dfe-7773-4202-88b4-6d9baaee858c 267635 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:85835045cca3037300192b524339e6264c09ad2eca3c3958dd01ca8b11c62ba6 cni.projectcalico.org/podIP:172.16.0.109/32 cni.projectcalico.org/podIPs:172.16.0.109/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc0037842df 0xc003784310}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-65x6p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-65x6p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:,StartTime:2023-03-09 08:43:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:50.999: INFO: Pod "webserver-deployment-d9f79cb5-85ndq" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-85ndq webserver-deployment-d9f79cb5- deployment-8433  7dda999e-e07d-4512-8556-e7677ed1a42c 267664 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:6eacc7e989349074b7aa3386614a2dbad63beedf704d15876d7c5528271e3602 cni.projectcalico.org/podIP:172.16.0.19/32 cni.projectcalico.org/podIPs:172.16.0.19/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784547 0xc003784548}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:49 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xp4ht,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xp4ht,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:,StartTime:2023-03-09 08:43:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:51.000: INFO: Pod "webserver-deployment-d9f79cb5-89rqm" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-89rqm webserver-deployment-d9f79cb5- deployment-8433  674f9c04-1ed6-4302-a5a1-f97ba38f8dc1 267653 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:263a524a458e9ede48016c1a153744f65d9f4ca03fbfe5b34be4113f41bfb5a1 cni.projectcalico.org/podIP:172.16.0.49/32 cni.projectcalico.org/podIPs:172.16.0.49/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784777 0xc003784778}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-24sd6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-24sd6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:,StartTime:2023-03-09 08:43:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:51.000: INFO: Pod "webserver-deployment-d9f79cb5-bw8wv" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-bw8wv webserver-deployment-d9f79cb5- deployment-8433  25c3c48c-0025-4655-a529-3a120c47d574 267686 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784987 0xc003784988}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xp5zg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xp5zg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:51.001: INFO: Pod "webserver-deployment-d9f79cb5-hzb4b" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-hzb4b webserver-deployment-d9f79cb5- deployment-8433  1727ce69-0e50-4ece-979d-7c88cba3765a 267683 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784aff 0xc003784b10}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fbx89,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fbx89,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:51.001: INFO: Pod "webserver-deployment-d9f79cb5-q26lv" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-q26lv webserver-deployment-d9f79cb5- deployment-8433  8960be38-3899-4b6c-848f-93a7f7703d97 267682 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784c4f 0xc003784c60}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hs2np,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hs2np,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:51.001: INFO: Pod "webserver-deployment-d9f79cb5-tm89v" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-tm89v webserver-deployment-d9f79cb5- deployment-8433  7e5c9bb5-5047-472b-a5fd-acffcb1642a2 267662 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:0d006bb8be46bca46efbda5410c651551d34ae60a8f3a1647578450dfdabffaf cni.projectcalico.org/podIP:172.16.0.56/32 cni.projectcalico.org/podIPs:172.16.0.56/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784d9f 0xc003784dd0}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dfwnz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dfwnz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:,StartTime:2023-03-09 08:43:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 08:43:51.002: INFO: Pod "webserver-deployment-d9f79cb5-z2zql" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-z2zql webserver-deployment-d9f79cb5- deployment-8433  a2f1ad44-4117-4479-bd5d-0d00fec323db 267632 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:ae23c8cb5c232642b826b8de2a5203805700724112d81c2c72820c03140a772d cni.projectcalico.org/podIP:172.16.0.127/32 cni.projectcalico.org/podIPs:172.16.0.127/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003785007 0xc003785008}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jxzvn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jxzvn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:,StartTime:2023-03-09 08:43:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar  9 08:43:51.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-8433" for this suite. 03/09/23 08:43:51.022
------------------------------
â€¢ [SLOW TEST] [6.258 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:43:44.781
    Mar  9 08:43:44.781: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename deployment 03/09/23 08:43:44.783
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:43:44.801
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:43:44.806
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support proportional scaling [Conformance]
      test/e2e/apps/deployment.go:160
    Mar  9 08:43:44.811: INFO: Creating deployment "webserver-deployment"
    Mar  9 08:43:44.818: INFO: Waiting for observed generation 1
    Mar  9 08:43:46.827: INFO: Waiting for all required pods to come up
    Mar  9 08:43:46.834: INFO: Pod name httpd: Found 10 pods out of 10
    STEP: ensuring each pod is running 03/09/23 08:43:46.834
    Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-xjkfq" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-j5zzc" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-pcdz4" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-gztxm" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.834: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-tgzfw" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-vstw9" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-xfn29" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-tkvx8" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-xhwvk" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.835: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-bjqzj" in namespace "deployment-8433" to be "running"
    Mar  9 08:43:46.840: INFO: Pod "webserver-deployment-7f5969cbc7-xjkfq": Phase="Pending", Reason="", readiness=false. Elapsed: 5.536839ms
    Mar  9 08:43:46.841: INFO: Pod "webserver-deployment-7f5969cbc7-tgzfw": Phase="Pending", Reason="", readiness=false. Elapsed: 6.823521ms
    Mar  9 08:43:46.841: INFO: Pod "webserver-deployment-7f5969cbc7-tkvx8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.709784ms
    Mar  9 08:43:46.841: INFO: Pod "webserver-deployment-7f5969cbc7-gztxm": Phase="Pending", Reason="", readiness=false. Elapsed: 7.032782ms
    Mar  9 08:43:46.842: INFO: Pod "webserver-deployment-7f5969cbc7-xhwvk": Phase="Pending", Reason="", readiness=false. Elapsed: 7.471749ms
    Mar  9 08:43:46.842: INFO: Pod "webserver-deployment-7f5969cbc7-bjqzj": Phase="Pending", Reason="", readiness=false. Elapsed: 7.426282ms
    Mar  9 08:43:46.842: INFO: Pod "webserver-deployment-7f5969cbc7-xfn29": Phase="Pending", Reason="", readiness=false. Elapsed: 7.841365ms
    Mar  9 08:43:46.843: INFO: Pod "webserver-deployment-7f5969cbc7-vstw9": Phase="Pending", Reason="", readiness=false. Elapsed: 8.145658ms
    Mar  9 08:43:46.843: INFO: Pod "webserver-deployment-7f5969cbc7-j5zzc": Phase="Pending", Reason="", readiness=false. Elapsed: 8.642474ms
    Mar  9 08:43:46.844: INFO: Pod "webserver-deployment-7f5969cbc7-pcdz4": Phase="Pending", Reason="", readiness=false. Elapsed: 9.437736ms
    Mar  9 08:43:48.845: INFO: Pod "webserver-deployment-7f5969cbc7-xjkfq": Phase="Running", Reason="", readiness=true. Elapsed: 2.010892039s
    Mar  9 08:43:48.845: INFO: Pod "webserver-deployment-7f5969cbc7-xjkfq" satisfied condition "running"
    Mar  9 08:43:48.847: INFO: Pod "webserver-deployment-7f5969cbc7-gztxm": Phase="Running", Reason="", readiness=true. Elapsed: 2.013086891s
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-gztxm" satisfied condition "running"
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-tkvx8": Phase="Running", Reason="", readiness=true. Elapsed: 2.013080499s
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-tkvx8" satisfied condition "running"
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-j5zzc": Phase="Running", Reason="", readiness=true. Elapsed: 2.014095266s
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-j5zzc" satisfied condition "running"
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-tgzfw": Phase="Running", Reason="", readiness=true. Elapsed: 2.013930499s
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-tgzfw" satisfied condition "running"
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-bjqzj": Phase="Running", Reason="", readiness=true. Elapsed: 2.013528902s
    Mar  9 08:43:48.848: INFO: Pod "webserver-deployment-7f5969cbc7-bjqzj" satisfied condition "running"
    Mar  9 08:43:48.849: INFO: Pod "webserver-deployment-7f5969cbc7-xhwvk": Phase="Running", Reason="", readiness=true. Elapsed: 2.013869427s
    Mar  9 08:43:48.849: INFO: Pod "webserver-deployment-7f5969cbc7-xhwvk" satisfied condition "running"
    Mar  9 08:43:48.850: INFO: Pod "webserver-deployment-7f5969cbc7-xfn29": Phase="Running", Reason="", readiness=true. Elapsed: 2.015677887s
    Mar  9 08:43:48.850: INFO: Pod "webserver-deployment-7f5969cbc7-xfn29" satisfied condition "running"
    Mar  9 08:43:48.851: INFO: Pod "webserver-deployment-7f5969cbc7-pcdz4": Phase="Running", Reason="", readiness=true. Elapsed: 2.016342764s
    Mar  9 08:43:48.851: INFO: Pod "webserver-deployment-7f5969cbc7-pcdz4" satisfied condition "running"
    Mar  9 08:43:48.851: INFO: Pod "webserver-deployment-7f5969cbc7-vstw9": Phase="Running", Reason="", readiness=true. Elapsed: 2.016356422s
    Mar  9 08:43:48.851: INFO: Pod "webserver-deployment-7f5969cbc7-vstw9" satisfied condition "running"
    Mar  9 08:43:48.851: INFO: Waiting for deployment "webserver-deployment" to complete
    Mar  9 08:43:48.859: INFO: Updating deployment "webserver-deployment" with a non-existent image
    Mar  9 08:43:48.875: INFO: Updating deployment webserver-deployment
    Mar  9 08:43:48.875: INFO: Waiting for observed generation 2
    Mar  9 08:43:50.883: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
    Mar  9 08:43:50.887: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
    Mar  9 08:43:50.890: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Mar  9 08:43:50.901: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
    Mar  9 08:43:50.901: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
    Mar  9 08:43:50.906: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Mar  9 08:43:50.915: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
    Mar  9 08:43:50.915: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
    Mar  9 08:43:50.933: INFO: Updating deployment webserver-deployment
    Mar  9 08:43:50.933: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
    Mar  9 08:43:50.940: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
    Mar  9 08:43:50.946: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar  9 08:43:50.958: INFO: Deployment "webserver-deployment":
    &Deployment{ObjectMeta:{webserver-deployment  deployment-8433  bd536993-458c-4e6c-8ad5-42025d4d9fd4 267669 3 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004889f88 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-09 08:43:47 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-03-09 08:43:48 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

    Mar  9 08:43:50.966: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
    &ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-8433  f965b80d-6f7a-4239-affb-dbf2f7781747 267673 3 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment bd536993-458c-4e6c-8ad5-42025d4d9fd4 0xc002b421c7 0xc002b421c8}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bd536993-458c-4e6c-8ad5-42025d4d9fd4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b42528 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 08:43:50.966: INFO: All old ReplicaSets of Deployment "webserver-deployment":
    Mar  9 08:43:50.967: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-8433  1a94a00d-63c7-4d53-865e-f9e895ed8946 267670 3 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment bd536993-458c-4e6c-8ad5-42025d4d9fd4 0xc002b42027 0xc002b42028}] [] [{kube-controller-manager Update apps/v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bd536993-458c-4e6c-8ad5-42025d4d9fd4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002b42108 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 08:43:50.992: INFO: Pod "webserver-deployment-7f5969cbc7-9h496" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9h496 webserver-deployment-7f5969cbc7- deployment-8433  00f12223-35c4-4b0a-9433-84104d9c121d 267687 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036ca6d7 0xc0036ca6d8}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fzfcp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fzfcp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.993: INFO: Pod "webserver-deployment-7f5969cbc7-b7cvg" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-b7cvg webserver-deployment-7f5969cbc7- deployment-8433  19aa796e-47c1-47dd-a633-ecf341d8e01d 267685 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036ca820 0xc0036ca821}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9m2j6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9m2j6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.993: INFO: Pod "webserver-deployment-7f5969cbc7-bjqzj" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-bjqzj webserver-deployment-7f5969cbc7- deployment-8433  8066dfbc-4b2e-481b-ac32-8ea46bebf383 267557 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:73cc7c90c47eb129fbdf5d5301b67ba899fbe680f20c7411de94a11113e5a78c cni.projectcalico.org/podIP:172.16.0.99/32 cni.projectcalico.org/podIPs:172.16.0.99/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036ca980 0xc0036ca981}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-txmf2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-txmf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.99,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://8da42b4aea327acda62495641af54480664a6bb37512c1e07de59cf8f3f23073,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.99,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.994: INFO: Pod "webserver-deployment-7f5969cbc7-c7tsm" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-c7tsm webserver-deployment-7f5969cbc7- deployment-8433  5ca955c3-930f-4abc-83fc-528ebbbb3b53 267689 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cab97 0xc0036cab98}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qs656,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qs656,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.994: INFO: Pod "webserver-deployment-7f5969cbc7-gztxm" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-gztxm webserver-deployment-7f5969cbc7- deployment-8433  e6a4e29d-d22c-439f-b7e3-7f9763375b81 267570 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:9d9ad1e83a95fce22b9d29aabfb427efbc831a4f079c3a369f15e63514253625 cni.projectcalico.org/podIP:172.16.0.82/32 cni.projectcalico.org/podIPs:172.16.0.82/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cad20 0xc0036cad21}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.82\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t8tzp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t8tzp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.82,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://96c4dfea17381d6e10426f6f3e40f9f6e12e85c0f8fb06b1f42a81433b9f50a4,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.82,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.994: INFO: Pod "webserver-deployment-7f5969cbc7-lkfjd" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-lkfjd webserver-deployment-7f5969cbc7- deployment-8433  b681358c-31e2-4dd2-a982-28f96d1d69c0 267674 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036caf37 0xc0036caf38}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x94n4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x94n4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.995: INFO: Pod "webserver-deployment-7f5969cbc7-pm99v" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-pm99v webserver-deployment-7f5969cbc7- deployment-8433  f76c3e3d-0edb-4b00-adfc-8ab5c029130b 267684 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb110 0xc0036cb111}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lhh5l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lhh5l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.995: INFO: Pod "webserver-deployment-7f5969cbc7-qtn42" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qtn42 webserver-deployment-7f5969cbc7- deployment-8433  2782a097-3734-4e6e-bea8-0d30001f26c3 267688 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb250 0xc0036cb251}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mb28r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mb28r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.996: INFO: Pod "webserver-deployment-7f5969cbc7-tgzfw" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-tgzfw webserver-deployment-7f5969cbc7- deployment-8433  6183de49-6c24-4493-96ef-8e680067f6f0 267544 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:47fc41e9857b49d0aea0b7fe917825759bd28d3ff3d470999f0520931065248b cni.projectcalico.org/podIP:172.16.0.117/32 cni.projectcalico.org/podIPs:172.16.0.117/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb3b0 0xc0036cb3b1}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.117\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nkcnr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nkcnr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.117,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://8c5f10915bfc0d0807ed7555ec64d2ee80388cfd9e54c95f97e57421a2be72b7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.117,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.996: INFO: Pod "webserver-deployment-7f5969cbc7-tkvx8" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-tkvx8 webserver-deployment-7f5969cbc7- deployment-8433  fa07e0c8-e605-4ba0-bc5d-c0407997b403 267541 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:7ad76d7aa8f97486bcf73c8200847b9127da3b3349dc177884b7b54a4c70a872 cni.projectcalico.org/podIP:172.16.0.90/32 cni.projectcalico.org/podIPs:172.16.0.90/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb5e7 0xc0036cb5e8}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.90\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vdm5v,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vdm5v,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.90,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://de31e9f75df9e3992f07f274d48654d79673bb30c4904bd922677a2e698dea3f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.90,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.997: INFO: Pod "webserver-deployment-7f5969cbc7-vstw9" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vstw9 webserver-deployment-7f5969cbc7- deployment-8433  969decba-dbfb-4fe0-aa7f-a41b254bc6d6 267571 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:dbcb58eca7d714a049e9f01e5e2a80912d8c67cbd0b74064604a89ee2f0704ac cni.projectcalico.org/podIP:172.16.0.63/32 cni.projectcalico.org/podIPs:172.16.0.63/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cb817 0xc0036cb818}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.63\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5jr58,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5jr58,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.63,StartTime:2023-03-09 08:43:44 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://5d2600bd18f7168622dd33062cf243f80565bd2929a98c328dc7cc4ba8e548f3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.63,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.997: INFO: Pod "webserver-deployment-7f5969cbc7-xfn29" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xfn29 webserver-deployment-7f5969cbc7- deployment-8433  e4742ff3-f5d1-4003-831c-57c7310f0584 267564 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:f58fc05f2cbe9c620dd0b803b31d26797c7ba3a7d46c0276abea8f2e7e2f7be0 cni.projectcalico.org/podIP:172.16.0.68/32 cni.projectcalico.org/podIPs:172.16.0.68/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cba47 0xc0036cba48}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t8s4p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t8s4p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.68,StartTime:2023-03-09 08:43:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:45 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://2b1610706bcd72645268ddd268f394ac9eff4d106c333757ac0caedda158b3b1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.68,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.997: INFO: Pod "webserver-deployment-7f5969cbc7-xhwvk" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xhwvk webserver-deployment-7f5969cbc7- deployment-8433  f2d48c15-f132-4bf0-b20d-e26c99450ba9 267558 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:9717bfec39190862ebfbee66461d3aa4d853d25fa7a4590d26323ea25b1d033f cni.projectcalico.org/podIP:172.16.0.22/32 cni.projectcalico.org/podIPs:172.16.0.22/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cbc77 0xc0036cbc78}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.22\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hfhjd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hfhjd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.22,StartTime:2023-03-09 08:43:44 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://a4b4b86ae1cfb1f0fc58f6a54da09c146857b0f032bd449b68e040b49ed84c7e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.22,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.998: INFO: Pod "webserver-deployment-7f5969cbc7-xjkfq" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-xjkfq webserver-deployment-7f5969cbc7- deployment-8433  2833bb01-c59e-4b54-938c-b391601d6d25 267549 0 2023-03-09 08:43:44 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[cni.projectcalico.org/containerID:8e908f5870b219ba9bbd893c2e1b5a631bc6219cce825d8549ae3a0c184c7455 cni.projectcalico.org/podIP:172.16.0.53/32 cni.projectcalico.org/podIPs:172.16.0.53/32] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc0036cbea7 0xc0036cbea8}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:44 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:43:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.53\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s8n7n,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s8n7n,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:44 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.53,StartTime:2023-03-09 08:43:44 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:43:46 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c89592b0d264e49ca03b773a99b45ca58c033e1e42b0ab119d0b52d97dfe338a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.53,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.998: INFO: Pod "webserver-deployment-7f5969cbc7-zpvv2" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-zpvv2 webserver-deployment-7f5969cbc7- deployment-8433  3adde3ff-bb19-4495-b84f-3c3f46e4914c 267690 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 1a94a00d-63c7-4d53-865e-f9e895ed8946 0xc003784187 0xc003784188}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a94a00d-63c7-4d53-865e-f9e895ed8946\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4t425,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4t425,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.999: INFO: Pod "webserver-deployment-d9f79cb5-5s2zr" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-5s2zr webserver-deployment-d9f79cb5- deployment-8433  06807dfe-7773-4202-88b4-6d9baaee858c 267635 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:85835045cca3037300192b524339e6264c09ad2eca3c3958dd01ca8b11c62ba6 cni.projectcalico.org/podIP:172.16.0.109/32 cni.projectcalico.org/podIPs:172.16.0.109/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc0037842df 0xc003784310}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-65x6p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-65x6p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:,StartTime:2023-03-09 08:43:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:50.999: INFO: Pod "webserver-deployment-d9f79cb5-85ndq" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-85ndq webserver-deployment-d9f79cb5- deployment-8433  7dda999e-e07d-4512-8556-e7677ed1a42c 267664 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:6eacc7e989349074b7aa3386614a2dbad63beedf704d15876d7c5528271e3602 cni.projectcalico.org/podIP:172.16.0.19/32 cni.projectcalico.org/podIPs:172.16.0.19/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784547 0xc003784548}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:49 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xp4ht,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xp4ht,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:,StartTime:2023-03-09 08:43:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:51.000: INFO: Pod "webserver-deployment-d9f79cb5-89rqm" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-89rqm webserver-deployment-d9f79cb5- deployment-8433  674f9c04-1ed6-4302-a5a1-f97ba38f8dc1 267653 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:263a524a458e9ede48016c1a153744f65d9f4ca03fbfe5b34be4113f41bfb5a1 cni.projectcalico.org/podIP:172.16.0.49/32 cni.projectcalico.org/podIPs:172.16.0.49/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784777 0xc003784778}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-24sd6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-24sd6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:,StartTime:2023-03-09 08:43:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:51.000: INFO: Pod "webserver-deployment-d9f79cb5-bw8wv" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-bw8wv webserver-deployment-d9f79cb5- deployment-8433  25c3c48c-0025-4655-a529-3a120c47d574 267686 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784987 0xc003784988}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xp5zg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xp5zg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:51.001: INFO: Pod "webserver-deployment-d9f79cb5-hzb4b" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-hzb4b webserver-deployment-d9f79cb5- deployment-8433  1727ce69-0e50-4ece-979d-7c88cba3765a 267683 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784aff 0xc003784b10}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fbx89,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fbx89,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:51.001: INFO: Pod "webserver-deployment-d9f79cb5-q26lv" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-q26lv webserver-deployment-d9f79cb5- deployment-8433  8960be38-3899-4b6c-848f-93a7f7703d97 267682 0 2023-03-09 08:43:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784c4f 0xc003784c60}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hs2np,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hs2np,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:51.001: INFO: Pod "webserver-deployment-d9f79cb5-tm89v" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-tm89v webserver-deployment-d9f79cb5- deployment-8433  7e5c9bb5-5047-472b-a5fd-acffcb1642a2 267662 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:0d006bb8be46bca46efbda5410c651551d34ae60a8f3a1647578450dfdabffaf cni.projectcalico.org/podIP:172.16.0.56/32 cni.projectcalico.org/podIPs:172.16.0.56/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003784d9f 0xc003784dd0}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dfwnz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dfwnz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:,StartTime:2023-03-09 08:43:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 08:43:51.002: INFO: Pod "webserver-deployment-d9f79cb5-z2zql" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-z2zql webserver-deployment-d9f79cb5- deployment-8433  a2f1ad44-4117-4479-bd5d-0d00fec323db 267632 0 2023-03-09 08:43:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[cni.projectcalico.org/containerID:ae23c8cb5c232642b826b8de2a5203805700724112d81c2c72820c03140a772d cni.projectcalico.org/podIP:172.16.0.127/32 cni.projectcalico.org/podIPs:172.16.0.127/32] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 f965b80d-6f7a-4239-affb-dbf2f7781747 0xc003785007 0xc003785008}] [] [{kube-controller-manager Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f965b80d-6f7a-4239-affb-dbf2f7781747\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 08:43:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {Go-http-client Update v1 2023-03-09 08:43:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jxzvn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jxzvn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:43:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:,StartTime:2023-03-09 08:43:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:43:51.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-8433" for this suite. 03/09/23 08:43:51.022
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:43:51.043
Mar  9 08:43:51.043: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:43:51.045
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:43:51.066
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:43:51.071
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
STEP: Creating secret with name s-test-opt-del-7bad8540-2afd-452c-a9a0-694239556960 03/09/23 08:43:51.082
STEP: Creating secret with name s-test-opt-upd-59d31031-b7cc-4047-b2f1-228198b4668f 03/09/23 08:43:51.089
STEP: Creating the pod 03/09/23 08:43:51.093
Mar  9 08:43:51.103: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812" in namespace "projected-3593" to be "running and ready"
Mar  9 08:43:51.110: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 7.430785ms
Mar  9 08:43:51.110: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:43:53.116: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012773164s
Mar  9 08:43:53.116: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:43:55.116: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013030236s
Mar  9 08:43:55.116: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:43:57.117: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013795973s
Mar  9 08:43:57.117: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:43:59.116: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 8.013305942s
Mar  9 08:43:59.116: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:44:01.115: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Running", Reason="", readiness=true. Elapsed: 10.012269509s
Mar  9 08:44:01.115: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Running (Ready = true)
Mar  9 08:44:01.115: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-7bad8540-2afd-452c-a9a0-694239556960 03/09/23 08:44:01.144
STEP: Updating secret s-test-opt-upd-59d31031-b7cc-4047-b2f1-228198b4668f 03/09/23 08:44:01.153
STEP: Creating secret with name s-test-opt-create-91cc71ef-62f4-4f8d-9019-f4354135f252 03/09/23 08:44:01.159
STEP: waiting to observe update in volume 03/09/23 08:44:01.165
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:03.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3593" for this suite. 03/09/23 08:45:03.528
------------------------------
â€¢ [SLOW TEST] [72.496 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:43:51.043
    Mar  9 08:43:51.043: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:43:51.045
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:43:51.066
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:43:51.071
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:215
    STEP: Creating secret with name s-test-opt-del-7bad8540-2afd-452c-a9a0-694239556960 03/09/23 08:43:51.082
    STEP: Creating secret with name s-test-opt-upd-59d31031-b7cc-4047-b2f1-228198b4668f 03/09/23 08:43:51.089
    STEP: Creating the pod 03/09/23 08:43:51.093
    Mar  9 08:43:51.103: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812" in namespace "projected-3593" to be "running and ready"
    Mar  9 08:43:51.110: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 7.430785ms
    Mar  9 08:43:51.110: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:43:53.116: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012773164s
    Mar  9 08:43:53.116: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:43:55.116: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013030236s
    Mar  9 08:43:55.116: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:43:57.117: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 6.013795973s
    Mar  9 08:43:57.117: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:43:59.116: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Pending", Reason="", readiness=false. Elapsed: 8.013305942s
    Mar  9 08:43:59.116: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:44:01.115: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812": Phase="Running", Reason="", readiness=true. Elapsed: 10.012269509s
    Mar  9 08:44:01.115: INFO: The phase of Pod pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812 is Running (Ready = true)
    Mar  9 08:44:01.115: INFO: Pod "pod-projected-secrets-26c0ba1b-f682-443a-b1f5-8d40fe800812" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-7bad8540-2afd-452c-a9a0-694239556960 03/09/23 08:44:01.144
    STEP: Updating secret s-test-opt-upd-59d31031-b7cc-4047-b2f1-228198b4668f 03/09/23 08:44:01.153
    STEP: Creating secret with name s-test-opt-create-91cc71ef-62f4-4f8d-9019-f4354135f252 03/09/23 08:44:01.159
    STEP: waiting to observe update in volume 03/09/23 08:44:01.165
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:03.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3593" for this suite. 03/09/23 08:45:03.528
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] ReplicationController
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:03.54
Mar  9 08:45:03.540: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replication-controller 03/09/23 08:45:03.542
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:03.556
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:03.561
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
STEP: Creating replication controller my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4 03/09/23 08:45:03.567
Mar  9 08:45:03.578: INFO: Pod name my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4: Found 0 pods out of 1
Mar  9 08:45:08.586: INFO: Pod name my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4: Found 1 pods out of 1
Mar  9 08:45:08.586: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4" are running
Mar  9 08:45:08.586: INFO: Waiting up to 5m0s for pod "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn" in namespace "replication-controller-2149" to be "running"
Mar  9 08:45:08.592: INFO: Pod "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn": Phase="Running", Reason="", readiness=true. Elapsed: 5.190193ms
Mar  9 08:45:08.592: INFO: Pod "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn" satisfied condition "running"
Mar  9 08:45:08.592: INFO: Pod "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 08:45:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 08:45:03 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 08:45:03 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 08:45:03 +0000 UTC Reason: Message:}])
Mar  9 08:45:08.592: INFO: Trying to dial the pod
Mar  9 08:45:13.612: INFO: Controller my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4: Got expected result from replica 1 [my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn]: "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:13.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-2149" for this suite. 03/09/23 08:45:13.618
------------------------------
â€¢ [SLOW TEST] [10.087 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:03.54
    Mar  9 08:45:03.540: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replication-controller 03/09/23 08:45:03.542
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:03.556
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:03.561
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/rc.go:67
    STEP: Creating replication controller my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4 03/09/23 08:45:03.567
    Mar  9 08:45:03.578: INFO: Pod name my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4: Found 0 pods out of 1
    Mar  9 08:45:08.586: INFO: Pod name my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4: Found 1 pods out of 1
    Mar  9 08:45:08.586: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4" are running
    Mar  9 08:45:08.586: INFO: Waiting up to 5m0s for pod "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn" in namespace "replication-controller-2149" to be "running"
    Mar  9 08:45:08.592: INFO: Pod "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn": Phase="Running", Reason="", readiness=true. Elapsed: 5.190193ms
    Mar  9 08:45:08.592: INFO: Pod "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn" satisfied condition "running"
    Mar  9 08:45:08.592: INFO: Pod "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 08:45:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 08:45:03 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 08:45:03 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 08:45:03 +0000 UTC Reason: Message:}])
    Mar  9 08:45:08.592: INFO: Trying to dial the pod
    Mar  9 08:45:13.612: INFO: Controller my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4: Got expected result from replica 1 [my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn]: "my-hostname-basic-37e0aeac-5ef9-4e90-9ce1-b834676b8bc4-lwljn", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:13.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-2149" for this suite. 03/09/23 08:45:13.618
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:13.63
Mar  9 08:45:13.630: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:45:13.632
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:13.649
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:13.654
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
STEP: Creating configMap with name projected-configmap-test-volume-ac171602-8008-444f-9bf0-c9fe2dddb585 03/09/23 08:45:13.659
STEP: Creating a pod to test consume configMaps 03/09/23 08:45:13.666
Mar  9 08:45:13.677: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b" in namespace "projected-9268" to be "Succeeded or Failed"
Mar  9 08:45:13.681: INFO: Pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.991926ms
Mar  9 08:45:15.687: INFO: Pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009678155s
Mar  9 08:45:17.686: INFO: Pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008480124s
STEP: Saw pod success 03/09/23 08:45:17.686
Mar  9 08:45:17.686: INFO: Pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b" satisfied condition "Succeeded or Failed"
Mar  9 08:45:17.690: INFO: Trying to get logs from node k8s-worker2 pod pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:45:17.698
Mar  9 08:45:17.716: INFO: Waiting for pod pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b to disappear
Mar  9 08:45:17.725: INFO: Pod pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:17.725: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9268" for this suite. 03/09/23 08:45:17.732
------------------------------
â€¢ [4.110 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:13.63
    Mar  9 08:45:13.630: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:45:13.632
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:13.649
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:13.654
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:47
    STEP: Creating configMap with name projected-configmap-test-volume-ac171602-8008-444f-9bf0-c9fe2dddb585 03/09/23 08:45:13.659
    STEP: Creating a pod to test consume configMaps 03/09/23 08:45:13.666
    Mar  9 08:45:13.677: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b" in namespace "projected-9268" to be "Succeeded or Failed"
    Mar  9 08:45:13.681: INFO: Pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.991926ms
    Mar  9 08:45:15.687: INFO: Pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009678155s
    Mar  9 08:45:17.686: INFO: Pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008480124s
    STEP: Saw pod success 03/09/23 08:45:17.686
    Mar  9 08:45:17.686: INFO: Pod "pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b" satisfied condition "Succeeded or Failed"
    Mar  9 08:45:17.690: INFO: Trying to get logs from node k8s-worker2 pod pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:45:17.698
    Mar  9 08:45:17.716: INFO: Waiting for pod pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b to disappear
    Mar  9 08:45:17.725: INFO: Pod pod-projected-configmaps-42afe16d-b6fa-4e09-b0c4-10056393cb3b no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:17.725: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9268" for this suite. 03/09/23 08:45:17.732
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:17.741
Mar  9 08:45:17.741: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename job 03/09/23 08:45:17.743
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:17.76
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:17.765
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
STEP: Creating a suspended job 03/09/23 08:45:17.773
STEP: Patching the Job 03/09/23 08:45:17.781
STEP: Watching for Job to be patched 03/09/23 08:45:17.798
Mar  9 08:45:17.801: INFO: Event ADDED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs] and annotations: map[batch.kubernetes.io/job-tracking:]
Mar  9 08:45:17.801: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs] and annotations: map[batch.kubernetes.io/job-tracking:]
Mar  9 08:45:17.801: INFO: Event MODIFIED found for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking:]
STEP: Updating the job 03/09/23 08:45:17.801
STEP: Watching for Job to be updated 03/09/23 08:45:17.816
Mar  9 08:45:17.819: INFO: Event MODIFIED found for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar  9 08:45:17.819: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
STEP: Listing all Jobs with LabelSelector 03/09/23 08:45:17.819
Mar  9 08:45:17.823: INFO: Job: e2e-sznqs as labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched]
STEP: Waiting for job to complete 03/09/23 08:45:17.823
STEP: Delete a job collection with a labelselector 03/09/23 08:45:25.829
STEP: Watching for Job to be deleted 03/09/23 08:45:25.846
Mar  9 08:45:25.849: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar  9 08:45:25.849: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar  9 08:45:25.849: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar  9 08:45:25.850: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar  9 08:45:25.850: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar  9 08:45:25.850: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar  9 08:45:25.850: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Mar  9 08:45:25.850: INFO: Event DELETED found for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
STEP: Relist jobs to confirm deletion 03/09/23 08:45:25.85
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:25.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-4943" for this suite. 03/09/23 08:45:25.863
------------------------------
â€¢ [SLOW TEST] [8.130 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:17.741
    Mar  9 08:45:17.741: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename job 03/09/23 08:45:17.743
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:17.76
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:17.765
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a job [Conformance]
      test/e2e/apps/job.go:703
    STEP: Creating a suspended job 03/09/23 08:45:17.773
    STEP: Patching the Job 03/09/23 08:45:17.781
    STEP: Watching for Job to be patched 03/09/23 08:45:17.798
    Mar  9 08:45:17.801: INFO: Event ADDED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs] and annotations: map[batch.kubernetes.io/job-tracking:]
    Mar  9 08:45:17.801: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs] and annotations: map[batch.kubernetes.io/job-tracking:]
    Mar  9 08:45:17.801: INFO: Event MODIFIED found for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking:]
    STEP: Updating the job 03/09/23 08:45:17.801
    STEP: Watching for Job to be updated 03/09/23 08:45:17.816
    Mar  9 08:45:17.819: INFO: Event MODIFIED found for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar  9 08:45:17.819: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
    STEP: Listing all Jobs with LabelSelector 03/09/23 08:45:17.819
    Mar  9 08:45:17.823: INFO: Job: e2e-sznqs as labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched]
    STEP: Waiting for job to complete 03/09/23 08:45:17.823
    STEP: Delete a job collection with a labelselector 03/09/23 08:45:25.829
    STEP: Watching for Job to be deleted 03/09/23 08:45:25.846
    Mar  9 08:45:25.849: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar  9 08:45:25.849: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar  9 08:45:25.849: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar  9 08:45:25.850: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar  9 08:45:25.850: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar  9 08:45:25.850: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar  9 08:45:25.850: INFO: Event MODIFIED observed for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Mar  9 08:45:25.850: INFO: Event DELETED found for Job e2e-sznqs in namespace job-4943 with labels: map[e2e-job-label:e2e-sznqs e2e-sznqs:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    STEP: Relist jobs to confirm deletion 03/09/23 08:45:25.85
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:25.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-4943" for this suite. 03/09/23 08:45:25.863
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] Job
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:25.872
Mar  9 08:45:25.872: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename job 03/09/23 08:45:25.874
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:25.9
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:25.909
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
STEP: Creating a job 03/09/23 08:45:25.917
STEP: Ensuring job reaches completions 03/09/23 08:45:25.923
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:37.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-3639" for this suite. 03/09/23 08:45:37.935
------------------------------
â€¢ [SLOW TEST] [12.070 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:25.872
    Mar  9 08:45:25.872: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename job 03/09/23 08:45:25.874
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:25.9
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:25.909
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
      test/e2e/apps/job.go:426
    STEP: Creating a job 03/09/23 08:45:25.917
    STEP: Ensuring job reaches completions 03/09/23 08:45:25.923
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:37.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-3639" for this suite. 03/09/23 08:45:37.935
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:37.944
Mar  9 08:45:37.944: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename disruption 03/09/23 08:45:37.946
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:37.961
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:37.966
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
STEP: Waiting for the pdb to be processed 03/09/23 08:45:37.977
STEP: Updating PodDisruptionBudget status 03/09/23 08:45:39.986
STEP: Waiting for all pods to be running 03/09/23 08:45:39.996
Mar  9 08:45:40.000: INFO: running pods: 0 < 1
STEP: locating a running pod 03/09/23 08:45:42.006
STEP: Waiting for the pdb to be processed 03/09/23 08:45:42.021
STEP: Patching PodDisruptionBudget status 03/09/23 08:45:42.03
STEP: Waiting for the pdb to be processed 03/09/23 08:45:42.043
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:42.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-8459" for this suite. 03/09/23 08:45:42.053
------------------------------
â€¢ [4.117 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:37.944
    Mar  9 08:45:37.944: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename disruption 03/09/23 08:45:37.946
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:37.961
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:37.966
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should update/patch PodDisruptionBudget status [Conformance]
      test/e2e/apps/disruption.go:164
    STEP: Waiting for the pdb to be processed 03/09/23 08:45:37.977
    STEP: Updating PodDisruptionBudget status 03/09/23 08:45:39.986
    STEP: Waiting for all pods to be running 03/09/23 08:45:39.996
    Mar  9 08:45:40.000: INFO: running pods: 0 < 1
    STEP: locating a running pod 03/09/23 08:45:42.006
    STEP: Waiting for the pdb to be processed 03/09/23 08:45:42.021
    STEP: Patching PodDisruptionBudget status 03/09/23 08:45:42.03
    STEP: Waiting for the pdb to be processed 03/09/23 08:45:42.043
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:42.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-8459" for this suite. 03/09/23 08:45:42.053
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:42.062
Mar  9 08:45:42.062: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:45:42.064
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:42.081
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:42.093
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
STEP: Creating configMap with name configmap-test-upd-88a68aa1-20d1-4bd2-a20c-2f046555a9b2 03/09/23 08:45:42.104
STEP: Creating the pod 03/09/23 08:45:42.11
Mar  9 08:45:42.120: INFO: Waiting up to 5m0s for pod "pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f" in namespace "configmap-9889" to be "running and ready"
Mar  9 08:45:42.124: INFO: Pod "pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.154206ms
Mar  9 08:45:42.124: INFO: The phase of Pod pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:45:44.130: INFO: Pod "pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f": Phase="Running", Reason="", readiness=true. Elapsed: 2.009834736s
Mar  9 08:45:44.130: INFO: The phase of Pod pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f is Running (Ready = true)
Mar  9 08:45:44.130: INFO: Pod "pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f" satisfied condition "running and ready"
STEP: Updating configmap configmap-test-upd-88a68aa1-20d1-4bd2-a20c-2f046555a9b2 03/09/23 08:45:44.164
STEP: waiting to observe update in volume 03/09/23 08:45:44.171
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:46.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9889" for this suite. 03/09/23 08:45:46.195
------------------------------
â€¢ [4.142 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:42.062
    Mar  9 08:45:42.062: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:45:42.064
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:42.081
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:42.093
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:124
    STEP: Creating configMap with name configmap-test-upd-88a68aa1-20d1-4bd2-a20c-2f046555a9b2 03/09/23 08:45:42.104
    STEP: Creating the pod 03/09/23 08:45:42.11
    Mar  9 08:45:42.120: INFO: Waiting up to 5m0s for pod "pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f" in namespace "configmap-9889" to be "running and ready"
    Mar  9 08:45:42.124: INFO: Pod "pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.154206ms
    Mar  9 08:45:42.124: INFO: The phase of Pod pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:45:44.130: INFO: Pod "pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f": Phase="Running", Reason="", readiness=true. Elapsed: 2.009834736s
    Mar  9 08:45:44.130: INFO: The phase of Pod pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f is Running (Ready = true)
    Mar  9 08:45:44.130: INFO: Pod "pod-configmaps-4ad0a2f1-3a44-4f60-b9c2-569c5abec09f" satisfied condition "running and ready"
    STEP: Updating configmap configmap-test-upd-88a68aa1-20d1-4bd2-a20c-2f046555a9b2 03/09/23 08:45:44.164
    STEP: waiting to observe update in volume 03/09/23 08:45:44.171
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:46.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9889" for this suite. 03/09/23 08:45:46.195
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:46.213
Mar  9 08:45:46.213: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:45:46.214
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:46.229
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:46.234
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
STEP: Creating a pod to test emptydir 0777 on node default medium 03/09/23 08:45:46.239
Mar  9 08:45:46.250: INFO: Waiting up to 5m0s for pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c" in namespace "emptydir-5369" to be "Succeeded or Failed"
Mar  9 08:45:46.254: INFO: Pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.998119ms
Mar  9 08:45:48.260: INFO: Pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009569022s
Mar  9 08:45:50.259: INFO: Pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009168591s
STEP: Saw pod success 03/09/23 08:45:50.259
Mar  9 08:45:50.260: INFO: Pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c" satisfied condition "Succeeded or Failed"
Mar  9 08:45:50.264: INFO: Trying to get logs from node k8s-worker2 pod pod-9efcf89b-608d-4b1b-914b-2fee948ad88c container test-container: <nil>
STEP: delete the pod 03/09/23 08:45:50.275
Mar  9 08:45:50.290: INFO: Waiting for pod pod-9efcf89b-608d-4b1b-914b-2fee948ad88c to disappear
Mar  9 08:45:50.294: INFO: Pod pod-9efcf89b-608d-4b1b-914b-2fee948ad88c no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:50.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-5369" for this suite. 03/09/23 08:45:50.3
------------------------------
â€¢ [4.095 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:46.213
    Mar  9 08:45:46.213: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:45:46.214
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:46.229
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:46.234
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:187
    STEP: Creating a pod to test emptydir 0777 on node default medium 03/09/23 08:45:46.239
    Mar  9 08:45:46.250: INFO: Waiting up to 5m0s for pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c" in namespace "emptydir-5369" to be "Succeeded or Failed"
    Mar  9 08:45:46.254: INFO: Pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.998119ms
    Mar  9 08:45:48.260: INFO: Pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009569022s
    Mar  9 08:45:50.259: INFO: Pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009168591s
    STEP: Saw pod success 03/09/23 08:45:50.259
    Mar  9 08:45:50.260: INFO: Pod "pod-9efcf89b-608d-4b1b-914b-2fee948ad88c" satisfied condition "Succeeded or Failed"
    Mar  9 08:45:50.264: INFO: Trying to get logs from node k8s-worker2 pod pod-9efcf89b-608d-4b1b-914b-2fee948ad88c container test-container: <nil>
    STEP: delete the pod 03/09/23 08:45:50.275
    Mar  9 08:45:50.290: INFO: Waiting for pod pod-9efcf89b-608d-4b1b-914b-2fee948ad88c to disappear
    Mar  9 08:45:50.294: INFO: Pod pod-9efcf89b-608d-4b1b-914b-2fee948ad88c no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:50.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-5369" for this suite. 03/09/23 08:45:50.3
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:50.311
Mar  9 08:45:50.311: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:45:50.313
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:50.329
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:50.334
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
STEP: Creating a pod to test emptydir 0644 on tmpfs 03/09/23 08:45:50.34
Mar  9 08:45:50.352: INFO: Waiting up to 5m0s for pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a" in namespace "emptydir-7832" to be "Succeeded or Failed"
Mar  9 08:45:50.356: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.980521ms
Mar  9 08:45:52.360: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a": Phase="Running", Reason="", readiness=true. Elapsed: 2.008259001s
Mar  9 08:45:54.360: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a": Phase="Running", Reason="", readiness=false. Elapsed: 4.008262819s
Mar  9 08:45:56.361: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009235609s
STEP: Saw pod success 03/09/23 08:45:56.361
Mar  9 08:45:56.361: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a" satisfied condition "Succeeded or Failed"
Mar  9 08:45:56.365: INFO: Trying to get logs from node k8s-worker2 pod pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a container test-container: <nil>
STEP: delete the pod 03/09/23 08:45:56.373
Mar  9 08:45:56.384: INFO: Waiting for pod pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a to disappear
Mar  9 08:45:56.388: INFO: Pod pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:45:56.388: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7832" for this suite. 03/09/23 08:45:56.395
------------------------------
â€¢ [SLOW TEST] [6.091 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:50.311
    Mar  9 08:45:50.311: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:45:50.313
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:50.329
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:50.334
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:97
    STEP: Creating a pod to test emptydir 0644 on tmpfs 03/09/23 08:45:50.34
    Mar  9 08:45:50.352: INFO: Waiting up to 5m0s for pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a" in namespace "emptydir-7832" to be "Succeeded or Failed"
    Mar  9 08:45:50.356: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.980521ms
    Mar  9 08:45:52.360: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a": Phase="Running", Reason="", readiness=true. Elapsed: 2.008259001s
    Mar  9 08:45:54.360: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a": Phase="Running", Reason="", readiness=false. Elapsed: 4.008262819s
    Mar  9 08:45:56.361: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009235609s
    STEP: Saw pod success 03/09/23 08:45:56.361
    Mar  9 08:45:56.361: INFO: Pod "pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a" satisfied condition "Succeeded or Failed"
    Mar  9 08:45:56.365: INFO: Trying to get logs from node k8s-worker2 pod pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a container test-container: <nil>
    STEP: delete the pod 03/09/23 08:45:56.373
    Mar  9 08:45:56.384: INFO: Waiting for pod pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a to disappear
    Mar  9 08:45:56.388: INFO: Pod pod-0f00dc1d-cae0-45d4-a6dc-ac2f34c7f43a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:45:56.388: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7832" for this suite. 03/09/23 08:45:56.395
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:45:56.418
Mar  9 08:45:56.418: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:45:56.42
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:56.437
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:56.442
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:45:56.447
Mar  9 08:45:56.457: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b" in namespace "downward-api-526" to be "Succeeded or Failed"
Mar  9 08:45:56.462: INFO: Pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.3804ms
Mar  9 08:45:58.467: INFO: Pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009783762s
Mar  9 08:46:00.467: INFO: Pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00959591s
STEP: Saw pod success 03/09/23 08:46:00.467
Mar  9 08:46:00.467: INFO: Pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b" satisfied condition "Succeeded or Failed"
Mar  9 08:46:00.471: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b container client-container: <nil>
STEP: delete the pod 03/09/23 08:46:00.479
Mar  9 08:46:00.495: INFO: Waiting for pod downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b to disappear
Mar  9 08:46:00.499: INFO: Pod downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 08:46:00.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-526" for this suite. 03/09/23 08:46:00.505
------------------------------
â€¢ [4.095 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:45:56.418
    Mar  9 08:45:56.418: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:45:56.42
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:45:56.437
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:45:56.442
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:261
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:45:56.447
    Mar  9 08:45:56.457: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b" in namespace "downward-api-526" to be "Succeeded or Failed"
    Mar  9 08:45:56.462: INFO: Pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.3804ms
    Mar  9 08:45:58.467: INFO: Pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009783762s
    Mar  9 08:46:00.467: INFO: Pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00959591s
    STEP: Saw pod success 03/09/23 08:46:00.467
    Mar  9 08:46:00.467: INFO: Pod "downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b" satisfied condition "Succeeded or Failed"
    Mar  9 08:46:00.471: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b container client-container: <nil>
    STEP: delete the pod 03/09/23 08:46:00.479
    Mar  9 08:46:00.495: INFO: Waiting for pod downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b to disappear
    Mar  9 08:46:00.499: INFO: Pod downwardapi-volume-f941804a-1be3-4e83-8816-3b76bbbb504b no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:46:00.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-526" for this suite. 03/09/23 08:46:00.505
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Deployment
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:46:00.514
Mar  9 08:46:00.514: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename deployment 03/09/23 08:46:00.516
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:00.531
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:00.537
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
Mar  9 08:46:00.556: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Mar  9 08:46:05.561: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/09/23 08:46:05.561
Mar  9 08:46:05.561: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 03/09/23 08:46:05.575
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar  9 08:46:05.589: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-7946  f16c89f1-77cb-4874-a490-3676e9f1b97e 268753 1 2023-03-09 08:46:05 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-03-09 08:46:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050e5c78 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Mar  9 08:46:05.593: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
Mar  9 08:46:05.593: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Mar  9 08:46:05.593: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-7946  aa5f0e3b-0cc7-4968-ae7d-4ca2d2ac70d7 268755 1 2023-03-09 08:46:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment f16c89f1-77cb-4874-a490-3676e9f1b97e 0xc0050e5ff7 0xc0050e5ff8}] [] [{e2e.test Update apps/v1 2023-03-09 08:46:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:46:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-09 08:46:05 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"f16c89f1-77cb-4874-a490-3676e9f1b97e\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0001aad58 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar  9 08:46:05.601: INFO: Pod "test-cleanup-controller-8qgx4" is available:
&Pod{ObjectMeta:{test-cleanup-controller-8qgx4 test-cleanup-controller- deployment-7946  670465ef-09c8-4d46-9714-3e0abbf30eed 268746 0 2023-03-09 08:46:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[cni.projectcalico.org/containerID:de8913fda5332f78e0cbca4b446bc0601537bdcb539a40d68df90ee95cdde1bc cni.projectcalico.org/podIP:172.16.0.74/32 cni.projectcalico.org/podIPs:172.16.0.74/32] [{apps/v1 ReplicaSet test-cleanup-controller aa5f0e3b-0cc7-4968-ae7d-4ca2d2ac70d7 0xc004fec1c7 0xc004fec1c8}] [] [{kube-controller-manager Update v1 2023-03-09 08:46:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"aa5f0e3b-0cc7-4968-ae7d-4ca2d2ac70d7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:46:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:46:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p2gq8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p2gq8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:45:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:46:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:46:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:46:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.74,StartTime:2023-03-09 08:45:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:46:00 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://370a135121f248a0d045bd77b3624182d3bb8f368ca3a2e7f5c3d6e70aa64633,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.74,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar  9 08:46:05.601: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-7946" for this suite. 03/09/23 08:46:05.609
------------------------------
â€¢ [SLOW TEST] [5.107 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:46:00.514
    Mar  9 08:46:00.514: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename deployment 03/09/23 08:46:00.516
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:00.531
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:00.537
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should delete old replica sets [Conformance]
      test/e2e/apps/deployment.go:122
    Mar  9 08:46:00.556: INFO: Pod name cleanup-pod: Found 0 pods out of 1
    Mar  9 08:46:05.561: INFO: Pod name cleanup-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/09/23 08:46:05.561
    Mar  9 08:46:05.561: INFO: Creating deployment test-cleanup-deployment
    STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 03/09/23 08:46:05.575
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar  9 08:46:05.589: INFO: Deployment "test-cleanup-deployment":
    &Deployment{ObjectMeta:{test-cleanup-deployment  deployment-7946  f16c89f1-77cb-4874-a490-3676e9f1b97e 268753 1 2023-03-09 08:46:05 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] [{e2e.test Update apps/v1 2023-03-09 08:46:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050e5c78 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

    Mar  9 08:46:05.593: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
    Mar  9 08:46:05.593: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
    Mar  9 08:46:05.593: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-7946  aa5f0e3b-0cc7-4968-ae7d-4ca2d2ac70d7 268755 1 2023-03-09 08:46:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment f16c89f1-77cb-4874-a490-3676e9f1b97e 0xc0050e5ff7 0xc0050e5ff8}] [] [{e2e.test Update apps/v1 2023-03-09 08:46:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 08:46:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2023-03-09 08:46:05 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"f16c89f1-77cb-4874-a490-3676e9f1b97e\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0001aad58 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 08:46:05.601: INFO: Pod "test-cleanup-controller-8qgx4" is available:
    &Pod{ObjectMeta:{test-cleanup-controller-8qgx4 test-cleanup-controller- deployment-7946  670465ef-09c8-4d46-9714-3e0abbf30eed 268746 0 2023-03-09 08:46:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[cni.projectcalico.org/containerID:de8913fda5332f78e0cbca4b446bc0601537bdcb539a40d68df90ee95cdde1bc cni.projectcalico.org/podIP:172.16.0.74/32 cni.projectcalico.org/podIPs:172.16.0.74/32] [{apps/v1 ReplicaSet test-cleanup-controller aa5f0e3b-0cc7-4968-ae7d-4ca2d2ac70d7 0xc004fec1c7 0xc004fec1c8}] [] [{kube-controller-manager Update v1 2023-03-09 08:46:00 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"aa5f0e3b-0cc7-4968-ae7d-4ca2d2ac70d7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 08:46:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 08:46:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p2gq8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p2gq8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:45:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:46:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:46:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 08:46:00 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.74,StartTime:2023-03-09 08:45:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 08:46:00 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://370a135121f248a0d045bd77b3624182d3bb8f368ca3a2e7f5c3d6e70aa64633,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.74,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:46:05.601: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-7946" for this suite. 03/09/23 08:46:05.609
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:46:05.621
Mar  9 08:46:05.622: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:46:05.624
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:05.641
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:05.647
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
STEP: create deployment with httpd image 03/09/23 08:46:05.652
Mar  9 08:46:05.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-3370 create -f -'
Mar  9 08:46:07.235: INFO: stderr: ""
Mar  9 08:46:07.235: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image 03/09/23 08:46:07.235
Mar  9 08:46:07.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-3370 diff -f -'
Mar  9 08:46:07.726: INFO: rc: 1
Mar  9 08:46:07.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-3370 delete -f -'
Mar  9 08:46:07.876: INFO: stderr: ""
Mar  9 08:46:07.876: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:46:07.876: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3370" for this suite. 03/09/23 08:46:07.883
------------------------------
â€¢ [2.268 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl diff
  test/e2e/kubectl/kubectl.go:925
    should check if kubectl diff finds a difference for Deployments [Conformance]
    test/e2e/kubectl/kubectl.go:931

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:46:05.621
    Mar  9 08:46:05.622: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:46:05.624
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:05.641
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:05.647
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl diff finds a difference for Deployments [Conformance]
      test/e2e/kubectl/kubectl.go:931
    STEP: create deployment with httpd image 03/09/23 08:46:05.652
    Mar  9 08:46:05.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-3370 create -f -'
    Mar  9 08:46:07.235: INFO: stderr: ""
    Mar  9 08:46:07.235: INFO: stdout: "deployment.apps/httpd-deployment created\n"
    STEP: verify diff finds difference between live and declared image 03/09/23 08:46:07.235
    Mar  9 08:46:07.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-3370 diff -f -'
    Mar  9 08:46:07.726: INFO: rc: 1
    Mar  9 08:46:07.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-3370 delete -f -'
    Mar  9 08:46:07.876: INFO: stderr: ""
    Mar  9 08:46:07.876: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:46:07.876: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3370" for this suite. 03/09/23 08:46:07.883
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:46:07.891
Mar  9 08:46:07.891: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 08:46:07.892
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:07.928
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:07.933
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
STEP: Creating configMap with name configmap-test-volume-map-7c737dda-0bff-4aed-9c05-125aef573619 03/09/23 08:46:07.939
STEP: Creating a pod to test consume configMaps 03/09/23 08:46:07.946
Mar  9 08:46:07.956: INFO: Waiting up to 5m0s for pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183" in namespace "configmap-8266" to be "Succeeded or Failed"
Mar  9 08:46:07.962: INFO: Pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183": Phase="Pending", Reason="", readiness=false. Elapsed: 5.931835ms
Mar  9 08:46:09.967: INFO: Pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010891649s
Mar  9 08:46:11.967: INFO: Pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011099237s
STEP: Saw pod success 03/09/23 08:46:11.967
Mar  9 08:46:11.967: INFO: Pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183" satisfied condition "Succeeded or Failed"
Mar  9 08:46:11.971: INFO: Trying to get logs from node k8s-worker2 pod pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 08:46:11.979
Mar  9 08:46:11.996: INFO: Waiting for pod pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183 to disappear
Mar  9 08:46:12.000: INFO: Pod pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 08:46:12.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8266" for this suite. 03/09/23 08:46:12.006
------------------------------
â€¢ [4.122 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:46:07.891
    Mar  9 08:46:07.891: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 08:46:07.892
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:07.928
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:07.933
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:109
    STEP: Creating configMap with name configmap-test-volume-map-7c737dda-0bff-4aed-9c05-125aef573619 03/09/23 08:46:07.939
    STEP: Creating a pod to test consume configMaps 03/09/23 08:46:07.946
    Mar  9 08:46:07.956: INFO: Waiting up to 5m0s for pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183" in namespace "configmap-8266" to be "Succeeded or Failed"
    Mar  9 08:46:07.962: INFO: Pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183": Phase="Pending", Reason="", readiness=false. Elapsed: 5.931835ms
    Mar  9 08:46:09.967: INFO: Pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010891649s
    Mar  9 08:46:11.967: INFO: Pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011099237s
    STEP: Saw pod success 03/09/23 08:46:11.967
    Mar  9 08:46:11.967: INFO: Pod "pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183" satisfied condition "Succeeded or Failed"
    Mar  9 08:46:11.971: INFO: Trying to get logs from node k8s-worker2 pod pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 08:46:11.979
    Mar  9 08:46:11.996: INFO: Waiting for pod pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183 to disappear
    Mar  9 08:46:12.000: INFO: Pod pod-configmaps-fbd4f3c3-7e4b-4f2a-b39f-d183508ee183 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:46:12.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8266" for this suite. 03/09/23 08:46:12.006
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:46:12.014
Mar  9 08:46:12.015: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:46:12.016
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:12.033
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:12.038
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 03/09/23 08:46:12.042
Mar  9 08:46:12.043: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 03/09/23 08:46:20.21
Mar  9 08:46:20.211: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 08:46:22.577: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:46:30.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-5956" for this suite. 03/09/23 08:46:30.926
------------------------------
â€¢ [SLOW TEST] [18.918 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:46:12.014
    Mar  9 08:46:12.015: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:46:12.016
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:12.033
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:12.038
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group but different versions [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:309
    STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 03/09/23 08:46:12.042
    Mar  9 08:46:12.043: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 03/09/23 08:46:20.21
    Mar  9 08:46:20.211: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 08:46:22.577: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:46:30.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-5956" for this suite. 03/09/23 08:46:30.926
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:46:30.933
Mar  9 08:46:30.933: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 08:46:30.934
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:30.95
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:30.954
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
STEP: Creating a pod to test emptydir 0666 on tmpfs 03/09/23 08:46:30.958
Mar  9 08:46:30.967: INFO: Waiting up to 5m0s for pod "pod-a092dffc-9667-4360-b496-24086914b31a" in namespace "emptydir-1484" to be "Succeeded or Failed"
Mar  9 08:46:30.972: INFO: Pod "pod-a092dffc-9667-4360-b496-24086914b31a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.145635ms
Mar  9 08:46:32.976: INFO: Pod "pod-a092dffc-9667-4360-b496-24086914b31a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008598088s
Mar  9 08:46:34.976: INFO: Pod "pod-a092dffc-9667-4360-b496-24086914b31a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008763293s
STEP: Saw pod success 03/09/23 08:46:34.976
Mar  9 08:46:34.977: INFO: Pod "pod-a092dffc-9667-4360-b496-24086914b31a" satisfied condition "Succeeded or Failed"
Mar  9 08:46:34.980: INFO: Trying to get logs from node k8s-worker2 pod pod-a092dffc-9667-4360-b496-24086914b31a container test-container: <nil>
STEP: delete the pod 03/09/23 08:46:34.989
Mar  9 08:46:35.002: INFO: Waiting for pod pod-a092dffc-9667-4360-b496-24086914b31a to disappear
Mar  9 08:46:35.006: INFO: Pod pod-a092dffc-9667-4360-b496-24086914b31a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 08:46:35.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-1484" for this suite. 03/09/23 08:46:35.012
------------------------------
â€¢ [4.088 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:46:30.933
    Mar  9 08:46:30.933: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 08:46:30.934
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:30.95
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:30.954
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:137
    STEP: Creating a pod to test emptydir 0666 on tmpfs 03/09/23 08:46:30.958
    Mar  9 08:46:30.967: INFO: Waiting up to 5m0s for pod "pod-a092dffc-9667-4360-b496-24086914b31a" in namespace "emptydir-1484" to be "Succeeded or Failed"
    Mar  9 08:46:30.972: INFO: Pod "pod-a092dffc-9667-4360-b496-24086914b31a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.145635ms
    Mar  9 08:46:32.976: INFO: Pod "pod-a092dffc-9667-4360-b496-24086914b31a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008598088s
    Mar  9 08:46:34.976: INFO: Pod "pod-a092dffc-9667-4360-b496-24086914b31a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008763293s
    STEP: Saw pod success 03/09/23 08:46:34.976
    Mar  9 08:46:34.977: INFO: Pod "pod-a092dffc-9667-4360-b496-24086914b31a" satisfied condition "Succeeded or Failed"
    Mar  9 08:46:34.980: INFO: Trying to get logs from node k8s-worker2 pod pod-a092dffc-9667-4360-b496-24086914b31a container test-container: <nil>
    STEP: delete the pod 03/09/23 08:46:34.989
    Mar  9 08:46:35.002: INFO: Waiting for pod pod-a092dffc-9667-4360-b496-24086914b31a to disappear
    Mar  9 08:46:35.006: INFO: Pod pod-a092dffc-9667-4360-b496-24086914b31a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:46:35.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-1484" for this suite. 03/09/23 08:46:35.012
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:46:35.022
Mar  9 08:46:35.022: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-pred 03/09/23 08:46:35.024
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:35.041
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:35.046
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Mar  9 08:46:35.051: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Mar  9 08:46:35.062: INFO: Waiting for terminating namespaces to be deleted...
Mar  9 08:46:35.067: INFO: 
Logging pods the apiserver thinks is on node k8s-worker1 before test
Mar  9 08:46:35.078: INFO: calico-kube-controllers-79568db7f8-dgf8v from kube-system started at 2023-03-08 10:49:58 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.078: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Mar  9 08:46:35.078: INFO: calico-node-kzddq from kube-system started at 2023-03-08 01:45:28 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.078: INFO: 	Container calico-node ready: true, restart count 0
Mar  9 08:46:35.078: INFO: kube-proxy-2blnw from kube-system started at 2023-03-08 01:45:23 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.078: INFO: 	Container kube-proxy ready: true, restart count 0
Mar  9 08:46:35.078: INFO: httpd-deployment-7b78564759-h5sgb from kubectl-3370 started at 2023-03-09 08:46:06 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.078: INFO: 	Container httpd ready: true, restart count 0
Mar  9 08:46:35.078: INFO: sonobuoy from sonobuoy started at 2023-03-09 07:56:46 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.078: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Mar  9 08:46:35.078: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 from sonobuoy started at 2023-03-09 07:56:47 +0000 UTC (2 container statuses recorded)
Mar  9 08:46:35.078: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:46:35.078: INFO: 	Container systemd-logs ready: true, restart count 0
Mar  9 08:46:35.078: INFO: 
Logging pods the apiserver thinks is on node k8s-worker2 before test
Mar  9 08:46:35.089: INFO: admin-front from default started at 2023-03-08 19:24:01 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container admin-front ready: true, restart count 0
Mar  9 08:46:35.089: INFO: bizmicro-api-webapp from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container bizmicro-api-webapp ready: true, restart count 0
Mar  9 08:46:35.089: INFO: bizmicro-daemon-webapp from default started at 2023-03-08 19:23:28 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container bizmicro-daemon-webapp ready: true, restart count 0
Mar  9 08:46:35.089: INFO: bizmicro-sockjs-webapp from default started at 2023-03-08 19:23:36 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container bizmicro-sockjs-webapp ready: true, restart count 0
Mar  9 08:46:35.089: INFO: user-front from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container user-front ready: true, restart count 0
Mar  9 08:46:35.089: INFO: calico-node-zdhvf from kube-system started at 2023-03-08 01:45:27 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container calico-node ready: true, restart count 3
Mar  9 08:46:35.089: INFO: kube-proxy-dn7ts from kube-system started at 2023-03-08 01:44:47 +0000 UTC (1 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container kube-proxy ready: true, restart count 3
Mar  9 08:46:35.089: INFO: sonobuoy-e2e-job-2a17a947d7c74874 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container e2e ready: true, restart count 0
Mar  9 08:46:35.089: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:46:35.089: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
Mar  9 08:46:35.089: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Mar  9 08:46:35.089: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
STEP: Trying to launch a pod without a label to get a node which can launch it. 03/09/23 08:46:35.09
Mar  9 08:46:35.100: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-8752" to be "running"
Mar  9 08:46:35.104: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 3.955642ms
Mar  9 08:46:37.110: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.009490205s
Mar  9 08:46:37.110: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 03/09/23 08:46:37.114
STEP: Trying to apply a random label on the found node. 03/09/23 08:46:37.132
STEP: verifying the node has the label kubernetes.io/e2e-c7a88218-9528-4240-8c37-17b7c410d786 95 03/09/23 08:46:37.148
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 03/09/23 08:46:37.153
Mar  9 08:46:37.162: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-8752" to be "not pending"
Mar  9 08:46:37.165: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.681991ms
Mar  9 08:46:39.172: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.010131496s
Mar  9 08:46:39.172: INFO: Pod "pod4" satisfied condition "not pending"
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.0.102 on the node which pod4 resides and expect not scheduled 03/09/23 08:46:39.172
Mar  9 08:46:39.179: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-8752" to be "not pending"
Mar  9 08:46:39.183: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.200879ms
Mar  9 08:46:41.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009194717s
Mar  9 08:46:43.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010411455s
Mar  9 08:46:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.008668604s
Mar  9 08:46:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.009067746s
Mar  9 08:46:49.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.010833686s
Mar  9 08:46:51.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.009475697s
Mar  9 08:46:53.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.008841053s
Mar  9 08:46:55.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.010280288s
Mar  9 08:46:57.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.010409395s
Mar  9 08:46:59.191: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.011743444s
Mar  9 08:47:01.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.009618168s
Mar  9 08:47:03.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.010262948s
Mar  9 08:47:05.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.00976893s
Mar  9 08:47:07.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.009805331s
Mar  9 08:47:09.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.009447941s
Mar  9 08:47:11.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.009354113s
Mar  9 08:47:13.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.010531021s
Mar  9 08:47:15.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.008750346s
Mar  9 08:47:17.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.008891113s
Mar  9 08:47:19.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.010044217s
Mar  9 08:47:21.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.010594922s
Mar  9 08:47:23.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.009679321s
Mar  9 08:47:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.009219007s
Mar  9 08:47:27.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.010305155s
Mar  9 08:47:29.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.01040146s
Mar  9 08:47:31.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.009810762s
Mar  9 08:47:33.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.010739019s
Mar  9 08:47:35.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.008722891s
Mar  9 08:47:37.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.008946907s
Mar  9 08:47:39.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.00926439s
Mar  9 08:47:41.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.009486157s
Mar  9 08:47:43.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.009817569s
Mar  9 08:47:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.008832307s
Mar  9 08:47:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.009256738s
Mar  9 08:47:49.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.010659636s
Mar  9 08:47:51.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.009251295s
Mar  9 08:47:53.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.009433328s
Mar  9 08:47:55.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.00972939s
Mar  9 08:47:57.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.008787184s
Mar  9 08:47:59.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.010033591s
Mar  9 08:48:01.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.009415145s
Mar  9 08:48:03.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.00994336s
Mar  9 08:48:05.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.010451312s
Mar  9 08:48:07.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.010777997s
Mar  9 08:48:09.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.009818992s
Mar  9 08:48:11.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.009675467s
Mar  9 08:48:13.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.009789297s
Mar  9 08:48:15.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.009438032s
Mar  9 08:48:17.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.010068256s
Mar  9 08:48:19.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.010461637s
Mar  9 08:48:21.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.00980746s
Mar  9 08:48:23.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.009639905s
Mar  9 08:48:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.00870084s
Mar  9 08:48:27.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.009887588s
Mar  9 08:48:29.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.010870233s
Mar  9 08:48:31.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.009808572s
Mar  9 08:48:33.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.009717102s
Mar  9 08:48:35.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.009583025s
Mar  9 08:48:37.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.010003835s
Mar  9 08:48:39.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.010227833s
Mar  9 08:48:41.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.009561916s
Mar  9 08:48:43.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.009030753s
Mar  9 08:48:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.009151178s
Mar  9 08:48:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.009525223s
Mar  9 08:48:49.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.01101691s
Mar  9 08:48:51.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.010818219s
Mar  9 08:48:53.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.01005737s
Mar  9 08:48:55.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.008949249s
Mar  9 08:48:57.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.009677609s
Mar  9 08:48:59.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.009195763s
Mar  9 08:49:01.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.009003817s
Mar  9 08:49:03.194: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.01489986s
Mar  9 08:49:05.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.00962041s
Mar  9 08:49:07.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.008832743s
Mar  9 08:49:09.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.010612792s
Mar  9 08:49:11.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.009210831s
Mar  9 08:49:13.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.008958128s
Mar  9 08:49:15.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.009099792s
Mar  9 08:49:17.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.008761269s
Mar  9 08:49:19.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.008970773s
Mar  9 08:49:21.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.009717845s
Mar  9 08:49:23.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.009763488s
Mar  9 08:49:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.009276004s
Mar  9 08:49:27.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.010808595s
Mar  9 08:49:29.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.009879332s
Mar  9 08:49:31.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.009397893s
Mar  9 08:49:33.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.010573028s
Mar  9 08:49:35.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.008916703s
Mar  9 08:49:37.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.011134082s
Mar  9 08:49:39.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.010257993s
Mar  9 08:49:41.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.009701913s
Mar  9 08:49:43.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.010215308s
Mar  9 08:49:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.009169875s
Mar  9 08:49:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.009261936s
Mar  9 08:49:49.191: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.01153908s
Mar  9 08:49:51.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.00897398s
Mar  9 08:49:53.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.010128965s
Mar  9 08:49:55.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.008621151s
Mar  9 08:49:57.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.009551617s
Mar  9 08:49:59.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.009820797s
Mar  9 08:50:01.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.009444517s
Mar  9 08:50:03.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.010548907s
Mar  9 08:50:05.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.008740719s
Mar  9 08:50:07.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.00899314s
Mar  9 08:50:09.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.010612253s
Mar  9 08:50:11.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.010134787s
Mar  9 08:50:13.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.010136793s
Mar  9 08:50:15.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.009557004s
Mar  9 08:50:17.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.008744023s
Mar  9 08:50:19.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.010181063s
Mar  9 08:50:21.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.009100943s
Mar  9 08:50:23.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.010835666s
Mar  9 08:50:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.009414916s
Mar  9 08:50:27.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.010640312s
Mar  9 08:50:29.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.009688955s
Mar  9 08:50:31.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.0113455s
Mar  9 08:50:33.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.008973032s
Mar  9 08:50:35.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.008840077s
Mar  9 08:50:37.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.010322122s
Mar  9 08:50:39.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.01047362s
Mar  9 08:50:41.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.010119797s
Mar  9 08:50:43.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.010478417s
Mar  9 08:50:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.009527036s
Mar  9 08:50:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.009012582s
Mar  9 08:50:49.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.010091931s
Mar  9 08:50:51.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.010127527s
Mar  9 08:50:53.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.010607058s
Mar  9 08:50:55.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.008665374s
Mar  9 08:50:57.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.009348735s
Mar  9 08:50:59.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.010673764s
Mar  9 08:51:01.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.009453671s
Mar  9 08:51:03.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.011002671s
Mar  9 08:51:05.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.009280215s
Mar  9 08:51:07.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.011479968s
Mar  9 08:51:09.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.008827688s
Mar  9 08:51:11.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.009178859s
Mar  9 08:51:13.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.010461426s
Mar  9 08:51:15.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.009569042s
Mar  9 08:51:17.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.008549707s
Mar  9 08:51:19.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.010728302s
Mar  9 08:51:21.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.009517543s
Mar  9 08:51:23.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.009482057s
Mar  9 08:51:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.008833328s
Mar  9 08:51:27.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.010120802s
Mar  9 08:51:29.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.01147717s
Mar  9 08:51:31.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.009222964s
Mar  9 08:51:33.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.010628196s
Mar  9 08:51:35.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.010721781s
Mar  9 08:51:37.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.009746785s
Mar  9 08:51:39.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.010275228s
Mar  9 08:51:39.194: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.015047208s
STEP: removing the label kubernetes.io/e2e-c7a88218-9528-4240-8c37-17b7c410d786 off the node k8s-worker1 03/09/23 08:51:39.194
STEP: verifying the node doesn't have the label kubernetes.io/e2e-c7a88218-9528-4240-8c37-17b7c410d786 03/09/23 08:51:39.217
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:51:39.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-8752" for this suite. 03/09/23 08:51:39.228
------------------------------
â€¢ [SLOW TEST] [304.213 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:46:35.022
    Mar  9 08:46:35.022: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-pred 03/09/23 08:46:35.024
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:46:35.041
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:46:35.046
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Mar  9 08:46:35.051: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Mar  9 08:46:35.062: INFO: Waiting for terminating namespaces to be deleted...
    Mar  9 08:46:35.067: INFO: 
    Logging pods the apiserver thinks is on node k8s-worker1 before test
    Mar  9 08:46:35.078: INFO: calico-kube-controllers-79568db7f8-dgf8v from kube-system started at 2023-03-08 10:49:58 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.078: INFO: 	Container calico-kube-controllers ready: true, restart count 0
    Mar  9 08:46:35.078: INFO: calico-node-kzddq from kube-system started at 2023-03-08 01:45:28 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.078: INFO: 	Container calico-node ready: true, restart count 0
    Mar  9 08:46:35.078: INFO: kube-proxy-2blnw from kube-system started at 2023-03-08 01:45:23 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.078: INFO: 	Container kube-proxy ready: true, restart count 0
    Mar  9 08:46:35.078: INFO: httpd-deployment-7b78564759-h5sgb from kubectl-3370 started at 2023-03-09 08:46:06 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.078: INFO: 	Container httpd ready: true, restart count 0
    Mar  9 08:46:35.078: INFO: sonobuoy from sonobuoy started at 2023-03-09 07:56:46 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.078: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Mar  9 08:46:35.078: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-w2wl8 from sonobuoy started at 2023-03-09 07:56:47 +0000 UTC (2 container statuses recorded)
    Mar  9 08:46:35.078: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:46:35.078: INFO: 	Container systemd-logs ready: true, restart count 0
    Mar  9 08:46:35.078: INFO: 
    Logging pods the apiserver thinks is on node k8s-worker2 before test
    Mar  9 08:46:35.089: INFO: admin-front from default started at 2023-03-08 19:24:01 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container admin-front ready: true, restart count 0
    Mar  9 08:46:35.089: INFO: bizmicro-api-webapp from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container bizmicro-api-webapp ready: true, restart count 0
    Mar  9 08:46:35.089: INFO: bizmicro-daemon-webapp from default started at 2023-03-08 19:23:28 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container bizmicro-daemon-webapp ready: true, restart count 0
    Mar  9 08:46:35.089: INFO: bizmicro-sockjs-webapp from default started at 2023-03-08 19:23:36 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container bizmicro-sockjs-webapp ready: true, restart count 0
    Mar  9 08:46:35.089: INFO: user-front from default started at 2023-03-08 19:22:54 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container user-front ready: true, restart count 0
    Mar  9 08:46:35.089: INFO: calico-node-zdhvf from kube-system started at 2023-03-08 01:45:27 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container calico-node ready: true, restart count 3
    Mar  9 08:46:35.089: INFO: kube-proxy-dn7ts from kube-system started at 2023-03-08 01:44:47 +0000 UTC (1 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container kube-proxy ready: true, restart count 3
    Mar  9 08:46:35.089: INFO: sonobuoy-e2e-job-2a17a947d7c74874 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container e2e ready: true, restart count 0
    Mar  9 08:46:35.089: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:46:35.089: INFO: sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-9dht2 from sonobuoy started at 2023-03-09 07:56:48 +0000 UTC (2 container statuses recorded)
    Mar  9 08:46:35.089: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Mar  9 08:46:35.089: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
      test/e2e/scheduling/predicates.go:704
    STEP: Trying to launch a pod without a label to get a node which can launch it. 03/09/23 08:46:35.09
    Mar  9 08:46:35.100: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-8752" to be "running"
    Mar  9 08:46:35.104: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 3.955642ms
    Mar  9 08:46:37.110: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.009490205s
    Mar  9 08:46:37.110: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 03/09/23 08:46:37.114
    STEP: Trying to apply a random label on the found node. 03/09/23 08:46:37.132
    STEP: verifying the node has the label kubernetes.io/e2e-c7a88218-9528-4240-8c37-17b7c410d786 95 03/09/23 08:46:37.148
    STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 03/09/23 08:46:37.153
    Mar  9 08:46:37.162: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-8752" to be "not pending"
    Mar  9 08:46:37.165: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.681991ms
    Mar  9 08:46:39.172: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.010131496s
    Mar  9 08:46:39.172: INFO: Pod "pod4" satisfied condition "not pending"
    STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.0.102 on the node which pod4 resides and expect not scheduled 03/09/23 08:46:39.172
    Mar  9 08:46:39.179: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-8752" to be "not pending"
    Mar  9 08:46:39.183: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.200879ms
    Mar  9 08:46:41.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009194717s
    Mar  9 08:46:43.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010411455s
    Mar  9 08:46:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.008668604s
    Mar  9 08:46:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.009067746s
    Mar  9 08:46:49.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.010833686s
    Mar  9 08:46:51.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.009475697s
    Mar  9 08:46:53.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.008841053s
    Mar  9 08:46:55.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.010280288s
    Mar  9 08:46:57.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.010409395s
    Mar  9 08:46:59.191: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.011743444s
    Mar  9 08:47:01.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.009618168s
    Mar  9 08:47:03.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.010262948s
    Mar  9 08:47:05.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.00976893s
    Mar  9 08:47:07.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.009805331s
    Mar  9 08:47:09.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.009447941s
    Mar  9 08:47:11.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.009354113s
    Mar  9 08:47:13.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.010531021s
    Mar  9 08:47:15.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.008750346s
    Mar  9 08:47:17.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.008891113s
    Mar  9 08:47:19.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.010044217s
    Mar  9 08:47:21.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.010594922s
    Mar  9 08:47:23.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.009679321s
    Mar  9 08:47:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.009219007s
    Mar  9 08:47:27.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.010305155s
    Mar  9 08:47:29.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.01040146s
    Mar  9 08:47:31.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.009810762s
    Mar  9 08:47:33.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.010739019s
    Mar  9 08:47:35.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.008722891s
    Mar  9 08:47:37.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.008946907s
    Mar  9 08:47:39.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.00926439s
    Mar  9 08:47:41.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.009486157s
    Mar  9 08:47:43.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.009817569s
    Mar  9 08:47:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.008832307s
    Mar  9 08:47:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.009256738s
    Mar  9 08:47:49.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.010659636s
    Mar  9 08:47:51.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.009251295s
    Mar  9 08:47:53.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.009433328s
    Mar  9 08:47:55.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.00972939s
    Mar  9 08:47:57.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.008787184s
    Mar  9 08:47:59.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.010033591s
    Mar  9 08:48:01.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.009415145s
    Mar  9 08:48:03.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.00994336s
    Mar  9 08:48:05.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.010451312s
    Mar  9 08:48:07.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.010777997s
    Mar  9 08:48:09.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.009818992s
    Mar  9 08:48:11.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.009675467s
    Mar  9 08:48:13.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.009789297s
    Mar  9 08:48:15.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.009438032s
    Mar  9 08:48:17.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.010068256s
    Mar  9 08:48:19.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.010461637s
    Mar  9 08:48:21.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.00980746s
    Mar  9 08:48:23.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.009639905s
    Mar  9 08:48:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.00870084s
    Mar  9 08:48:27.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.009887588s
    Mar  9 08:48:29.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.010870233s
    Mar  9 08:48:31.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.009808572s
    Mar  9 08:48:33.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.009717102s
    Mar  9 08:48:35.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.009583025s
    Mar  9 08:48:37.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.010003835s
    Mar  9 08:48:39.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.010227833s
    Mar  9 08:48:41.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.009561916s
    Mar  9 08:48:43.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.009030753s
    Mar  9 08:48:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.009151178s
    Mar  9 08:48:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.009525223s
    Mar  9 08:48:49.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.01101691s
    Mar  9 08:48:51.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.010818219s
    Mar  9 08:48:53.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.01005737s
    Mar  9 08:48:55.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.008949249s
    Mar  9 08:48:57.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.009677609s
    Mar  9 08:48:59.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.009195763s
    Mar  9 08:49:01.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.009003817s
    Mar  9 08:49:03.194: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.01489986s
    Mar  9 08:49:05.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.00962041s
    Mar  9 08:49:07.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.008832743s
    Mar  9 08:49:09.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.010612792s
    Mar  9 08:49:11.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.009210831s
    Mar  9 08:49:13.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.008958128s
    Mar  9 08:49:15.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.009099792s
    Mar  9 08:49:17.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.008761269s
    Mar  9 08:49:19.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.008970773s
    Mar  9 08:49:21.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.009717845s
    Mar  9 08:49:23.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.009763488s
    Mar  9 08:49:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.009276004s
    Mar  9 08:49:27.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.010808595s
    Mar  9 08:49:29.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.009879332s
    Mar  9 08:49:31.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.009397893s
    Mar  9 08:49:33.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.010573028s
    Mar  9 08:49:35.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.008916703s
    Mar  9 08:49:37.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.011134082s
    Mar  9 08:49:39.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.010257993s
    Mar  9 08:49:41.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.009701913s
    Mar  9 08:49:43.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.010215308s
    Mar  9 08:49:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.009169875s
    Mar  9 08:49:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.009261936s
    Mar  9 08:49:49.191: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.01153908s
    Mar  9 08:49:51.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.00897398s
    Mar  9 08:49:53.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.010128965s
    Mar  9 08:49:55.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.008621151s
    Mar  9 08:49:57.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.009551617s
    Mar  9 08:49:59.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.009820797s
    Mar  9 08:50:01.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.009444517s
    Mar  9 08:50:03.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.010548907s
    Mar  9 08:50:05.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.008740719s
    Mar  9 08:50:07.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.00899314s
    Mar  9 08:50:09.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.010612253s
    Mar  9 08:50:11.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.010134787s
    Mar  9 08:50:13.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.010136793s
    Mar  9 08:50:15.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.009557004s
    Mar  9 08:50:17.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.008744023s
    Mar  9 08:50:19.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.010181063s
    Mar  9 08:50:21.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.009100943s
    Mar  9 08:50:23.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.010835666s
    Mar  9 08:50:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.009414916s
    Mar  9 08:50:27.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.010640312s
    Mar  9 08:50:29.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.009688955s
    Mar  9 08:50:31.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.0113455s
    Mar  9 08:50:33.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.008973032s
    Mar  9 08:50:35.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.008840077s
    Mar  9 08:50:37.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.010322122s
    Mar  9 08:50:39.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.01047362s
    Mar  9 08:50:41.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.010119797s
    Mar  9 08:50:43.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.010478417s
    Mar  9 08:50:45.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.009527036s
    Mar  9 08:50:47.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.009012582s
    Mar  9 08:50:49.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.010091931s
    Mar  9 08:50:51.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.010127527s
    Mar  9 08:50:53.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.010607058s
    Mar  9 08:50:55.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.008665374s
    Mar  9 08:50:57.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.009348735s
    Mar  9 08:50:59.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.010673764s
    Mar  9 08:51:01.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.009453671s
    Mar  9 08:51:03.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.011002671s
    Mar  9 08:51:05.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.009280215s
    Mar  9 08:51:07.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.011479968s
    Mar  9 08:51:09.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.008827688s
    Mar  9 08:51:11.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.009178859s
    Mar  9 08:51:13.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.010461426s
    Mar  9 08:51:15.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.009569042s
    Mar  9 08:51:17.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.008549707s
    Mar  9 08:51:19.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.010728302s
    Mar  9 08:51:21.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.009517543s
    Mar  9 08:51:23.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.009482057s
    Mar  9 08:51:25.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.008833328s
    Mar  9 08:51:27.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.010120802s
    Mar  9 08:51:29.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.01147717s
    Mar  9 08:51:31.188: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.009222964s
    Mar  9 08:51:33.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.010628196s
    Mar  9 08:51:35.190: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.010721781s
    Mar  9 08:51:37.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.009746785s
    Mar  9 08:51:39.189: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.010275228s
    Mar  9 08:51:39.194: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.015047208s
    STEP: removing the label kubernetes.io/e2e-c7a88218-9528-4240-8c37-17b7c410d786 off the node k8s-worker1 03/09/23 08:51:39.194
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-c7a88218-9528-4240-8c37-17b7c410d786 03/09/23 08:51:39.217
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:51:39.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-8752" for this suite. 03/09/23 08:51:39.228
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:51:39.239
Mar  9 08:51:39.239: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename statefulset 03/09/23 08:51:39.241
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:51:39.259
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:51:39.264
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-1315 03/09/23 08:51:39.269
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
STEP: Creating a new StatefulSet 03/09/23 08:51:39.275
Mar  9 08:51:39.288: INFO: Found 0 stateful pods, waiting for 3
Mar  9 08:51:49.295: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:51:49.295: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:51:49.295: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 08:51:49.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-1315 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:51:49.607: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:51:49.607: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:51:49.607: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 03/09/23 08:51:59.63
Mar  9 08:51:59.653: INFO: Updating stateful set ss2
STEP: Creating a new revision 03/09/23 08:51:59.653
STEP: Updating Pods in reverse ordinal order 03/09/23 08:52:09.672
Mar  9 08:52:09.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-1315 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:52:09.978: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar  9 08:52:09.978: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:52:09.978: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision 03/09/23 08:52:20
Mar  9 08:52:20.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-1315 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Mar  9 08:52:20.278: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Mar  9 08:52:20.278: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Mar  9 08:52:20.278: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Mar  9 08:52:30.318: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order 03/09/23 08:52:40.338
Mar  9 08:52:40.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-1315 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Mar  9 08:52:40.630: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Mar  9 08:52:40.630: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Mar  9 08:52:40.630: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Mar  9 08:52:50.658: INFO: Waiting for StatefulSet statefulset-1315/ss2 to complete update
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar  9 08:53:00.668: INFO: Deleting all statefulset in ns statefulset-1315
Mar  9 08:53:00.672: INFO: Scaling statefulset ss2 to 0
Mar  9 08:53:10.697: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 08:53:10.700: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:10.717: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-1315" for this suite. 03/09/23 08:53:10.724
------------------------------
â€¢ [SLOW TEST] [91.498 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/apps/statefulset.go:306

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:51:39.239
    Mar  9 08:51:39.239: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename statefulset 03/09/23 08:51:39.241
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:51:39.259
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:51:39.264
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-1315 03/09/23 08:51:39.269
    [It] should perform rolling updates and roll backs of template modifications [Conformance]
      test/e2e/apps/statefulset.go:306
    STEP: Creating a new StatefulSet 03/09/23 08:51:39.275
    Mar  9 08:51:39.288: INFO: Found 0 stateful pods, waiting for 3
    Mar  9 08:51:49.295: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:51:49.295: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:51:49.295: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 08:51:49.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-1315 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:51:49.607: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:51:49.607: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:51:49.607: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 03/09/23 08:51:59.63
    Mar  9 08:51:59.653: INFO: Updating stateful set ss2
    STEP: Creating a new revision 03/09/23 08:51:59.653
    STEP: Updating Pods in reverse ordinal order 03/09/23 08:52:09.672
    Mar  9 08:52:09.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-1315 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:52:09.978: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar  9 08:52:09.978: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:52:09.978: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    STEP: Rolling back to a previous revision 03/09/23 08:52:20
    Mar  9 08:52:20.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-1315 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Mar  9 08:52:20.278: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Mar  9 08:52:20.278: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Mar  9 08:52:20.278: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Mar  9 08:52:30.318: INFO: Updating stateful set ss2
    STEP: Rolling back update in reverse ordinal order 03/09/23 08:52:40.338
    Mar  9 08:52:40.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=statefulset-1315 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Mar  9 08:52:40.630: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Mar  9 08:52:40.630: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Mar  9 08:52:40.630: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Mar  9 08:52:50.658: INFO: Waiting for StatefulSet statefulset-1315/ss2 to complete update
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar  9 08:53:00.668: INFO: Deleting all statefulset in ns statefulset-1315
    Mar  9 08:53:00.672: INFO: Scaling statefulset ss2 to 0
    Mar  9 08:53:10.697: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 08:53:10.700: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:10.717: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-1315" for this suite. 03/09/23 08:53:10.724
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:10.739
Mar  9 08:53:10.739: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 08:53:10.74
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:10.758
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:10.763
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
STEP: Creating a pod to test downward API volume plugin 03/09/23 08:53:10.768
Mar  9 08:53:10.778: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2" in namespace "downward-api-1885" to be "Succeeded or Failed"
Mar  9 08:53:10.782: INFO: Pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.517314ms
Mar  9 08:53:12.787: INFO: Pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008691091s
Mar  9 08:53:14.788: INFO: Pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009263511s
STEP: Saw pod success 03/09/23 08:53:14.788
Mar  9 08:53:14.788: INFO: Pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2" satisfied condition "Succeeded or Failed"
Mar  9 08:53:14.792: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2 container client-container: <nil>
STEP: delete the pod 03/09/23 08:53:14.826
Mar  9 08:53:14.851: INFO: Waiting for pod downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2 to disappear
Mar  9 08:53:14.858: INFO: Pod downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:14.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-1885" for this suite. 03/09/23 08:53:14.864
------------------------------
â€¢ [4.132 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:10.739
    Mar  9 08:53:10.739: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 08:53:10.74
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:10.758
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:10.763
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:53
    STEP: Creating a pod to test downward API volume plugin 03/09/23 08:53:10.768
    Mar  9 08:53:10.778: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2" in namespace "downward-api-1885" to be "Succeeded or Failed"
    Mar  9 08:53:10.782: INFO: Pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.517314ms
    Mar  9 08:53:12.787: INFO: Pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008691091s
    Mar  9 08:53:14.788: INFO: Pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009263511s
    STEP: Saw pod success 03/09/23 08:53:14.788
    Mar  9 08:53:14.788: INFO: Pod "downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2" satisfied condition "Succeeded or Failed"
    Mar  9 08:53:14.792: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2 container client-container: <nil>
    STEP: delete the pod 03/09/23 08:53:14.826
    Mar  9 08:53:14.851: INFO: Waiting for pod downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2 to disappear
    Mar  9 08:53:14.858: INFO: Pod downwardapi-volume-3a113081-b9d0-444e-9583-d3a083c13bb2 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:14.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-1885" for this suite. 03/09/23 08:53:14.864
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:14.872
Mar  9 08:53:14.872: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 08:53:14.874
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:14.893
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:14.898
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
STEP: Creating the pod 03/09/23 08:53:14.903
Mar  9 08:53:14.914: INFO: Waiting up to 5m0s for pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27" in namespace "projected-3167" to be "running and ready"
Mar  9 08:53:14.919: INFO: Pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27": Phase="Pending", Reason="", readiness=false. Elapsed: 4.341194ms
Mar  9 08:53:14.919: INFO: The phase of Pod labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:53:16.924: INFO: Pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27": Phase="Running", Reason="", readiness=true. Elapsed: 2.009627368s
Mar  9 08:53:16.924: INFO: The phase of Pod labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27 is Running (Ready = true)
Mar  9 08:53:16.924: INFO: Pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27" satisfied condition "running and ready"
Mar  9 08:53:17.451: INFO: Successfully updated pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:19.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3167" for this suite. 03/09/23 08:53:19.473
------------------------------
â€¢ [4.609 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:14.872
    Mar  9 08:53:14.872: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 08:53:14.874
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:14.893
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:14.898
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:130
    STEP: Creating the pod 03/09/23 08:53:14.903
    Mar  9 08:53:14.914: INFO: Waiting up to 5m0s for pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27" in namespace "projected-3167" to be "running and ready"
    Mar  9 08:53:14.919: INFO: Pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27": Phase="Pending", Reason="", readiness=false. Elapsed: 4.341194ms
    Mar  9 08:53:14.919: INFO: The phase of Pod labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:53:16.924: INFO: Pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27": Phase="Running", Reason="", readiness=true. Elapsed: 2.009627368s
    Mar  9 08:53:16.924: INFO: The phase of Pod labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27 is Running (Ready = true)
    Mar  9 08:53:16.924: INFO: Pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27" satisfied condition "running and ready"
    Mar  9 08:53:17.451: INFO: Successfully updated pod "labelsupdatef9d6b8b5-102c-4844-bb9d-9b0c2392cf27"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:19.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3167" for this suite. 03/09/23 08:53:19.473
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
[BeforeEach] [sig-storage] CSIStorageCapacity
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:19.483
Mar  9 08:53:19.483: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename csistoragecapacity 03/09/23 08:53:19.485
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:19.506
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:19.511
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:31
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
STEP: getting /apis 03/09/23 08:53:19.516
STEP: getting /apis/storage.k8s.io 03/09/23 08:53:19.521
STEP: getting /apis/storage.k8s.io/v1 03/09/23 08:53:19.523
STEP: creating 03/09/23 08:53:19.525
STEP: watching 03/09/23 08:53:19.544
Mar  9 08:53:19.544: INFO: starting watch
STEP: getting 03/09/23 08:53:19.553
STEP: listing in namespace 03/09/23 08:53:19.558
STEP: listing across namespaces 03/09/23 08:53:19.562
STEP: patching 03/09/23 08:53:19.566
STEP: updating 03/09/23 08:53:19.573
Mar  9 08:53:19.581: INFO: waiting for watch events with expected annotations in namespace
Mar  9 08:53:19.581: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting 03/09/23 08:53:19.581
STEP: deleting a collection 03/09/23 08:53:19.595
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:19.611: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  tear down framework | framework.go:193
STEP: Destroying namespace "csistoragecapacity-667" for this suite. 03/09/23 08:53:19.616
------------------------------
â€¢ [0.143 seconds]
[sig-storage] CSIStorageCapacity
test/e2e/storage/utils/framework.go:23
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIStorageCapacity
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:19.483
    Mar  9 08:53:19.483: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename csistoragecapacity 03/09/23 08:53:19.485
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:19.506
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:19.511
    [BeforeEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support CSIStorageCapacities API operations [Conformance]
      test/e2e/storage/csistoragecapacity.go:49
    STEP: getting /apis 03/09/23 08:53:19.516
    STEP: getting /apis/storage.k8s.io 03/09/23 08:53:19.521
    STEP: getting /apis/storage.k8s.io/v1 03/09/23 08:53:19.523
    STEP: creating 03/09/23 08:53:19.525
    STEP: watching 03/09/23 08:53:19.544
    Mar  9 08:53:19.544: INFO: starting watch
    STEP: getting 03/09/23 08:53:19.553
    STEP: listing in namespace 03/09/23 08:53:19.558
    STEP: listing across namespaces 03/09/23 08:53:19.562
    STEP: patching 03/09/23 08:53:19.566
    STEP: updating 03/09/23 08:53:19.573
    Mar  9 08:53:19.581: INFO: waiting for watch events with expected annotations in namespace
    Mar  9 08:53:19.581: INFO: waiting for watch events with expected annotations across namespace
    STEP: deleting 03/09/23 08:53:19.581
    STEP: deleting a collection 03/09/23 08:53:19.595
    [AfterEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:19.611: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      tear down framework | framework.go:193
    STEP: Destroying namespace "csistoragecapacity-667" for this suite. 03/09/23 08:53:19.616
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:19.629
Mar  9 08:53:19.629: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubelet-test 03/09/23 08:53:19.63
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:19.646
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:19.65
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
Mar  9 08:53:19.666: INFO: Waiting up to 5m0s for pod "busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe" in namespace "kubelet-test-5786" to be "running and ready"
Mar  9 08:53:19.670: INFO: Pod "busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe": Phase="Pending", Reason="", readiness=false. Elapsed: 4.167045ms
Mar  9 08:53:19.670: INFO: The phase of Pod busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:53:21.675: INFO: Pod "busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe": Phase="Running", Reason="", readiness=true. Elapsed: 2.009481585s
Mar  9 08:53:21.675: INFO: The phase of Pod busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe is Running (Ready = true)
Mar  9 08:53:21.675: INFO: Pod "busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:21.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-5786" for this suite. 03/09/23 08:53:21.717
------------------------------
â€¢ [2.095 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a read only busybox container
  test/e2e/common/node/kubelet.go:175
    should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:19.629
    Mar  9 08:53:19.629: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubelet-test 03/09/23 08:53:19.63
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:19.646
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:19.65
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:184
    Mar  9 08:53:19.666: INFO: Waiting up to 5m0s for pod "busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe" in namespace "kubelet-test-5786" to be "running and ready"
    Mar  9 08:53:19.670: INFO: Pod "busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe": Phase="Pending", Reason="", readiness=false. Elapsed: 4.167045ms
    Mar  9 08:53:19.670: INFO: The phase of Pod busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:53:21.675: INFO: Pod "busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe": Phase="Running", Reason="", readiness=true. Elapsed: 2.009481585s
    Mar  9 08:53:21.675: INFO: The phase of Pod busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe is Running (Ready = true)
    Mar  9 08:53:21.675: INFO: Pod "busybox-readonly-fs8df0fb58-2cb3-4d63-8140-f394f69542fe" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:21.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-5786" for this suite. 03/09/23 08:53:21.717
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:21.726
Mar  9 08:53:21.726: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename watch 03/09/23 08:53:21.728
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:21.742
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:21.747
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
STEP: creating a new configmap 03/09/23 08:53:21.752
STEP: modifying the configmap once 03/09/23 08:53:21.758
STEP: modifying the configmap a second time 03/09/23 08:53:21.768
STEP: deleting the configmap 03/09/23 08:53:21.778
STEP: creating a watch on configmaps from the resource version returned by the first update 03/09/23 08:53:21.785
STEP: Expecting to observe notifications for all changes to the configmap after the first update 03/09/23 08:53:21.788
Mar  9 08:53:21.788: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9517  c863eb02-84da-4270-9d77-a123177db1e1 270215 0 2023-03-09 08:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-03-09 08:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Mar  9 08:53:21.788: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9517  c863eb02-84da-4270-9d77-a123177db1e1 270216 0 2023-03-09 08:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-03-09 08:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:21.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-9517" for this suite. 03/09/23 08:53:21.794
------------------------------
â€¢ [0.075 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:21.726
    Mar  9 08:53:21.726: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename watch 03/09/23 08:53:21.728
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:21.742
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:21.747
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to start watching from a specific resource version [Conformance]
      test/e2e/apimachinery/watch.go:142
    STEP: creating a new configmap 03/09/23 08:53:21.752
    STEP: modifying the configmap once 03/09/23 08:53:21.758
    STEP: modifying the configmap a second time 03/09/23 08:53:21.768
    STEP: deleting the configmap 03/09/23 08:53:21.778
    STEP: creating a watch on configmaps from the resource version returned by the first update 03/09/23 08:53:21.785
    STEP: Expecting to observe notifications for all changes to the configmap after the first update 03/09/23 08:53:21.788
    Mar  9 08:53:21.788: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9517  c863eb02-84da-4270-9d77-a123177db1e1 270215 0 2023-03-09 08:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-03-09 08:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Mar  9 08:53:21.788: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9517  c863eb02-84da-4270-9d77-a123177db1e1 270216 0 2023-03-09 08:53:21 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-03-09 08:53:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:21.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-9517" for this suite. 03/09/23 08:53:21.794
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:21.803
Mar  9 08:53:21.803: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:53:21.804
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:21.822
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:21.827
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:53:21.849
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:53:22.626
STEP: Deploying the webhook pod 03/09/23 08:53:22.636
STEP: Wait for the deployment to be ready 03/09/23 08:53:22.651
Mar  9 08:53:22.661: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Mar  9 08:53:24.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 53, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 53, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 03/09/23 08:53:26.686
STEP: Verifying the service has paired with the endpoint 03/09/23 08:53:26.706
Mar  9 08:53:27.706: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
STEP: Registering the webhook via the AdmissionRegistration API 03/09/23 08:53:27.71
STEP: create a pod that should be denied by the webhook 03/09/23 08:53:27.74
STEP: create a pod that causes the webhook to hang 03/09/23 08:53:27.765
STEP: create a configmap that should be denied by the webhook 03/09/23 08:53:37.775
STEP: create a configmap that should be admitted by the webhook 03/09/23 08:53:37.791
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 03/09/23 08:53:37.805
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 03/09/23 08:53:37.816
STEP: create a namespace that bypass the webhook 03/09/23 08:53:37.823
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 03/09/23 08:53:37.832
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:37.865: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-8026" for this suite. 03/09/23 08:53:37.923
STEP: Destroying namespace "webhook-8026-markers" for this suite. 03/09/23 08:53:37.944
------------------------------
â€¢ [SLOW TEST] [16.150 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:21.803
    Mar  9 08:53:21.803: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:53:21.804
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:21.822
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:21.827
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:53:21.849
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:53:22.626
    STEP: Deploying the webhook pod 03/09/23 08:53:22.636
    STEP: Wait for the deployment to be ready 03/09/23 08:53:22.651
    Mar  9 08:53:22.661: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    Mar  9 08:53:24.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.March, 9, 8, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 53, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 8, 53, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 8, 53, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 03/09/23 08:53:26.686
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:53:26.706
    Mar  9 08:53:27.706: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny pod and configmap creation [Conformance]
      test/e2e/apimachinery/webhook.go:197
    STEP: Registering the webhook via the AdmissionRegistration API 03/09/23 08:53:27.71
    STEP: create a pod that should be denied by the webhook 03/09/23 08:53:27.74
    STEP: create a pod that causes the webhook to hang 03/09/23 08:53:27.765
    STEP: create a configmap that should be denied by the webhook 03/09/23 08:53:37.775
    STEP: create a configmap that should be admitted by the webhook 03/09/23 08:53:37.791
    STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 03/09/23 08:53:37.805
    STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 03/09/23 08:53:37.816
    STEP: create a namespace that bypass the webhook 03/09/23 08:53:37.823
    STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 03/09/23 08:53:37.832
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:37.865: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-8026" for this suite. 03/09/23 08:53:37.923
    STEP: Destroying namespace "webhook-8026-markers" for this suite. 03/09/23 08:53:37.944
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:37.955
Mar  9 08:53:37.955: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename daemonsets 03/09/23 08:53:37.957
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:37.977
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:37.983
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194
Mar  9 08:53:38.011: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes. 03/09/23 08:53:38.018
Mar  9 08:53:38.022: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:38.022: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched. 03/09/23 08:53:38.022
Mar  9 08:53:38.053: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:38.053: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 08:53:39.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:39.058: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 08:53:40.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:40.058: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 08:53:41.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 08:53:41.058: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled 03/09/23 08:53:41.063
Mar  9 08:53:41.088: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 08:53:41.088: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Mar  9 08:53:42.093: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:42.093: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 03/09/23 08:53:42.093
Mar  9 08:53:42.106: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:42.106: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 08:53:43.113: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:43.113: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 08:53:44.110: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:44.110: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 08:53:45.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 08:53:45.112: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/09/23 08:53:45.12
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3937, will wait for the garbage collector to delete the pods 03/09/23 08:53:45.12
Mar  9 08:53:45.182: INFO: Deleting DaemonSet.extensions daemon-set took: 7.356146ms
Mar  9 08:53:45.283: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.174934ms
Mar  9 08:53:48.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 08:53:48.188: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar  9 08:53:48.192: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"270435"},"items":null}

Mar  9 08:53:48.195: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"270435"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:48.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-3937" for this suite. 03/09/23 08:53:48.23
------------------------------
â€¢ [SLOW TEST] [10.283 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:37.955
    Mar  9 08:53:37.955: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename daemonsets 03/09/23 08:53:37.957
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:37.977
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:37.983
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop complex daemon [Conformance]
      test/e2e/apps/daemon_set.go:194
    Mar  9 08:53:38.011: INFO: Creating daemon "daemon-set" with a node selector
    STEP: Initially, daemon pods should not be running on any nodes. 03/09/23 08:53:38.018
    Mar  9 08:53:38.022: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:38.022: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Change node label to blue, check that daemon pod is launched. 03/09/23 08:53:38.022
    Mar  9 08:53:38.053: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:38.053: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 08:53:39.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:39.058: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 08:53:40.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:40.058: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 08:53:41.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 08:53:41.058: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    STEP: Update the node label to green, and wait for daemons to be unscheduled 03/09/23 08:53:41.063
    Mar  9 08:53:41.088: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 08:53:41.088: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
    Mar  9 08:53:42.093: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:42.093: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 03/09/23 08:53:42.093
    Mar  9 08:53:42.106: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:42.106: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 08:53:43.113: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:43.113: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 08:53:44.110: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:44.110: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 08:53:45.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 08:53:45.112: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/09/23 08:53:45.12
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3937, will wait for the garbage collector to delete the pods 03/09/23 08:53:45.12
    Mar  9 08:53:45.182: INFO: Deleting DaemonSet.extensions daemon-set took: 7.356146ms
    Mar  9 08:53:45.283: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.174934ms
    Mar  9 08:53:48.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 08:53:48.188: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar  9 08:53:48.192: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"270435"},"items":null}

    Mar  9 08:53:48.195: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"270435"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:48.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-3937" for this suite. 03/09/23 08:53:48.23
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:48.243
Mar  9 08:53:48.244: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 08:53:48.245
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:48.262
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:48.266
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
STEP: Creating secret with name secret-test-1df5eaa0-5ec5-4145-8d38-6150fd7ebc2c 03/09/23 08:53:48.292
STEP: Creating a pod to test consume secrets 03/09/23 08:53:48.298
Mar  9 08:53:48.309: INFO: Waiting up to 5m0s for pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd" in namespace "secrets-4790" to be "Succeeded or Failed"
Mar  9 08:53:48.313: INFO: Pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd": Phase="Pending", Reason="", readiness=false. Elapsed: 4.661081ms
Mar  9 08:53:50.318: INFO: Pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009707045s
Mar  9 08:53:52.319: INFO: Pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010312016s
STEP: Saw pod success 03/09/23 08:53:52.319
Mar  9 08:53:52.319: INFO: Pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd" satisfied condition "Succeeded or Failed"
Mar  9 08:53:52.323: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd container secret-volume-test: <nil>
STEP: delete the pod 03/09/23 08:53:52.332
Mar  9 08:53:52.347: INFO: Waiting for pod pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd to disappear
Mar  9 08:53:52.350: INFO: Pod pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 08:53:52.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4790" for this suite. 03/09/23 08:53:52.357
STEP: Destroying namespace "secret-namespace-9622" for this suite. 03/09/23 08:53:52.364
------------------------------
â€¢ [4.128 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:48.243
    Mar  9 08:53:48.244: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 08:53:48.245
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:48.262
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:48.266
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:99
    STEP: Creating secret with name secret-test-1df5eaa0-5ec5-4145-8d38-6150fd7ebc2c 03/09/23 08:53:48.292
    STEP: Creating a pod to test consume secrets 03/09/23 08:53:48.298
    Mar  9 08:53:48.309: INFO: Waiting up to 5m0s for pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd" in namespace "secrets-4790" to be "Succeeded or Failed"
    Mar  9 08:53:48.313: INFO: Pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd": Phase="Pending", Reason="", readiness=false. Elapsed: 4.661081ms
    Mar  9 08:53:50.318: INFO: Pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009707045s
    Mar  9 08:53:52.319: INFO: Pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010312016s
    STEP: Saw pod success 03/09/23 08:53:52.319
    Mar  9 08:53:52.319: INFO: Pod "pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd" satisfied condition "Succeeded or Failed"
    Mar  9 08:53:52.323: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd container secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 08:53:52.332
    Mar  9 08:53:52.347: INFO: Waiting for pod pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd to disappear
    Mar  9 08:53:52.350: INFO: Pod pod-secrets-34f8aaea-f350-47e5-9511-5d7cf74783fd no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:53:52.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4790" for this suite. 03/09/23 08:53:52.357
    STEP: Destroying namespace "secret-namespace-9622" for this suite. 03/09/23 08:53:52.364
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:53:52.377
Mar  9 08:53:52.378: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-probe 03/09/23 08:53:52.379
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:52.399
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:52.404
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
STEP: Creating pod liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 in namespace container-probe-360 03/09/23 08:53:52.409
Mar  9 08:53:52.421: INFO: Waiting up to 5m0s for pod "liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956" in namespace "container-probe-360" to be "not pending"
Mar  9 08:53:52.426: INFO: Pod "liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956": Phase="Pending", Reason="", readiness=false. Elapsed: 4.317011ms
Mar  9 08:53:54.431: INFO: Pod "liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956": Phase="Running", Reason="", readiness=true. Elapsed: 2.009873773s
Mar  9 08:53:54.431: INFO: Pod "liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956" satisfied condition "not pending"
Mar  9 08:53:54.431: INFO: Started pod liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 in namespace container-probe-360
STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 08:53:54.431
Mar  9 08:53:54.436: INFO: Initial restart count of pod liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is 0
Mar  9 08:54:14.493: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 1 (20.057587253s elapsed)
Mar  9 08:54:34.549: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 2 (40.113419362s elapsed)
Mar  9 08:54:54.605: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 3 (1m0.168817126s elapsed)
Mar  9 08:55:14.660: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 4 (1m20.224039072s elapsed)
Mar  9 08:56:24.871: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 5 (2m30.435299843s elapsed)
STEP: deleting the pod 03/09/23 08:56:24.871
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar  9 08:56:24.886: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-360" for this suite. 03/09/23 08:56:24.892
------------------------------
â€¢ [SLOW TEST] [152.521 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:53:52.377
    Mar  9 08:53:52.378: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-probe 03/09/23 08:53:52.379
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:53:52.399
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:53:52.404
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should have monotonically increasing restart count [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:199
    STEP: Creating pod liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 in namespace container-probe-360 03/09/23 08:53:52.409
    Mar  9 08:53:52.421: INFO: Waiting up to 5m0s for pod "liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956" in namespace "container-probe-360" to be "not pending"
    Mar  9 08:53:52.426: INFO: Pod "liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956": Phase="Pending", Reason="", readiness=false. Elapsed: 4.317011ms
    Mar  9 08:53:54.431: INFO: Pod "liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956": Phase="Running", Reason="", readiness=true. Elapsed: 2.009873773s
    Mar  9 08:53:54.431: INFO: Pod "liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956" satisfied condition "not pending"
    Mar  9 08:53:54.431: INFO: Started pod liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 in namespace container-probe-360
    STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 08:53:54.431
    Mar  9 08:53:54.436: INFO: Initial restart count of pod liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is 0
    Mar  9 08:54:14.493: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 1 (20.057587253s elapsed)
    Mar  9 08:54:34.549: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 2 (40.113419362s elapsed)
    Mar  9 08:54:54.605: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 3 (1m0.168817126s elapsed)
    Mar  9 08:55:14.660: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 4 (1m20.224039072s elapsed)
    Mar  9 08:56:24.871: INFO: Restart count of pod container-probe-360/liveness-77c6ff6a-5c4a-4570-a570-1b91e8ba9956 is now 5 (2m30.435299843s elapsed)
    STEP: deleting the pod 03/09/23 08:56:24.871
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:56:24.886: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-360" for this suite. 03/09/23 08:56:24.892
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:56:24.902
Mar  9 08:56:24.902: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubelet-test 03/09/23 08:56:24.904
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:24.92
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:24.925
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
Mar  9 08:56:24.939: INFO: Waiting up to 5m0s for pod "busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5" in namespace "kubelet-test-6711" to be "running and ready"
Mar  9 08:56:24.943: INFO: Pod "busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.263913ms
Mar  9 08:56:24.943: INFO: The phase of Pod busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 08:56:26.949: INFO: Pod "busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5": Phase="Running", Reason="", readiness=true. Elapsed: 2.010271932s
Mar  9 08:56:26.949: INFO: The phase of Pod busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5 is Running (Ready = true)
Mar  9 08:56:26.949: INFO: Pod "busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar  9 08:56:26.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-6711" for this suite. 03/09/23 08:56:26.991
------------------------------
â€¢ [2.097 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command in a pod
  test/e2e/common/node/kubelet.go:44
    should print the output to logs [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:56:24.902
    Mar  9 08:56:24.902: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubelet-test 03/09/23 08:56:24.904
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:24.92
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:24.925
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should print the output to logs [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:52
    Mar  9 08:56:24.939: INFO: Waiting up to 5m0s for pod "busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5" in namespace "kubelet-test-6711" to be "running and ready"
    Mar  9 08:56:24.943: INFO: Pod "busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.263913ms
    Mar  9 08:56:24.943: INFO: The phase of Pod busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 08:56:26.949: INFO: Pod "busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5": Phase="Running", Reason="", readiness=true. Elapsed: 2.010271932s
    Mar  9 08:56:26.949: INFO: The phase of Pod busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5 is Running (Ready = true)
    Mar  9 08:56:26.949: INFO: Pod "busybox-scheduling-df201f68-c99c-47e9-bb43-e6fe02600ac5" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:56:26.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-6711" for this suite. 03/09/23 08:56:26.991
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:56:26.999
Mar  9 08:56:27.000: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:56:27.001
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:27.017
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:27.022
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
Mar  9 08:56:27.028: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/09/23 08:56:29.034
Mar  9 08:56:29.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 --namespace=crd-publish-openapi-8104 create -f -'
Mar  9 08:56:30.189: INFO: stderr: ""
Mar  9 08:56:30.189: INFO: stdout: "e2e-test-crd-publish-openapi-6623-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Mar  9 08:56:30.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 --namespace=crd-publish-openapi-8104 delete e2e-test-crd-publish-openapi-6623-crds test-cr'
Mar  9 08:56:30.350: INFO: stderr: ""
Mar  9 08:56:30.350: INFO: stdout: "e2e-test-crd-publish-openapi-6623-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Mar  9 08:56:30.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 --namespace=crd-publish-openapi-8104 apply -f -'
Mar  9 08:56:30.861: INFO: stderr: ""
Mar  9 08:56:30.861: INFO: stdout: "e2e-test-crd-publish-openapi-6623-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Mar  9 08:56:30.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 --namespace=crd-publish-openapi-8104 delete e2e-test-crd-publish-openapi-6623-crds test-cr'
Mar  9 08:56:30.998: INFO: stderr: ""
Mar  9 08:56:30.998: INFO: stdout: "e2e-test-crd-publish-openapi-6623-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 03/09/23 08:56:30.998
Mar  9 08:56:30.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 explain e2e-test-crd-publish-openapi-6623-crds'
Mar  9 08:56:31.512: INFO: stderr: ""
Mar  9 08:56:31.512: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6623-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:56:33.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-8104" for this suite. 03/09/23 08:56:33.974
------------------------------
â€¢ [SLOW TEST] [6.982 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:56:26.999
    Mar  9 08:56:27.000: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 08:56:27.001
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:27.017
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:27.022
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields in an embedded object [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:236
    Mar  9 08:56:27.028: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 03/09/23 08:56:29.034
    Mar  9 08:56:29.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 --namespace=crd-publish-openapi-8104 create -f -'
    Mar  9 08:56:30.189: INFO: stderr: ""
    Mar  9 08:56:30.189: INFO: stdout: "e2e-test-crd-publish-openapi-6623-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Mar  9 08:56:30.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 --namespace=crd-publish-openapi-8104 delete e2e-test-crd-publish-openapi-6623-crds test-cr'
    Mar  9 08:56:30.350: INFO: stderr: ""
    Mar  9 08:56:30.350: INFO: stdout: "e2e-test-crd-publish-openapi-6623-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    Mar  9 08:56:30.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 --namespace=crd-publish-openapi-8104 apply -f -'
    Mar  9 08:56:30.861: INFO: stderr: ""
    Mar  9 08:56:30.861: INFO: stdout: "e2e-test-crd-publish-openapi-6623-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Mar  9 08:56:30.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 --namespace=crd-publish-openapi-8104 delete e2e-test-crd-publish-openapi-6623-crds test-cr'
    Mar  9 08:56:30.998: INFO: stderr: ""
    Mar  9 08:56:30.998: INFO: stdout: "e2e-test-crd-publish-openapi-6623-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 03/09/23 08:56:30.998
    Mar  9 08:56:30.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=crd-publish-openapi-8104 explain e2e-test-crd-publish-openapi-6623-crds'
    Mar  9 08:56:31.512: INFO: stderr: ""
    Mar  9 08:56:31.512: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6623-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:56:33.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-8104" for this suite. 03/09/23 08:56:33.974
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:56:33.983
Mar  9 08:56:33.983: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:56:33.984
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:34
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:34.005
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
STEP: creating service in namespace services-7578 03/09/23 08:56:34.01
STEP: creating service affinity-nodeport-transition in namespace services-7578 03/09/23 08:56:34.01
STEP: creating replication controller affinity-nodeport-transition in namespace services-7578 03/09/23 08:56:34.032
I0309 08:56:34.039352      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7578, replica count: 3
I0309 08:56:37.090114      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 08:56:37.104: INFO: Creating new exec pod
Mar  9 08:56:37.110: INFO: Waiting up to 5m0s for pod "execpod-affinityjhjql" in namespace "services-7578" to be "running"
Mar  9 08:56:37.113: INFO: Pod "execpod-affinityjhjql": Phase="Pending", Reason="", readiness=false. Elapsed: 3.363174ms
Mar  9 08:56:39.118: INFO: Pod "execpod-affinityjhjql": Phase="Running", Reason="", readiness=true. Elapsed: 2.008357944s
Mar  9 08:56:39.118: INFO: Pod "execpod-affinityjhjql" satisfied condition "running"
Mar  9 08:56:40.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
Mar  9 08:56:40.429: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Mar  9 08:56:40.429: INFO: stdout: ""
Mar  9 08:56:40.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c nc -v -z -w 2 10.97.224.91 80'
Mar  9 08:56:40.694: INFO: stderr: "+ nc -v -z -w 2 10.97.224.91 80\nConnection to 10.97.224.91 80 port [tcp/http] succeeded!\n"
Mar  9 08:56:40.694: INFO: stdout: ""
Mar  9 08:56:40.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c nc -v -z -w 2 192.168.0.102 32422'
Mar  9 08:56:40.969: INFO: stderr: "+ nc -v -z -w 2 192.168.0.102 32422\nConnection to 192.168.0.102 32422 port [tcp/*] succeeded!\n"
Mar  9 08:56:40.969: INFO: stdout: ""
Mar  9 08:56:40.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c nc -v -z -w 2 192.168.0.103 32422'
Mar  9 08:56:41.222: INFO: stderr: "+ nc -v -z -w 2 192.168.0.103 32422\nConnection to 192.168.0.103 32422 port [tcp/*] succeeded!\n"
Mar  9 08:56:41.222: INFO: stdout: ""
Mar  9 08:56:41.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.102:32422/ ; done'
Mar  9 08:56:41.683: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n"
Mar  9 08:56:41.683: INFO: stdout: "\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cms24"
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
Mar  9 08:56:41.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.102:32422/ ; done'
Mar  9 08:56:42.184: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n"
Mar  9 08:56:42.184: INFO: stdout: "\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl"
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
Mar  9 08:56:42.184: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7578, will wait for the garbage collector to delete the pods 03/09/23 08:56:42.2
Mar  9 08:56:42.264: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.808736ms
Mar  9 08:56:42.365: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.682112ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:56:44.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7578" for this suite. 03/09/23 08:56:44.8
------------------------------
â€¢ [SLOW TEST] [10.826 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:56:33.983
    Mar  9 08:56:33.983: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:56:33.984
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:34
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:34.005
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2250
    STEP: creating service in namespace services-7578 03/09/23 08:56:34.01
    STEP: creating service affinity-nodeport-transition in namespace services-7578 03/09/23 08:56:34.01
    STEP: creating replication controller affinity-nodeport-transition in namespace services-7578 03/09/23 08:56:34.032
    I0309 08:56:34.039352      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7578, replica count: 3
    I0309 08:56:37.090114      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 08:56:37.104: INFO: Creating new exec pod
    Mar  9 08:56:37.110: INFO: Waiting up to 5m0s for pod "execpod-affinityjhjql" in namespace "services-7578" to be "running"
    Mar  9 08:56:37.113: INFO: Pod "execpod-affinityjhjql": Phase="Pending", Reason="", readiness=false. Elapsed: 3.363174ms
    Mar  9 08:56:39.118: INFO: Pod "execpod-affinityjhjql": Phase="Running", Reason="", readiness=true. Elapsed: 2.008357944s
    Mar  9 08:56:39.118: INFO: Pod "execpod-affinityjhjql" satisfied condition "running"
    Mar  9 08:56:40.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
    Mar  9 08:56:40.429: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
    Mar  9 08:56:40.429: INFO: stdout: ""
    Mar  9 08:56:40.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c nc -v -z -w 2 10.97.224.91 80'
    Mar  9 08:56:40.694: INFO: stderr: "+ nc -v -z -w 2 10.97.224.91 80\nConnection to 10.97.224.91 80 port [tcp/http] succeeded!\n"
    Mar  9 08:56:40.694: INFO: stdout: ""
    Mar  9 08:56:40.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c nc -v -z -w 2 192.168.0.102 32422'
    Mar  9 08:56:40.969: INFO: stderr: "+ nc -v -z -w 2 192.168.0.102 32422\nConnection to 192.168.0.102 32422 port [tcp/*] succeeded!\n"
    Mar  9 08:56:40.969: INFO: stdout: ""
    Mar  9 08:56:40.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c nc -v -z -w 2 192.168.0.103 32422'
    Mar  9 08:56:41.222: INFO: stderr: "+ nc -v -z -w 2 192.168.0.103 32422\nConnection to 192.168.0.103 32422 port [tcp/*] succeeded!\n"
    Mar  9 08:56:41.222: INFO: stdout: ""
    Mar  9 08:56:41.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.102:32422/ ; done'
    Mar  9 08:56:41.683: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n"
    Mar  9 08:56:41.683: INFO: stdout: "\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-ztxcv\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-cms24\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cms24"
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-ztxcv
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:41.683: INFO: Received response from host: affinity-nodeport-transition-cms24
    Mar  9 08:56:41.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-7578 exec execpod-affinityjhjql -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.0.102:32422/ ; done'
    Mar  9 08:56:42.184: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.0.102:32422/\n"
    Mar  9 08:56:42.184: INFO: stdout: "\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl\naffinity-nodeport-transition-cgfxl"
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Received response from host: affinity-nodeport-transition-cgfxl
    Mar  9 08:56:42.184: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7578, will wait for the garbage collector to delete the pods 03/09/23 08:56:42.2
    Mar  9 08:56:42.264: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.808736ms
    Mar  9 08:56:42.365: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.682112ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:56:44.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7578" for this suite. 03/09/23 08:56:44.8
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:56:44.81
Mar  9 08:56:44.810: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename disruption 03/09/23 08:56:44.812
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:44.828
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:44.833
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:56:44.839
Mar  9 08:56:44.839: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename disruption-2 03/09/23 08:56:44.841
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:44.856
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:44.861
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
STEP: Waiting for the pdb to be processed 03/09/23 08:56:44.872
STEP: Waiting for the pdb to be processed 03/09/23 08:56:46.887
STEP: Waiting for the pdb to be processed 03/09/23 08:56:48.902
STEP: listing a collection of PDBs across all namespaces 03/09/23 08:56:50.912
STEP: listing a collection of PDBs in namespace disruption-8408 03/09/23 08:56:50.916
STEP: deleting a collection of PDBs 03/09/23 08:56:50.92
STEP: Waiting for the PDB collection to be deleted 03/09/23 08:56:50.934
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/node/init/init.go:32
Mar  9 08:56:50.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar  9 08:56:50.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  dump namespaces | framework.go:196
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-2-5934" for this suite. 03/09/23 08:56:50.952
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-8408" for this suite. 03/09/23 08:56:50.959
------------------------------
â€¢ [SLOW TEST] [6.155 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:78
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/apps/disruption.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:56:44.81
    Mar  9 08:56:44.810: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename disruption 03/09/23 08:56:44.812
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:44.828
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:44.833
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:56:44.839
    Mar  9 08:56:44.839: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename disruption-2 03/09/23 08:56:44.841
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:44.856
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:44.861
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of PodDisruptionBudgets [Conformance]
      test/e2e/apps/disruption.go:87
    STEP: Waiting for the pdb to be processed 03/09/23 08:56:44.872
    STEP: Waiting for the pdb to be processed 03/09/23 08:56:46.887
    STEP: Waiting for the pdb to be processed 03/09/23 08:56:48.902
    STEP: listing a collection of PDBs across all namespaces 03/09/23 08:56:50.912
    STEP: listing a collection of PDBs in namespace disruption-8408 03/09/23 08:56:50.916
    STEP: deleting a collection of PDBs 03/09/23 08:56:50.92
    STEP: Waiting for the PDB collection to be deleted 03/09/23 08:56:50.934
    [AfterEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:56:50.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:56:50.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-2-5934" for this suite. 03/09/23 08:56:50.952
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-8408" for this suite. 03/09/23 08:56:50.959
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label
  should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:56:50.967
Mar  9 08:56:50.967: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 08:56:50.969
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:50.983
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:50.989
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1494
STEP: creating the pod 03/09/23 08:56:50.994
Mar  9 08:56:50.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 create -f -'
Mar  9 08:56:52.176: INFO: stderr: ""
Mar  9 08:56:52.176: INFO: stdout: "pod/pause created\n"
Mar  9 08:56:52.176: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Mar  9 08:56:52.176: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-5928" to be "running and ready"
Mar  9 08:56:52.182: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 5.860833ms
Mar  9 08:56:52.182: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'k8s-worker1' to be 'Running' but was 'Pending'
Mar  9 08:56:54.188: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011430309s
Mar  9 08:56:54.188: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'k8s-worker1' to be 'Running' but was 'Pending'
Mar  9 08:56:56.189: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 4.012968918s
Mar  9 08:56:56.189: INFO: Pod "pause" satisfied condition "running and ready"
Mar  9 08:56:56.189: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
STEP: adding the label testing-label with value testing-label-value to a pod 03/09/23 08:56:56.189
Mar  9 08:56:56.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 label pods pause testing-label=testing-label-value'
Mar  9 08:56:56.351: INFO: stderr: ""
Mar  9 08:56:56.351: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value 03/09/23 08:56:56.351
Mar  9 08:56:56.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 get pod pause -L testing-label'
Mar  9 08:56:56.519: INFO: stderr: ""
Mar  9 08:56:56.519: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    testing-label-value\n"
STEP: removing the label testing-label of a pod 03/09/23 08:56:56.519
Mar  9 08:56:56.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 label pods pause testing-label-'
Mar  9 08:56:56.674: INFO: stderr: ""
Mar  9 08:56:56.674: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label 03/09/23 08:56:56.674
Mar  9 08:56:56.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 get pod pause -L testing-label'
Mar  9 08:56:56.812: INFO: stderr: ""
Mar  9 08:56:56.812: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1500
STEP: using delete to clean up resources 03/09/23 08:56:56.812
Mar  9 08:56:56.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 delete --grace-period=0 --force -f -'
Mar  9 08:56:56.967: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 08:56:56.967: INFO: stdout: "pod \"pause\" force deleted\n"
Mar  9 08:56:56.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 get rc,svc -l name=pause --no-headers'
Mar  9 08:56:57.127: INFO: stderr: "No resources found in kubectl-5928 namespace.\n"
Mar  9 08:56:57.127: INFO: stdout: ""
Mar  9 08:56:57.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Mar  9 08:56:57.288: INFO: stderr: ""
Mar  9 08:56:57.288: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 08:56:57.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5928" for this suite. 03/09/23 08:56:57.294
------------------------------
â€¢ [SLOW TEST] [6.333 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl label
  test/e2e/kubectl/kubectl.go:1492
    should update the label on a resource  [Conformance]
    test/e2e/kubectl/kubectl.go:1509

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:56:50.967
    Mar  9 08:56:50.967: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 08:56:50.969
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:50.983
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:50.989
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1494
    STEP: creating the pod 03/09/23 08:56:50.994
    Mar  9 08:56:50.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 create -f -'
    Mar  9 08:56:52.176: INFO: stderr: ""
    Mar  9 08:56:52.176: INFO: stdout: "pod/pause created\n"
    Mar  9 08:56:52.176: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
    Mar  9 08:56:52.176: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-5928" to be "running and ready"
    Mar  9 08:56:52.182: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 5.860833ms
    Mar  9 08:56:52.182: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'k8s-worker1' to be 'Running' but was 'Pending'
    Mar  9 08:56:54.188: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011430309s
    Mar  9 08:56:54.188: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'k8s-worker1' to be 'Running' but was 'Pending'
    Mar  9 08:56:56.189: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 4.012968918s
    Mar  9 08:56:56.189: INFO: Pod "pause" satisfied condition "running and ready"
    Mar  9 08:56:56.189: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
    [It] should update the label on a resource  [Conformance]
      test/e2e/kubectl/kubectl.go:1509
    STEP: adding the label testing-label with value testing-label-value to a pod 03/09/23 08:56:56.189
    Mar  9 08:56:56.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 label pods pause testing-label=testing-label-value'
    Mar  9 08:56:56.351: INFO: stderr: ""
    Mar  9 08:56:56.351: INFO: stdout: "pod/pause labeled\n"
    STEP: verifying the pod has the label testing-label with the value testing-label-value 03/09/23 08:56:56.351
    Mar  9 08:56:56.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 get pod pause -L testing-label'
    Mar  9 08:56:56.519: INFO: stderr: ""
    Mar  9 08:56:56.519: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    testing-label-value\n"
    STEP: removing the label testing-label of a pod 03/09/23 08:56:56.519
    Mar  9 08:56:56.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 label pods pause testing-label-'
    Mar  9 08:56:56.674: INFO: stderr: ""
    Mar  9 08:56:56.674: INFO: stdout: "pod/pause unlabeled\n"
    STEP: verifying the pod doesn't have the label testing-label 03/09/23 08:56:56.674
    Mar  9 08:56:56.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 get pod pause -L testing-label'
    Mar  9 08:56:56.812: INFO: stderr: ""
    Mar  9 08:56:56.812: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    \n"
    [AfterEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1500
    STEP: using delete to clean up resources 03/09/23 08:56:56.812
    Mar  9 08:56:56.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 delete --grace-period=0 --force -f -'
    Mar  9 08:56:56.967: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 08:56:56.967: INFO: stdout: "pod \"pause\" force deleted\n"
    Mar  9 08:56:56.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 get rc,svc -l name=pause --no-headers'
    Mar  9 08:56:57.127: INFO: stderr: "No resources found in kubectl-5928 namespace.\n"
    Mar  9 08:56:57.127: INFO: stdout: ""
    Mar  9 08:56:57.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-5928 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Mar  9 08:56:57.288: INFO: stderr: ""
    Mar  9 08:56:57.288: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:56:57.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5928" for this suite. 03/09/23 08:56:57.294
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:56:57.302
Mar  9 08:56:57.302: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 08:56:57.304
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:57.319
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:57.323
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 08:56:57.342
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:56:58.014
STEP: Deploying the webhook pod 03/09/23 08:56:58.023
STEP: Wait for the deployment to be ready 03/09/23 08:56:58.041
Mar  9 08:56:58.051: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 08:57:00.065
STEP: Verifying the service has paired with the endpoint 03/09/23 08:57:00.083
Mar  9 08:57:01.084: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 03/09/23 08:57:01.088
STEP: create a configmap that should be updated by the webhook 03/09/23 08:57:01.123
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:57:01.169: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9692" for this suite. 03/09/23 08:57:01.221
STEP: Destroying namespace "webhook-9692-markers" for this suite. 03/09/23 08:57:01.23
------------------------------
â€¢ [3.939 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:56:57.302
    Mar  9 08:56:57.302: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 08:56:57.304
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:56:57.319
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:56:57.323
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 08:56:57.342
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 08:56:58.014
    STEP: Deploying the webhook pod 03/09/23 08:56:58.023
    STEP: Wait for the deployment to be ready 03/09/23 08:56:58.041
    Mar  9 08:56:58.051: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 08:57:00.065
    STEP: Verifying the service has paired with the endpoint 03/09/23 08:57:00.083
    Mar  9 08:57:01.084: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate configmap [Conformance]
      test/e2e/apimachinery/webhook.go:252
    STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 03/09/23 08:57:01.088
    STEP: create a configmap that should be updated by the webhook 03/09/23 08:57:01.123
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:57:01.169: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9692" for this suite. 03/09/23 08:57:01.221
    STEP: Destroying namespace "webhook-9692-markers" for this suite. 03/09/23 08:57:01.23
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:57:01.244
Mar  9 08:57:01.244: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename dns 03/09/23 08:57:01.246
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:57:01.259
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:57:01.264
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
STEP: Creating a test headless service 03/09/23 08:57:01.269
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 61.34.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.34.61_udp@PTR;check="$$(dig +tcp +noall +answer +search 61.34.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.34.61_tcp@PTR;sleep 1; done
 03/09/23 08:57:01.289
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 61.34.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.34.61_udp@PTR;check="$$(dig +tcp +noall +answer +search 61.34.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.34.61_tcp@PTR;sleep 1; done
 03/09/23 08:57:01.289
STEP: creating a pod to probe DNS 03/09/23 08:57:01.289
STEP: submitting the pod to kubernetes 03/09/23 08:57:01.289
Mar  9 08:57:01.300: INFO: Waiting up to 15m0s for pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1" in namespace "dns-9455" to be "running"
Mar  9 08:57:01.307: INFO: Pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.578019ms
Mar  9 08:57:03.312: INFO: Pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012324402s
Mar  9 08:57:05.313: INFO: Pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1": Phase="Running", Reason="", readiness=true. Elapsed: 4.012724969s
Mar  9 08:57:05.313: INFO: Pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1" satisfied condition "running"
STEP: retrieving the pod 03/09/23 08:57:05.313
STEP: looking for the results for each expected name from probers 03/09/23 08:57:05.317
Mar  9 08:57:05.323: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:05.328: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:05.333: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:05.338: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:05.363: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:05.368: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:05.373: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:05.378: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:05.399: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

Mar  9 08:57:10.406: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:10.411: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:10.416: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:10.421: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:10.445: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:10.450: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:10.455: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:10.459: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:10.479: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

Mar  9 08:57:15.406: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:15.411: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:15.416: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:15.420: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:15.445: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:15.450: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:15.455: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:15.460: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:15.479: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

Mar  9 08:57:20.406: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:20.411: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:20.416: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:20.421: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:20.446: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:20.451: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:20.456: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:20.461: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:20.490: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

Mar  9 08:57:25.405: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:25.410: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:25.415: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:25.420: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:25.444: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:25.448: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:25.453: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:25.458: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:25.477: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

Mar  9 08:57:30.406: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:30.411: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:30.416: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:30.420: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:30.444: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:30.448: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:30.453: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:30.458: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
Mar  9 08:57:30.478: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

Mar  9 08:57:35.479: INFO: DNS probes using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 succeeded

STEP: deleting the pod 03/09/23 08:57:35.479
STEP: deleting the test service 03/09/23 08:57:35.503
STEP: deleting the test headless service 03/09/23 08:57:35.545
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar  9 08:57:35.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-9455" for this suite. 03/09/23 08:57:35.565
------------------------------
â€¢ [SLOW TEST] [34.327 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:57:01.244
    Mar  9 08:57:01.244: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename dns 03/09/23 08:57:01.246
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:57:01.259
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:57:01.264
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for services  [Conformance]
      test/e2e/network/dns.go:137
    STEP: Creating a test headless service 03/09/23 08:57:01.269
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 61.34.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.34.61_udp@PTR;check="$$(dig +tcp +noall +answer +search 61.34.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.34.61_tcp@PTR;sleep 1; done
     03/09/23 08:57:01.289
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9455.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9455.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9455.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9455.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 61.34.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.34.61_udp@PTR;check="$$(dig +tcp +noall +answer +search 61.34.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.34.61_tcp@PTR;sleep 1; done
     03/09/23 08:57:01.289
    STEP: creating a pod to probe DNS 03/09/23 08:57:01.289
    STEP: submitting the pod to kubernetes 03/09/23 08:57:01.289
    Mar  9 08:57:01.300: INFO: Waiting up to 15m0s for pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1" in namespace "dns-9455" to be "running"
    Mar  9 08:57:01.307: INFO: Pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.578019ms
    Mar  9 08:57:03.312: INFO: Pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012324402s
    Mar  9 08:57:05.313: INFO: Pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1": Phase="Running", Reason="", readiness=true. Elapsed: 4.012724969s
    Mar  9 08:57:05.313: INFO: Pod "dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 08:57:05.313
    STEP: looking for the results for each expected name from probers 03/09/23 08:57:05.317
    Mar  9 08:57:05.323: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:05.328: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:05.333: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:05.338: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:05.363: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:05.368: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:05.373: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:05.378: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:05.399: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

    Mar  9 08:57:10.406: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:10.411: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:10.416: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:10.421: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:10.445: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:10.450: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:10.455: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:10.459: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:10.479: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

    Mar  9 08:57:15.406: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:15.411: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:15.416: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:15.420: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:15.445: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:15.450: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:15.455: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:15.460: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:15.479: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

    Mar  9 08:57:20.406: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:20.411: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:20.416: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:20.421: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:20.446: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:20.451: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:20.456: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:20.461: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:20.490: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

    Mar  9 08:57:25.405: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:25.410: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:25.415: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:25.420: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:25.444: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:25.448: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:25.453: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:25.458: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:25.477: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

    Mar  9 08:57:30.406: INFO: Unable to read wheezy_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:30.411: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:30.416: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:30.420: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:30.444: INFO: Unable to read jessie_udp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:30.448: INFO: Unable to read jessie_tcp@dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:30.453: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:30.458: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local from pod dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1: the server could not find the requested resource (get pods dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1)
    Mar  9 08:57:30.478: INFO: Lookups using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 failed for: [wheezy_udp@dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@dns-test-service.dns-9455.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_udp@dns-test-service.dns-9455.svc.cluster.local jessie_tcp@dns-test-service.dns-9455.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9455.svc.cluster.local]

    Mar  9 08:57:35.479: INFO: DNS probes using dns-9455/dns-test-5567ed87-e8c1-4b1f-9283-abc66bb79aa1 succeeded

    STEP: deleting the pod 03/09/23 08:57:35.479
    STEP: deleting the test service 03/09/23 08:57:35.503
    STEP: deleting the test headless service 03/09/23 08:57:35.545
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:57:35.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-9455" for this suite. 03/09/23 08:57:35.565
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:57:35.577
Mar  9 08:57:35.578: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename init-container 03/09/23 08:57:35.58
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:57:35.599
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:57:35.604
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
STEP: creating the pod 03/09/23 08:57:35.609
Mar  9 08:57:35.609: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar  9 08:57:41.488: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-5794" for this suite. 03/09/23 08:57:41.498
------------------------------
â€¢ [SLOW TEST] [5.928 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:57:35.577
    Mar  9 08:57:35.578: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename init-container 03/09/23 08:57:35.58
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:57:35.599
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:57:35.604
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:177
    STEP: creating the pod 03/09/23 08:57:35.609
    Mar  9 08:57:35.609: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:57:41.488: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-5794" for this suite. 03/09/23 08:57:41.498
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] DNS
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:57:41.506
Mar  9 08:57:41.506: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename dns 03/09/23 08:57:41.508
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:57:41.523
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:57:41.527
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
STEP: Creating a test headless service 03/09/23 08:57:41.533
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-609 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-609;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-609 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-609;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-609.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-609.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-609.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-609.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-609.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-609.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-609.svc;check="$$(dig +notcp +noall +answer +search 28.89.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.89.28_udp@PTR;check="$$(dig +tcp +noall +answer +search 28.89.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.89.28_tcp@PTR;sleep 1; done
 03/09/23 08:57:41.557
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-609 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-609;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-609 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-609;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-609.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-609.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-609.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-609.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-609.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-609.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-609.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-609.svc;check="$$(dig +notcp +noall +answer +search 28.89.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.89.28_udp@PTR;check="$$(dig +tcp +noall +answer +search 28.89.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.89.28_tcp@PTR;sleep 1; done
 03/09/23 08:57:41.557
STEP: creating a pod to probe DNS 03/09/23 08:57:41.557
STEP: submitting the pod to kubernetes 03/09/23 08:57:41.557
Mar  9 08:57:41.571: INFO: Waiting up to 15m0s for pod "dns-test-f4158291-9a55-4168-ac55-370d9fe6165a" in namespace "dns-609" to be "running"
Mar  9 08:57:41.589: INFO: Pod "dns-test-f4158291-9a55-4168-ac55-370d9fe6165a": Phase="Pending", Reason="", readiness=false. Elapsed: 17.444526ms
Mar  9 08:57:43.594: INFO: Pod "dns-test-f4158291-9a55-4168-ac55-370d9fe6165a": Phase="Running", Reason="", readiness=true. Elapsed: 2.023289045s
Mar  9 08:57:43.594: INFO: Pod "dns-test-f4158291-9a55-4168-ac55-370d9fe6165a" satisfied condition "running"
STEP: retrieving the pod 03/09/23 08:57:43.594
STEP: looking for the results for each expected name from probers 03/09/23 08:57:43.599
Mar  9 08:57:43.605: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.610: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.615: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.620: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.625: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.631: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.636: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.640: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.665: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.671: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.676: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.680: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.686: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.691: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.695: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.700: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:43.720: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

Mar  9 08:57:48.729: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.734: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.739: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.744: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.749: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.753: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.759: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.764: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.790: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.794: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.799: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.805: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.810: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.815: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.820: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.834: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:48.854: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

Mar  9 08:57:53.728: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.733: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.738: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.744: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.749: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.754: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.759: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.764: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.790: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.795: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.801: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.806: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.811: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.815: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.821: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.836: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:53.855: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

Mar  9 08:57:58.726: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.731: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.736: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.742: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.746: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.752: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.757: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.762: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.787: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.792: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.797: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.802: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.806: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.812: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.817: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.831: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:57:58.852: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

Mar  9 08:58:03.726: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.732: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.737: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.742: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.747: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.753: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.758: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.763: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.790: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.795: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.799: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.805: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.810: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.815: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.820: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.825: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:03.845: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

Mar  9 08:58:08.729: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.734: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.739: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.744: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.749: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.754: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.759: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.764: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.790: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.795: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.800: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.807: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.811: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.817: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.822: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.827: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
Mar  9 08:58:08.846: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

Mar  9 08:58:13.843: INFO: DNS probes using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a succeeded

STEP: deleting the pod 03/09/23 08:58:13.843
STEP: deleting the test service 03/09/23 08:58:13.862
STEP: deleting the test headless service 03/09/23 08:58:13.899
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar  9 08:58:13.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-609" for this suite. 03/09/23 08:58:13.917
------------------------------
â€¢ [SLOW TEST] [32.418 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:57:41.506
    Mar  9 08:57:41.506: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename dns 03/09/23 08:57:41.508
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:57:41.523
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:57:41.527
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
      test/e2e/network/dns.go:193
    STEP: Creating a test headless service 03/09/23 08:57:41.533
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-609 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-609;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-609 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-609;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-609.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-609.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-609.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-609.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-609.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-609.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-609.svc;check="$$(dig +notcp +noall +answer +search 28.89.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.89.28_udp@PTR;check="$$(dig +tcp +noall +answer +search 28.89.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.89.28_tcp@PTR;sleep 1; done
     03/09/23 08:57:41.557
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-609 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-609;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-609 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-609;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-609.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-609.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-609.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-609.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-609.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-609.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-609.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-609.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-609.svc;check="$$(dig +notcp +noall +answer +search 28.89.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.89.28_udp@PTR;check="$$(dig +tcp +noall +answer +search 28.89.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.89.28_tcp@PTR;sleep 1; done
     03/09/23 08:57:41.557
    STEP: creating a pod to probe DNS 03/09/23 08:57:41.557
    STEP: submitting the pod to kubernetes 03/09/23 08:57:41.557
    Mar  9 08:57:41.571: INFO: Waiting up to 15m0s for pod "dns-test-f4158291-9a55-4168-ac55-370d9fe6165a" in namespace "dns-609" to be "running"
    Mar  9 08:57:41.589: INFO: Pod "dns-test-f4158291-9a55-4168-ac55-370d9fe6165a": Phase="Pending", Reason="", readiness=false. Elapsed: 17.444526ms
    Mar  9 08:57:43.594: INFO: Pod "dns-test-f4158291-9a55-4168-ac55-370d9fe6165a": Phase="Running", Reason="", readiness=true. Elapsed: 2.023289045s
    Mar  9 08:57:43.594: INFO: Pod "dns-test-f4158291-9a55-4168-ac55-370d9fe6165a" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 08:57:43.594
    STEP: looking for the results for each expected name from probers 03/09/23 08:57:43.599
    Mar  9 08:57:43.605: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.610: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.615: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.620: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.625: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.631: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.636: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.640: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.665: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.671: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.676: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.680: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.686: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.691: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.695: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.700: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:43.720: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

    Mar  9 08:57:48.729: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.734: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.739: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.744: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.749: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.753: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.759: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.764: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.790: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.794: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.799: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.805: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.810: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.815: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.820: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.834: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:48.854: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

    Mar  9 08:57:53.728: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.733: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.738: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.744: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.749: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.754: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.759: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.764: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.790: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.795: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.801: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.806: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.811: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.815: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.821: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.836: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:53.855: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

    Mar  9 08:57:58.726: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.731: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.736: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.742: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.746: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.752: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.757: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.762: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.787: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.792: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.797: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.802: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.806: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.812: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.817: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.831: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:57:58.852: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

    Mar  9 08:58:03.726: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.732: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.737: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.742: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.747: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.753: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.758: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.763: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.790: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.795: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.799: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.805: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.810: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.815: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.820: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.825: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:03.845: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

    Mar  9 08:58:08.729: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.734: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.739: INFO: Unable to read wheezy_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.744: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.749: INFO: Unable to read wheezy_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.754: INFO: Unable to read wheezy_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.759: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.764: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.790: INFO: Unable to read jessie_udp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.795: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.800: INFO: Unable to read jessie_udp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.807: INFO: Unable to read jessie_tcp@dns-test-service.dns-609 from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.811: INFO: Unable to read jessie_udp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.817: INFO: Unable to read jessie_tcp@dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.822: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.827: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-609.svc from pod dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a: the server could not find the requested resource (get pods dns-test-f4158291-9a55-4168-ac55-370d9fe6165a)
    Mar  9 08:58:08.846: INFO: Lookups using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-609 wheezy_tcp@dns-test-service.dns-609 wheezy_udp@dns-test-service.dns-609.svc wheezy_tcp@dns-test-service.dns-609.svc wheezy_udp@_http._tcp.dns-test-service.dns-609.svc wheezy_tcp@_http._tcp.dns-test-service.dns-609.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-609 jessie_tcp@dns-test-service.dns-609 jessie_udp@dns-test-service.dns-609.svc jessie_tcp@dns-test-service.dns-609.svc jessie_udp@_http._tcp.dns-test-service.dns-609.svc jessie_tcp@_http._tcp.dns-test-service.dns-609.svc]

    Mar  9 08:58:13.843: INFO: DNS probes using dns-609/dns-test-f4158291-9a55-4168-ac55-370d9fe6165a succeeded

    STEP: deleting the pod 03/09/23 08:58:13.843
    STEP: deleting the test service 03/09/23 08:58:13.862
    STEP: deleting the test headless service 03/09/23 08:58:13.899
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:58:13.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-609" for this suite. 03/09/23 08:58:13.917
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:58:13.927
Mar  9 08:58:13.927: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 08:58:13.929
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:58:13.945
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:58:13.95
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
STEP: creating a service nodeport-service with the type=NodePort in namespace services-4212 03/09/23 08:58:13.955
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 03/09/23 08:58:13.975
STEP: creating service externalsvc in namespace services-4212 03/09/23 08:58:13.975
STEP: creating replication controller externalsvc in namespace services-4212 03/09/23 08:58:13.997
I0309 08:58:14.005554      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4212, replica count: 2
I0309 08:58:17.056681      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName 03/09/23 08:58:17.06
Mar  9 08:58:17.086: INFO: Creating new exec pod
Mar  9 08:58:17.094: INFO: Waiting up to 5m0s for pod "execpod6dff6" in namespace "services-4212" to be "running"
Mar  9 08:58:17.098: INFO: Pod "execpod6dff6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.185803ms
Mar  9 08:58:19.101: INFO: Pod "execpod6dff6": Phase="Running", Reason="", readiness=true. Elapsed: 2.007712993s
Mar  9 08:58:19.101: INFO: Pod "execpod6dff6" satisfied condition "running"
Mar  9 08:58:19.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-4212 exec execpod6dff6 -- /bin/sh -x -c nslookup nodeport-service.services-4212.svc.cluster.local'
Mar  9 08:58:19.404: INFO: stderr: "+ nslookup nodeport-service.services-4212.svc.cluster.local\n"
Mar  9 08:58:19.404: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-4212.svc.cluster.local\tcanonical name = externalsvc.services-4212.svc.cluster.local.\nName:\texternalsvc.services-4212.svc.cluster.local\nAddress: 10.97.44.254\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-4212, will wait for the garbage collector to delete the pods 03/09/23 08:58:19.404
Mar  9 08:58:19.466: INFO: Deleting ReplicationController externalsvc took: 7.262837ms
Mar  9 08:58:19.567: INFO: Terminating ReplicationController externalsvc pods took: 100.80297ms
Mar  9 08:58:22.091: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 08:58:22.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4212" for this suite. 03/09/23 08:58:22.115
------------------------------
â€¢ [SLOW TEST] [8.195 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:58:13.927
    Mar  9 08:58:13.927: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 08:58:13.929
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:58:13.945
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:58:13.95
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from NodePort to ExternalName [Conformance]
      test/e2e/network/service.go:1557
    STEP: creating a service nodeport-service with the type=NodePort in namespace services-4212 03/09/23 08:58:13.955
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 03/09/23 08:58:13.975
    STEP: creating service externalsvc in namespace services-4212 03/09/23 08:58:13.975
    STEP: creating replication controller externalsvc in namespace services-4212 03/09/23 08:58:13.997
    I0309 08:58:14.005554      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4212, replica count: 2
    I0309 08:58:17.056681      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the NodePort service to type=ExternalName 03/09/23 08:58:17.06
    Mar  9 08:58:17.086: INFO: Creating new exec pod
    Mar  9 08:58:17.094: INFO: Waiting up to 5m0s for pod "execpod6dff6" in namespace "services-4212" to be "running"
    Mar  9 08:58:17.098: INFO: Pod "execpod6dff6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.185803ms
    Mar  9 08:58:19.101: INFO: Pod "execpod6dff6": Phase="Running", Reason="", readiness=true. Elapsed: 2.007712993s
    Mar  9 08:58:19.101: INFO: Pod "execpod6dff6" satisfied condition "running"
    Mar  9 08:58:19.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-4212 exec execpod6dff6 -- /bin/sh -x -c nslookup nodeport-service.services-4212.svc.cluster.local'
    Mar  9 08:58:19.404: INFO: stderr: "+ nslookup nodeport-service.services-4212.svc.cluster.local\n"
    Mar  9 08:58:19.404: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-4212.svc.cluster.local\tcanonical name = externalsvc.services-4212.svc.cluster.local.\nName:\texternalsvc.services-4212.svc.cluster.local\nAddress: 10.97.44.254\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-4212, will wait for the garbage collector to delete the pods 03/09/23 08:58:19.404
    Mar  9 08:58:19.466: INFO: Deleting ReplicationController externalsvc took: 7.262837ms
    Mar  9 08:58:19.567: INFO: Terminating ReplicationController externalsvc pods took: 100.80297ms
    Mar  9 08:58:22.091: INFO: Cleaning up the NodePort to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 08:58:22.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4212" for this suite. 03/09/23 08:58:22.115
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 08:58:22.124
Mar  9 08:58:22.124: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename cronjob 03/09/23 08:58:22.126
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:58:22.141
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:58:22.146
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
STEP: Creating a cronjob 03/09/23 08:58:22.15
STEP: Ensuring more than one job is running at a time 03/09/23 08:58:22.158
STEP: Ensuring at least two running jobs exists by listing jobs explicitly 03/09/23 09:00:02.163
STEP: Removing cronjob 03/09/23 09:00:02.168
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar  9 09:00:02.175: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-4109" for this suite. 03/09/23 09:00:02.181
------------------------------
â€¢ [SLOW TEST] [100.077 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 08:58:22.124
    Mar  9 08:58:22.124: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename cronjob 03/09/23 08:58:22.126
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 08:58:22.141
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 08:58:22.146
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule multiple jobs concurrently [Conformance]
      test/e2e/apps/cronjob.go:69
    STEP: Creating a cronjob 03/09/23 08:58:22.15
    STEP: Ensuring more than one job is running at a time 03/09/23 08:58:22.158
    STEP: Ensuring at least two running jobs exists by listing jobs explicitly 03/09/23 09:00:02.163
    STEP: Removing cronjob 03/09/23 09:00:02.168
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:00:02.175: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-4109" for this suite. 03/09/23 09:00:02.181
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:00:02.202
Mar  9 09:00:02.203: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename gc 03/09/23 09:00:02.204
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:00:02.221
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:00:02.227
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
STEP: create the rc 03/09/23 09:00:02.242
STEP: delete the rc 03/09/23 09:00:07.255
STEP: wait for the rc to be deleted 03/09/23 09:00:07.263
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 03/09/23 09:00:12.268
STEP: Gathering metrics 03/09/23 09:00:42.299
Mar  9 09:00:42.345: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
Mar  9 09:00:42.349: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 4.485062ms
Mar  9 09:00:42.349: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
Mar  9 09:00:42.349: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
Mar  9 09:00:42.529: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Mar  9 09:00:42.529: INFO: Deleting pod "simpletest.rc-2k7fr" in namespace "gc-1644"
Mar  9 09:00:42.548: INFO: Deleting pod "simpletest.rc-2p675" in namespace "gc-1644"
Mar  9 09:00:42.566: INFO: Deleting pod "simpletest.rc-2s57h" in namespace "gc-1644"
Mar  9 09:00:42.584: INFO: Deleting pod "simpletest.rc-445sm" in namespace "gc-1644"
Mar  9 09:00:42.616: INFO: Deleting pod "simpletest.rc-4qxds" in namespace "gc-1644"
Mar  9 09:00:42.629: INFO: Deleting pod "simpletest.rc-4rzzk" in namespace "gc-1644"
Mar  9 09:00:42.646: INFO: Deleting pod "simpletest.rc-4xmwd" in namespace "gc-1644"
Mar  9 09:00:42.665: INFO: Deleting pod "simpletest.rc-4zrqf" in namespace "gc-1644"
Mar  9 09:00:42.687: INFO: Deleting pod "simpletest.rc-54cm9" in namespace "gc-1644"
Mar  9 09:00:42.699: INFO: Deleting pod "simpletest.rc-56gtw" in namespace "gc-1644"
Mar  9 09:00:42.719: INFO: Deleting pod "simpletest.rc-5bb7w" in namespace "gc-1644"
Mar  9 09:00:42.736: INFO: Deleting pod "simpletest.rc-5bkp6" in namespace "gc-1644"
Mar  9 09:00:42.756: INFO: Deleting pod "simpletest.rc-5c9zq" in namespace "gc-1644"
Mar  9 09:00:42.771: INFO: Deleting pod "simpletest.rc-5q5ln" in namespace "gc-1644"
Mar  9 09:00:42.785: INFO: Deleting pod "simpletest.rc-62jwj" in namespace "gc-1644"
Mar  9 09:00:42.803: INFO: Deleting pod "simpletest.rc-6zrp8" in namespace "gc-1644"
Mar  9 09:00:42.817: INFO: Deleting pod "simpletest.rc-72wn7" in namespace "gc-1644"
Mar  9 09:00:42.830: INFO: Deleting pod "simpletest.rc-76wjq" in namespace "gc-1644"
Mar  9 09:00:42.882: INFO: Deleting pod "simpletest.rc-77dwj" in namespace "gc-1644"
Mar  9 09:00:42.902: INFO: Deleting pod "simpletest.rc-792s2" in namespace "gc-1644"
Mar  9 09:00:42.914: INFO: Deleting pod "simpletest.rc-7cks4" in namespace "gc-1644"
Mar  9 09:00:42.927: INFO: Deleting pod "simpletest.rc-7g4dd" in namespace "gc-1644"
Mar  9 09:00:42.946: INFO: Deleting pod "simpletest.rc-7j4gf" in namespace "gc-1644"
Mar  9 09:00:42.961: INFO: Deleting pod "simpletest.rc-7lpz7" in namespace "gc-1644"
Mar  9 09:00:42.988: INFO: Deleting pod "simpletest.rc-89qjm" in namespace "gc-1644"
Mar  9 09:00:43.013: INFO: Deleting pod "simpletest.rc-95wvc" in namespace "gc-1644"
Mar  9 09:00:43.034: INFO: Deleting pod "simpletest.rc-99clw" in namespace "gc-1644"
Mar  9 09:00:43.047: INFO: Deleting pod "simpletest.rc-b4577" in namespace "gc-1644"
Mar  9 09:00:43.064: INFO: Deleting pod "simpletest.rc-b8mfs" in namespace "gc-1644"
Mar  9 09:00:43.080: INFO: Deleting pod "simpletest.rc-bbwvf" in namespace "gc-1644"
Mar  9 09:00:43.097: INFO: Deleting pod "simpletest.rc-bqxlq" in namespace "gc-1644"
Mar  9 09:00:43.113: INFO: Deleting pod "simpletest.rc-bz44k" in namespace "gc-1644"
Mar  9 09:00:43.137: INFO: Deleting pod "simpletest.rc-c4frr" in namespace "gc-1644"
Mar  9 09:00:43.160: INFO: Deleting pod "simpletest.rc-cmdwx" in namespace "gc-1644"
Mar  9 09:00:43.176: INFO: Deleting pod "simpletest.rc-cn9nn" in namespace "gc-1644"
Mar  9 09:00:43.189: INFO: Deleting pod "simpletest.rc-d2ksq" in namespace "gc-1644"
Mar  9 09:00:43.203: INFO: Deleting pod "simpletest.rc-d6wrl" in namespace "gc-1644"
Mar  9 09:00:43.222: INFO: Deleting pod "simpletest.rc-dqjjq" in namespace "gc-1644"
Mar  9 09:00:43.264: INFO: Deleting pod "simpletest.rc-dtvd4" in namespace "gc-1644"
Mar  9 09:00:43.282: INFO: Deleting pod "simpletest.rc-f4ppd" in namespace "gc-1644"
Mar  9 09:00:43.307: INFO: Deleting pod "simpletest.rc-fj9gq" in namespace "gc-1644"
Mar  9 09:00:43.353: INFO: Deleting pod "simpletest.rc-fljll" in namespace "gc-1644"
Mar  9 09:00:43.370: INFO: Deleting pod "simpletest.rc-fmpkb" in namespace "gc-1644"
Mar  9 09:00:43.396: INFO: Deleting pod "simpletest.rc-fzv8c" in namespace "gc-1644"
Mar  9 09:00:43.414: INFO: Deleting pod "simpletest.rc-g2gjk" in namespace "gc-1644"
Mar  9 09:00:43.428: INFO: Deleting pod "simpletest.rc-g4wnj" in namespace "gc-1644"
Mar  9 09:00:43.445: INFO: Deleting pod "simpletest.rc-g6dkf" in namespace "gc-1644"
Mar  9 09:00:43.488: INFO: Deleting pod "simpletest.rc-gwfc9" in namespace "gc-1644"
Mar  9 09:00:43.501: INFO: Deleting pod "simpletest.rc-gwzq9" in namespace "gc-1644"
Mar  9 09:00:43.520: INFO: Deleting pod "simpletest.rc-h54ms" in namespace "gc-1644"
Mar  9 09:00:43.531: INFO: Deleting pod "simpletest.rc-h8dpt" in namespace "gc-1644"
Mar  9 09:00:43.586: INFO: Deleting pod "simpletest.rc-j2ldm" in namespace "gc-1644"
Mar  9 09:00:43.605: INFO: Deleting pod "simpletest.rc-jngpz" in namespace "gc-1644"
Mar  9 09:00:43.635: INFO: Deleting pod "simpletest.rc-jvf4c" in namespace "gc-1644"
Mar  9 09:00:43.647: INFO: Deleting pod "simpletest.rc-jvgqp" in namespace "gc-1644"
Mar  9 09:00:43.665: INFO: Deleting pod "simpletest.rc-jwb97" in namespace "gc-1644"
Mar  9 09:00:43.685: INFO: Deleting pod "simpletest.rc-jwc7f" in namespace "gc-1644"
Mar  9 09:00:43.721: INFO: Deleting pod "simpletest.rc-kbb6w" in namespace "gc-1644"
Mar  9 09:00:43.751: INFO: Deleting pod "simpletest.rc-kkskr" in namespace "gc-1644"
Mar  9 09:00:43.765: INFO: Deleting pod "simpletest.rc-kl9q6" in namespace "gc-1644"
Mar  9 09:00:43.861: INFO: Deleting pod "simpletest.rc-krjx2" in namespace "gc-1644"
Mar  9 09:00:43.872: INFO: Deleting pod "simpletest.rc-kwrld" in namespace "gc-1644"
Mar  9 09:00:43.944: INFO: Deleting pod "simpletest.rc-llhv4" in namespace "gc-1644"
Mar  9 09:00:43.999: INFO: Deleting pod "simpletest.rc-lsbcn" in namespace "gc-1644"
Mar  9 09:00:44.054: INFO: Deleting pod "simpletest.rc-mp6q5" in namespace "gc-1644"
Mar  9 09:00:44.141: INFO: Deleting pod "simpletest.rc-msr5k" in namespace "gc-1644"
Mar  9 09:00:44.192: INFO: Deleting pod "simpletest.rc-mx8wn" in namespace "gc-1644"
Mar  9 09:00:44.213: INFO: Deleting pod "simpletest.rc-mz52t" in namespace "gc-1644"
Mar  9 09:00:44.226: INFO: Deleting pod "simpletest.rc-n475f" in namespace "gc-1644"
Mar  9 09:00:44.268: INFO: Deleting pod "simpletest.rc-nrthg" in namespace "gc-1644"
Mar  9 09:00:44.285: INFO: Deleting pod "simpletest.rc-pbrq8" in namespace "gc-1644"
Mar  9 09:00:44.298: INFO: Deleting pod "simpletest.rc-ps875" in namespace "gc-1644"
Mar  9 09:00:44.309: INFO: Deleting pod "simpletest.rc-q9hgh" in namespace "gc-1644"
Mar  9 09:00:44.322: INFO: Deleting pod "simpletest.rc-qsg5x" in namespace "gc-1644"
Mar  9 09:00:44.333: INFO: Deleting pod "simpletest.rc-qt292" in namespace "gc-1644"
Mar  9 09:00:44.343: INFO: Deleting pod "simpletest.rc-qt4w6" in namespace "gc-1644"
Mar  9 09:00:44.359: INFO: Deleting pod "simpletest.rc-qv9ck" in namespace "gc-1644"
Mar  9 09:00:44.369: INFO: Deleting pod "simpletest.rc-rglx4" in namespace "gc-1644"
Mar  9 09:00:44.381: INFO: Deleting pod "simpletest.rc-rxw2c" in namespace "gc-1644"
Mar  9 09:00:44.390: INFO: Deleting pod "simpletest.rc-szj78" in namespace "gc-1644"
Mar  9 09:00:44.399: INFO: Deleting pod "simpletest.rc-tbfzv" in namespace "gc-1644"
Mar  9 09:00:44.422: INFO: Deleting pod "simpletest.rc-ttglf" in namespace "gc-1644"
Mar  9 09:00:44.438: INFO: Deleting pod "simpletest.rc-tvbhl" in namespace "gc-1644"
Mar  9 09:00:44.449: INFO: Deleting pod "simpletest.rc-vhb99" in namespace "gc-1644"
Mar  9 09:00:44.461: INFO: Deleting pod "simpletest.rc-vn8bf" in namespace "gc-1644"
Mar  9 09:00:44.473: INFO: Deleting pod "simpletest.rc-vq7b7" in namespace "gc-1644"
Mar  9 09:00:44.484: INFO: Deleting pod "simpletest.rc-w9zrq" in namespace "gc-1644"
Mar  9 09:00:44.495: INFO: Deleting pod "simpletest.rc-wfrc2" in namespace "gc-1644"
Mar  9 09:00:44.543: INFO: Deleting pod "simpletest.rc-wgsxt" in namespace "gc-1644"
Mar  9 09:00:44.554: INFO: Deleting pod "simpletest.rc-wjxxh" in namespace "gc-1644"
Mar  9 09:00:44.563: INFO: Deleting pod "simpletest.rc-wrmrh" in namespace "gc-1644"
Mar  9 09:00:44.640: INFO: Deleting pod "simpletest.rc-x66sx" in namespace "gc-1644"
Mar  9 09:00:44.655: INFO: Deleting pod "simpletest.rc-x6r2f" in namespace "gc-1644"
Mar  9 09:00:44.706: INFO: Deleting pod "simpletest.rc-x8blm" in namespace "gc-1644"
Mar  9 09:00:44.748: INFO: Deleting pod "simpletest.rc-xhzc6" in namespace "gc-1644"
Mar  9 09:00:44.967: INFO: Deleting pod "simpletest.rc-xrklj" in namespace "gc-1644"
Mar  9 09:00:45.029: INFO: Deleting pod "simpletest.rc-xwjg2" in namespace "gc-1644"
Mar  9 09:00:45.063: INFO: Deleting pod "simpletest.rc-zgjf8" in namespace "gc-1644"
Mar  9 09:00:45.077: INFO: Deleting pod "simpletest.rc-zjbff" in namespace "gc-1644"
Mar  9 09:00:45.102: INFO: Deleting pod "simpletest.rc-zk8rr" in namespace "gc-1644"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar  9 09:00:45.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-1644" for this suite. 03/09/23 09:00:45.134
------------------------------
â€¢ [SLOW TEST] [42.937 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:00:02.202
    Mar  9 09:00:02.203: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename gc 03/09/23 09:00:02.204
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:00:02.221
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:00:02.227
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan pods created by rc if delete options say so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:370
    STEP: create the rc 03/09/23 09:00:02.242
    STEP: delete the rc 03/09/23 09:00:07.255
    STEP: wait for the rc to be deleted 03/09/23 09:00:07.263
    STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 03/09/23 09:00:12.268
    STEP: Gathering metrics 03/09/23 09:00:42.299
    Mar  9 09:00:42.345: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
    Mar  9 09:00:42.349: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 4.485062ms
    Mar  9 09:00:42.349: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
    Mar  9 09:00:42.349: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
    Mar  9 09:00:42.529: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Mar  9 09:00:42.529: INFO: Deleting pod "simpletest.rc-2k7fr" in namespace "gc-1644"
    Mar  9 09:00:42.548: INFO: Deleting pod "simpletest.rc-2p675" in namespace "gc-1644"
    Mar  9 09:00:42.566: INFO: Deleting pod "simpletest.rc-2s57h" in namespace "gc-1644"
    Mar  9 09:00:42.584: INFO: Deleting pod "simpletest.rc-445sm" in namespace "gc-1644"
    Mar  9 09:00:42.616: INFO: Deleting pod "simpletest.rc-4qxds" in namespace "gc-1644"
    Mar  9 09:00:42.629: INFO: Deleting pod "simpletest.rc-4rzzk" in namespace "gc-1644"
    Mar  9 09:00:42.646: INFO: Deleting pod "simpletest.rc-4xmwd" in namespace "gc-1644"
    Mar  9 09:00:42.665: INFO: Deleting pod "simpletest.rc-4zrqf" in namespace "gc-1644"
    Mar  9 09:00:42.687: INFO: Deleting pod "simpletest.rc-54cm9" in namespace "gc-1644"
    Mar  9 09:00:42.699: INFO: Deleting pod "simpletest.rc-56gtw" in namespace "gc-1644"
    Mar  9 09:00:42.719: INFO: Deleting pod "simpletest.rc-5bb7w" in namespace "gc-1644"
    Mar  9 09:00:42.736: INFO: Deleting pod "simpletest.rc-5bkp6" in namespace "gc-1644"
    Mar  9 09:00:42.756: INFO: Deleting pod "simpletest.rc-5c9zq" in namespace "gc-1644"
    Mar  9 09:00:42.771: INFO: Deleting pod "simpletest.rc-5q5ln" in namespace "gc-1644"
    Mar  9 09:00:42.785: INFO: Deleting pod "simpletest.rc-62jwj" in namespace "gc-1644"
    Mar  9 09:00:42.803: INFO: Deleting pod "simpletest.rc-6zrp8" in namespace "gc-1644"
    Mar  9 09:00:42.817: INFO: Deleting pod "simpletest.rc-72wn7" in namespace "gc-1644"
    Mar  9 09:00:42.830: INFO: Deleting pod "simpletest.rc-76wjq" in namespace "gc-1644"
    Mar  9 09:00:42.882: INFO: Deleting pod "simpletest.rc-77dwj" in namespace "gc-1644"
    Mar  9 09:00:42.902: INFO: Deleting pod "simpletest.rc-792s2" in namespace "gc-1644"
    Mar  9 09:00:42.914: INFO: Deleting pod "simpletest.rc-7cks4" in namespace "gc-1644"
    Mar  9 09:00:42.927: INFO: Deleting pod "simpletest.rc-7g4dd" in namespace "gc-1644"
    Mar  9 09:00:42.946: INFO: Deleting pod "simpletest.rc-7j4gf" in namespace "gc-1644"
    Mar  9 09:00:42.961: INFO: Deleting pod "simpletest.rc-7lpz7" in namespace "gc-1644"
    Mar  9 09:00:42.988: INFO: Deleting pod "simpletest.rc-89qjm" in namespace "gc-1644"
    Mar  9 09:00:43.013: INFO: Deleting pod "simpletest.rc-95wvc" in namespace "gc-1644"
    Mar  9 09:00:43.034: INFO: Deleting pod "simpletest.rc-99clw" in namespace "gc-1644"
    Mar  9 09:00:43.047: INFO: Deleting pod "simpletest.rc-b4577" in namespace "gc-1644"
    Mar  9 09:00:43.064: INFO: Deleting pod "simpletest.rc-b8mfs" in namespace "gc-1644"
    Mar  9 09:00:43.080: INFO: Deleting pod "simpletest.rc-bbwvf" in namespace "gc-1644"
    Mar  9 09:00:43.097: INFO: Deleting pod "simpletest.rc-bqxlq" in namespace "gc-1644"
    Mar  9 09:00:43.113: INFO: Deleting pod "simpletest.rc-bz44k" in namespace "gc-1644"
    Mar  9 09:00:43.137: INFO: Deleting pod "simpletest.rc-c4frr" in namespace "gc-1644"
    Mar  9 09:00:43.160: INFO: Deleting pod "simpletest.rc-cmdwx" in namespace "gc-1644"
    Mar  9 09:00:43.176: INFO: Deleting pod "simpletest.rc-cn9nn" in namespace "gc-1644"
    Mar  9 09:00:43.189: INFO: Deleting pod "simpletest.rc-d2ksq" in namespace "gc-1644"
    Mar  9 09:00:43.203: INFO: Deleting pod "simpletest.rc-d6wrl" in namespace "gc-1644"
    Mar  9 09:00:43.222: INFO: Deleting pod "simpletest.rc-dqjjq" in namespace "gc-1644"
    Mar  9 09:00:43.264: INFO: Deleting pod "simpletest.rc-dtvd4" in namespace "gc-1644"
    Mar  9 09:00:43.282: INFO: Deleting pod "simpletest.rc-f4ppd" in namespace "gc-1644"
    Mar  9 09:00:43.307: INFO: Deleting pod "simpletest.rc-fj9gq" in namespace "gc-1644"
    Mar  9 09:00:43.353: INFO: Deleting pod "simpletest.rc-fljll" in namespace "gc-1644"
    Mar  9 09:00:43.370: INFO: Deleting pod "simpletest.rc-fmpkb" in namespace "gc-1644"
    Mar  9 09:00:43.396: INFO: Deleting pod "simpletest.rc-fzv8c" in namespace "gc-1644"
    Mar  9 09:00:43.414: INFO: Deleting pod "simpletest.rc-g2gjk" in namespace "gc-1644"
    Mar  9 09:00:43.428: INFO: Deleting pod "simpletest.rc-g4wnj" in namespace "gc-1644"
    Mar  9 09:00:43.445: INFO: Deleting pod "simpletest.rc-g6dkf" in namespace "gc-1644"
    Mar  9 09:00:43.488: INFO: Deleting pod "simpletest.rc-gwfc9" in namespace "gc-1644"
    Mar  9 09:00:43.501: INFO: Deleting pod "simpletest.rc-gwzq9" in namespace "gc-1644"
    Mar  9 09:00:43.520: INFO: Deleting pod "simpletest.rc-h54ms" in namespace "gc-1644"
    Mar  9 09:00:43.531: INFO: Deleting pod "simpletest.rc-h8dpt" in namespace "gc-1644"
    Mar  9 09:00:43.586: INFO: Deleting pod "simpletest.rc-j2ldm" in namespace "gc-1644"
    Mar  9 09:00:43.605: INFO: Deleting pod "simpletest.rc-jngpz" in namespace "gc-1644"
    Mar  9 09:00:43.635: INFO: Deleting pod "simpletest.rc-jvf4c" in namespace "gc-1644"
    Mar  9 09:00:43.647: INFO: Deleting pod "simpletest.rc-jvgqp" in namespace "gc-1644"
    Mar  9 09:00:43.665: INFO: Deleting pod "simpletest.rc-jwb97" in namespace "gc-1644"
    Mar  9 09:00:43.685: INFO: Deleting pod "simpletest.rc-jwc7f" in namespace "gc-1644"
    Mar  9 09:00:43.721: INFO: Deleting pod "simpletest.rc-kbb6w" in namespace "gc-1644"
    Mar  9 09:00:43.751: INFO: Deleting pod "simpletest.rc-kkskr" in namespace "gc-1644"
    Mar  9 09:00:43.765: INFO: Deleting pod "simpletest.rc-kl9q6" in namespace "gc-1644"
    Mar  9 09:00:43.861: INFO: Deleting pod "simpletest.rc-krjx2" in namespace "gc-1644"
    Mar  9 09:00:43.872: INFO: Deleting pod "simpletest.rc-kwrld" in namespace "gc-1644"
    Mar  9 09:00:43.944: INFO: Deleting pod "simpletest.rc-llhv4" in namespace "gc-1644"
    Mar  9 09:00:43.999: INFO: Deleting pod "simpletest.rc-lsbcn" in namespace "gc-1644"
    Mar  9 09:00:44.054: INFO: Deleting pod "simpletest.rc-mp6q5" in namespace "gc-1644"
    Mar  9 09:00:44.141: INFO: Deleting pod "simpletest.rc-msr5k" in namespace "gc-1644"
    Mar  9 09:00:44.192: INFO: Deleting pod "simpletest.rc-mx8wn" in namespace "gc-1644"
    Mar  9 09:00:44.213: INFO: Deleting pod "simpletest.rc-mz52t" in namespace "gc-1644"
    Mar  9 09:00:44.226: INFO: Deleting pod "simpletest.rc-n475f" in namespace "gc-1644"
    Mar  9 09:00:44.268: INFO: Deleting pod "simpletest.rc-nrthg" in namespace "gc-1644"
    Mar  9 09:00:44.285: INFO: Deleting pod "simpletest.rc-pbrq8" in namespace "gc-1644"
    Mar  9 09:00:44.298: INFO: Deleting pod "simpletest.rc-ps875" in namespace "gc-1644"
    Mar  9 09:00:44.309: INFO: Deleting pod "simpletest.rc-q9hgh" in namespace "gc-1644"
    Mar  9 09:00:44.322: INFO: Deleting pod "simpletest.rc-qsg5x" in namespace "gc-1644"
    Mar  9 09:00:44.333: INFO: Deleting pod "simpletest.rc-qt292" in namespace "gc-1644"
    Mar  9 09:00:44.343: INFO: Deleting pod "simpletest.rc-qt4w6" in namespace "gc-1644"
    Mar  9 09:00:44.359: INFO: Deleting pod "simpletest.rc-qv9ck" in namespace "gc-1644"
    Mar  9 09:00:44.369: INFO: Deleting pod "simpletest.rc-rglx4" in namespace "gc-1644"
    Mar  9 09:00:44.381: INFO: Deleting pod "simpletest.rc-rxw2c" in namespace "gc-1644"
    Mar  9 09:00:44.390: INFO: Deleting pod "simpletest.rc-szj78" in namespace "gc-1644"
    Mar  9 09:00:44.399: INFO: Deleting pod "simpletest.rc-tbfzv" in namespace "gc-1644"
    Mar  9 09:00:44.422: INFO: Deleting pod "simpletest.rc-ttglf" in namespace "gc-1644"
    Mar  9 09:00:44.438: INFO: Deleting pod "simpletest.rc-tvbhl" in namespace "gc-1644"
    Mar  9 09:00:44.449: INFO: Deleting pod "simpletest.rc-vhb99" in namespace "gc-1644"
    Mar  9 09:00:44.461: INFO: Deleting pod "simpletest.rc-vn8bf" in namespace "gc-1644"
    Mar  9 09:00:44.473: INFO: Deleting pod "simpletest.rc-vq7b7" in namespace "gc-1644"
    Mar  9 09:00:44.484: INFO: Deleting pod "simpletest.rc-w9zrq" in namespace "gc-1644"
    Mar  9 09:00:44.495: INFO: Deleting pod "simpletest.rc-wfrc2" in namespace "gc-1644"
    Mar  9 09:00:44.543: INFO: Deleting pod "simpletest.rc-wgsxt" in namespace "gc-1644"
    Mar  9 09:00:44.554: INFO: Deleting pod "simpletest.rc-wjxxh" in namespace "gc-1644"
    Mar  9 09:00:44.563: INFO: Deleting pod "simpletest.rc-wrmrh" in namespace "gc-1644"
    Mar  9 09:00:44.640: INFO: Deleting pod "simpletest.rc-x66sx" in namespace "gc-1644"
    Mar  9 09:00:44.655: INFO: Deleting pod "simpletest.rc-x6r2f" in namespace "gc-1644"
    Mar  9 09:00:44.706: INFO: Deleting pod "simpletest.rc-x8blm" in namespace "gc-1644"
    Mar  9 09:00:44.748: INFO: Deleting pod "simpletest.rc-xhzc6" in namespace "gc-1644"
    Mar  9 09:00:44.967: INFO: Deleting pod "simpletest.rc-xrklj" in namespace "gc-1644"
    Mar  9 09:00:45.029: INFO: Deleting pod "simpletest.rc-xwjg2" in namespace "gc-1644"
    Mar  9 09:00:45.063: INFO: Deleting pod "simpletest.rc-zgjf8" in namespace "gc-1644"
    Mar  9 09:00:45.077: INFO: Deleting pod "simpletest.rc-zjbff" in namespace "gc-1644"
    Mar  9 09:00:45.102: INFO: Deleting pod "simpletest.rc-zk8rr" in namespace "gc-1644"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:00:45.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-1644" for this suite. 03/09/23 09:00:45.134
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:00:45.142
Mar  9 09:00:45.142: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename daemonsets 03/09/23 09:00:45.143
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:00:45.166
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:00:45.175
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432
Mar  9 09:00:45.201: INFO: Create a RollingUpdate DaemonSet
Mar  9 09:00:45.220: INFO: Check that daemon pods launch on every node of the cluster
Mar  9 09:00:45.228: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:45.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:45.240: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:46.248: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:46.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:46.254: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:47.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:47.253: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:47.253: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:48.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:48.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:48.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:49.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:49.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:49.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:50.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:50.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:50.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:51.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:51.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:51.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:52.246: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:52.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:52.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:53.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:53.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:53.252: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:54.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:54.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:00:54.252: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:55.248: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:55.253: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:00:55.253: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:56.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:56.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:00:56.252: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:00:57.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:00:57.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 09:00:57.252: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
Mar  9 09:00:57.252: INFO: Update the DaemonSet to trigger a rollout
Mar  9 09:00:57.264: INFO: Updating DaemonSet daemon-set
Mar  9 09:00:59.285: INFO: Roll back the DaemonSet before rollout is complete
Mar  9 09:00:59.299: INFO: Updating DaemonSet daemon-set
Mar  9 09:00:59.299: INFO: Make sure DaemonSet rollback is complete
Mar  9 09:00:59.303: INFO: Wrong image for pod: daemon-set-mk42z. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
Mar  9 09:00:59.303: INFO: Pod daemon-set-mk42z is not available
Mar  9 09:00:59.308: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:01:00.320: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:01:01.320: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:01:02.319: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:01:03.314: INFO: Pod daemon-set-r6g7l is not available
Mar  9 09:01:03.319: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/09/23 09:01:03.328
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4088, will wait for the garbage collector to delete the pods 03/09/23 09:01:03.328
Mar  9 09:01:03.399: INFO: Deleting DaemonSet.extensions daemon-set took: 16.49062ms
Mar  9 09:01:03.500: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.469758ms
Mar  9 09:01:05.905: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:01:05.905: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar  9 09:01:05.908: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"274330"},"items":null}

Mar  9 09:01:05.912: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"274330"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:01:05.927: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4088" for this suite. 03/09/23 09:01:05.933
------------------------------
â€¢ [SLOW TEST] [20.799 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:432

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:00:45.142
    Mar  9 09:00:45.142: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename daemonsets 03/09/23 09:00:45.143
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:00:45.166
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:00:45.175
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should rollback without unnecessary restarts [Conformance]
      test/e2e/apps/daemon_set.go:432
    Mar  9 09:00:45.201: INFO: Create a RollingUpdate DaemonSet
    Mar  9 09:00:45.220: INFO: Check that daemon pods launch on every node of the cluster
    Mar  9 09:00:45.228: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:45.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:45.240: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:46.248: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:46.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:46.254: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:47.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:47.253: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:47.253: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:48.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:48.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:48.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:49.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:49.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:49.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:50.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:50.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:50.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:51.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:51.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:51.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:52.246: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:52.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:52.251: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:53.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:53.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:53.252: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:54.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:54.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:00:54.252: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:55.248: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:55.253: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:00:55.253: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:56.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:56.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:00:56.252: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:00:57.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:00:57.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 09:00:57.252: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    Mar  9 09:00:57.252: INFO: Update the DaemonSet to trigger a rollout
    Mar  9 09:00:57.264: INFO: Updating DaemonSet daemon-set
    Mar  9 09:00:59.285: INFO: Roll back the DaemonSet before rollout is complete
    Mar  9 09:00:59.299: INFO: Updating DaemonSet daemon-set
    Mar  9 09:00:59.299: INFO: Make sure DaemonSet rollback is complete
    Mar  9 09:00:59.303: INFO: Wrong image for pod: daemon-set-mk42z. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
    Mar  9 09:00:59.303: INFO: Pod daemon-set-mk42z is not available
    Mar  9 09:00:59.308: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:01:00.320: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:01:01.320: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:01:02.319: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:01:03.314: INFO: Pod daemon-set-r6g7l is not available
    Mar  9 09:01:03.319: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/09/23 09:01:03.328
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4088, will wait for the garbage collector to delete the pods 03/09/23 09:01:03.328
    Mar  9 09:01:03.399: INFO: Deleting DaemonSet.extensions daemon-set took: 16.49062ms
    Mar  9 09:01:03.500: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.469758ms
    Mar  9 09:01:05.905: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:01:05.905: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar  9 09:01:05.908: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"274330"},"items":null}

    Mar  9 09:01:05.912: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"274330"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:01:05.927: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4088" for this suite. 03/09/23 09:01:05.933
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:01:05.942
Mar  9 09:01:05.942: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 09:01:05.944
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:05.961
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:05.966
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
STEP: starting the proxy server 03/09/23 09:01:05.972
Mar  9 09:01:05.972: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9496 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output 03/09/23 09:01:06.101
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 09:01:06.120: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9496" for this suite. 03/09/23 09:01:06.127
------------------------------
â€¢ [0.192 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support proxy with --port 0  [Conformance]
    test/e2e/kubectl/kubectl.go:1787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:01:05.942
    Mar  9 09:01:05.942: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 09:01:05.944
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:05.961
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:05.966
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support proxy with --port 0  [Conformance]
      test/e2e/kubectl/kubectl.go:1787
    STEP: starting the proxy server 03/09/23 09:01:05.972
    Mar  9 09:01:05.972: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-9496 proxy -p 0 --disable-filter'
    STEP: curling proxy /api/ output 03/09/23 09:01:06.101
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:01:06.120: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9496" for this suite. 03/09/23 09:01:06.127
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:01:06.137
Mar  9 09:01:06.137: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename security-context-test 03/09/23 09:01:06.139
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:06.156
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:06.162
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
Mar  9 09:01:06.178: INFO: Waiting up to 5m0s for pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950" in namespace "security-context-test-8977" to be "Succeeded or Failed"
Mar  9 09:01:06.182: INFO: Pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950": Phase="Pending", Reason="", readiness=false. Elapsed: 4.222558ms
Mar  9 09:01:08.188: INFO: Pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009570349s
Mar  9 09:01:10.187: INFO: Pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009112368s
Mar  9 09:01:10.187: INFO: Pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar  9 09:01:10.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-8977" for this suite. 03/09/23 09:01:10.194
------------------------------
â€¢ [4.064 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:309
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:01:06.137
    Mar  9 09:01:06.137: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename security-context-test 03/09/23 09:01:06.139
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:06.156
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:06.162
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:347
    Mar  9 09:01:06.178: INFO: Waiting up to 5m0s for pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950" in namespace "security-context-test-8977" to be "Succeeded or Failed"
    Mar  9 09:01:06.182: INFO: Pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950": Phase="Pending", Reason="", readiness=false. Elapsed: 4.222558ms
    Mar  9 09:01:08.188: INFO: Pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009570349s
    Mar  9 09:01:10.187: INFO: Pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009112368s
    Mar  9 09:01:10.187: INFO: Pod "busybox-user-65534-477047ec-ccc4-4129-9ddf-c4adfd5c2950" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:01:10.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-8977" for this suite. 03/09/23 09:01:10.194
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch
  should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:01:10.203
Mar  9 09:01:10.203: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 09:01:10.205
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:10.221
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:10.226
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
STEP: creating Agnhost RC 03/09/23 09:01:10.231
Mar  9 09:01:10.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-734 create -f -'
Mar  9 09:01:10.739: INFO: stderr: ""
Mar  9 09:01:10.739: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 03/09/23 09:01:10.739
Mar  9 09:01:11.745: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:01:11.745: INFO: Found 0 / 1
Mar  9 09:01:12.745: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:01:12.745: INFO: Found 0 / 1
Mar  9 09:01:13.744: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:01:13.744: INFO: Found 1 / 1
Mar  9 09:01:13.744: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods 03/09/23 09:01:13.744
Mar  9 09:01:13.749: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:01:13.749: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Mar  9 09:01:13.749: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-734 patch pod agnhost-primary-slvvk -p {"metadata":{"annotations":{"x":"y"}}}'
Mar  9 09:01:13.930: INFO: stderr: ""
Mar  9 09:01:13.930: INFO: stdout: "pod/agnhost-primary-slvvk patched\n"
STEP: checking annotations 03/09/23 09:01:13.93
Mar  9 09:01:13.935: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:01:13.935: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 09:01:13.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-734" for this suite. 03/09/23 09:01:13.941
------------------------------
â€¢ [3.746 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl patch
  test/e2e/kubectl/kubectl.go:1646
    should add annotations for pods in rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1652

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:01:10.203
    Mar  9 09:01:10.203: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 09:01:10.205
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:10.221
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:10.226
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should add annotations for pods in rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1652
    STEP: creating Agnhost RC 03/09/23 09:01:10.231
    Mar  9 09:01:10.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-734 create -f -'
    Mar  9 09:01:10.739: INFO: stderr: ""
    Mar  9 09:01:10.739: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 03/09/23 09:01:10.739
    Mar  9 09:01:11.745: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:01:11.745: INFO: Found 0 / 1
    Mar  9 09:01:12.745: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:01:12.745: INFO: Found 0 / 1
    Mar  9 09:01:13.744: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:01:13.744: INFO: Found 1 / 1
    Mar  9 09:01:13.744: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    STEP: patching all pods 03/09/23 09:01:13.744
    Mar  9 09:01:13.749: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:01:13.749: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Mar  9 09:01:13.749: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-734 patch pod agnhost-primary-slvvk -p {"metadata":{"annotations":{"x":"y"}}}'
    Mar  9 09:01:13.930: INFO: stderr: ""
    Mar  9 09:01:13.930: INFO: stdout: "pod/agnhost-primary-slvvk patched\n"
    STEP: checking annotations 03/09/23 09:01:13.93
    Mar  9 09:01:13.935: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:01:13.935: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:01:13.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-734" for this suite. 03/09/23 09:01:13.941
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:01:13.951
Mar  9 09:01:13.951: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 09:01:13.953
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:13.967
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:13.972
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
STEP: creating service nodeport-test with type=NodePort in namespace services-1189 03/09/23 09:01:13.977
STEP: creating replication controller nodeport-test in namespace services-1189 03/09/23 09:01:13.999
I0309 09:01:14.013486      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1189, replica count: 2
I0309 09:01:17.065001      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 09:01:17.065: INFO: Creating new exec pod
Mar  9 09:01:17.073: INFO: Waiting up to 5m0s for pod "execpodxlzvf" in namespace "services-1189" to be "running"
Mar  9 09:01:17.079: INFO: Pod "execpodxlzvf": Phase="Pending", Reason="", readiness=false. Elapsed: 6.283209ms
Mar  9 09:01:19.084: INFO: Pod "execpodxlzvf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011018728s
Mar  9 09:01:21.085: INFO: Pod "execpodxlzvf": Phase="Running", Reason="", readiness=true. Elapsed: 4.011973724s
Mar  9 09:01:21.085: INFO: Pod "execpodxlzvf" satisfied condition "running"
Mar  9 09:01:22.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-1189 exec execpodxlzvf -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
Mar  9 09:01:22.391: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Mar  9 09:01:22.391: INFO: stdout: ""
Mar  9 09:01:22.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-1189 exec execpodxlzvf -- /bin/sh -x -c nc -v -z -w 2 10.103.2.57 80'
Mar  9 09:01:22.660: INFO: stderr: "+ nc -v -z -w 2 10.103.2.57 80\nConnection to 10.103.2.57 80 port [tcp/http] succeeded!\n"
Mar  9 09:01:22.660: INFO: stdout: ""
Mar  9 09:01:22.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-1189 exec execpodxlzvf -- /bin/sh -x -c nc -v -z -w 2 192.168.0.102 32035'
Mar  9 09:01:22.923: INFO: stderr: "+ nc -v -z -w 2 192.168.0.102 32035\nConnection to 192.168.0.102 32035 port [tcp/*] succeeded!\n"
Mar  9 09:01:22.923: INFO: stdout: ""
Mar  9 09:01:22.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-1189 exec execpodxlzvf -- /bin/sh -x -c nc -v -z -w 2 192.168.0.103 32035'
Mar  9 09:01:23.206: INFO: stderr: "+ nc -v -z -w 2 192.168.0.103 32035\nConnection to 192.168.0.103 32035 port [tcp/*] succeeded!\n"
Mar  9 09:01:23.206: INFO: stdout: ""
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 09:01:23.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1189" for this suite. 03/09/23 09:01:23.212
------------------------------
â€¢ [SLOW TEST] [9.271 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:01:13.951
    Mar  9 09:01:13.951: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 09:01:13.953
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:13.967
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:13.972
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to create a functioning NodePort service [Conformance]
      test/e2e/network/service.go:1302
    STEP: creating service nodeport-test with type=NodePort in namespace services-1189 03/09/23 09:01:13.977
    STEP: creating replication controller nodeport-test in namespace services-1189 03/09/23 09:01:13.999
    I0309 09:01:14.013486      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1189, replica count: 2
    I0309 09:01:17.065001      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 09:01:17.065: INFO: Creating new exec pod
    Mar  9 09:01:17.073: INFO: Waiting up to 5m0s for pod "execpodxlzvf" in namespace "services-1189" to be "running"
    Mar  9 09:01:17.079: INFO: Pod "execpodxlzvf": Phase="Pending", Reason="", readiness=false. Elapsed: 6.283209ms
    Mar  9 09:01:19.084: INFO: Pod "execpodxlzvf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011018728s
    Mar  9 09:01:21.085: INFO: Pod "execpodxlzvf": Phase="Running", Reason="", readiness=true. Elapsed: 4.011973724s
    Mar  9 09:01:21.085: INFO: Pod "execpodxlzvf" satisfied condition "running"
    Mar  9 09:01:22.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-1189 exec execpodxlzvf -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
    Mar  9 09:01:22.391: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
    Mar  9 09:01:22.391: INFO: stdout: ""
    Mar  9 09:01:22.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-1189 exec execpodxlzvf -- /bin/sh -x -c nc -v -z -w 2 10.103.2.57 80'
    Mar  9 09:01:22.660: INFO: stderr: "+ nc -v -z -w 2 10.103.2.57 80\nConnection to 10.103.2.57 80 port [tcp/http] succeeded!\n"
    Mar  9 09:01:22.660: INFO: stdout: ""
    Mar  9 09:01:22.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-1189 exec execpodxlzvf -- /bin/sh -x -c nc -v -z -w 2 192.168.0.102 32035'
    Mar  9 09:01:22.923: INFO: stderr: "+ nc -v -z -w 2 192.168.0.102 32035\nConnection to 192.168.0.102 32035 port [tcp/*] succeeded!\n"
    Mar  9 09:01:22.923: INFO: stdout: ""
    Mar  9 09:01:22.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-1189 exec execpodxlzvf -- /bin/sh -x -c nc -v -z -w 2 192.168.0.103 32035'
    Mar  9 09:01:23.206: INFO: stderr: "+ nc -v -z -w 2 192.168.0.103 32035\nConnection to 192.168.0.103 32035 port [tcp/*] succeeded!\n"
    Mar  9 09:01:23.206: INFO: stdout: ""
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:01:23.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1189" for this suite. 03/09/23 09:01:23.212
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should delete a job [Conformance]
  test/e2e/apps/job.go:481
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:01:23.227
Mar  9 09:01:23.227: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename job 03/09/23 09:01:23.229
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:23.245
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:23.249
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a job [Conformance]
  test/e2e/apps/job.go:481
STEP: Creating a job 03/09/23 09:01:23.254
STEP: Ensuring active pods == parallelism 03/09/23 09:01:23.263
STEP: delete a job 03/09/23 09:01:25.276
STEP: deleting Job.batch foo in namespace job-764, will wait for the garbage collector to delete the pods 03/09/23 09:01:25.276
Mar  9 09:01:25.348: INFO: Deleting Job.batch foo took: 16.804947ms
Mar  9 09:01:25.449: INFO: Terminating Job.batch foo pods took: 100.930591ms
STEP: Ensuring job was deleted 03/09/23 09:01:58.449
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar  9 09:01:58.453: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-764" for this suite. 03/09/23 09:01:58.461
------------------------------
â€¢ [SLOW TEST] [35.242 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/apps/job.go:481

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:01:23.227
    Mar  9 09:01:23.227: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename job 03/09/23 09:01:23.229
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:23.245
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:23.249
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a job [Conformance]
      test/e2e/apps/job.go:481
    STEP: Creating a job 03/09/23 09:01:23.254
    STEP: Ensuring active pods == parallelism 03/09/23 09:01:23.263
    STEP: delete a job 03/09/23 09:01:25.276
    STEP: deleting Job.batch foo in namespace job-764, will wait for the garbage collector to delete the pods 03/09/23 09:01:25.276
    Mar  9 09:01:25.348: INFO: Deleting Job.batch foo took: 16.804947ms
    Mar  9 09:01:25.449: INFO: Terminating Job.batch foo pods took: 100.930591ms
    STEP: Ensuring job was deleted 03/09/23 09:01:58.449
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:01:58.453: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-764" for this suite. 03/09/23 09:01:58.461
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:01:58.474
Mar  9 09:01:58.474: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replicaset 03/09/23 09:01:58.476
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:58.491
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:58.496
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
Mar  9 09:01:58.516: INFO: Pod name sample-pod: Found 0 pods out of 1
Mar  9 09:02:03.522: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/09/23 09:02:03.522
STEP: Scaling up "test-rs" replicaset  03/09/23 09:02:03.523
Mar  9 09:02:03.534: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet 03/09/23 09:02:03.534
W0309 09:02:03.546215      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Mar  9 09:02:03.549: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 1, AvailableReplicas 1
Mar  9 09:02:03.566: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 1, AvailableReplicas 1
Mar  9 09:02:03.589: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 1, AvailableReplicas 1
Mar  9 09:02:03.598: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 1, AvailableReplicas 1
Mar  9 09:02:05.170: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 2, AvailableReplicas 2
Mar  9 09:02:05.397: INFO: observed Replicaset test-rs in namespace replicaset-6676 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar  9 09:02:05.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-6676" for this suite. 03/09/23 09:02:05.404
------------------------------
â€¢ [SLOW TEST] [6.937 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:01:58.474
    Mar  9 09:01:58.474: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replicaset 03/09/23 09:01:58.476
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:01:58.491
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:01:58.496
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replace and Patch tests [Conformance]
      test/e2e/apps/replica_set.go:154
    Mar  9 09:01:58.516: INFO: Pod name sample-pod: Found 0 pods out of 1
    Mar  9 09:02:03.522: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/09/23 09:02:03.522
    STEP: Scaling up "test-rs" replicaset  03/09/23 09:02:03.523
    Mar  9 09:02:03.534: INFO: Updating replica set "test-rs"
    STEP: patching the ReplicaSet 03/09/23 09:02:03.534
    W0309 09:02:03.546215      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Mar  9 09:02:03.549: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 1, AvailableReplicas 1
    Mar  9 09:02:03.566: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 1, AvailableReplicas 1
    Mar  9 09:02:03.589: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 1, AvailableReplicas 1
    Mar  9 09:02:03.598: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 1, AvailableReplicas 1
    Mar  9 09:02:05.170: INFO: observed ReplicaSet test-rs in namespace replicaset-6676 with ReadyReplicas 2, AvailableReplicas 2
    Mar  9 09:02:05.397: INFO: observed Replicaset test-rs in namespace replicaset-6676 with ReadyReplicas 3 found true
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:02:05.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-6676" for this suite. 03/09/23 09:02:05.404
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] PodTemplates
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:02:05.415
Mar  9 09:02:05.415: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename podtemplate 03/09/23 09:02:05.417
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:05.432
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:05.437
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Mar  9 09:02:05.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-8044" for this suite. 03/09/23 09:02:05.487
------------------------------
â€¢ [0.079 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:02:05.415
    Mar  9 09:02:05.415: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename podtemplate 03/09/23 09:02:05.417
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:05.432
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:05.437
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should run the lifecycle of PodTemplates [Conformance]
      test/e2e/common/node/podtemplates.go:53
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:02:05.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-8044" for this suite. 03/09/23 09:02:05.487
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:02:05.496
Mar  9 09:02:05.496: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename proxy 03/09/23 09:02:05.497
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:05.512
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:05.517
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
Mar  9 09:02:05.522: INFO: Creating pod...
Mar  9 09:02:05.533: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-9776" to be "running"
Mar  9 09:02:05.537: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 4.274477ms
Mar  9 09:02:07.542: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.008850739s
Mar  9 09:02:07.542: INFO: Pod "agnhost" satisfied condition "running"
Mar  9 09:02:07.542: INFO: Creating service...
Mar  9 09:02:07.560: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=DELETE
Mar  9 09:02:07.567: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Mar  9 09:02:07.567: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=OPTIONS
Mar  9 09:02:07.572: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Mar  9 09:02:07.572: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=PATCH
Mar  9 09:02:07.577: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Mar  9 09:02:07.577: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=POST
Mar  9 09:02:07.582: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Mar  9 09:02:07.582: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=PUT
Mar  9 09:02:07.587: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Mar  9 09:02:07.587: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=DELETE
Mar  9 09:02:07.593: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Mar  9 09:02:07.593: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=OPTIONS
Mar  9 09:02:07.599: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Mar  9 09:02:07.599: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=PATCH
Mar  9 09:02:07.605: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Mar  9 09:02:07.605: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=POST
Mar  9 09:02:07.611: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Mar  9 09:02:07.611: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=PUT
Mar  9 09:02:07.617: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Mar  9 09:02:07.617: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=GET
Mar  9 09:02:07.621: INFO: http.Client request:GET StatusCode:301
Mar  9 09:02:07.621: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=GET
Mar  9 09:02:07.625: INFO: http.Client request:GET StatusCode:301
Mar  9 09:02:07.625: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=HEAD
Mar  9 09:02:07.629: INFO: http.Client request:HEAD StatusCode:301
Mar  9 09:02:07.629: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=HEAD
Mar  9 09:02:07.634: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Mar  9 09:02:07.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-9776" for this suite. 03/09/23 09:02:07.64
------------------------------
â€¢ [2.152 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service Proxy [Conformance]
    test/e2e/network/proxy.go:380

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:02:05.496
    Mar  9 09:02:05.496: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename proxy 03/09/23 09:02:05.497
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:05.512
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:05.517
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service Proxy [Conformance]
      test/e2e/network/proxy.go:380
    Mar  9 09:02:05.522: INFO: Creating pod...
    Mar  9 09:02:05.533: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-9776" to be "running"
    Mar  9 09:02:05.537: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 4.274477ms
    Mar  9 09:02:07.542: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.008850739s
    Mar  9 09:02:07.542: INFO: Pod "agnhost" satisfied condition "running"
    Mar  9 09:02:07.542: INFO: Creating service...
    Mar  9 09:02:07.560: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=DELETE
    Mar  9 09:02:07.567: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Mar  9 09:02:07.567: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=OPTIONS
    Mar  9 09:02:07.572: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Mar  9 09:02:07.572: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=PATCH
    Mar  9 09:02:07.577: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Mar  9 09:02:07.577: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=POST
    Mar  9 09:02:07.582: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Mar  9 09:02:07.582: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=PUT
    Mar  9 09:02:07.587: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Mar  9 09:02:07.587: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=DELETE
    Mar  9 09:02:07.593: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Mar  9 09:02:07.593: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=OPTIONS
    Mar  9 09:02:07.599: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Mar  9 09:02:07.599: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=PATCH
    Mar  9 09:02:07.605: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Mar  9 09:02:07.605: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=POST
    Mar  9 09:02:07.611: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Mar  9 09:02:07.611: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=PUT
    Mar  9 09:02:07.617: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Mar  9 09:02:07.617: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=GET
    Mar  9 09:02:07.621: INFO: http.Client request:GET StatusCode:301
    Mar  9 09:02:07.621: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=GET
    Mar  9 09:02:07.625: INFO: http.Client request:GET StatusCode:301
    Mar  9 09:02:07.625: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/pods/agnhost/proxy?method=HEAD
    Mar  9 09:02:07.629: INFO: http.Client request:HEAD StatusCode:301
    Mar  9 09:02:07.629: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9776/services/e2e-proxy-test-service/proxy?method=HEAD
    Mar  9 09:02:07.634: INFO: http.Client request:HEAD StatusCode:301
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:02:07.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-9776" for this suite. 03/09/23 09:02:07.64
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:02:07.649
Mar  9 09:02:07.649: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 09:02:07.651
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:07.668
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:07.672
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
STEP: Counting existing ResourceQuota 03/09/23 09:02:07.678
STEP: Creating a ResourceQuota 03/09/23 09:02:12.682
STEP: Ensuring resource quota status is calculated 03/09/23 09:02:12.688
STEP: Creating a Pod that fits quota 03/09/23 09:02:14.694
STEP: Ensuring ResourceQuota status captures the pod usage 03/09/23 09:02:14.716
STEP: Not allowing a pod to be created that exceeds remaining quota 03/09/23 09:02:16.722
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 03/09/23 09:02:16.726
STEP: Ensuring a pod cannot update its resource requirements 03/09/23 09:02:16.73
STEP: Ensuring attempts to update pod resource requirements did not change quota usage 03/09/23 09:02:16.736
STEP: Deleting the pod 03/09/23 09:02:18.741
STEP: Ensuring resource quota status released the pod usage 03/09/23 09:02:18.757
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 09:02:20.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-5827" for this suite. 03/09/23 09:02:20.768
------------------------------
â€¢ [SLOW TEST] [13.126 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:02:07.649
    Mar  9 09:02:07.649: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 09:02:07.651
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:07.668
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:07.672
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a pod. [Conformance]
      test/e2e/apimachinery/resource_quota.go:230
    STEP: Counting existing ResourceQuota 03/09/23 09:02:07.678
    STEP: Creating a ResourceQuota 03/09/23 09:02:12.682
    STEP: Ensuring resource quota status is calculated 03/09/23 09:02:12.688
    STEP: Creating a Pod that fits quota 03/09/23 09:02:14.694
    STEP: Ensuring ResourceQuota status captures the pod usage 03/09/23 09:02:14.716
    STEP: Not allowing a pod to be created that exceeds remaining quota 03/09/23 09:02:16.722
    STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 03/09/23 09:02:16.726
    STEP: Ensuring a pod cannot update its resource requirements 03/09/23 09:02:16.73
    STEP: Ensuring attempts to update pod resource requirements did not change quota usage 03/09/23 09:02:16.736
    STEP: Deleting the pod 03/09/23 09:02:18.741
    STEP: Ensuring resource quota status released the pod usage 03/09/23 09:02:18.757
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:02:20.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-5827" for this suite. 03/09/23 09:02:20.768
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:02:20.777
Mar  9 09:02:20.777: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 09:02:20.778
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:20.792
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:20.797
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
STEP: Counting existing ResourceQuota 03/09/23 09:02:37.808
STEP: Creating a ResourceQuota 03/09/23 09:02:42.812
STEP: Ensuring resource quota status is calculated 03/09/23 09:02:42.827
STEP: Creating a ConfigMap 03/09/23 09:02:44.833
STEP: Ensuring resource quota status captures configMap creation 03/09/23 09:02:44.858
STEP: Deleting a ConfigMap 03/09/23 09:02:46.862
STEP: Ensuring resource quota status released usage 03/09/23 09:02:46.871
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 09:02:48.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-3650" for this suite. 03/09/23 09:02:48.884
------------------------------
â€¢ [SLOW TEST] [28.116 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:02:20.777
    Mar  9 09:02:20.777: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 09:02:20.778
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:20.792
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:20.797
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
      test/e2e/apimachinery/resource_quota.go:326
    STEP: Counting existing ResourceQuota 03/09/23 09:02:37.808
    STEP: Creating a ResourceQuota 03/09/23 09:02:42.812
    STEP: Ensuring resource quota status is calculated 03/09/23 09:02:42.827
    STEP: Creating a ConfigMap 03/09/23 09:02:44.833
    STEP: Ensuring resource quota status captures configMap creation 03/09/23 09:02:44.858
    STEP: Deleting a ConfigMap 03/09/23 09:02:46.862
    STEP: Ensuring resource quota status released usage 03/09/23 09:02:46.871
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:02:48.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-3650" for this suite. 03/09/23 09:02:48.884
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:02:48.898
Mar  9 09:02:48.898: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename disruption 03/09/23 09:02:48.9
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:48.914
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:48.919
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
STEP: Waiting for the pdb to be processed 03/09/23 09:02:48.931
STEP: Waiting for all pods to be running 03/09/23 09:02:50.97
Mar  9 09:02:50.977: INFO: running pods: 0 < 3
Mar  9 09:02:52.983: INFO: running pods: 2 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar  9 09:02:54.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-6826" for this suite. 03/09/23 09:02:54.992
------------------------------
â€¢ [SLOW TEST] [6.102 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:02:48.898
    Mar  9 09:02:48.898: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename disruption 03/09/23 09:02:48.9
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:48.914
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:48.919
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should observe PodDisruptionBudget status updated [Conformance]
      test/e2e/apps/disruption.go:141
    STEP: Waiting for the pdb to be processed 03/09/23 09:02:48.931
    STEP: Waiting for all pods to be running 03/09/23 09:02:50.97
    Mar  9 09:02:50.977: INFO: running pods: 0 < 3
    Mar  9 09:02:52.983: INFO: running pods: 2 < 3
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:02:54.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-6826" for this suite. 03/09/23 09:02:54.992
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:02:55.003
Mar  9 09:02:55.003: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 09:02:55.005
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:55.019
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:55.024
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
STEP: Creating configMap with name configmap-test-volume-map-a3f2cb0e-8640-4fc4-87d7-f5838cacccc4 03/09/23 09:02:55.029
STEP: Creating a pod to test consume configMaps 03/09/23 09:02:55.035
Mar  9 09:02:55.046: INFO: Waiting up to 5m0s for pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe" in namespace "configmap-2081" to be "Succeeded or Failed"
Mar  9 09:02:55.050: INFO: Pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe": Phase="Pending", Reason="", readiness=false. Elapsed: 4.186927ms
Mar  9 09:02:57.056: INFO: Pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00945365s
Mar  9 09:02:59.056: INFO: Pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010199435s
STEP: Saw pod success 03/09/23 09:02:59.057
Mar  9 09:02:59.057: INFO: Pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe" satisfied condition "Succeeded or Failed"
Mar  9 09:02:59.061: INFO: Trying to get logs from node k8s-worker2 pod pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe container agnhost-container: <nil>
STEP: delete the pod 03/09/23 09:02:59.095
Mar  9 09:02:59.111: INFO: Waiting for pod pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe to disappear
Mar  9 09:02:59.115: INFO: Pod pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:02:59.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2081" for this suite. 03/09/23 09:02:59.121
------------------------------
â€¢ [4.125 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:02:55.003
    Mar  9 09:02:55.003: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 09:02:55.005
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:55.019
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:55.024
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:89
    STEP: Creating configMap with name configmap-test-volume-map-a3f2cb0e-8640-4fc4-87d7-f5838cacccc4 03/09/23 09:02:55.029
    STEP: Creating a pod to test consume configMaps 03/09/23 09:02:55.035
    Mar  9 09:02:55.046: INFO: Waiting up to 5m0s for pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe" in namespace "configmap-2081" to be "Succeeded or Failed"
    Mar  9 09:02:55.050: INFO: Pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe": Phase="Pending", Reason="", readiness=false. Elapsed: 4.186927ms
    Mar  9 09:02:57.056: INFO: Pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00945365s
    Mar  9 09:02:59.056: INFO: Pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010199435s
    STEP: Saw pod success 03/09/23 09:02:59.057
    Mar  9 09:02:59.057: INFO: Pod "pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe" satisfied condition "Succeeded or Failed"
    Mar  9 09:02:59.061: INFO: Trying to get logs from node k8s-worker2 pod pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 09:02:59.095
    Mar  9 09:02:59.111: INFO: Waiting for pod pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe to disappear
    Mar  9 09:02:59.115: INFO: Pod pod-configmaps-8beaf3e3-689d-4783-a573-904de45991fe no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:02:59.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2081" for this suite. 03/09/23 09:02:59.121
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:02:59.13
Mar  9 09:02:59.130: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 09:02:59.132
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:59.154
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:59.159
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
STEP: creating a replication controller 03/09/23 09:02:59.164
Mar  9 09:02:59.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 create -f -'
Mar  9 09:02:59.657: INFO: stderr: ""
Mar  9 09:02:59.657: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 03/09/23 09:02:59.657
Mar  9 09:02:59.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:02:59.820: INFO: stderr: ""
Mar  9 09:02:59.820: INFO: stdout: "update-demo-nautilus-kk7nr update-demo-nautilus-lwmvj "
Mar  9 09:02:59.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:02:59.966: INFO: stderr: ""
Mar  9 09:02:59.966: INFO: stdout: ""
Mar  9 09:02:59.966: INFO: update-demo-nautilus-kk7nr is created but not running
Mar  9 09:03:04.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:03:05.148: INFO: stderr: ""
Mar  9 09:03:05.148: INFO: stdout: "update-demo-nautilus-kk7nr update-demo-nautilus-lwmvj "
Mar  9 09:03:05.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:03:05.324: INFO: stderr: ""
Mar  9 09:03:05.324: INFO: stdout: "true"
Mar  9 09:03:05.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar  9 09:03:05.478: INFO: stderr: ""
Mar  9 09:03:05.478: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar  9 09:03:05.478: INFO: validating pod update-demo-nautilus-kk7nr
Mar  9 09:03:05.493: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar  9 09:03:05.493: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar  9 09:03:05.493: INFO: update-demo-nautilus-kk7nr is verified up and running
Mar  9 09:03:05.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-lwmvj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:03:05.656: INFO: stderr: ""
Mar  9 09:03:05.656: INFO: stdout: ""
Mar  9 09:03:05.656: INFO: update-demo-nautilus-lwmvj is created but not running
Mar  9 09:03:10.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:03:10.821: INFO: stderr: ""
Mar  9 09:03:10.821: INFO: stdout: "update-demo-nautilus-kk7nr update-demo-nautilus-lwmvj "
Mar  9 09:03:10.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:03:10.962: INFO: stderr: ""
Mar  9 09:03:10.962: INFO: stdout: "true"
Mar  9 09:03:10.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar  9 09:03:11.120: INFO: stderr: ""
Mar  9 09:03:11.120: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar  9 09:03:11.120: INFO: validating pod update-demo-nautilus-kk7nr
Mar  9 09:03:11.125: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar  9 09:03:11.125: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar  9 09:03:11.125: INFO: update-demo-nautilus-kk7nr is verified up and running
Mar  9 09:03:11.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-lwmvj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:03:11.260: INFO: stderr: ""
Mar  9 09:03:11.261: INFO: stdout: "true"
Mar  9 09:03:11.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-lwmvj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar  9 09:03:11.402: INFO: stderr: ""
Mar  9 09:03:11.402: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar  9 09:03:11.402: INFO: validating pod update-demo-nautilus-lwmvj
Mar  9 09:03:11.409: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar  9 09:03:11.409: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar  9 09:03:11.409: INFO: update-demo-nautilus-lwmvj is verified up and running
STEP: scaling down the replication controller 03/09/23 09:03:11.409
Mar  9 09:03:11.411: INFO: scanned /root for discovery docs: <nil>
Mar  9 09:03:11.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Mar  9 09:03:12.581: INFO: stderr: ""
Mar  9 09:03:12.581: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 03/09/23 09:03:12.581
Mar  9 09:03:12.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:03:12.720: INFO: stderr: ""
Mar  9 09:03:12.720: INFO: stdout: "update-demo-nautilus-kk7nr update-demo-nautilus-lwmvj "
STEP: Replicas for name=update-demo: expected=1 actual=2 03/09/23 09:03:12.72
Mar  9 09:03:17.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:03:17.857: INFO: stderr: ""
Mar  9 09:03:17.858: INFO: stdout: "update-demo-nautilus-kk7nr "
Mar  9 09:03:17.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:03:17.981: INFO: stderr: ""
Mar  9 09:03:17.981: INFO: stdout: "true"
Mar  9 09:03:17.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar  9 09:03:18.097: INFO: stderr: ""
Mar  9 09:03:18.097: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar  9 09:03:18.097: INFO: validating pod update-demo-nautilus-kk7nr
Mar  9 09:03:18.103: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar  9 09:03:18.103: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar  9 09:03:18.103: INFO: update-demo-nautilus-kk7nr is verified up and running
STEP: scaling up the replication controller 03/09/23 09:03:18.103
Mar  9 09:03:18.105: INFO: scanned /root for discovery docs: <nil>
Mar  9 09:03:18.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Mar  9 09:03:19.274: INFO: stderr: ""
Mar  9 09:03:19.274: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 03/09/23 09:03:19.274
Mar  9 09:03:19.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:03:19.438: INFO: stderr: ""
Mar  9 09:03:19.438: INFO: stdout: "update-demo-nautilus-2mmwt update-demo-nautilus-kk7nr "
Mar  9 09:03:19.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-2mmwt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:03:19.599: INFO: stderr: ""
Mar  9 09:03:19.599: INFO: stdout: ""
Mar  9 09:03:19.599: INFO: update-demo-nautilus-2mmwt is created but not running
Mar  9 09:03:24.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:03:24.771: INFO: stderr: ""
Mar  9 09:03:24.771: INFO: stdout: "update-demo-nautilus-2mmwt update-demo-nautilus-kk7nr "
Mar  9 09:03:24.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-2mmwt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:03:24.902: INFO: stderr: ""
Mar  9 09:03:24.902: INFO: stdout: "true"
Mar  9 09:03:24.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-2mmwt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar  9 09:03:25.027: INFO: stderr: ""
Mar  9 09:03:25.027: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar  9 09:03:25.027: INFO: validating pod update-demo-nautilus-2mmwt
Mar  9 09:03:25.033: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar  9 09:03:25.033: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar  9 09:03:25.033: INFO: update-demo-nautilus-2mmwt is verified up and running
Mar  9 09:03:25.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:03:25.182: INFO: stderr: ""
Mar  9 09:03:25.182: INFO: stdout: "true"
Mar  9 09:03:25.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar  9 09:03:25.316: INFO: stderr: ""
Mar  9 09:03:25.316: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar  9 09:03:25.316: INFO: validating pod update-demo-nautilus-kk7nr
Mar  9 09:03:25.320: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar  9 09:03:25.320: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar  9 09:03:25.320: INFO: update-demo-nautilus-kk7nr is verified up and running
STEP: using delete to clean up resources 03/09/23 09:03:25.32
Mar  9 09:03:25.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 delete --grace-period=0 --force -f -'
Mar  9 09:03:25.473: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 09:03:25.473: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Mar  9 09:03:25.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get rc,svc -l name=update-demo --no-headers'
Mar  9 09:03:25.651: INFO: stderr: "No resources found in kubectl-7235 namespace.\n"
Mar  9 09:03:25.651: INFO: stdout: ""
Mar  9 09:03:25.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Mar  9 09:03:25.860: INFO: stderr: ""
Mar  9 09:03:25.860: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 09:03:25.860: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-7235" for this suite. 03/09/23 09:03:25.874
------------------------------
â€¢ [SLOW TEST] [26.751 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should scale a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:352

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:02:59.13
    Mar  9 09:02:59.130: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 09:02:59.132
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:02:59.154
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:02:59.159
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should scale a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:352
    STEP: creating a replication controller 03/09/23 09:02:59.164
    Mar  9 09:02:59.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 create -f -'
    Mar  9 09:02:59.657: INFO: stderr: ""
    Mar  9 09:02:59.657: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 03/09/23 09:02:59.657
    Mar  9 09:02:59.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:02:59.820: INFO: stderr: ""
    Mar  9 09:02:59.820: INFO: stdout: "update-demo-nautilus-kk7nr update-demo-nautilus-lwmvj "
    Mar  9 09:02:59.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:02:59.966: INFO: stderr: ""
    Mar  9 09:02:59.966: INFO: stdout: ""
    Mar  9 09:02:59.966: INFO: update-demo-nautilus-kk7nr is created but not running
    Mar  9 09:03:04.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:03:05.148: INFO: stderr: ""
    Mar  9 09:03:05.148: INFO: stdout: "update-demo-nautilus-kk7nr update-demo-nautilus-lwmvj "
    Mar  9 09:03:05.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:03:05.324: INFO: stderr: ""
    Mar  9 09:03:05.324: INFO: stdout: "true"
    Mar  9 09:03:05.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar  9 09:03:05.478: INFO: stderr: ""
    Mar  9 09:03:05.478: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar  9 09:03:05.478: INFO: validating pod update-demo-nautilus-kk7nr
    Mar  9 09:03:05.493: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar  9 09:03:05.493: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar  9 09:03:05.493: INFO: update-demo-nautilus-kk7nr is verified up and running
    Mar  9 09:03:05.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-lwmvj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:03:05.656: INFO: stderr: ""
    Mar  9 09:03:05.656: INFO: stdout: ""
    Mar  9 09:03:05.656: INFO: update-demo-nautilus-lwmvj is created but not running
    Mar  9 09:03:10.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:03:10.821: INFO: stderr: ""
    Mar  9 09:03:10.821: INFO: stdout: "update-demo-nautilus-kk7nr update-demo-nautilus-lwmvj "
    Mar  9 09:03:10.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:03:10.962: INFO: stderr: ""
    Mar  9 09:03:10.962: INFO: stdout: "true"
    Mar  9 09:03:10.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar  9 09:03:11.120: INFO: stderr: ""
    Mar  9 09:03:11.120: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar  9 09:03:11.120: INFO: validating pod update-demo-nautilus-kk7nr
    Mar  9 09:03:11.125: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar  9 09:03:11.125: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar  9 09:03:11.125: INFO: update-demo-nautilus-kk7nr is verified up and running
    Mar  9 09:03:11.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-lwmvj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:03:11.260: INFO: stderr: ""
    Mar  9 09:03:11.261: INFO: stdout: "true"
    Mar  9 09:03:11.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-lwmvj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar  9 09:03:11.402: INFO: stderr: ""
    Mar  9 09:03:11.402: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar  9 09:03:11.402: INFO: validating pod update-demo-nautilus-lwmvj
    Mar  9 09:03:11.409: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar  9 09:03:11.409: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar  9 09:03:11.409: INFO: update-demo-nautilus-lwmvj is verified up and running
    STEP: scaling down the replication controller 03/09/23 09:03:11.409
    Mar  9 09:03:11.411: INFO: scanned /root for discovery docs: <nil>
    Mar  9 09:03:11.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
    Mar  9 09:03:12.581: INFO: stderr: ""
    Mar  9 09:03:12.581: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 03/09/23 09:03:12.581
    Mar  9 09:03:12.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:03:12.720: INFO: stderr: ""
    Mar  9 09:03:12.720: INFO: stdout: "update-demo-nautilus-kk7nr update-demo-nautilus-lwmvj "
    STEP: Replicas for name=update-demo: expected=1 actual=2 03/09/23 09:03:12.72
    Mar  9 09:03:17.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:03:17.857: INFO: stderr: ""
    Mar  9 09:03:17.858: INFO: stdout: "update-demo-nautilus-kk7nr "
    Mar  9 09:03:17.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:03:17.981: INFO: stderr: ""
    Mar  9 09:03:17.981: INFO: stdout: "true"
    Mar  9 09:03:17.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar  9 09:03:18.097: INFO: stderr: ""
    Mar  9 09:03:18.097: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar  9 09:03:18.097: INFO: validating pod update-demo-nautilus-kk7nr
    Mar  9 09:03:18.103: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar  9 09:03:18.103: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar  9 09:03:18.103: INFO: update-demo-nautilus-kk7nr is verified up and running
    STEP: scaling up the replication controller 03/09/23 09:03:18.103
    Mar  9 09:03:18.105: INFO: scanned /root for discovery docs: <nil>
    Mar  9 09:03:18.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
    Mar  9 09:03:19.274: INFO: stderr: ""
    Mar  9 09:03:19.274: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 03/09/23 09:03:19.274
    Mar  9 09:03:19.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:03:19.438: INFO: stderr: ""
    Mar  9 09:03:19.438: INFO: stdout: "update-demo-nautilus-2mmwt update-demo-nautilus-kk7nr "
    Mar  9 09:03:19.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-2mmwt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:03:19.599: INFO: stderr: ""
    Mar  9 09:03:19.599: INFO: stdout: ""
    Mar  9 09:03:19.599: INFO: update-demo-nautilus-2mmwt is created but not running
    Mar  9 09:03:24.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:03:24.771: INFO: stderr: ""
    Mar  9 09:03:24.771: INFO: stdout: "update-demo-nautilus-2mmwt update-demo-nautilus-kk7nr "
    Mar  9 09:03:24.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-2mmwt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:03:24.902: INFO: stderr: ""
    Mar  9 09:03:24.902: INFO: stdout: "true"
    Mar  9 09:03:24.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-2mmwt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar  9 09:03:25.027: INFO: stderr: ""
    Mar  9 09:03:25.027: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar  9 09:03:25.027: INFO: validating pod update-demo-nautilus-2mmwt
    Mar  9 09:03:25.033: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar  9 09:03:25.033: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar  9 09:03:25.033: INFO: update-demo-nautilus-2mmwt is verified up and running
    Mar  9 09:03:25.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:03:25.182: INFO: stderr: ""
    Mar  9 09:03:25.182: INFO: stdout: "true"
    Mar  9 09:03:25.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods update-demo-nautilus-kk7nr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar  9 09:03:25.316: INFO: stderr: ""
    Mar  9 09:03:25.316: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar  9 09:03:25.316: INFO: validating pod update-demo-nautilus-kk7nr
    Mar  9 09:03:25.320: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar  9 09:03:25.320: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar  9 09:03:25.320: INFO: update-demo-nautilus-kk7nr is verified up and running
    STEP: using delete to clean up resources 03/09/23 09:03:25.32
    Mar  9 09:03:25.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 delete --grace-period=0 --force -f -'
    Mar  9 09:03:25.473: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 09:03:25.473: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Mar  9 09:03:25.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get rc,svc -l name=update-demo --no-headers'
    Mar  9 09:03:25.651: INFO: stderr: "No resources found in kubectl-7235 namespace.\n"
    Mar  9 09:03:25.651: INFO: stdout: ""
    Mar  9 09:03:25.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-7235 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Mar  9 09:03:25.860: INFO: stderr: ""
    Mar  9 09:03:25.860: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:03:25.860: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-7235" for this suite. 03/09/23 09:03:25.874
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:03:25.882
Mar  9 09:03:25.882: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 09:03:25.884
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:25.906
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:25.912
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
STEP: Creating secret with name secret-test-map-a46a2593-0af4-4ed6-88db-4e5ad8ef21bc 03/09/23 09:03:25.918
STEP: Creating a pod to test consume secrets 03/09/23 09:03:25.925
Mar  9 09:03:25.934: INFO: Waiting up to 5m0s for pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4" in namespace "secrets-7430" to be "Succeeded or Failed"
Mar  9 09:03:25.938: INFO: Pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.787897ms
Mar  9 09:03:27.943: INFO: Pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009226054s
Mar  9 09:03:29.942: INFO: Pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008049008s
STEP: Saw pod success 03/09/23 09:03:29.942
Mar  9 09:03:29.942: INFO: Pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4" satisfied condition "Succeeded or Failed"
Mar  9 09:03:29.946: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4 container secret-volume-test: <nil>
STEP: delete the pod 03/09/23 09:03:29.976
Mar  9 09:03:29.991: INFO: Waiting for pod pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4 to disappear
Mar  9 09:03:29.994: INFO: Pod pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 09:03:29.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-7430" for this suite. 03/09/23 09:03:30
------------------------------
â€¢ [4.125 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:03:25.882
    Mar  9 09:03:25.882: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 09:03:25.884
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:25.906
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:25.912
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:79
    STEP: Creating secret with name secret-test-map-a46a2593-0af4-4ed6-88db-4e5ad8ef21bc 03/09/23 09:03:25.918
    STEP: Creating a pod to test consume secrets 03/09/23 09:03:25.925
    Mar  9 09:03:25.934: INFO: Waiting up to 5m0s for pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4" in namespace "secrets-7430" to be "Succeeded or Failed"
    Mar  9 09:03:25.938: INFO: Pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.787897ms
    Mar  9 09:03:27.943: INFO: Pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009226054s
    Mar  9 09:03:29.942: INFO: Pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.008049008s
    STEP: Saw pod success 03/09/23 09:03:29.942
    Mar  9 09:03:29.942: INFO: Pod "pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4" satisfied condition "Succeeded or Failed"
    Mar  9 09:03:29.946: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4 container secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 09:03:29.976
    Mar  9 09:03:29.991: INFO: Waiting for pod pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4 to disappear
    Mar  9 09:03:29.994: INFO: Pod pod-secrets-41676752-2d4e-45ce-adc8-3e6c5034c0f4 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:03:29.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-7430" for this suite. 03/09/23 09:03:30
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:03:30.008
Mar  9 09:03:30.008: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:03:30.01
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:30.024
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:30.029
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
STEP: Creating the pod 03/09/23 09:03:30.034
Mar  9 09:03:30.047: INFO: Waiting up to 5m0s for pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7" in namespace "projected-366" to be "running and ready"
Mar  9 09:03:30.051: INFO: Pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.950396ms
Mar  9 09:03:30.051: INFO: The phase of Pod annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:03:32.056: INFO: Pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7": Phase="Running", Reason="", readiness=true. Elapsed: 2.009370514s
Mar  9 09:03:32.056: INFO: The phase of Pod annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7 is Running (Ready = true)
Mar  9 09:03:32.056: INFO: Pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7" satisfied condition "running and ready"
Mar  9 09:03:32.587: INFO: Successfully updated pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Mar  9 09:03:36.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-366" for this suite. 03/09/23 09:03:36.622
------------------------------
â€¢ [SLOW TEST] [6.622 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:03:30.008
    Mar  9 09:03:30.008: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:03:30.01
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:30.024
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:30.029
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:162
    STEP: Creating the pod 03/09/23 09:03:30.034
    Mar  9 09:03:30.047: INFO: Waiting up to 5m0s for pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7" in namespace "projected-366" to be "running and ready"
    Mar  9 09:03:30.051: INFO: Pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.950396ms
    Mar  9 09:03:30.051: INFO: The phase of Pod annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:03:32.056: INFO: Pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7": Phase="Running", Reason="", readiness=true. Elapsed: 2.009370514s
    Mar  9 09:03:32.056: INFO: The phase of Pod annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7 is Running (Ready = true)
    Mar  9 09:03:32.056: INFO: Pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7" satisfied condition "running and ready"
    Mar  9 09:03:32.587: INFO: Successfully updated pod "annotationupdate94a4e9e6-94e6-4d07-b023-fd517ecc7da7"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:03:36.615: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-366" for this suite. 03/09/23 09:03:36.622
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:03:36.632
Mar  9 09:03:36.633: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename svcaccounts 03/09/23 09:03:36.635
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:36.654
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:36.659
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
STEP: Creating ServiceAccount "e2e-sa-fkptj"  03/09/23 09:03:36.665
Mar  9 09:03:36.672: INFO: AutomountServiceAccountToken: false
STEP: Updating ServiceAccount "e2e-sa-fkptj"  03/09/23 09:03:36.672
Mar  9 09:03:36.682: INFO: AutomountServiceAccountToken: true
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar  9 09:03:36.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-3872" for this suite. 03/09/23 09:03:36.688
------------------------------
â€¢ [0.063 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:03:36.632
    Mar  9 09:03:36.633: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename svcaccounts 03/09/23 09:03:36.635
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:36.654
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:36.659
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should update a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:810
    STEP: Creating ServiceAccount "e2e-sa-fkptj"  03/09/23 09:03:36.665
    Mar  9 09:03:36.672: INFO: AutomountServiceAccountToken: false
    STEP: Updating ServiceAccount "e2e-sa-fkptj"  03/09/23 09:03:36.672
    Mar  9 09:03:36.682: INFO: AutomountServiceAccountToken: true
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:03:36.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-3872" for this suite. 03/09/23 09:03:36.688
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:03:36.697
Mar  9 09:03:36.697: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 09:03:36.698
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:36.714
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:36.719
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 09:03:36.738
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 09:03:37.449
STEP: Deploying the webhook pod 03/09/23 09:03:37.458
STEP: Wait for the deployment to be ready 03/09/23 09:03:37.474
Mar  9 09:03:37.485: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 09:03:39.499
STEP: Verifying the service has paired with the endpoint 03/09/23 09:03:39.525
Mar  9 09:03:40.526: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
STEP: Creating a mutating webhook configuration 03/09/23 09:03:40.53
STEP: Updating a mutating webhook configuration's rules to not include the create operation 03/09/23 09:03:40.56
STEP: Creating a configMap that should not be mutated 03/09/23 09:03:40.569
STEP: Patching a mutating webhook configuration's rules to include the create operation 03/09/23 09:03:40.582
STEP: Creating a configMap that should be mutated 03/09/23 09:03:40.593
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:03:40.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6832" for this suite. 03/09/23 09:03:40.695
STEP: Destroying namespace "webhook-6832-markers" for this suite. 03/09/23 09:03:40.705
------------------------------
â€¢ [4.016 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:03:36.697
    Mar  9 09:03:36.697: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 09:03:36.698
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:36.714
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:36.719
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 09:03:36.738
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 09:03:37.449
    STEP: Deploying the webhook pod 03/09/23 09:03:37.458
    STEP: Wait for the deployment to be ready 03/09/23 09:03:37.474
    Mar  9 09:03:37.485: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 09:03:39.499
    STEP: Verifying the service has paired with the endpoint 03/09/23 09:03:39.525
    Mar  9 09:03:40.526: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a mutating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:508
    STEP: Creating a mutating webhook configuration 03/09/23 09:03:40.53
    STEP: Updating a mutating webhook configuration's rules to not include the create operation 03/09/23 09:03:40.56
    STEP: Creating a configMap that should not be mutated 03/09/23 09:03:40.569
    STEP: Patching a mutating webhook configuration's rules to include the create operation 03/09/23 09:03:40.582
    STEP: Creating a configMap that should be mutated 03/09/23 09:03:40.593
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:03:40.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6832" for this suite. 03/09/23 09:03:40.695
    STEP: Destroying namespace "webhook-6832-markers" for this suite. 03/09/23 09:03:40.705
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:03:40.715
Mar  9 09:03:40.715: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename dns 03/09/23 09:03:40.719
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:40.735
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:40.74
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 03/09/23 09:03:40.752
Mar  9 09:03:40.764: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2129  3658acdf-dd19-4731-83b7-e931b863e0cc 275381 0 2023-03-09 09:03:40 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-03-09 09:03:40 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-sfzt7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-sfzt7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Mar  9 09:03:40.764: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-2129" to be "running and ready"
Mar  9 09:03:40.768: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 3.883651ms
Mar  9 09:03:40.768: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:03:42.773: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.008407793s
Mar  9 09:03:42.773: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
Mar  9 09:03:42.773: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
STEP: Verifying customized DNS suffix list is configured on pod... 03/09/23 09:03:42.773
Mar  9 09:03:42.773: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2129 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 09:03:42.773: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 09:03:42.774: INFO: ExecWithOptions: Clientset creation
Mar  9 09:03:42.774: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-2129/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod... 03/09/23 09:03:42.943
Mar  9 09:03:42.944: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2129 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 09:03:42.944: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 09:03:42.945: INFO: ExecWithOptions: Clientset creation
Mar  9 09:03:42.945: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-2129/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar  9 09:03:43.106: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar  9 09:03:43.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-2129" for this suite. 03/09/23 09:03:43.128
------------------------------
â€¢ [2.420 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:03:40.715
    Mar  9 09:03:40.715: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename dns 03/09/23 09:03:40.719
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:40.735
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:40.74
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should support configurable pod DNS nameservers [Conformance]
      test/e2e/network/dns.go:411
    STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 03/09/23 09:03:40.752
    Mar  9 09:03:40.764: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2129  3658acdf-dd19-4731-83b7-e931b863e0cc 275381 0 2023-03-09 09:03:40 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-03-09 09:03:40 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-sfzt7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-sfzt7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Mar  9 09:03:40.764: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-2129" to be "running and ready"
    Mar  9 09:03:40.768: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 3.883651ms
    Mar  9 09:03:40.768: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:03:42.773: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.008407793s
    Mar  9 09:03:42.773: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
    Mar  9 09:03:42.773: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
    STEP: Verifying customized DNS suffix list is configured on pod... 03/09/23 09:03:42.773
    Mar  9 09:03:42.773: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2129 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 09:03:42.773: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 09:03:42.774: INFO: ExecWithOptions: Clientset creation
    Mar  9 09:03:42.774: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-2129/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    STEP: Verifying customized DNS server is configured on pod... 03/09/23 09:03:42.943
    Mar  9 09:03:42.944: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2129 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 09:03:42.944: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 09:03:42.945: INFO: ExecWithOptions: Clientset creation
    Mar  9 09:03:42.945: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-2129/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar  9 09:03:43.106: INFO: Deleting pod test-dns-nameservers...
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:03:43.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-2129" for this suite. 03/09/23 09:03:43.128
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:03:43.136
Mar  9 09:03:43.136: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-probe 03/09/23 09:03:43.138
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:43.154
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:43.159
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
STEP: Creating pod test-webserver-aa77c973-163c-4e72-8d2e-823326578129 in namespace container-probe-2915 03/09/23 09:03:43.164
Mar  9 09:03:43.175: INFO: Waiting up to 5m0s for pod "test-webserver-aa77c973-163c-4e72-8d2e-823326578129" in namespace "container-probe-2915" to be "not pending"
Mar  9 09:03:43.178: INFO: Pod "test-webserver-aa77c973-163c-4e72-8d2e-823326578129": Phase="Pending", Reason="", readiness=false. Elapsed: 3.402578ms
Mar  9 09:03:45.184: INFO: Pod "test-webserver-aa77c973-163c-4e72-8d2e-823326578129": Phase="Running", Reason="", readiness=true. Elapsed: 2.008964688s
Mar  9 09:03:45.184: INFO: Pod "test-webserver-aa77c973-163c-4e72-8d2e-823326578129" satisfied condition "not pending"
Mar  9 09:03:45.184: INFO: Started pod test-webserver-aa77c973-163c-4e72-8d2e-823326578129 in namespace container-probe-2915
STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 09:03:45.184
Mar  9 09:03:45.188: INFO: Initial restart count of pod test-webserver-aa77c973-163c-4e72-8d2e-823326578129 is 0
STEP: deleting the pod 03/09/23 09:07:45.864
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar  9 09:07:45.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-2915" for this suite. 03/09/23 09:07:45.898
------------------------------
â€¢ [SLOW TEST] [242.770 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:03:43.136
    Mar  9 09:03:43.136: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-probe 03/09/23 09:03:43.138
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:03:43.154
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:03:43.159
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:215
    STEP: Creating pod test-webserver-aa77c973-163c-4e72-8d2e-823326578129 in namespace container-probe-2915 03/09/23 09:03:43.164
    Mar  9 09:03:43.175: INFO: Waiting up to 5m0s for pod "test-webserver-aa77c973-163c-4e72-8d2e-823326578129" in namespace "container-probe-2915" to be "not pending"
    Mar  9 09:03:43.178: INFO: Pod "test-webserver-aa77c973-163c-4e72-8d2e-823326578129": Phase="Pending", Reason="", readiness=false. Elapsed: 3.402578ms
    Mar  9 09:03:45.184: INFO: Pod "test-webserver-aa77c973-163c-4e72-8d2e-823326578129": Phase="Running", Reason="", readiness=true. Elapsed: 2.008964688s
    Mar  9 09:03:45.184: INFO: Pod "test-webserver-aa77c973-163c-4e72-8d2e-823326578129" satisfied condition "not pending"
    Mar  9 09:03:45.184: INFO: Started pod test-webserver-aa77c973-163c-4e72-8d2e-823326578129 in namespace container-probe-2915
    STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 09:03:45.184
    Mar  9 09:03:45.188: INFO: Initial restart count of pod test-webserver-aa77c973-163c-4e72-8d2e-823326578129 is 0
    STEP: deleting the pod 03/09/23 09:07:45.864
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:07:45.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-2915" for this suite. 03/09/23 09:07:45.898
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:07:45.91
Mar  9 09:07:45.910: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename events 03/09/23 09:07:45.912
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:07:45.927
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:07:45.932
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
STEP: Create set of events 03/09/23 09:07:45.937
STEP: get a list of Events with a label in the current namespace 03/09/23 09:07:45.956
STEP: delete a list of events 03/09/23 09:07:45.961
Mar  9 09:07:45.961: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 03/09/23 09:07:45.984
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Mar  9 09:07:45.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-5891" for this suite. 03/09/23 09:07:45.994
------------------------------
â€¢ [0.092 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:07:45.91
    Mar  9 09:07:45.910: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename events 03/09/23 09:07:45.912
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:07:45.927
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:07:45.932
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/events.go:207
    STEP: Create set of events 03/09/23 09:07:45.937
    STEP: get a list of Events with a label in the current namespace 03/09/23 09:07:45.956
    STEP: delete a list of events 03/09/23 09:07:45.961
    Mar  9 09:07:45.961: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 03/09/23 09:07:45.984
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:07:45.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-5891" for this suite. 03/09/23 09:07:45.994
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:07:46.003
Mar  9 09:07:46.004: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 09:07:46.005
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:07:46.02
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:07:46.025
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
STEP: Counting existing ResourceQuota 03/09/23 09:07:46.03
STEP: Creating a ResourceQuota 03/09/23 09:07:51.033
STEP: Ensuring resource quota status is calculated 03/09/23 09:07:51.041
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 09:07:53.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-1691" for this suite. 03/09/23 09:07:53.053
------------------------------
â€¢ [SLOW TEST] [7.058 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:07:46.003
    Mar  9 09:07:46.004: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 09:07:46.005
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:07:46.02
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:07:46.025
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
      test/e2e/apimachinery/resource_quota.go:75
    STEP: Counting existing ResourceQuota 03/09/23 09:07:46.03
    STEP: Creating a ResourceQuota 03/09/23 09:07:51.033
    STEP: Ensuring resource quota status is calculated 03/09/23 09:07:51.041
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:07:53.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-1691" for this suite. 03/09/23 09:07:53.053
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:07:53.063
Mar  9 09:07:53.063: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 09:07:53.065
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:07:53.081
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:07:53.086
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 03/09/23 09:07:53.091
Mar  9 09:07:53.092: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 09:07:55.080: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:03.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-2667" for this suite. 03/09/23 09:08:03.415
------------------------------
â€¢ [SLOW TEST] [10.360 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:07:53.063
    Mar  9 09:07:53.063: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 09:07:53.065
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:07:53.081
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:07:53.086
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of different groups [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:276
    STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 03/09/23 09:07:53.091
    Mar  9 09:07:53.092: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 09:07:55.080: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:03.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-2667" for this suite. 03/09/23 09:08:03.415
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:03.426
Mar  9 09:08:03.426: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 09:08:03.427
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:03.441
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:03.445
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
STEP: Creating secret with name secret-test-b592bce3-0803-4d22-8d2a-c42148e3b108 03/09/23 09:08:03.449
STEP: Creating a pod to test consume secrets 03/09/23 09:08:03.454
Mar  9 09:08:03.463: INFO: Waiting up to 5m0s for pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634" in namespace "secrets-8803" to be "Succeeded or Failed"
Mar  9 09:08:03.467: INFO: Pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634": Phase="Pending", Reason="", readiness=false. Elapsed: 4.290398ms
Mar  9 09:08:05.472: INFO: Pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008892872s
Mar  9 09:08:07.474: INFO: Pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011047468s
STEP: Saw pod success 03/09/23 09:08:07.474
Mar  9 09:08:07.474: INFO: Pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634" satisfied condition "Succeeded or Failed"
Mar  9 09:08:07.478: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634 container secret-volume-test: <nil>
STEP: delete the pod 03/09/23 09:08:07.507
Mar  9 09:08:07.524: INFO: Waiting for pod pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634 to disappear
Mar  9 09:08:07.527: INFO: Pod pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:07.527: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8803" for this suite. 03/09/23 09:08:07.534
------------------------------
â€¢ [4.115 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:03.426
    Mar  9 09:08:03.426: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 09:08:03.427
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:03.441
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:03.445
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:68
    STEP: Creating secret with name secret-test-b592bce3-0803-4d22-8d2a-c42148e3b108 03/09/23 09:08:03.449
    STEP: Creating a pod to test consume secrets 03/09/23 09:08:03.454
    Mar  9 09:08:03.463: INFO: Waiting up to 5m0s for pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634" in namespace "secrets-8803" to be "Succeeded or Failed"
    Mar  9 09:08:03.467: INFO: Pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634": Phase="Pending", Reason="", readiness=false. Elapsed: 4.290398ms
    Mar  9 09:08:05.472: INFO: Pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008892872s
    Mar  9 09:08:07.474: INFO: Pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011047468s
    STEP: Saw pod success 03/09/23 09:08:07.474
    Mar  9 09:08:07.474: INFO: Pod "pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634" satisfied condition "Succeeded or Failed"
    Mar  9 09:08:07.478: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634 container secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 09:08:07.507
    Mar  9 09:08:07.524: INFO: Waiting for pod pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634 to disappear
    Mar  9 09:08:07.527: INFO: Pod pod-secrets-3bddfee5-0086-4adb-a6ac-cc7032f2a634 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:07.527: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8803" for this suite. 03/09/23 09:08:07.534
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:07.542
Mar  9 09:08:07.542: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename disruption 03/09/23 09:08:07.544
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:07.559
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:07.565
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
STEP: creating the pdb 03/09/23 09:08:07.571
STEP: Waiting for the pdb to be processed 03/09/23 09:08:07.578
STEP: updating the pdb 03/09/23 09:08:09.586
STEP: Waiting for the pdb to be processed 03/09/23 09:08:09.597
STEP: patching the pdb 03/09/23 09:08:11.605
STEP: Waiting for the pdb to be processed 03/09/23 09:08:11.619
STEP: Waiting for the pdb to be deleted 03/09/23 09:08:13.634
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:13.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-9370" for this suite. 03/09/23 09:08:13.643
------------------------------
â€¢ [SLOW TEST] [6.108 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:07.542
    Mar  9 09:08:07.542: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename disruption 03/09/23 09:08:07.544
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:07.559
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:07.565
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should create a PodDisruptionBudget [Conformance]
      test/e2e/apps/disruption.go:108
    STEP: creating the pdb 03/09/23 09:08:07.571
    STEP: Waiting for the pdb to be processed 03/09/23 09:08:07.578
    STEP: updating the pdb 03/09/23 09:08:09.586
    STEP: Waiting for the pdb to be processed 03/09/23 09:08:09.597
    STEP: patching the pdb 03/09/23 09:08:11.605
    STEP: Waiting for the pdb to be processed 03/09/23 09:08:11.619
    STEP: Waiting for the pdb to be deleted 03/09/23 09:08:13.634
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:13.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-9370" for this suite. 03/09/23 09:08:13.643
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Pods
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:13.652
Mar  9 09:08:13.652: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 09:08:13.653
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:13.67
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:13.675
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
STEP: creating the pod 03/09/23 09:08:13.681
STEP: setting up watch 03/09/23 09:08:13.681
STEP: submitting the pod to kubernetes 03/09/23 09:08:13.787
STEP: verifying the pod is in kubernetes 03/09/23 09:08:13.797
STEP: verifying pod creation was observed 03/09/23 09:08:13.801
Mar  9 09:08:13.802: INFO: Waiting up to 5m0s for pod "pod-submit-remove-4a18734e-b57c-4cab-9e7f-2ccd1653a2be" in namespace "pods-2498" to be "running"
Mar  9 09:08:13.806: INFO: Pod "pod-submit-remove-4a18734e-b57c-4cab-9e7f-2ccd1653a2be": Phase="Pending", Reason="", readiness=false. Elapsed: 3.86078ms
Mar  9 09:08:15.810: INFO: Pod "pod-submit-remove-4a18734e-b57c-4cab-9e7f-2ccd1653a2be": Phase="Running", Reason="", readiness=true. Elapsed: 2.008607621s
Mar  9 09:08:15.810: INFO: Pod "pod-submit-remove-4a18734e-b57c-4cab-9e7f-2ccd1653a2be" satisfied condition "running"
STEP: deleting the pod gracefully 03/09/23 09:08:15.814
STEP: verifying pod deletion was observed 03/09/23 09:08:15.823
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:18.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2498" for this suite. 03/09/23 09:08:18.253
------------------------------
â€¢ [4.609 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:13.652
    Mar  9 09:08:13.652: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 09:08:13.653
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:13.67
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:13.675
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be submitted and removed [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:226
    STEP: creating the pod 03/09/23 09:08:13.681
    STEP: setting up watch 03/09/23 09:08:13.681
    STEP: submitting the pod to kubernetes 03/09/23 09:08:13.787
    STEP: verifying the pod is in kubernetes 03/09/23 09:08:13.797
    STEP: verifying pod creation was observed 03/09/23 09:08:13.801
    Mar  9 09:08:13.802: INFO: Waiting up to 5m0s for pod "pod-submit-remove-4a18734e-b57c-4cab-9e7f-2ccd1653a2be" in namespace "pods-2498" to be "running"
    Mar  9 09:08:13.806: INFO: Pod "pod-submit-remove-4a18734e-b57c-4cab-9e7f-2ccd1653a2be": Phase="Pending", Reason="", readiness=false. Elapsed: 3.86078ms
    Mar  9 09:08:15.810: INFO: Pod "pod-submit-remove-4a18734e-b57c-4cab-9e7f-2ccd1653a2be": Phase="Running", Reason="", readiness=true. Elapsed: 2.008607621s
    Mar  9 09:08:15.810: INFO: Pod "pod-submit-remove-4a18734e-b57c-4cab-9e7f-2ccd1653a2be" satisfied condition "running"
    STEP: deleting the pod gracefully 03/09/23 09:08:15.814
    STEP: verifying pod deletion was observed 03/09/23 09:08:15.823
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:18.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2498" for this suite. 03/09/23 09:08:18.253
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:18.263
Mar  9 09:08:18.263: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 09:08:18.264
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:18.292
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:18.298
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
STEP: Creating a pod to test emptydir volume type on tmpfs 03/09/23 09:08:18.304
Mar  9 09:08:18.323: INFO: Waiting up to 5m0s for pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd" in namespace "emptydir-9254" to be "Succeeded or Failed"
Mar  9 09:08:18.327: INFO: Pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd": Phase="Pending", Reason="", readiness=false. Elapsed: 3.838414ms
Mar  9 09:08:20.332: INFO: Pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008754442s
Mar  9 09:08:22.332: INFO: Pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0085902s
STEP: Saw pod success 03/09/23 09:08:22.332
Mar  9 09:08:22.332: INFO: Pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd" satisfied condition "Succeeded or Failed"
Mar  9 09:08:22.336: INFO: Trying to get logs from node k8s-worker1 pod pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd container test-container: <nil>
STEP: delete the pod 03/09/23 09:08:22.344
Mar  9 09:08:22.358: INFO: Waiting for pod pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd to disappear
Mar  9 09:08:22.361: INFO: Pod pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:22.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9254" for this suite. 03/09/23 09:08:22.367
------------------------------
â€¢ [4.111 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:18.263
    Mar  9 09:08:18.263: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 09:08:18.264
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:18.292
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:18.298
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:87
    STEP: Creating a pod to test emptydir volume type on tmpfs 03/09/23 09:08:18.304
    Mar  9 09:08:18.323: INFO: Waiting up to 5m0s for pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd" in namespace "emptydir-9254" to be "Succeeded or Failed"
    Mar  9 09:08:18.327: INFO: Pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd": Phase="Pending", Reason="", readiness=false. Elapsed: 3.838414ms
    Mar  9 09:08:20.332: INFO: Pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008754442s
    Mar  9 09:08:22.332: INFO: Pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0085902s
    STEP: Saw pod success 03/09/23 09:08:22.332
    Mar  9 09:08:22.332: INFO: Pod "pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd" satisfied condition "Succeeded or Failed"
    Mar  9 09:08:22.336: INFO: Trying to get logs from node k8s-worker1 pod pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd container test-container: <nil>
    STEP: delete the pod 03/09/23 09:08:22.344
    Mar  9 09:08:22.358: INFO: Waiting for pod pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd to disappear
    Mar  9 09:08:22.361: INFO: Pod pod-b2452b4a-c834-4a43-8729-13fc9ef2e6dd no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:22.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9254" for this suite. 03/09/23 09:08:22.367
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:22.374
Mar  9 09:08:22.374: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replicaset 03/09/23 09:08:22.376
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:22.393
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:22.398
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
STEP: Given a Pod with a 'name' label pod-adoption-release is created 03/09/23 09:08:22.403
Mar  9 09:08:22.413: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-221" to be "running and ready"
Mar  9 09:08:22.417: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00819ms
Mar  9 09:08:22.417: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:08:24.422: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.008840863s
Mar  9 09:08:24.422: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
Mar  9 09:08:24.422: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
STEP: When a replicaset with a matching selector is created 03/09/23 09:08:24.425
STEP: Then the orphan pod is adopted 03/09/23 09:08:24.432
STEP: When the matched label of one of its pods change 03/09/23 09:08:25.442
Mar  9 09:08:25.446: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released 03/09/23 09:08:25.461
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:26.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-221" for this suite. 03/09/23 09:08:26.48
------------------------------
â€¢ [4.115 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:22.374
    Mar  9 09:08:22.374: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replicaset 03/09/23 09:08:22.376
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:22.393
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:22.398
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching pods on creation and release no longer matching pods [Conformance]
      test/e2e/apps/replica_set.go:131
    STEP: Given a Pod with a 'name' label pod-adoption-release is created 03/09/23 09:08:22.403
    Mar  9 09:08:22.413: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-221" to be "running and ready"
    Mar  9 09:08:22.417: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00819ms
    Mar  9 09:08:22.417: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:08:24.422: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.008840863s
    Mar  9 09:08:24.422: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
    Mar  9 09:08:24.422: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
    STEP: When a replicaset with a matching selector is created 03/09/23 09:08:24.425
    STEP: Then the orphan pod is adopted 03/09/23 09:08:24.432
    STEP: When the matched label of one of its pods change 03/09/23 09:08:25.442
    Mar  9 09:08:25.446: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
    STEP: Then the pod is released 03/09/23 09:08:25.461
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:26.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-221" for this suite. 03/09/23 09:08:26.48
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] Services
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:26.49
Mar  9 09:08:26.490: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 09:08:26.491
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:26.506
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:26.511
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
STEP: creating a collection of services 03/09/23 09:08:26.516
Mar  9 09:08:26.516: INFO: Creating e2e-svc-a-f64r4
Mar  9 09:08:26.532: INFO: Creating e2e-svc-b-vkgj5
Mar  9 09:08:26.552: INFO: Creating e2e-svc-c-54sqk
STEP: deleting service collection 03/09/23 09:08:26.575
Mar  9 09:08:26.623: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:26.623: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5833" for this suite. 03/09/23 09:08:26.629
------------------------------
â€¢ [0.146 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:26.49
    Mar  9 09:08:26.490: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 09:08:26.491
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:26.506
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:26.511
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should delete a collection of services [Conformance]
      test/e2e/network/service.go:3654
    STEP: creating a collection of services 03/09/23 09:08:26.516
    Mar  9 09:08:26.516: INFO: Creating e2e-svc-a-f64r4
    Mar  9 09:08:26.532: INFO: Creating e2e-svc-b-vkgj5
    Mar  9 09:08:26.552: INFO: Creating e2e-svc-c-54sqk
    STEP: deleting service collection 03/09/23 09:08:26.575
    Mar  9 09:08:26.623: INFO: Collection of services has been deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:26.623: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5833" for this suite. 03/09/23 09:08:26.629
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] DisruptionController
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:26.636
Mar  9 09:08:26.636: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename disruption 03/09/23 09:08:26.638
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:26.655
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:26.66
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
STEP: Creating a pdb that targets all three pods in a test replica set 03/09/23 09:08:26.665
STEP: Waiting for the pdb to be processed 03/09/23 09:08:26.671
STEP: First trying to evict a pod which shouldn't be evictable 03/09/23 09:08:28.687
STEP: Waiting for all pods to be running 03/09/23 09:08:28.687
Mar  9 09:08:28.691: INFO: pods: 0 < 3
STEP: locating a running pod 03/09/23 09:08:30.697
STEP: Updating the pdb to allow a pod to be evicted 03/09/23 09:08:30.71
STEP: Waiting for the pdb to be processed 03/09/23 09:08:30.722
STEP: Trying to evict the same pod we tried earlier which should now be evictable 03/09/23 09:08:32.73
STEP: Waiting for all pods to be running 03/09/23 09:08:32.731
STEP: Waiting for the pdb to observed all healthy pods 03/09/23 09:08:32.735
STEP: Patching the pdb to disallow a pod to be evicted 03/09/23 09:08:32.764
STEP: Waiting for the pdb to be processed 03/09/23 09:08:32.796
STEP: Waiting for all pods to be running 03/09/23 09:08:34.805
STEP: locating a running pod 03/09/23 09:08:34.81
STEP: Deleting the pdb to allow a pod to be evicted 03/09/23 09:08:34.822
STEP: Waiting for the pdb to be deleted 03/09/23 09:08:34.828
STEP: Trying to evict the same pod we tried earlier which should now be evictable 03/09/23 09:08:34.831
STEP: Waiting for all pods to be running 03/09/23 09:08:34.832
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:34.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-7057" for this suite. 03/09/23 09:08:34.859
------------------------------
â€¢ [SLOW TEST] [8.231 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:26.636
    Mar  9 09:08:26.636: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename disruption 03/09/23 09:08:26.638
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:26.655
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:26.66
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should block an eviction until the PDB is updated to allow it [Conformance]
      test/e2e/apps/disruption.go:347
    STEP: Creating a pdb that targets all three pods in a test replica set 03/09/23 09:08:26.665
    STEP: Waiting for the pdb to be processed 03/09/23 09:08:26.671
    STEP: First trying to evict a pod which shouldn't be evictable 03/09/23 09:08:28.687
    STEP: Waiting for all pods to be running 03/09/23 09:08:28.687
    Mar  9 09:08:28.691: INFO: pods: 0 < 3
    STEP: locating a running pod 03/09/23 09:08:30.697
    STEP: Updating the pdb to allow a pod to be evicted 03/09/23 09:08:30.71
    STEP: Waiting for the pdb to be processed 03/09/23 09:08:30.722
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 03/09/23 09:08:32.73
    STEP: Waiting for all pods to be running 03/09/23 09:08:32.731
    STEP: Waiting for the pdb to observed all healthy pods 03/09/23 09:08:32.735
    STEP: Patching the pdb to disallow a pod to be evicted 03/09/23 09:08:32.764
    STEP: Waiting for the pdb to be processed 03/09/23 09:08:32.796
    STEP: Waiting for all pods to be running 03/09/23 09:08:34.805
    STEP: locating a running pod 03/09/23 09:08:34.81
    STEP: Deleting the pdb to allow a pod to be evicted 03/09/23 09:08:34.822
    STEP: Waiting for the pdb to be deleted 03/09/23 09:08:34.828
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 03/09/23 09:08:34.831
    STEP: Waiting for all pods to be running 03/09/23 09:08:34.832
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:34.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-7057" for this suite. 03/09/23 09:08:34.859
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:34.868
Mar  9 09:08:34.868: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename var-expansion 03/09/23 09:08:34.87
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:34.887
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:34.892
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
Mar  9 09:08:34.907: INFO: Waiting up to 2m0s for pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9" in namespace "var-expansion-9911" to be "container 0 failed with reason CreateContainerConfigError"
Mar  9 09:08:34.911: INFO: Pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.762383ms
Mar  9 09:08:36.915: INFO: Pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008214413s
Mar  9 09:08:36.916: INFO: Pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Mar  9 09:08:36.916: INFO: Deleting pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9" in namespace "var-expansion-9911"
Mar  9 09:08:36.924: INFO: Wait up to 5m0s for pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:40.934: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-9911" for this suite. 03/09/23 09:08:40.94
------------------------------
â€¢ [SLOW TEST] [6.080 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:34.868
    Mar  9 09:08:34.868: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename var-expansion 03/09/23 09:08:34.87
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:34.887
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:34.892
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
      test/e2e/common/node/expansion.go:152
    Mar  9 09:08:34.907: INFO: Waiting up to 2m0s for pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9" in namespace "var-expansion-9911" to be "container 0 failed with reason CreateContainerConfigError"
    Mar  9 09:08:34.911: INFO: Pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.762383ms
    Mar  9 09:08:36.915: INFO: Pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008214413s
    Mar  9 09:08:36.916: INFO: Pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Mar  9 09:08:36.916: INFO: Deleting pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9" in namespace "var-expansion-9911"
    Mar  9 09:08:36.924: INFO: Wait up to 5m0s for pod "var-expansion-f16cc513-065f-4b1d-8a25-4ab69b6e44b9" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:40.934: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-9911" for this suite. 03/09/23 09:08:40.94
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:40.949
Mar  9 09:08:40.949: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename deployment 03/09/23 09:08:40.951
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:40.968
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:40.972
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
STEP: creating a Deployment 03/09/23 09:08:40.982
Mar  9 09:08:40.982: INFO: Creating simple deployment test-deployment-h54mq
Mar  9 09:08:40.997: INFO: deployment "test-deployment-h54mq" doesn't have the required revision set
STEP: Getting /status 03/09/23 09:08:43.013
Mar  9 09:08:43.019: INFO: Deployment test-deployment-h54mq has Conditions: [{Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}]
STEP: updating Deployment Status 03/09/23 09:08:43.019
Mar  9 09:08:43.033: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 8, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 8, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 8, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 8, 40, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-h54mq-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated 03/09/23 09:08:43.033
Mar  9 09:08:43.037: INFO: Observed &Deployment event: ADDED
Mar  9 09:08:43.037: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-h54mq-54bc444df"}
Mar  9 09:08:43.037: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.037: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-h54mq-54bc444df"}
Mar  9 09:08:43.037: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Mar  9 09:08:43.038: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.038: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Mar  9 09:08:43.038: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-h54mq-54bc444df" is progressing.}
Mar  9 09:08:43.038: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.038: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Mar  9 09:08:43.038: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}
Mar  9 09:08:43.039: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.039: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Mar  9 09:08:43.039: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}
Mar  9 09:08:43.039: INFO: Found Deployment test-deployment-h54mq in namespace deployment-5417 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar  9 09:08:43.039: INFO: Deployment test-deployment-h54mq has an updated status
STEP: patching the Statefulset Status 03/09/23 09:08:43.039
Mar  9 09:08:43.039: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Mar  9 09:08:43.050: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched 03/09/23 09:08:43.05
Mar  9 09:08:43.053: INFO: Observed &Deployment event: ADDED
Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-h54mq-54bc444df"}
Mar  9 09:08:43.053: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-h54mq-54bc444df"}
Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Mar  9 09:08:43.053: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-h54mq-54bc444df" is progressing.}
Mar  9 09:08:43.054: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}
Mar  9 09:08:43.054: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}
Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar  9 09:08:43.055: INFO: Observed &Deployment event: MODIFIED
Mar  9 09:08:43.055: INFO: Found deployment test-deployment-h54mq in namespace deployment-5417 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Mar  9 09:08:43.055: INFO: Deployment test-deployment-h54mq has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar  9 09:08:43.060: INFO: Deployment "test-deployment-h54mq":
&Deployment{ObjectMeta:{test-deployment-h54mq  deployment-5417  9402d811-51cf-4c8c-af2b-ef9698b49453 276391 1 2023-03-09 09:08:40 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-03-09 09:08:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-03-09 09:08:42 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-03-09 09:08:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc005a6c138 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-h54mq-54bc444df",LastUpdateTime:2023-03-09 09:08:42 +0000 UTC,LastTransitionTime:2023-03-09 09:08:42 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Mar  9 09:08:43.065: INFO: New ReplicaSet "test-deployment-h54mq-54bc444df" of Deployment "test-deployment-h54mq":
&ReplicaSet{ObjectMeta:{test-deployment-h54mq-54bc444df  deployment-5417  1b84e604-c4b9-40b9-b7ae-ff422c56f716 276387 1 2023-03-09 09:08:40 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-h54mq 9402d811-51cf-4c8c-af2b-ef9698b49453 0xc003f4d4d0 0xc003f4d4d1}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:08:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9402d811-51cf-4c8c-af2b-ef9698b49453\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:08:42 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f4d578 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar  9 09:08:43.070: INFO: Pod "test-deployment-h54mq-54bc444df-qxzxj" is available:
&Pod{ObjectMeta:{test-deployment-h54mq-54bc444df-qxzxj test-deployment-h54mq-54bc444df- deployment-5417  38eb652e-b7a5-4c9c-8142-6c2b0117d927 276386 0 2023-03-09 09:08:40 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[cni.projectcalico.org/containerID:c9c7282e3e35c7198f20fb7a87e56251f7b9e34db94318d9a1766f480b263325 cni.projectcalico.org/podIP:172.16.0.71/32 cni.projectcalico.org/podIPs:172.16.0.71/32] [{apps/v1 ReplicaSet test-deployment-h54mq-54bc444df 1b84e604-c4b9-40b9-b7ae-ff422c56f716 0xc005a6c530 0xc005a6c531}] [] [{kube-controller-manager Update v1 2023-03-09 09:08:40 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1b84e604-c4b9-40b9-b7ae-ff422c56f716\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 09:08:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 09:08:42 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.71\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fm4v6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fm4v6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:08:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:08:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:08:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:08:40 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.71,StartTime:2023-03-09 09:08:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:08:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://54ee674e85f886779962c7e24e6d279c7e12629a86e2d4daa7b145a0d7719d9d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.71,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:43.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-5417" for this suite. 03/09/23 09:08:43.076
------------------------------
â€¢ [2.134 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:40.949
    Mar  9 09:08:40.949: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename deployment 03/09/23 09:08:40.951
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:40.968
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:40.972
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should validate Deployment Status endpoints [Conformance]
      test/e2e/apps/deployment.go:479
    STEP: creating a Deployment 03/09/23 09:08:40.982
    Mar  9 09:08:40.982: INFO: Creating simple deployment test-deployment-h54mq
    Mar  9 09:08:40.997: INFO: deployment "test-deployment-h54mq" doesn't have the required revision set
    STEP: Getting /status 03/09/23 09:08:43.013
    Mar  9 09:08:43.019: INFO: Deployment test-deployment-h54mq has Conditions: [{Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}]
    STEP: updating Deployment Status 03/09/23 09:08:43.019
    Mar  9 09:08:43.033: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 8, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 8, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 8, 42, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 8, 40, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-h54mq-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Deployment status to be updated 03/09/23 09:08:43.033
    Mar  9 09:08:43.037: INFO: Observed &Deployment event: ADDED
    Mar  9 09:08:43.037: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-h54mq-54bc444df"}
    Mar  9 09:08:43.037: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.037: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-h54mq-54bc444df"}
    Mar  9 09:08:43.037: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Mar  9 09:08:43.038: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.038: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Mar  9 09:08:43.038: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-h54mq-54bc444df" is progressing.}
    Mar  9 09:08:43.038: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.038: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Mar  9 09:08:43.038: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}
    Mar  9 09:08:43.039: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.039: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Mar  9 09:08:43.039: INFO: Observed Deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}
    Mar  9 09:08:43.039: INFO: Found Deployment test-deployment-h54mq in namespace deployment-5417 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar  9 09:08:43.039: INFO: Deployment test-deployment-h54mq has an updated status
    STEP: patching the Statefulset Status 03/09/23 09:08:43.039
    Mar  9 09:08:43.039: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Mar  9 09:08:43.050: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Deployment status to be patched 03/09/23 09:08:43.05
    Mar  9 09:08:43.053: INFO: Observed &Deployment event: ADDED
    Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-h54mq-54bc444df"}
    Mar  9 09:08:43.053: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-h54mq-54bc444df"}
    Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Mar  9 09:08:43.053: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Mar  9 09:08:43.053: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:40 +0000 UTC 2023-03-09 09:08:40 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-h54mq-54bc444df" is progressing.}
    Mar  9 09:08:43.054: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}
    Mar  9 09:08:43.054: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:42 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-03-09 09:08:42 +0000 UTC 2023-03-09 09:08:40 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-h54mq-54bc444df" has successfully progressed.}
    Mar  9 09:08:43.054: INFO: Observed deployment test-deployment-h54mq in namespace deployment-5417 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar  9 09:08:43.055: INFO: Observed &Deployment event: MODIFIED
    Mar  9 09:08:43.055: INFO: Found deployment test-deployment-h54mq in namespace deployment-5417 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
    Mar  9 09:08:43.055: INFO: Deployment test-deployment-h54mq has a patched status
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar  9 09:08:43.060: INFO: Deployment "test-deployment-h54mq":
    &Deployment{ObjectMeta:{test-deployment-h54mq  deployment-5417  9402d811-51cf-4c8c-af2b-ef9698b49453 276391 1 2023-03-09 09:08:40 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-03-09 09:08:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-03-09 09:08:42 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-03-09 09:08:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc005a6c138 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-h54mq-54bc444df",LastUpdateTime:2023-03-09 09:08:42 +0000 UTC,LastTransitionTime:2023-03-09 09:08:42 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Mar  9 09:08:43.065: INFO: New ReplicaSet "test-deployment-h54mq-54bc444df" of Deployment "test-deployment-h54mq":
    &ReplicaSet{ObjectMeta:{test-deployment-h54mq-54bc444df  deployment-5417  1b84e604-c4b9-40b9-b7ae-ff422c56f716 276387 1 2023-03-09 09:08:40 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-h54mq 9402d811-51cf-4c8c-af2b-ef9698b49453 0xc003f4d4d0 0xc003f4d4d1}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:08:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9402d811-51cf-4c8c-af2b-ef9698b49453\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:08:42 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f4d578 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 09:08:43.070: INFO: Pod "test-deployment-h54mq-54bc444df-qxzxj" is available:
    &Pod{ObjectMeta:{test-deployment-h54mq-54bc444df-qxzxj test-deployment-h54mq-54bc444df- deployment-5417  38eb652e-b7a5-4c9c-8142-6c2b0117d927 276386 0 2023-03-09 09:08:40 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[cni.projectcalico.org/containerID:c9c7282e3e35c7198f20fb7a87e56251f7b9e34db94318d9a1766f480b263325 cni.projectcalico.org/podIP:172.16.0.71/32 cni.projectcalico.org/podIPs:172.16.0.71/32] [{apps/v1 ReplicaSet test-deployment-h54mq-54bc444df 1b84e604-c4b9-40b9-b7ae-ff422c56f716 0xc005a6c530 0xc005a6c531}] [] [{kube-controller-manager Update v1 2023-03-09 09:08:40 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1b84e604-c4b9-40b9-b7ae-ff422c56f716\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 09:08:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 09:08:42 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.71\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fm4v6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fm4v6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:08:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:08:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:08:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:08:40 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.71,StartTime:2023-03-09 09:08:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:08:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://54ee674e85f886779962c7e24e6d279c7e12629a86e2d4daa7b145a0d7719d9d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.71,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:43.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-5417" for this suite. 03/09/23 09:08:43.076
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:43.086
Mar  9 09:08:43.086: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename daemonsets 03/09/23 09:08:43.087
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:43.104
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:43.109
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374
Mar  9 09:08:43.136: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 09:08:43.148
Mar  9 09:08:43.154: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:43.162: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:08:43.162: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:08:44.169: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:44.173: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:08:44.173: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:08:45.170: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:45.174: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 09:08:45.174: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Update daemon pods image. 03/09/23 09:08:45.192
STEP: Check that daemon pods images are updated. 03/09/23 09:08:45.206
Mar  9 09:08:45.211: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar  9 09:08:45.211: INFO: Wrong image for pod: daemon-set-fbpz6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar  9 09:08:45.218: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:46.222: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar  9 09:08:46.226: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:47.223: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar  9 09:08:47.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:48.223: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar  9 09:08:48.223: INFO: Pod daemon-set-px896 is not available
Mar  9 09:08:48.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:49.224: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Mar  9 09:08:49.224: INFO: Pod daemon-set-px896 is not available
Mar  9 09:08:49.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:50.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:51.223: INFO: Pod daemon-set-wqwk9 is not available
Mar  9 09:08:51.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster. 03/09/23 09:08:51.229
Mar  9 09:08:51.235: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:51.239: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:08:51.239: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 09:08:52.246: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:52.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:08:52.251: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 09:08:53.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:08:53.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 09:08:53.252: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/09/23 09:08:53.273
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1161, will wait for the garbage collector to delete the pods 03/09/23 09:08:53.273
Mar  9 09:08:53.337: INFO: Deleting DaemonSet.extensions daemon-set took: 8.580938ms
Mar  9 09:08:53.437: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.460332ms
Mar  9 09:08:55.742: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:08:55.742: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar  9 09:08:55.745: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"276546"},"items":null}

Mar  9 09:08:55.749: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"276546"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:08:55.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-1161" for this suite. 03/09/23 09:08:55.77
------------------------------
â€¢ [SLOW TEST] [12.691 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:374

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:43.086
    Mar  9 09:08:43.086: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename daemonsets 03/09/23 09:08:43.087
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:43.104
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:43.109
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
      test/e2e/apps/daemon_set.go:374
    Mar  9 09:08:43.136: INFO: Creating simple daemon set daemon-set
    STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 09:08:43.148
    Mar  9 09:08:43.154: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:43.162: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:08:43.162: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:08:44.169: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:44.173: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:08:44.173: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:08:45.170: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:45.174: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 09:08:45.174: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Update daemon pods image. 03/09/23 09:08:45.192
    STEP: Check that daemon pods images are updated. 03/09/23 09:08:45.206
    Mar  9 09:08:45.211: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar  9 09:08:45.211: INFO: Wrong image for pod: daemon-set-fbpz6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar  9 09:08:45.218: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:46.222: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar  9 09:08:46.226: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:47.223: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar  9 09:08:47.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:48.223: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar  9 09:08:48.223: INFO: Pod daemon-set-px896 is not available
    Mar  9 09:08:48.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:49.224: INFO: Wrong image for pod: daemon-set-46jgg. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Mar  9 09:08:49.224: INFO: Pod daemon-set-px896 is not available
    Mar  9 09:08:49.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:50.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:51.223: INFO: Pod daemon-set-wqwk9 is not available
    Mar  9 09:08:51.229: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    STEP: Check that daemon pods are still running on every node of the cluster. 03/09/23 09:08:51.229
    Mar  9 09:08:51.235: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:51.239: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:08:51.239: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 09:08:52.246: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:52.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:08:52.251: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 09:08:53.247: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:08:53.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 09:08:53.252: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/09/23 09:08:53.273
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1161, will wait for the garbage collector to delete the pods 03/09/23 09:08:53.273
    Mar  9 09:08:53.337: INFO: Deleting DaemonSet.extensions daemon-set took: 8.580938ms
    Mar  9 09:08:53.437: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.460332ms
    Mar  9 09:08:55.742: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:08:55.742: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar  9 09:08:55.745: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"276546"},"items":null}

    Mar  9 09:08:55.749: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"276546"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:08:55.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-1161" for this suite. 03/09/23 09:08:55.77
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:08:55.782
Mar  9 09:08:55.782: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 09:08:55.784
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:55.803
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:55.808
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
STEP: creating a replication controller 03/09/23 09:08:55.813
Mar  9 09:08:55.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 create -f -'
Mar  9 09:08:56.906: INFO: stderr: ""
Mar  9 09:08:56.906: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 03/09/23 09:08:56.906
Mar  9 09:08:56.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:08:57.053: INFO: stderr: ""
Mar  9 09:08:57.053: INFO: stdout: "update-demo-nautilus-lfsnm update-demo-nautilus-r77qf "
Mar  9 09:08:57.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-lfsnm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:08:57.217: INFO: stderr: ""
Mar  9 09:08:57.218: INFO: stdout: ""
Mar  9 09:08:57.218: INFO: update-demo-nautilus-lfsnm is created but not running
Mar  9 09:09:02.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Mar  9 09:09:02.385: INFO: stderr: ""
Mar  9 09:09:02.385: INFO: stdout: "update-demo-nautilus-lfsnm update-demo-nautilus-r77qf "
Mar  9 09:09:02.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-lfsnm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:09:02.545: INFO: stderr: ""
Mar  9 09:09:02.545: INFO: stdout: "true"
Mar  9 09:09:02.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-lfsnm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar  9 09:09:02.685: INFO: stderr: ""
Mar  9 09:09:02.685: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar  9 09:09:02.685: INFO: validating pod update-demo-nautilus-lfsnm
Mar  9 09:09:02.694: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar  9 09:09:02.694: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar  9 09:09:02.694: INFO: update-demo-nautilus-lfsnm is verified up and running
Mar  9 09:09:02.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-r77qf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Mar  9 09:09:02.868: INFO: stderr: ""
Mar  9 09:09:02.868: INFO: stdout: "true"
Mar  9 09:09:02.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-r77qf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Mar  9 09:09:03.028: INFO: stderr: ""
Mar  9 09:09:03.028: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Mar  9 09:09:03.028: INFO: validating pod update-demo-nautilus-r77qf
Mar  9 09:09:03.035: INFO: got data: {
  "image": "nautilus.jpg"
}

Mar  9 09:09:03.035: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Mar  9 09:09:03.035: INFO: update-demo-nautilus-r77qf is verified up and running
STEP: using delete to clean up resources 03/09/23 09:09:03.035
Mar  9 09:09:03.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 delete --grace-period=0 --force -f -'
Mar  9 09:09:03.199: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Mar  9 09:09:03.199: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Mar  9 09:09:03.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get rc,svc -l name=update-demo --no-headers'
Mar  9 09:09:03.385: INFO: stderr: "No resources found in kubectl-8179 namespace.\n"
Mar  9 09:09:03.385: INFO: stdout: ""
Mar  9 09:09:03.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Mar  9 09:09:03.556: INFO: stderr: ""
Mar  9 09:09:03.556: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 09:09:03.556: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8179" for this suite. 03/09/23 09:09:03.567
------------------------------
â€¢ [SLOW TEST] [7.792 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should create and stop a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:339

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:08:55.782
    Mar  9 09:08:55.782: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 09:08:55.784
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:08:55.803
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:08:55.808
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should create and stop a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:339
    STEP: creating a replication controller 03/09/23 09:08:55.813
    Mar  9 09:08:55.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 create -f -'
    Mar  9 09:08:56.906: INFO: stderr: ""
    Mar  9 09:08:56.906: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 03/09/23 09:08:56.906
    Mar  9 09:08:56.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:08:57.053: INFO: stderr: ""
    Mar  9 09:08:57.053: INFO: stdout: "update-demo-nautilus-lfsnm update-demo-nautilus-r77qf "
    Mar  9 09:08:57.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-lfsnm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:08:57.217: INFO: stderr: ""
    Mar  9 09:08:57.218: INFO: stdout: ""
    Mar  9 09:08:57.218: INFO: update-demo-nautilus-lfsnm is created but not running
    Mar  9 09:09:02.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Mar  9 09:09:02.385: INFO: stderr: ""
    Mar  9 09:09:02.385: INFO: stdout: "update-demo-nautilus-lfsnm update-demo-nautilus-r77qf "
    Mar  9 09:09:02.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-lfsnm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:09:02.545: INFO: stderr: ""
    Mar  9 09:09:02.545: INFO: stdout: "true"
    Mar  9 09:09:02.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-lfsnm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar  9 09:09:02.685: INFO: stderr: ""
    Mar  9 09:09:02.685: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar  9 09:09:02.685: INFO: validating pod update-demo-nautilus-lfsnm
    Mar  9 09:09:02.694: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar  9 09:09:02.694: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar  9 09:09:02.694: INFO: update-demo-nautilus-lfsnm is verified up and running
    Mar  9 09:09:02.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-r77qf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Mar  9 09:09:02.868: INFO: stderr: ""
    Mar  9 09:09:02.868: INFO: stdout: "true"
    Mar  9 09:09:02.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods update-demo-nautilus-r77qf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Mar  9 09:09:03.028: INFO: stderr: ""
    Mar  9 09:09:03.028: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Mar  9 09:09:03.028: INFO: validating pod update-demo-nautilus-r77qf
    Mar  9 09:09:03.035: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Mar  9 09:09:03.035: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Mar  9 09:09:03.035: INFO: update-demo-nautilus-r77qf is verified up and running
    STEP: using delete to clean up resources 03/09/23 09:09:03.035
    Mar  9 09:09:03.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 delete --grace-period=0 --force -f -'
    Mar  9 09:09:03.199: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Mar  9 09:09:03.199: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Mar  9 09:09:03.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get rc,svc -l name=update-demo --no-headers'
    Mar  9 09:09:03.385: INFO: stderr: "No resources found in kubectl-8179 namespace.\n"
    Mar  9 09:09:03.385: INFO: stdout: ""
    Mar  9 09:09:03.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8179 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Mar  9 09:09:03.556: INFO: stderr: ""
    Mar  9 09:09:03.556: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:09:03.556: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8179" for this suite. 03/09/23 09:09:03.567
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:09:03.577
Mar  9 09:09:03.577: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename dns 03/09/23 09:09:03.578
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:03.6
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:03.605
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
STEP: Creating a test externalName service 03/09/23 09:09:03.61
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
 03/09/23 09:09:03.616
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
 03/09/23 09:09:03.616
STEP: creating a pod to probe DNS 03/09/23 09:09:03.616
STEP: submitting the pod to kubernetes 03/09/23 09:09:03.617
Mar  9 09:09:03.629: INFO: Waiting up to 15m0s for pod "dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f" in namespace "dns-5596" to be "running"
Mar  9 09:09:03.633: INFO: Pod "dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.186568ms
Mar  9 09:09:05.638: INFO: Pod "dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f": Phase="Running", Reason="", readiness=true. Elapsed: 2.009389474s
Mar  9 09:09:05.638: INFO: Pod "dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f" satisfied condition "running"
STEP: retrieving the pod 03/09/23 09:09:05.638
STEP: looking for the results for each expected name from probers 03/09/23 09:09:05.643
Mar  9 09:09:05.655: INFO: DNS probes using dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f succeeded

STEP: deleting the pod 03/09/23 09:09:05.655
STEP: changing the externalName to bar.example.com 03/09/23 09:09:05.674
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
 03/09/23 09:09:05.686
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
 03/09/23 09:09:05.686
STEP: creating a second pod to probe DNS 03/09/23 09:09:05.686
STEP: submitting the pod to kubernetes 03/09/23 09:09:05.686
Mar  9 09:09:05.698: INFO: Waiting up to 15m0s for pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3" in namespace "dns-5596" to be "running"
Mar  9 09:09:05.702: INFO: Pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.638924ms
Mar  9 09:09:07.709: INFO: Pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010607148s
Mar  9 09:09:09.708: INFO: Pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3": Phase="Running", Reason="", readiness=true. Elapsed: 4.009931161s
Mar  9 09:09:09.708: INFO: Pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3" satisfied condition "running"
STEP: retrieving the pod 03/09/23 09:09:09.708
STEP: looking for the results for each expected name from probers 03/09/23 09:09:09.713
Mar  9 09:09:09.720: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:09.725: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:09.725: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

Mar  9 09:09:14.733: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:14.738: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:14.738: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

Mar  9 09:09:19.736: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:19.741: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:19.741: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

Mar  9 09:09:24.736: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:24.741: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:24.741: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

Mar  9 09:09:29.733: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:29.737: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:29.737: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

Mar  9 09:09:34.735: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:34.741: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
' instead of 'bar.example.com.'
Mar  9 09:09:34.741: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

Mar  9 09:09:39.740: INFO: DNS probes using dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 succeeded

STEP: deleting the pod 03/09/23 09:09:39.74
STEP: changing the service to type=ClusterIP 03/09/23 09:09:39.756
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
 03/09/23 09:09:39.782
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
 03/09/23 09:09:39.783
STEP: creating a third pod to probe DNS 03/09/23 09:09:39.783
STEP: submitting the pod to kubernetes 03/09/23 09:09:39.791
Mar  9 09:09:39.803: INFO: Waiting up to 15m0s for pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7" in namespace "dns-5596" to be "running"
Mar  9 09:09:39.807: INFO: Pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7": Phase="Pending", Reason="", readiness=false. Elapsed: 4.131699ms
Mar  9 09:09:41.823: INFO: Pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019709339s
Mar  9 09:09:43.819: INFO: Pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7": Phase="Running", Reason="", readiness=true. Elapsed: 4.015841208s
Mar  9 09:09:43.819: INFO: Pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7" satisfied condition "running"
STEP: retrieving the pod 03/09/23 09:09:43.819
STEP: looking for the results for each expected name from probers 03/09/23 09:09:43.823
Mar  9 09:09:43.834: INFO: DNS probes using dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7 succeeded

STEP: deleting the pod 03/09/23 09:09:43.834
STEP: deleting the test externalName service 03/09/23 09:09:43.851
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar  9 09:09:43.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-5596" for this suite. 03/09/23 09:09:43.878
------------------------------
â€¢ [SLOW TEST] [40.308 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:09:03.577
    Mar  9 09:09:03.577: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename dns 03/09/23 09:09:03.578
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:03.6
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:03.605
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for ExternalName services [Conformance]
      test/e2e/network/dns.go:333
    STEP: Creating a test externalName service 03/09/23 09:09:03.61
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
     03/09/23 09:09:03.616
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
     03/09/23 09:09:03.616
    STEP: creating a pod to probe DNS 03/09/23 09:09:03.616
    STEP: submitting the pod to kubernetes 03/09/23 09:09:03.617
    Mar  9 09:09:03.629: INFO: Waiting up to 15m0s for pod "dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f" in namespace "dns-5596" to be "running"
    Mar  9 09:09:03.633: INFO: Pod "dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.186568ms
    Mar  9 09:09:05.638: INFO: Pod "dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f": Phase="Running", Reason="", readiness=true. Elapsed: 2.009389474s
    Mar  9 09:09:05.638: INFO: Pod "dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 09:09:05.638
    STEP: looking for the results for each expected name from probers 03/09/23 09:09:05.643
    Mar  9 09:09:05.655: INFO: DNS probes using dns-test-a32e26fe-032b-4aa1-8668-20ee32f34e1f succeeded

    STEP: deleting the pod 03/09/23 09:09:05.655
    STEP: changing the externalName to bar.example.com 03/09/23 09:09:05.674
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
     03/09/23 09:09:05.686
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
     03/09/23 09:09:05.686
    STEP: creating a second pod to probe DNS 03/09/23 09:09:05.686
    STEP: submitting the pod to kubernetes 03/09/23 09:09:05.686
    Mar  9 09:09:05.698: INFO: Waiting up to 15m0s for pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3" in namespace "dns-5596" to be "running"
    Mar  9 09:09:05.702: INFO: Pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.638924ms
    Mar  9 09:09:07.709: INFO: Pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010607148s
    Mar  9 09:09:09.708: INFO: Pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3": Phase="Running", Reason="", readiness=true. Elapsed: 4.009931161s
    Mar  9 09:09:09.708: INFO: Pod "dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 09:09:09.708
    STEP: looking for the results for each expected name from probers 03/09/23 09:09:09.713
    Mar  9 09:09:09.720: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:09.725: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:09.725: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

    Mar  9 09:09:14.733: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:14.738: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:14.738: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

    Mar  9 09:09:19.736: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:19.741: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:19.741: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

    Mar  9 09:09:24.736: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:24.741: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:24.741: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

    Mar  9 09:09:29.733: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:29.737: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:29.737: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

    Mar  9 09:09:34.735: INFO: File wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:34.741: INFO: File jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local from pod  dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Mar  9 09:09:34.741: INFO: Lookups using dns-5596/dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 failed for: [wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local]

    Mar  9 09:09:39.740: INFO: DNS probes using dns-test-47c6701c-adfc-4a2d-a96c-cff87f0b4ca3 succeeded

    STEP: deleting the pod 03/09/23 09:09:39.74
    STEP: changing the service to type=ClusterIP 03/09/23 09:09:39.756
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
     03/09/23 09:09:39.782
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5596.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5596.svc.cluster.local; sleep 1; done
     03/09/23 09:09:39.783
    STEP: creating a third pod to probe DNS 03/09/23 09:09:39.783
    STEP: submitting the pod to kubernetes 03/09/23 09:09:39.791
    Mar  9 09:09:39.803: INFO: Waiting up to 15m0s for pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7" in namespace "dns-5596" to be "running"
    Mar  9 09:09:39.807: INFO: Pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7": Phase="Pending", Reason="", readiness=false. Elapsed: 4.131699ms
    Mar  9 09:09:41.823: INFO: Pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019709339s
    Mar  9 09:09:43.819: INFO: Pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7": Phase="Running", Reason="", readiness=true. Elapsed: 4.015841208s
    Mar  9 09:09:43.819: INFO: Pod "dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 09:09:43.819
    STEP: looking for the results for each expected name from probers 03/09/23 09:09:43.823
    Mar  9 09:09:43.834: INFO: DNS probes using dns-test-7e0b9677-dccb-4d52-b5b8-df50eb8d09a7 succeeded

    STEP: deleting the pod 03/09/23 09:09:43.834
    STEP: deleting the test externalName service 03/09/23 09:09:43.851
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:09:43.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-5596" for this suite. 03/09/23 09:09:43.878
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:09:43.898
Mar  9 09:09:43.898: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename runtimeclass 03/09/23 09:09:43.9
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:43.915
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:43.92
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
Mar  9 09:09:43.943: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-6728 to be scheduled
Mar  9 09:09:43.947: INFO: 1 pods are not scheduled: [runtimeclass-6728/test-runtimeclass-runtimeclass-6728-preconfigured-handler-df5tt(af0deea6-0dd7-42de-8cde-a1bbdc969ddf)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar  9 09:09:45.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-6728" for this suite. 03/09/23 09:09:45.966
------------------------------
â€¢ [2.075 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:09:43.898
    Mar  9 09:09:43.898: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename runtimeclass 03/09/23 09:09:43.9
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:43.915
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:43.92
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:129
    Mar  9 09:09:43.943: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-6728 to be scheduled
    Mar  9 09:09:43.947: INFO: 1 pods are not scheduled: [runtimeclass-6728/test-runtimeclass-runtimeclass-6728-preconfigured-handler-df5tt(af0deea6-0dd7-42de-8cde-a1bbdc969ddf)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:09:45.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-6728" for this suite. 03/09/23 09:09:45.966
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:09:45.975
Mar  9 09:09:45.975: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename podtemplate 03/09/23 09:09:45.976
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:45.993
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:45.998
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
STEP: Create a pod template 03/09/23 09:09:46.003
STEP: Replace a pod template 03/09/23 09:09:46.009
Mar  9 09:09:46.021: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Mar  9 09:09:46.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-9222" for this suite. 03/09/23 09:09:46.028
------------------------------
â€¢ [0.060 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:09:45.975
    Mar  9 09:09:45.975: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename podtemplate 03/09/23 09:09:45.976
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:45.993
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:45.998
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace a pod template [Conformance]
      test/e2e/common/node/podtemplates.go:176
    STEP: Create a pod template 03/09/23 09:09:46.003
    STEP: Replace a pod template 03/09/23 09:09:46.009
    Mar  9 09:09:46.021: INFO: Found updated podtemplate annotation: "true"

    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:09:46.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-9222" for this suite. 03/09/23 09:09:46.028
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:09:46.039
Mar  9 09:09:46.040: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 09:09:46.043
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:46.059
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:46.068
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
Mar  9 09:09:46.073: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: creating the pod 03/09/23 09:09:46.074
STEP: submitting the pod to kubernetes 03/09/23 09:09:46.074
Mar  9 09:09:46.085: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db" in namespace "pods-3533" to be "running and ready"
Mar  9 09:09:46.088: INFO: Pod "pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db": Phase="Pending", Reason="", readiness=false. Elapsed: 3.716322ms
Mar  9 09:09:46.088: INFO: The phase of Pod pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:09:48.093: INFO: Pod "pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db": Phase="Running", Reason="", readiness=true. Elapsed: 2.00800133s
Mar  9 09:09:48.093: INFO: The phase of Pod pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db is Running (Ready = true)
Mar  9 09:09:48.093: INFO: Pod "pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 09:09:48.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3533" for this suite. 03/09/23 09:09:48.15
------------------------------
â€¢ [2.119 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:09:46.039
    Mar  9 09:09:46.040: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 09:09:46.043
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:46.059
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:46.068
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:618
    Mar  9 09:09:46.073: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: creating the pod 03/09/23 09:09:46.074
    STEP: submitting the pod to kubernetes 03/09/23 09:09:46.074
    Mar  9 09:09:46.085: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db" in namespace "pods-3533" to be "running and ready"
    Mar  9 09:09:46.088: INFO: Pod "pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db": Phase="Pending", Reason="", readiness=false. Elapsed: 3.716322ms
    Mar  9 09:09:46.088: INFO: The phase of Pod pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:09:48.093: INFO: Pod "pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db": Phase="Running", Reason="", readiness=true. Elapsed: 2.00800133s
    Mar  9 09:09:48.093: INFO: The phase of Pod pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db is Running (Ready = true)
    Mar  9 09:09:48.093: INFO: Pod "pod-logs-websocket-969b4208-0bec-4865-86e8-ce50dbe063db" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:09:48.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3533" for this suite. 03/09/23 09:09:48.15
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:09:48.16
Mar  9 09:09:48.160: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename taint-multiple-pods 03/09/23 09:09:48.162
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:48.176
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:48.181
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:383
Mar  9 09:09:48.186: INFO: Waiting up to 1m0s for all nodes to be ready
Mar  9 09:10:48.234: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
Mar  9 09:10:48.239: INFO: Starting informer...
STEP: Starting pods... 03/09/23 09:10:48.239
Mar  9 09:10:48.464: INFO: Pod1 is running on k8s-worker1. Tainting Node
Mar  9 09:10:48.683: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-825" to be "running"
Mar  9 09:10:48.687: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.164998ms
Mar  9 09:10:50.693: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.010509909s
Mar  9 09:10:50.693: INFO: Pod "taint-eviction-b1" satisfied condition "running"
Mar  9 09:10:50.693: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-825" to be "running"
Mar  9 09:10:50.698: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 4.337799ms
Mar  9 09:10:50.698: INFO: Pod "taint-eviction-b2" satisfied condition "running"
Mar  9 09:10:50.698: INFO: Pod2 is running on k8s-worker1. Tainting Node
STEP: Trying to apply a taint on the Node 03/09/23 09:10:50.698
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/09/23 09:10:50.718
STEP: Waiting for Pod1 and Pod2 to be deleted 03/09/23 09:10:50.738
Mar  9 09:10:56.770: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Mar  9 09:11:16.892: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/09/23 09:11:16.913
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:11:16.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-multiple-pods-825" for this suite. 03/09/23 09:11:16.924
------------------------------
â€¢ [SLOW TEST] [88.774 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:09:48.16
    Mar  9 09:09:48.160: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename taint-multiple-pods 03/09/23 09:09:48.162
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:09:48.176
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:09:48.181
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/node/taints.go:383
    Mar  9 09:09:48.186: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar  9 09:10:48.234: INFO: Waiting for terminating namespaces to be deleted...
    [It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
      test/e2e/node/taints.go:455
    Mar  9 09:10:48.239: INFO: Starting informer...
    STEP: Starting pods... 03/09/23 09:10:48.239
    Mar  9 09:10:48.464: INFO: Pod1 is running on k8s-worker1. Tainting Node
    Mar  9 09:10:48.683: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-825" to be "running"
    Mar  9 09:10:48.687: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.164998ms
    Mar  9 09:10:50.693: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.010509909s
    Mar  9 09:10:50.693: INFO: Pod "taint-eviction-b1" satisfied condition "running"
    Mar  9 09:10:50.693: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-825" to be "running"
    Mar  9 09:10:50.698: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 4.337799ms
    Mar  9 09:10:50.698: INFO: Pod "taint-eviction-b2" satisfied condition "running"
    Mar  9 09:10:50.698: INFO: Pod2 is running on k8s-worker1. Tainting Node
    STEP: Trying to apply a taint on the Node 03/09/23 09:10:50.698
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/09/23 09:10:50.718
    STEP: Waiting for Pod1 and Pod2 to be deleted 03/09/23 09:10:50.738
    Mar  9 09:10:56.770: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
    Mar  9 09:11:16.892: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/09/23 09:11:16.913
    [AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:11:16.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-multiple-pods-825" for this suite. 03/09/23 09:11:16.924
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
[BeforeEach] [sig-network] EndpointSliceMirroring
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:11:16.951
Mar  9 09:11:16.951: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename endpointslicemirroring 03/09/23 09:11:16.953
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:16.97
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:16.975
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
STEP: mirroring a new custom Endpoint 03/09/23 09:11:16.997
Mar  9 09:11:17.008: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint 03/09/23 09:11:19.013
Mar  9 09:11:19.023: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint 03/09/23 09:11:21.028
Mar  9 09:11:21.038: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/node/init/init.go:32
Mar  9 09:11:23.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslicemirroring-9971" for this suite. 03/09/23 09:11:23.05
------------------------------
â€¢ [SLOW TEST] [6.107 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSliceMirroring
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:11:16.951
    Mar  9 09:11:16.951: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename endpointslicemirroring 03/09/23 09:11:16.953
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:16.97
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:16.975
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/network/endpointslicemirroring.go:41
    [It] should mirror a custom Endpoints resource through create update and delete [Conformance]
      test/e2e/network/endpointslicemirroring.go:53
    STEP: mirroring a new custom Endpoint 03/09/23 09:11:16.997
    Mar  9 09:11:17.008: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
    STEP: mirroring an update to a custom Endpoint 03/09/23 09:11:19.013
    Mar  9 09:11:19.023: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
    STEP: mirroring deletion of a custom Endpoint 03/09/23 09:11:21.028
    Mar  9 09:11:21.038: INFO: Waiting for 0 EndpointSlices to exist, got 1
    [AfterEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:11:23.043: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslicemirroring-9971" for this suite. 03/09/23 09:11:23.05
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] ControllerRevision [Serial]
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:11:23.06
Mar  9 09:11:23.060: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename controllerrevisions 03/09/23 09:11:23.061
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:23.077
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:23.083
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:93
[It] should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
STEP: Creating DaemonSet "e2e-95h42-daemon-set" 03/09/23 09:11:23.113
STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 09:11:23.12
Mar  9 09:11:23.126: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:11:23.129: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 0
Mar  9 09:11:23.129: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:11:24.136: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:11:24.141: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 0
Mar  9 09:11:24.141: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:11:25.136: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:11:25.140: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 1
Mar  9 09:11:25.140: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 09:11:26.136: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:11:26.141: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 2
Mar  9 09:11:26.141: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-95h42-daemon-set
STEP: Confirm DaemonSet "e2e-95h42-daemon-set" successfully created with "daemonset-name=e2e-95h42-daemon-set" label 03/09/23 09:11:26.145
STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-95h42-daemon-set" 03/09/23 09:11:26.153
Mar  9 09:11:26.158: INFO: Located ControllerRevision: "e2e-95h42-daemon-set-65ffb64777"
STEP: Patching ControllerRevision "e2e-95h42-daemon-set-65ffb64777" 03/09/23 09:11:26.162
Mar  9 09:11:26.171: INFO: e2e-95h42-daemon-set-65ffb64777 has been patched
STEP: Create a new ControllerRevision 03/09/23 09:11:26.171
Mar  9 09:11:26.178: INFO: Created ControllerRevision: e2e-95h42-daemon-set-79d5bb4bf7
STEP: Confirm that there are two ControllerRevisions 03/09/23 09:11:26.178
Mar  9 09:11:26.178: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar  9 09:11:26.183: INFO: Found 2 ControllerRevisions
STEP: Deleting ControllerRevision "e2e-95h42-daemon-set-65ffb64777" 03/09/23 09:11:26.183
STEP: Confirm that there is only one ControllerRevision 03/09/23 09:11:26.189
Mar  9 09:11:26.190: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar  9 09:11:26.193: INFO: Found 1 ControllerRevisions
STEP: Updating ControllerRevision "e2e-95h42-daemon-set-79d5bb4bf7" 03/09/23 09:11:26.197
Mar  9 09:11:26.210: INFO: e2e-95h42-daemon-set-79d5bb4bf7 has been updated
STEP: Generate another ControllerRevision by patching the Daemonset 03/09/23 09:11:26.21
W0309 09:11:26.219329      23 warnings.go:70] unknown field "updateStrategy"
STEP: Confirm that there are two ControllerRevisions 03/09/23 09:11:26.219
Mar  9 09:11:26.219: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar  9 09:11:27.224: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar  9 09:11:27.230: INFO: Found 2 ControllerRevisions
STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-95h42-daemon-set-79d5bb4bf7=updated" 03/09/23 09:11:27.23
STEP: Confirm that there is only one ControllerRevision 03/09/23 09:11:27.24
Mar  9 09:11:27.241: INFO: Requesting list of ControllerRevisions to confirm quantity
Mar  9 09:11:27.245: INFO: Found 1 ControllerRevisions
Mar  9 09:11:27.248: INFO: ControllerRevision "e2e-95h42-daemon-set-78dfd9bbb4" has revision 3
[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:58
STEP: Deleting DaemonSet "e2e-95h42-daemon-set" 03/09/23 09:11:27.253
STEP: deleting DaemonSet.extensions e2e-95h42-daemon-set in namespace controllerrevisions-9732, will wait for the garbage collector to delete the pods 03/09/23 09:11:27.253
Mar  9 09:11:27.314: INFO: Deleting DaemonSet.extensions e2e-95h42-daemon-set took: 7.19692ms
Mar  9 09:11:27.414: INFO: Terminating DaemonSet.extensions e2e-95h42-daemon-set pods took: 100.500461ms
Mar  9 09:11:29.019: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 0
Mar  9 09:11:29.019: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-95h42-daemon-set
Mar  9 09:11:29.022: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"277265"},"items":null}

Mar  9 09:11:29.025: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"277265"},"items":null}

[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:11:29.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "controllerrevisions-9732" for this suite. 03/09/23 09:11:29.044
------------------------------
â€¢ [SLOW TEST] [5.991 seconds]
[sig-apps] ControllerRevision [Serial]
test/e2e/apps/framework.go:23
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:11:23.06
    Mar  9 09:11:23.060: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename controllerrevisions 03/09/23 09:11:23.061
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:23.077
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:23.083
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:93
    [It] should manage the lifecycle of a ControllerRevision [Conformance]
      test/e2e/apps/controller_revision.go:124
    STEP: Creating DaemonSet "e2e-95h42-daemon-set" 03/09/23 09:11:23.113
    STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 09:11:23.12
    Mar  9 09:11:23.126: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:11:23.129: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 0
    Mar  9 09:11:23.129: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:11:24.136: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:11:24.141: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 0
    Mar  9 09:11:24.141: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:11:25.136: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:11:25.140: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 1
    Mar  9 09:11:25.140: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 09:11:26.136: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:11:26.141: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 2
    Mar  9 09:11:26.141: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-95h42-daemon-set
    STEP: Confirm DaemonSet "e2e-95h42-daemon-set" successfully created with "daemonset-name=e2e-95h42-daemon-set" label 03/09/23 09:11:26.145
    STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-95h42-daemon-set" 03/09/23 09:11:26.153
    Mar  9 09:11:26.158: INFO: Located ControllerRevision: "e2e-95h42-daemon-set-65ffb64777"
    STEP: Patching ControllerRevision "e2e-95h42-daemon-set-65ffb64777" 03/09/23 09:11:26.162
    Mar  9 09:11:26.171: INFO: e2e-95h42-daemon-set-65ffb64777 has been patched
    STEP: Create a new ControllerRevision 03/09/23 09:11:26.171
    Mar  9 09:11:26.178: INFO: Created ControllerRevision: e2e-95h42-daemon-set-79d5bb4bf7
    STEP: Confirm that there are two ControllerRevisions 03/09/23 09:11:26.178
    Mar  9 09:11:26.178: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar  9 09:11:26.183: INFO: Found 2 ControllerRevisions
    STEP: Deleting ControllerRevision "e2e-95h42-daemon-set-65ffb64777" 03/09/23 09:11:26.183
    STEP: Confirm that there is only one ControllerRevision 03/09/23 09:11:26.189
    Mar  9 09:11:26.190: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar  9 09:11:26.193: INFO: Found 1 ControllerRevisions
    STEP: Updating ControllerRevision "e2e-95h42-daemon-set-79d5bb4bf7" 03/09/23 09:11:26.197
    Mar  9 09:11:26.210: INFO: e2e-95h42-daemon-set-79d5bb4bf7 has been updated
    STEP: Generate another ControllerRevision by patching the Daemonset 03/09/23 09:11:26.21
    W0309 09:11:26.219329      23 warnings.go:70] unknown field "updateStrategy"
    STEP: Confirm that there are two ControllerRevisions 03/09/23 09:11:26.219
    Mar  9 09:11:26.219: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar  9 09:11:27.224: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar  9 09:11:27.230: INFO: Found 2 ControllerRevisions
    STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-95h42-daemon-set-79d5bb4bf7=updated" 03/09/23 09:11:27.23
    STEP: Confirm that there is only one ControllerRevision 03/09/23 09:11:27.24
    Mar  9 09:11:27.241: INFO: Requesting list of ControllerRevisions to confirm quantity
    Mar  9 09:11:27.245: INFO: Found 1 ControllerRevisions
    Mar  9 09:11:27.248: INFO: ControllerRevision "e2e-95h42-daemon-set-78dfd9bbb4" has revision 3
    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:58
    STEP: Deleting DaemonSet "e2e-95h42-daemon-set" 03/09/23 09:11:27.253
    STEP: deleting DaemonSet.extensions e2e-95h42-daemon-set in namespace controllerrevisions-9732, will wait for the garbage collector to delete the pods 03/09/23 09:11:27.253
    Mar  9 09:11:27.314: INFO: Deleting DaemonSet.extensions e2e-95h42-daemon-set took: 7.19692ms
    Mar  9 09:11:27.414: INFO: Terminating DaemonSet.extensions e2e-95h42-daemon-set pods took: 100.500461ms
    Mar  9 09:11:29.019: INFO: Number of nodes with available pods controlled by daemonset e2e-95h42-daemon-set: 0
    Mar  9 09:11:29.019: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-95h42-daemon-set
    Mar  9 09:11:29.022: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"277265"},"items":null}

    Mar  9 09:11:29.025: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"277265"},"items":null}

    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:11:29.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "controllerrevisions-9732" for this suite. 03/09/23 09:11:29.044
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-storage] Projected configMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:11:29.051
Mar  9 09:11:29.052: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:11:29.053
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:29.067
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:29.072
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
STEP: Creating configMap with name projected-configmap-test-volume-633ee64c-1e7c-447b-9d1f-fa2ebf1dd93a 03/09/23 09:11:29.077
STEP: Creating a pod to test consume configMaps 03/09/23 09:11:29.084
Mar  9 09:11:29.095: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048" in namespace "projected-8555" to be "Succeeded or Failed"
Mar  9 09:11:29.100: INFO: Pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048": Phase="Pending", Reason="", readiness=false. Elapsed: 5.326579ms
Mar  9 09:11:31.105: INFO: Pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010145243s
Mar  9 09:11:33.105: INFO: Pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010666972s
STEP: Saw pod success 03/09/23 09:11:33.105
Mar  9 09:11:33.106: INFO: Pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048" satisfied condition "Succeeded or Failed"
Mar  9 09:11:33.109: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048 container projected-configmap-volume-test: <nil>
STEP: delete the pod 03/09/23 09:11:33.144
Mar  9 09:11:33.159: INFO: Waiting for pod pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048 to disappear
Mar  9 09:11:33.162: INFO: Pod pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:11:33.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8555" for this suite. 03/09/23 09:11:33.169
------------------------------
â€¢ [4.124 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:11:29.051
    Mar  9 09:11:29.052: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:11:29.053
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:29.067
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:29.072
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:375
    STEP: Creating configMap with name projected-configmap-test-volume-633ee64c-1e7c-447b-9d1f-fa2ebf1dd93a 03/09/23 09:11:29.077
    STEP: Creating a pod to test consume configMaps 03/09/23 09:11:29.084
    Mar  9 09:11:29.095: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048" in namespace "projected-8555" to be "Succeeded or Failed"
    Mar  9 09:11:29.100: INFO: Pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048": Phase="Pending", Reason="", readiness=false. Elapsed: 5.326579ms
    Mar  9 09:11:31.105: INFO: Pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010145243s
    Mar  9 09:11:33.105: INFO: Pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010666972s
    STEP: Saw pod success 03/09/23 09:11:33.105
    Mar  9 09:11:33.106: INFO: Pod "pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048" satisfied condition "Succeeded or Failed"
    Mar  9 09:11:33.109: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048 container projected-configmap-volume-test: <nil>
    STEP: delete the pod 03/09/23 09:11:33.144
    Mar  9 09:11:33.159: INFO: Waiting for pod pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048 to disappear
    Mar  9 09:11:33.162: INFO: Pod pod-projected-configmaps-b582ba97-1ea9-44ce-9167-d6bed7c83048 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:11:33.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8555" for this suite. 03/09/23 09:11:33.169
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:11:33.177
Mar  9 09:11:33.178: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 09:11:33.179
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:33.194
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:33.199
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
Mar  9 09:11:33.204: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:11:36.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-5384" for this suite. 03/09/23 09:11:36.493
------------------------------
â€¢ [3.325 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:11:33.177
    Mar  9 09:11:33.178: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 09:11:33.179
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:33.194
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:33.199
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] custom resource defaulting for requests and from storage works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:269
    Mar  9 09:11:33.204: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:11:36.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-5384" for this suite. 03/09/23 09:11:36.493
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:624
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:11:36.504
Mar  9 09:11:36.504: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-preemption 03/09/23 09:11:36.505
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:36.519
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:36.524
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Mar  9 09:11:36.546: INFO: Waiting up to 1m0s for all nodes to be ready
Mar  9 09:12:36.599: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:12:36.603
Mar  9 09:12:36.604: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-preemption-path 03/09/23 09:12:36.605
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:12:36.622
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:12:36.627
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:576
STEP: Finding an available node 03/09/23 09:12:36.632
STEP: Trying to launch a pod without a label to get a node which can launch it. 03/09/23 09:12:36.632
Mar  9 09:12:36.643: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-318" to be "running"
Mar  9 09:12:36.647: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 4.703386ms
Mar  9 09:12:38.652: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.009190578s
Mar  9 09:12:38.652: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 03/09/23 09:12:38.656
Mar  9 09:12:38.669: INFO: found a healthy node: k8s-worker1
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:624
Mar  9 09:12:44.775: INFO: pods created so far: [1 1 1]
Mar  9 09:12:44.775: INFO: length of pods created so far: 3
Mar  9 09:12:48.787: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/node/init/init.go:32
Mar  9 09:12:55.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:549
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:12:55.836: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PreemptionExecutionPath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PreemptionExecutionPath
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-318" for this suite. 03/09/23 09:12:55.892
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-7163" for this suite. 03/09/23 09:12:55.902
------------------------------
â€¢ [SLOW TEST] [79.405 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:537
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/scheduling/preemption.go:624

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:11:36.504
    Mar  9 09:11:36.504: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-preemption 03/09/23 09:11:36.505
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:11:36.519
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:11:36.524
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Mar  9 09:11:36.546: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar  9 09:12:36.599: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PreemptionExecutionPath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:12:36.603
    Mar  9 09:12:36.604: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-preemption-path 03/09/23 09:12:36.605
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:12:36.622
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:12:36.627
    [BeforeEach] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:576
    STEP: Finding an available node 03/09/23 09:12:36.632
    STEP: Trying to launch a pod without a label to get a node which can launch it. 03/09/23 09:12:36.632
    Mar  9 09:12:36.643: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-318" to be "running"
    Mar  9 09:12:36.647: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 4.703386ms
    Mar  9 09:12:38.652: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.009190578s
    Mar  9 09:12:38.652: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 03/09/23 09:12:38.656
    Mar  9 09:12:38.669: INFO: found a healthy node: k8s-worker1
    [It] runs ReplicaSets to verify preemption running path [Conformance]
      test/e2e/scheduling/preemption.go:624
    Mar  9 09:12:44.775: INFO: pods created so far: [1 1 1]
    Mar  9 09:12:44.775: INFO: length of pods created so far: 3
    Mar  9 09:12:48.787: INFO: pods created so far: [2 2 1]
    [AfterEach] PreemptionExecutionPath
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:12:55.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:549
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:12:55.836: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PreemptionExecutionPath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PreemptionExecutionPath
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-318" for this suite. 03/09/23 09:12:55.892
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-7163" for this suite. 03/09/23 09:12:55.902
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:12:55.91
Mar  9 09:12:55.910: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sched-preemption 03/09/23 09:12:55.912
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:12:55.929
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:12:55.934
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Mar  9 09:12:55.956: INFO: Waiting up to 1m0s for all nodes to be ready
Mar  9 09:13:56.008: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224
STEP: Create pods that use 4/5 of node resources. 03/09/23 09:13:56.013
Mar  9 09:13:56.051: INFO: Created pod: pod0-0-sched-preemption-low-priority
Mar  9 09:13:56.059: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Mar  9 09:13:56.089: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Mar  9 09:13:56.097: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 03/09/23 09:13:56.097
Mar  9 09:13:56.097: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-320" to be "running"
Mar  9 09:13:56.103: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 5.817015ms
Mar  9 09:13:58.109: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.012185131s
Mar  9 09:13:58.109: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Mar  9 09:13:58.109: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-320" to be "running"
Mar  9 09:13:58.113: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.332868ms
Mar  9 09:13:58.113: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Mar  9 09:13:58.113: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-320" to be "running"
Mar  9 09:13:58.118: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 3.998895ms
Mar  9 09:13:58.118: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Mar  9 09:13:58.118: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-320" to be "running"
Mar  9 09:13:58.122: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.121645ms
Mar  9 09:13:58.122: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a critical pod that use same resources as that of a lower priority pod 03/09/23 09:13:58.122
Mar  9 09:13:58.136: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
Mar  9 09:13:58.141: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.147266ms
Mar  9 09:14:00.145: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00865712s
Mar  9 09:14:02.145: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00865307s
Mar  9 09:14:04.146: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.009300347s
Mar  9 09:14:04.146: INFO: Pod "critical-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:14:04.184: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-320" for this suite. 03/09/23 09:14:04.24
------------------------------
â€¢ [SLOW TEST] [68.338 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:12:55.91
    Mar  9 09:12:55.910: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sched-preemption 03/09/23 09:12:55.912
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:12:55.929
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:12:55.934
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Mar  9 09:12:55.956: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar  9 09:13:56.008: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates lower priority pod preemption by critical pod [Conformance]
      test/e2e/scheduling/preemption.go:224
    STEP: Create pods that use 4/5 of node resources. 03/09/23 09:13:56.013
    Mar  9 09:13:56.051: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Mar  9 09:13:56.059: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Mar  9 09:13:56.089: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Mar  9 09:13:56.097: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 03/09/23 09:13:56.097
    Mar  9 09:13:56.097: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-320" to be "running"
    Mar  9 09:13:56.103: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 5.817015ms
    Mar  9 09:13:58.109: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.012185131s
    Mar  9 09:13:58.109: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Mar  9 09:13:58.109: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-320" to be "running"
    Mar  9 09:13:58.113: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.332868ms
    Mar  9 09:13:58.113: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Mar  9 09:13:58.113: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-320" to be "running"
    Mar  9 09:13:58.118: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 3.998895ms
    Mar  9 09:13:58.118: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Mar  9 09:13:58.118: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-320" to be "running"
    Mar  9 09:13:58.122: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 4.121645ms
    Mar  9 09:13:58.122: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a critical pod that use same resources as that of a lower priority pod 03/09/23 09:13:58.122
    Mar  9 09:13:58.136: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
    Mar  9 09:13:58.141: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.147266ms
    Mar  9 09:14:00.145: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00865712s
    Mar  9 09:14:02.145: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.00865307s
    Mar  9 09:14:04.146: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.009300347s
    Mar  9 09:14:04.146: INFO: Pod "critical-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:14:04.184: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-320" for this suite. 03/09/23 09:14:04.24
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:14:04.249
Mar  9 09:14:04.249: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 09:14:04.251
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:04.267
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:04.272
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
STEP: Creating configMap that has name configmap-test-emptyKey-5d6ece75-fa92-428c-a901-4d304e624112 03/09/23 09:14:04.277
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:14:04.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-7350" for this suite. 03/09/23 09:14:04.286
------------------------------
â€¢ [0.044 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:14:04.249
    Mar  9 09:14:04.249: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 09:14:04.251
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:04.267
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:04.272
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create ConfigMap with empty key [Conformance]
      test/e2e/common/node/configmap.go:138
    STEP: Creating configMap that has name configmap-test-emptyKey-5d6ece75-fa92-428c-a901-4d304e624112 03/09/23 09:14:04.277
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:14:04.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-7350" for this suite. 03/09/23 09:14:04.286
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:14:04.294
Mar  9 09:14:04.295: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename daemonsets 03/09/23 09:14:04.296
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:04.311
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:04.316
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:146
[It] should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166
STEP: Creating simple DaemonSet "daemon-set" 03/09/23 09:14:04.343
STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 09:14:04.351
Mar  9 09:14:04.357: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:04.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:14:04.361: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:14:05.368: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:05.375: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:14:05.375: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
Mar  9 09:14:06.368: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:06.373: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 09:14:06.373: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived. 03/09/23 09:14:06.376
Mar  9 09:14:06.395: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:06.400: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:14:06.400: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 09:14:07.407: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:07.412: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:14:07.412: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 09:14:08.409: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:08.414: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:14:08.414: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 09:14:09.407: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:09.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:14:09.413: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 09:14:10.404: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:10.408: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Mar  9 09:14:10.408: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
Mar  9 09:14:11.407: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Mar  9 09:14:11.412: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Mar  9 09:14:11.412: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:111
STEP: Deleting DaemonSet "daemon-set" 03/09/23 09:14:11.415
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2317, will wait for the garbage collector to delete the pods 03/09/23 09:14:11.416
Mar  9 09:14:11.477: INFO: Deleting DaemonSet.extensions daemon-set took: 7.143095ms
Mar  9 09:14:11.578: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.578706ms
Mar  9 09:14:13.882: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Mar  9 09:14:13.882: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Mar  9 09:14:13.885: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"278037"},"items":null}

Mar  9 09:14:13.888: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"278037"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:14:13.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-2317" for this suite. 03/09/23 09:14:13.907
------------------------------
â€¢ [SLOW TEST] [9.620 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:14:04.294
    Mar  9 09:14:04.295: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename daemonsets 03/09/23 09:14:04.296
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:04.311
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:04.316
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:146
    [It] should run and stop simple daemon [Conformance]
      test/e2e/apps/daemon_set.go:166
    STEP: Creating simple DaemonSet "daemon-set" 03/09/23 09:14:04.343
    STEP: Check that daemon pods launch on every node of the cluster. 03/09/23 09:14:04.351
    Mar  9 09:14:04.357: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:04.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:14:04.361: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:14:05.368: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:05.375: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:14:05.375: INFO: Node k8s-worker1 is running 0 daemon pod, expected 1
    Mar  9 09:14:06.368: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:06.373: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 09:14:06.373: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    STEP: Stop a daemon pod, check that the daemon pod is revived. 03/09/23 09:14:06.376
    Mar  9 09:14:06.395: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:06.400: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:14:06.400: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 09:14:07.407: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:07.412: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:14:07.412: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 09:14:08.409: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:08.414: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:14:08.414: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 09:14:09.407: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:09.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:14:09.413: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 09:14:10.404: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:10.408: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Mar  9 09:14:10.408: INFO: Node k8s-worker2 is running 0 daemon pod, expected 1
    Mar  9 09:14:11.407: INFO: DaemonSet pods can't tolerate node k8s-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
    Mar  9 09:14:11.412: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Mar  9 09:14:11.412: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:111
    STEP: Deleting DaemonSet "daemon-set" 03/09/23 09:14:11.415
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2317, will wait for the garbage collector to delete the pods 03/09/23 09:14:11.416
    Mar  9 09:14:11.477: INFO: Deleting DaemonSet.extensions daemon-set took: 7.143095ms
    Mar  9 09:14:11.578: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.578706ms
    Mar  9 09:14:13.882: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Mar  9 09:14:13.882: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Mar  9 09:14:13.885: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"278037"},"items":null}

    Mar  9 09:14:13.888: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"278037"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:14:13.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-2317" for this suite. 03/09/23 09:14:13.907
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:14:13.915
Mar  9 09:14:13.916: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:14:13.917
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:13.933
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:13.938
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
STEP: Creating configMap with name projected-configmap-test-volume-f2e3701c-e601-4537-92ff-efbb5fde5a4e 03/09/23 09:14:13.943
STEP: Creating a pod to test consume configMaps 03/09/23 09:14:13.949
Mar  9 09:14:13.959: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9" in namespace "projected-880" to be "Succeeded or Failed"
Mar  9 09:14:13.963: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.457081ms
Mar  9 09:14:15.967: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008231847s
Mar  9 09:14:17.968: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009344999s
Mar  9 09:14:19.967: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.007768132s
STEP: Saw pod success 03/09/23 09:14:19.967
Mar  9 09:14:19.967: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9" satisfied condition "Succeeded or Failed"
Mar  9 09:14:19.971: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 09:14:20.002
Mar  9 09:14:20.014: INFO: Waiting for pod pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9 to disappear
Mar  9 09:14:20.018: INFO: Pod pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:14:20.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-880" for this suite. 03/09/23 09:14:20.024
------------------------------
â€¢ [SLOW TEST] [6.117 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:14:13.915
    Mar  9 09:14:13.916: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:14:13.917
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:13.933
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:13.938
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:57
    STEP: Creating configMap with name projected-configmap-test-volume-f2e3701c-e601-4537-92ff-efbb5fde5a4e 03/09/23 09:14:13.943
    STEP: Creating a pod to test consume configMaps 03/09/23 09:14:13.949
    Mar  9 09:14:13.959: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9" in namespace "projected-880" to be "Succeeded or Failed"
    Mar  9 09:14:13.963: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.457081ms
    Mar  9 09:14:15.967: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008231847s
    Mar  9 09:14:17.968: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009344999s
    Mar  9 09:14:19.967: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.007768132s
    STEP: Saw pod success 03/09/23 09:14:19.967
    Mar  9 09:14:19.967: INFO: Pod "pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9" satisfied condition "Succeeded or Failed"
    Mar  9 09:14:19.971: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 09:14:20.002
    Mar  9 09:14:20.014: INFO: Waiting for pod pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9 to disappear
    Mar  9 09:14:20.018: INFO: Pod pod-projected-configmaps-97d91ac7-1118-4f37-b640-d484552d5bd9 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:14:20.018: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-880" for this suite. 03/09/23 09:14:20.024
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:14:20.033
Mar  9 09:14:20.034: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename namespaces 03/09/23 09:14:20.036
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:20.052
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:20.057
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
STEP: Creating namespace "e2e-ns-qjccd" 03/09/23 09:14:20.062
Mar  9 09:14:20.080: INFO: Namespace "e2e-ns-qjccd-4567" has []v1.FinalizerName{"kubernetes"}
STEP: Adding e2e finalizer to namespace "e2e-ns-qjccd-4567" 03/09/23 09:14:20.08
Mar  9 09:14:20.094: INFO: Namespace "e2e-ns-qjccd-4567" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
STEP: Removing e2e finalizer from namespace "e2e-ns-qjccd-4567" 03/09/23 09:14:20.094
Mar  9 09:14:20.104: INFO: Namespace "e2e-ns-qjccd-4567" has []v1.FinalizerName{"kubernetes"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:14:20.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-4474" for this suite. 03/09/23 09:14:20.11
STEP: Destroying namespace "e2e-ns-qjccd-4567" for this suite. 03/09/23 09:14:20.117
------------------------------
â€¢ [0.091 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:14:20.033
    Mar  9 09:14:20.034: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename namespaces 03/09/23 09:14:20.036
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:20.052
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:20.057
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply a finalizer to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:394
    STEP: Creating namespace "e2e-ns-qjccd" 03/09/23 09:14:20.062
    Mar  9 09:14:20.080: INFO: Namespace "e2e-ns-qjccd-4567" has []v1.FinalizerName{"kubernetes"}
    STEP: Adding e2e finalizer to namespace "e2e-ns-qjccd-4567" 03/09/23 09:14:20.08
    Mar  9 09:14:20.094: INFO: Namespace "e2e-ns-qjccd-4567" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
    STEP: Removing e2e finalizer from namespace "e2e-ns-qjccd-4567" 03/09/23 09:14:20.094
    Mar  9 09:14:20.104: INFO: Namespace "e2e-ns-qjccd-4567" has []v1.FinalizerName{"kubernetes"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:14:20.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-4474" for this suite. 03/09/23 09:14:20.11
    STEP: Destroying namespace "e2e-ns-qjccd-4567" for this suite. 03/09/23 09:14:20.117
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:14:20.13
Mar  9 09:14:20.130: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:14:20.131
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:20.146
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:20.151
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
STEP: Creating projection with secret that has name projected-secret-test-map-9ae03813-4499-4a4b-8437-f83cbd64cdce 03/09/23 09:14:20.156
STEP: Creating a pod to test consume secrets 03/09/23 09:14:20.162
Mar  9 09:14:20.174: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918" in namespace "projected-4120" to be "Succeeded or Failed"
Mar  9 09:14:20.178: INFO: Pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918": Phase="Pending", Reason="", readiness=false. Elapsed: 4.139437ms
Mar  9 09:14:22.183: INFO: Pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009840338s
Mar  9 09:14:24.183: INFO: Pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009189491s
STEP: Saw pod success 03/09/23 09:14:24.183
Mar  9 09:14:24.183: INFO: Pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918" satisfied condition "Succeeded or Failed"
Mar  9 09:14:24.187: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918 container projected-secret-volume-test: <nil>
STEP: delete the pod 03/09/23 09:14:24.195
Mar  9 09:14:24.207: INFO: Waiting for pod pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918 to disappear
Mar  9 09:14:24.211: INFO: Pod pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar  9 09:14:24.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4120" for this suite. 03/09/23 09:14:24.217
------------------------------
â€¢ [4.094 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:14:20.13
    Mar  9 09:14:20.130: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:14:20.131
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:20.146
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:20.151
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:78
    STEP: Creating projection with secret that has name projected-secret-test-map-9ae03813-4499-4a4b-8437-f83cbd64cdce 03/09/23 09:14:20.156
    STEP: Creating a pod to test consume secrets 03/09/23 09:14:20.162
    Mar  9 09:14:20.174: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918" in namespace "projected-4120" to be "Succeeded or Failed"
    Mar  9 09:14:20.178: INFO: Pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918": Phase="Pending", Reason="", readiness=false. Elapsed: 4.139437ms
    Mar  9 09:14:22.183: INFO: Pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009840338s
    Mar  9 09:14:24.183: INFO: Pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009189491s
    STEP: Saw pod success 03/09/23 09:14:24.183
    Mar  9 09:14:24.183: INFO: Pod "pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918" satisfied condition "Succeeded or Failed"
    Mar  9 09:14:24.187: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918 container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 09:14:24.195
    Mar  9 09:14:24.207: INFO: Waiting for pod pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918 to disappear
    Mar  9 09:14:24.211: INFO: Pod pod-projected-secrets-f998380a-739f-4226-b72b-ee7fdd464918 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:14:24.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4120" for this suite. 03/09/23 09:14:24.217
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:14:24.227
Mar  9 09:14:24.227: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename limitrange 03/09/23 09:14:24.229
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:24.243
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:24.247
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
STEP: Creating LimitRange "e2e-limitrange-g42fx" in namespace "limitrange-513" 03/09/23 09:14:24.253
STEP: Creating another limitRange in another namespace 03/09/23 09:14:24.259
Mar  9 09:14:24.274: INFO: Namespace "e2e-limitrange-g42fx-7717" created
Mar  9 09:14:24.274: INFO: Creating LimitRange "e2e-limitrange-g42fx" in namespace "e2e-limitrange-g42fx-7717"
STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-g42fx" 03/09/23 09:14:24.28
Mar  9 09:14:24.285: INFO: Found 2 limitRanges
STEP: Patching LimitRange "e2e-limitrange-g42fx" in "limitrange-513" namespace 03/09/23 09:14:24.285
Mar  9 09:14:24.292: INFO: LimitRange "e2e-limitrange-g42fx" has been patched
STEP: Delete LimitRange "e2e-limitrange-g42fx" by Collection with labelSelector: "e2e-limitrange-g42fx=patched" 03/09/23 09:14:24.292
STEP: Confirm that the limitRange "e2e-limitrange-g42fx" has been deleted 03/09/23 09:14:24.301
Mar  9 09:14:24.301: INFO: Requesting list of LimitRange to confirm quantity
Mar  9 09:14:24.307: INFO: Found 0 LimitRange with label "e2e-limitrange-g42fx=patched"
Mar  9 09:14:24.307: INFO: LimitRange "e2e-limitrange-g42fx" has been deleted.
STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-g42fx" 03/09/23 09:14:24.307
Mar  9 09:14:24.312: INFO: Found 1 limitRange
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Mar  9 09:14:24.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-513" for this suite. 03/09/23 09:14:24.317
STEP: Destroying namespace "e2e-limitrange-g42fx-7717" for this suite. 03/09/23 09:14:24.329
------------------------------
â€¢ [0.109 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:14:24.227
    Mar  9 09:14:24.227: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename limitrange 03/09/23 09:14:24.229
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:24.243
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:24.247
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should list, patch and delete a LimitRange by collection [Conformance]
      test/e2e/scheduling/limit_range.go:239
    STEP: Creating LimitRange "e2e-limitrange-g42fx" in namespace "limitrange-513" 03/09/23 09:14:24.253
    STEP: Creating another limitRange in another namespace 03/09/23 09:14:24.259
    Mar  9 09:14:24.274: INFO: Namespace "e2e-limitrange-g42fx-7717" created
    Mar  9 09:14:24.274: INFO: Creating LimitRange "e2e-limitrange-g42fx" in namespace "e2e-limitrange-g42fx-7717"
    STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-g42fx" 03/09/23 09:14:24.28
    Mar  9 09:14:24.285: INFO: Found 2 limitRanges
    STEP: Patching LimitRange "e2e-limitrange-g42fx" in "limitrange-513" namespace 03/09/23 09:14:24.285
    Mar  9 09:14:24.292: INFO: LimitRange "e2e-limitrange-g42fx" has been patched
    STEP: Delete LimitRange "e2e-limitrange-g42fx" by Collection with labelSelector: "e2e-limitrange-g42fx=patched" 03/09/23 09:14:24.292
    STEP: Confirm that the limitRange "e2e-limitrange-g42fx" has been deleted 03/09/23 09:14:24.301
    Mar  9 09:14:24.301: INFO: Requesting list of LimitRange to confirm quantity
    Mar  9 09:14:24.307: INFO: Found 0 LimitRange with label "e2e-limitrange-g42fx=patched"
    Mar  9 09:14:24.307: INFO: LimitRange "e2e-limitrange-g42fx" has been deleted.
    STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-g42fx" 03/09/23 09:14:24.307
    Mar  9 09:14:24.312: INFO: Found 1 limitRange
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:14:24.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-513" for this suite. 03/09/23 09:14:24.317
    STEP: Destroying namespace "e2e-limitrange-g42fx-7717" for this suite. 03/09/23 09:14:24.329
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:14:24.338
Mar  9 09:14:24.339: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 09:14:24.34
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:24.354
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:24.359
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
STEP: Creating a pod to test downward API volume plugin 03/09/23 09:14:24.364
Mar  9 09:14:24.376: INFO: Waiting up to 5m0s for pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb" in namespace "downward-api-8187" to be "Succeeded or Failed"
Mar  9 09:14:24.381: INFO: Pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.53834ms
Mar  9 09:14:26.386: INFO: Pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009745207s
Mar  9 09:14:28.386: INFO: Pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009688818s
STEP: Saw pod success 03/09/23 09:14:28.386
Mar  9 09:14:28.386: INFO: Pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb" satisfied condition "Succeeded or Failed"
Mar  9 09:14:28.390: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb container client-container: <nil>
STEP: delete the pod 03/09/23 09:14:28.399
Mar  9 09:14:28.415: INFO: Waiting for pod downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb to disappear
Mar  9 09:14:28.419: INFO: Pod downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 09:14:28.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-8187" for this suite. 03/09/23 09:14:28.425
------------------------------
â€¢ [4.094 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:14:24.338
    Mar  9 09:14:24.339: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 09:14:24.34
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:24.354
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:24.359
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:249
    STEP: Creating a pod to test downward API volume plugin 03/09/23 09:14:24.364
    Mar  9 09:14:24.376: INFO: Waiting up to 5m0s for pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb" in namespace "downward-api-8187" to be "Succeeded or Failed"
    Mar  9 09:14:24.381: INFO: Pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.53834ms
    Mar  9 09:14:26.386: INFO: Pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009745207s
    Mar  9 09:14:28.386: INFO: Pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009688818s
    STEP: Saw pod success 03/09/23 09:14:28.386
    Mar  9 09:14:28.386: INFO: Pod "downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb" satisfied condition "Succeeded or Failed"
    Mar  9 09:14:28.390: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb container client-container: <nil>
    STEP: delete the pod 03/09/23 09:14:28.399
    Mar  9 09:14:28.415: INFO: Waiting for pod downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb to disappear
    Mar  9 09:14:28.419: INFO: Pod downwardapi-volume-307b93e8-ed24-4040-ad49-50d95861abcb no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:14:28.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-8187" for this suite. 03/09/23 09:14:28.425
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:14:28.433
Mar  9 09:14:28.433: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename var-expansion 03/09/23 09:14:28.435
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:28.45
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:28.455
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
STEP: creating the pod 03/09/23 09:14:28.46
STEP: waiting for pod running 03/09/23 09:14:28.47
Mar  9 09:14:28.470: INFO: Waiting up to 2m0s for pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" in namespace "var-expansion-8974" to be "running"
Mar  9 09:14:28.475: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.161371ms
Mar  9 09:14:30.481: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9": Phase="Running", Reason="", readiness=true. Elapsed: 2.010092418s
Mar  9 09:14:30.481: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" satisfied condition "running"
STEP: creating a file in subpath 03/09/23 09:14:30.481
Mar  9 09:14:30.485: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8974 PodName:var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 09:14:30.485: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 09:14:30.486: INFO: ExecWithOptions: Clientset creation
Mar  9 09:14:30.486: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-8974/pods/var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path 03/09/23 09:14:30.595
Mar  9 09:14:30.599: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8974 PodName:var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 09:14:30.599: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 09:14:30.600: INFO: ExecWithOptions: Clientset creation
Mar  9 09:14:30.600: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-8974/pods/var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value 03/09/23 09:14:30.723
Mar  9 09:14:31.243: INFO: Successfully updated pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9"
STEP: waiting for annotated pod running 03/09/23 09:14:31.243
Mar  9 09:14:31.244: INFO: Waiting up to 2m0s for pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" in namespace "var-expansion-8974" to be "running"
Mar  9 09:14:31.248: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9": Phase="Running", Reason="", readiness=true. Elapsed: 4.079053ms
Mar  9 09:14:31.248: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" satisfied condition "running"
STEP: deleting the pod gracefully 03/09/23 09:14:31.248
Mar  9 09:14:31.248: INFO: Deleting pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" in namespace "var-expansion-8974"
Mar  9 09:14:31.257: INFO: Wait up to 5m0s for pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar  9 09:15:05.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-8974" for this suite. 03/09/23 09:15:05.274
------------------------------
â€¢ [SLOW TEST] [36.850 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:14:28.433
    Mar  9 09:14:28.433: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename var-expansion 03/09/23 09:14:28.435
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:14:28.45
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:14:28.455
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should succeed in writing subpaths in container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:297
    STEP: creating the pod 03/09/23 09:14:28.46
    STEP: waiting for pod running 03/09/23 09:14:28.47
    Mar  9 09:14:28.470: INFO: Waiting up to 2m0s for pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" in namespace "var-expansion-8974" to be "running"
    Mar  9 09:14:28.475: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.161371ms
    Mar  9 09:14:30.481: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9": Phase="Running", Reason="", readiness=true. Elapsed: 2.010092418s
    Mar  9 09:14:30.481: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" satisfied condition "running"
    STEP: creating a file in subpath 03/09/23 09:14:30.481
    Mar  9 09:14:30.485: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8974 PodName:var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 09:14:30.485: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 09:14:30.486: INFO: ExecWithOptions: Clientset creation
    Mar  9 09:14:30.486: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-8974/pods/var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: test for file in mounted path 03/09/23 09:14:30.595
    Mar  9 09:14:30.599: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8974 PodName:var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 09:14:30.599: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 09:14:30.600: INFO: ExecWithOptions: Clientset creation
    Mar  9 09:14:30.600: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-8974/pods/var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: updating the annotation value 03/09/23 09:14:30.723
    Mar  9 09:14:31.243: INFO: Successfully updated pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9"
    STEP: waiting for annotated pod running 03/09/23 09:14:31.243
    Mar  9 09:14:31.244: INFO: Waiting up to 2m0s for pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" in namespace "var-expansion-8974" to be "running"
    Mar  9 09:14:31.248: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9": Phase="Running", Reason="", readiness=true. Elapsed: 4.079053ms
    Mar  9 09:14:31.248: INFO: Pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" satisfied condition "running"
    STEP: deleting the pod gracefully 03/09/23 09:14:31.248
    Mar  9 09:14:31.248: INFO: Deleting pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" in namespace "var-expansion-8974"
    Mar  9 09:14:31.257: INFO: Wait up to 5m0s for pod "var-expansion-2cbe5646-fe6e-4894-92ed-3287ee5924c9" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:15:05.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-8974" for this suite. 03/09/23 09:15:05.274
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial]
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:15:05.284
Mar  9 09:15:05.284: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename taint-single-pod 03/09/23 09:15:05.286
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:15:05.302
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:15:05.307
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:170
Mar  9 09:15:05.312: INFO: Waiting up to 1m0s for all nodes to be ready
Mar  9 09:16:05.361: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
Mar  9 09:16:05.366: INFO: Starting informer...
STEP: Starting pod... 03/09/23 09:16:05.366
Mar  9 09:16:05.587: INFO: Pod is running on k8s-worker1. Tainting Node
STEP: Trying to apply a taint on the Node 03/09/23 09:16:05.587
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/09/23 09:16:05.609
STEP: Waiting short time to make sure Pod is queued for deletion 03/09/23 09:16:05.615
Mar  9 09:16:05.615: INFO: Pod wasn't evicted. Proceeding
Mar  9 09:16:05.615: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/09/23 09:16:05.638
STEP: Waiting some time to make sure that toleration time passed. 03/09/23 09:16:05.643
Mar  9 09:17:20.644: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:17:20.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-single-pod-3165" for this suite. 03/09/23 09:17:20.652
------------------------------
â€¢ [SLOW TEST] [135.375 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:15:05.284
    Mar  9 09:15:05.284: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename taint-single-pod 03/09/23 09:15:05.286
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:15:05.302
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:15:05.307
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/node/taints.go:170
    Mar  9 09:15:05.312: INFO: Waiting up to 1m0s for all nodes to be ready
    Mar  9 09:16:05.361: INFO: Waiting for terminating namespaces to be deleted...
    [It] removing taint cancels eviction [Disruptive] [Conformance]
      test/e2e/node/taints.go:293
    Mar  9 09:16:05.366: INFO: Starting informer...
    STEP: Starting pod... 03/09/23 09:16:05.366
    Mar  9 09:16:05.587: INFO: Pod is running on k8s-worker1. Tainting Node
    STEP: Trying to apply a taint on the Node 03/09/23 09:16:05.587
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/09/23 09:16:05.609
    STEP: Waiting short time to make sure Pod is queued for deletion 03/09/23 09:16:05.615
    Mar  9 09:16:05.615: INFO: Pod wasn't evicted. Proceeding
    Mar  9 09:16:05.615: INFO: Removing taint from Node
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 03/09/23 09:16:05.638
    STEP: Waiting some time to make sure that toleration time passed. 03/09/23 09:16:05.643
    Mar  9 09:17:20.644: INFO: Pod wasn't evicted. Test successful
    [AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:17:20.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-single-pod-3165" for this suite. 03/09/23 09:17:20.652
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:17:20.662
Mar  9 09:17:20.662: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 09:17:20.663
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:20.679
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:20.684
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
STEP: creating the pod 03/09/23 09:17:20.689
STEP: submitting the pod to kubernetes 03/09/23 09:17:20.689
Mar  9 09:17:20.700: INFO: Waiting up to 5m0s for pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e" in namespace "pods-9380" to be "running and ready"
Mar  9 09:17:20.713: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e": Phase="Pending", Reason="", readiness=false. Elapsed: 13.293003ms
Mar  9 09:17:20.713: INFO: The phase of Pod pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:17:22.718: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e": Phase="Running", Reason="", readiness=true. Elapsed: 2.017786069s
Mar  9 09:17:22.718: INFO: The phase of Pod pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e is Running (Ready = true)
Mar  9 09:17:22.718: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 03/09/23 09:17:22.722
STEP: updating the pod 03/09/23 09:17:22.726
Mar  9 09:17:23.244: INFO: Successfully updated pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e"
Mar  9 09:17:23.244: INFO: Waiting up to 5m0s for pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e" in namespace "pods-9380" to be "running"
Mar  9 09:17:23.248: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e": Phase="Running", Reason="", readiness=true. Elapsed: 3.889497ms
Mar  9 09:17:23.248: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e" satisfied condition "running"
STEP: verifying the updated pod is in kubernetes 03/09/23 09:17:23.248
Mar  9 09:17:23.252: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 09:17:23.252: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-9380" for this suite. 03/09/23 09:17:23.259
------------------------------
â€¢ [2.604 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:17:20.662
    Mar  9 09:17:20.662: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 09:17:20.663
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:20.679
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:20.684
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:344
    STEP: creating the pod 03/09/23 09:17:20.689
    STEP: submitting the pod to kubernetes 03/09/23 09:17:20.689
    Mar  9 09:17:20.700: INFO: Waiting up to 5m0s for pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e" in namespace "pods-9380" to be "running and ready"
    Mar  9 09:17:20.713: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e": Phase="Pending", Reason="", readiness=false. Elapsed: 13.293003ms
    Mar  9 09:17:20.713: INFO: The phase of Pod pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:17:22.718: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e": Phase="Running", Reason="", readiness=true. Elapsed: 2.017786069s
    Mar  9 09:17:22.718: INFO: The phase of Pod pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e is Running (Ready = true)
    Mar  9 09:17:22.718: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 03/09/23 09:17:22.722
    STEP: updating the pod 03/09/23 09:17:22.726
    Mar  9 09:17:23.244: INFO: Successfully updated pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e"
    Mar  9 09:17:23.244: INFO: Waiting up to 5m0s for pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e" in namespace "pods-9380" to be "running"
    Mar  9 09:17:23.248: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e": Phase="Running", Reason="", readiness=true. Elapsed: 3.889497ms
    Mar  9 09:17:23.248: INFO: Pod "pod-update-c44f2176-e3f3-433b-8382-fd7e8c89c02e" satisfied condition "running"
    STEP: verifying the updated pod is in kubernetes 03/09/23 09:17:23.248
    Mar  9 09:17:23.252: INFO: Pod update OK
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:17:23.252: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-9380" for this suite. 03/09/23 09:17:23.259
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:17:23.267
Mar  9 09:17:23.268: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:17:23.269
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:23.285
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:23.289
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
STEP: Creating configMap with name projected-configmap-test-volume-map-43183c5e-b838-4160-a8c1-2fa19891e9ba 03/09/23 09:17:23.295
STEP: Creating a pod to test consume configMaps 03/09/23 09:17:23.301
Mar  9 09:17:23.313: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572" in namespace "projected-4790" to be "Succeeded or Failed"
Mar  9 09:17:23.319: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572": Phase="Pending", Reason="", readiness=false. Elapsed: 6.101121ms
Mar  9 09:17:25.324: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011353193s
Mar  9 09:17:27.324: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01170918s
Mar  9 09:17:29.324: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010968308s
STEP: Saw pod success 03/09/23 09:17:29.324
Mar  9 09:17:29.324: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572" satisfied condition "Succeeded or Failed"
Mar  9 09:17:29.328: INFO: Trying to get logs from node k8s-worker2 pod pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 09:17:29.362
Mar  9 09:17:29.377: INFO: Waiting for pod pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572 to disappear
Mar  9 09:17:29.381: INFO: Pod pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:17:29.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4790" for this suite. 03/09/23 09:17:29.388
------------------------------
â€¢ [SLOW TEST] [6.128 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:17:23.267
    Mar  9 09:17:23.268: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:17:23.269
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:23.285
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:23.289
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:109
    STEP: Creating configMap with name projected-configmap-test-volume-map-43183c5e-b838-4160-a8c1-2fa19891e9ba 03/09/23 09:17:23.295
    STEP: Creating a pod to test consume configMaps 03/09/23 09:17:23.301
    Mar  9 09:17:23.313: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572" in namespace "projected-4790" to be "Succeeded or Failed"
    Mar  9 09:17:23.319: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572": Phase="Pending", Reason="", readiness=false. Elapsed: 6.101121ms
    Mar  9 09:17:25.324: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011353193s
    Mar  9 09:17:27.324: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01170918s
    Mar  9 09:17:29.324: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010968308s
    STEP: Saw pod success 03/09/23 09:17:29.324
    Mar  9 09:17:29.324: INFO: Pod "pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572" satisfied condition "Succeeded or Failed"
    Mar  9 09:17:29.328: INFO: Trying to get logs from node k8s-worker2 pod pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 09:17:29.362
    Mar  9 09:17:29.377: INFO: Waiting for pod pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572 to disappear
    Mar  9 09:17:29.381: INFO: Pod pod-projected-configmaps-30ff4caa-d336-4f68-8dfa-ac2bb7586572 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:17:29.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4790" for this suite. 03/09/23 09:17:29.388
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:17:29.402
Mar  9 09:17:29.402: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename namespaces 03/09/23 09:17:29.403
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:29.426
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:29.431
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
STEP: Updating Namespace "namespaces-842" 03/09/23 09:17:29.437
Mar  9 09:17:29.447: INFO: Namespace "namespaces-842" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"ac892d85-34a4-4743-9959-6e8abcea2ae2", "kubernetes.io/metadata.name":"namespaces-842", "namespaces-842":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:17:29.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-842" for this suite. 03/09/23 09:17:29.454
------------------------------
â€¢ [0.060 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:17:29.402
    Mar  9 09:17:29.402: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename namespaces 03/09/23 09:17:29.403
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:29.426
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:29.431
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply an update to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:366
    STEP: Updating Namespace "namespaces-842" 03/09/23 09:17:29.437
    Mar  9 09:17:29.447: INFO: Namespace "namespaces-842" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"ac892d85-34a4-4743-9959-6e8abcea2ae2", "kubernetes.io/metadata.name":"namespaces-842", "namespaces-842":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:17:29.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-842" for this suite. 03/09/23 09:17:29.454
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Pods
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:17:29.462
Mar  9 09:17:29.463: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 09:17:29.464
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:29.48
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:29.484
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
Mar  9 09:17:29.501: INFO: Waiting up to 5m0s for pod "server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495" in namespace "pods-4640" to be "running and ready"
Mar  9 09:17:29.505: INFO: Pod "server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495": Phase="Pending", Reason="", readiness=false. Elapsed: 4.352511ms
Mar  9 09:17:29.506: INFO: The phase of Pod server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:17:31.512: INFO: Pod "server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495": Phase="Running", Reason="", readiness=true. Elapsed: 2.010593529s
Mar  9 09:17:31.512: INFO: The phase of Pod server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495 is Running (Ready = true)
Mar  9 09:17:31.512: INFO: Pod "server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495" satisfied condition "running and ready"
Mar  9 09:17:31.545: INFO: Waiting up to 5m0s for pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282" in namespace "pods-4640" to be "Succeeded or Failed"
Mar  9 09:17:31.549: INFO: Pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282": Phase="Pending", Reason="", readiness=false. Elapsed: 4.230262ms
Mar  9 09:17:33.554: INFO: Pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008906013s
Mar  9 09:17:35.555: INFO: Pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009598409s
STEP: Saw pod success 03/09/23 09:17:35.555
Mar  9 09:17:35.555: INFO: Pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282" satisfied condition "Succeeded or Failed"
Mar  9 09:17:35.559: INFO: Trying to get logs from node k8s-worker1 pod client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282 container env3cont: <nil>
STEP: delete the pod 03/09/23 09:17:35.589
Mar  9 09:17:35.603: INFO: Waiting for pod client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282 to disappear
Mar  9 09:17:35.607: INFO: Pod client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 09:17:35.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-4640" for this suite. 03/09/23 09:17:35.614
------------------------------
â€¢ [SLOW TEST] [6.158 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:17:29.462
    Mar  9 09:17:29.463: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 09:17:29.464
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:29.48
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:29.484
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should contain environment variables for services [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:444
    Mar  9 09:17:29.501: INFO: Waiting up to 5m0s for pod "server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495" in namespace "pods-4640" to be "running and ready"
    Mar  9 09:17:29.505: INFO: Pod "server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495": Phase="Pending", Reason="", readiness=false. Elapsed: 4.352511ms
    Mar  9 09:17:29.506: INFO: The phase of Pod server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:17:31.512: INFO: Pod "server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495": Phase="Running", Reason="", readiness=true. Elapsed: 2.010593529s
    Mar  9 09:17:31.512: INFO: The phase of Pod server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495 is Running (Ready = true)
    Mar  9 09:17:31.512: INFO: Pod "server-envvars-8d191e36-ab9f-4ffe-8349-96dea25a4495" satisfied condition "running and ready"
    Mar  9 09:17:31.545: INFO: Waiting up to 5m0s for pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282" in namespace "pods-4640" to be "Succeeded or Failed"
    Mar  9 09:17:31.549: INFO: Pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282": Phase="Pending", Reason="", readiness=false. Elapsed: 4.230262ms
    Mar  9 09:17:33.554: INFO: Pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008906013s
    Mar  9 09:17:35.555: INFO: Pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009598409s
    STEP: Saw pod success 03/09/23 09:17:35.555
    Mar  9 09:17:35.555: INFO: Pod "client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282" satisfied condition "Succeeded or Failed"
    Mar  9 09:17:35.559: INFO: Trying to get logs from node k8s-worker1 pod client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282 container env3cont: <nil>
    STEP: delete the pod 03/09/23 09:17:35.589
    Mar  9 09:17:35.603: INFO: Waiting for pod client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282 to disappear
    Mar  9 09:17:35.607: INFO: Pod client-envvars-f3cb86e2-908b-4f95-a1cc-976132702282 no longer exists
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:17:35.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-4640" for this suite. 03/09/23 09:17:35.614
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] Job
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:17:35.621
Mar  9 09:17:35.621: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename job 03/09/23 09:17:35.623
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:35.645
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:35.65
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
STEP: Creating a job 03/09/23 09:17:35.655
STEP: Ensuring active pods == parallelism 03/09/23 09:17:35.662
STEP: Orphaning one of the Job's Pods 03/09/23 09:17:37.668
Mar  9 09:17:38.192: INFO: Successfully updated pod "adopt-release-jvpg2"
STEP: Checking that the Job readopts the Pod 03/09/23 09:17:38.192
Mar  9 09:17:38.192: INFO: Waiting up to 15m0s for pod "adopt-release-jvpg2" in namespace "job-7802" to be "adopted"
Mar  9 09:17:38.197: INFO: Pod "adopt-release-jvpg2": Phase="Running", Reason="", readiness=true. Elapsed: 5.467804ms
Mar  9 09:17:40.202: INFO: Pod "adopt-release-jvpg2": Phase="Running", Reason="", readiness=true. Elapsed: 2.009915343s
Mar  9 09:17:40.202: INFO: Pod "adopt-release-jvpg2" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod 03/09/23 09:17:40.202
Mar  9 09:17:40.726: INFO: Successfully updated pod "adopt-release-jvpg2"
STEP: Checking that the Job releases the Pod 03/09/23 09:17:40.726
Mar  9 09:17:40.726: INFO: Waiting up to 15m0s for pod "adopt-release-jvpg2" in namespace "job-7802" to be "released"
Mar  9 09:17:40.732: INFO: Pod "adopt-release-jvpg2": Phase="Running", Reason="", readiness=true. Elapsed: 6.184801ms
Mar  9 09:17:42.738: INFO: Pod "adopt-release-jvpg2": Phase="Running", Reason="", readiness=true. Elapsed: 2.011854217s
Mar  9 09:17:42.738: INFO: Pod "adopt-release-jvpg2" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Mar  9 09:17:42.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-7802" for this suite. 03/09/23 09:17:42.744
------------------------------
â€¢ [SLOW TEST] [7.130 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:17:35.621
    Mar  9 09:17:35.621: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename job 03/09/23 09:17:35.623
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:35.645
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:35.65
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching orphans and release non-matching pods [Conformance]
      test/e2e/apps/job.go:507
    STEP: Creating a job 03/09/23 09:17:35.655
    STEP: Ensuring active pods == parallelism 03/09/23 09:17:35.662
    STEP: Orphaning one of the Job's Pods 03/09/23 09:17:37.668
    Mar  9 09:17:38.192: INFO: Successfully updated pod "adopt-release-jvpg2"
    STEP: Checking that the Job readopts the Pod 03/09/23 09:17:38.192
    Mar  9 09:17:38.192: INFO: Waiting up to 15m0s for pod "adopt-release-jvpg2" in namespace "job-7802" to be "adopted"
    Mar  9 09:17:38.197: INFO: Pod "adopt-release-jvpg2": Phase="Running", Reason="", readiness=true. Elapsed: 5.467804ms
    Mar  9 09:17:40.202: INFO: Pod "adopt-release-jvpg2": Phase="Running", Reason="", readiness=true. Elapsed: 2.009915343s
    Mar  9 09:17:40.202: INFO: Pod "adopt-release-jvpg2" satisfied condition "adopted"
    STEP: Removing the labels from the Job's Pod 03/09/23 09:17:40.202
    Mar  9 09:17:40.726: INFO: Successfully updated pod "adopt-release-jvpg2"
    STEP: Checking that the Job releases the Pod 03/09/23 09:17:40.726
    Mar  9 09:17:40.726: INFO: Waiting up to 15m0s for pod "adopt-release-jvpg2" in namespace "job-7802" to be "released"
    Mar  9 09:17:40.732: INFO: Pod "adopt-release-jvpg2": Phase="Running", Reason="", readiness=true. Elapsed: 6.184801ms
    Mar  9 09:17:42.738: INFO: Pod "adopt-release-jvpg2": Phase="Running", Reason="", readiness=true. Elapsed: 2.011854217s
    Mar  9 09:17:42.738: INFO: Pod "adopt-release-jvpg2" satisfied condition "released"
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:17:42.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-7802" for this suite. 03/09/23 09:17:42.744
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:17:42.752
Mar  9 09:17:42.752: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename namespaces 03/09/23 09:17:42.753
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:42.771
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:42.775
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
STEP: Read namespace status 03/09/23 09:17:42.78
Mar  9 09:17:42.785: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
STEP: Patch namespace status 03/09/23 09:17:42.785
Mar  9 09:17:42.793: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
STEP: Update namespace status 03/09/23 09:17:42.793
Mar  9 09:17:42.805: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:17:42.805: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-45" for this suite. 03/09/23 09:17:42.812
------------------------------
â€¢ [0.067 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:17:42.752
    Mar  9 09:17:42.752: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename namespaces 03/09/23 09:17:42.753
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:42.771
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:42.775
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a namespace status [Conformance]
      test/e2e/apimachinery/namespace.go:299
    STEP: Read namespace status 03/09/23 09:17:42.78
    Mar  9 09:17:42.785: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
    STEP: Patch namespace status 03/09/23 09:17:42.785
    Mar  9 09:17:42.793: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
    STEP: Update namespace status 03/09/23 09:17:42.793
    Mar  9 09:17:42.805: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:17:42.805: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-45" for this suite. 03/09/23 09:17:42.812
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:17:42.82
Mar  9 09:17:42.820: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 09:17:42.821
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:42.836
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:42.841
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
Mar  9 09:17:42.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 create -f -'
Mar  9 09:17:44.292: INFO: stderr: ""
Mar  9 09:17:44.292: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Mar  9 09:17:44.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 create -f -'
Mar  9 09:17:44.811: INFO: stderr: ""
Mar  9 09:17:44.811: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 03/09/23 09:17:44.811
Mar  9 09:17:45.816: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:17:45.816: INFO: Found 0 / 1
Mar  9 09:17:46.816: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:17:46.816: INFO: Found 1 / 1
Mar  9 09:17:46.816: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Mar  9 09:17:46.820: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:17:46.820: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Mar  9 09:17:46.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe pod agnhost-primary-qsvdd'
Mar  9 09:17:47.008: INFO: stderr: ""
Mar  9 09:17:47.008: INFO: stdout: "Name:             agnhost-primary-qsvdd\nNamespace:        kubectl-225\nPriority:         0\nService Account:  default\nNode:             k8s-worker1/192.168.0.102\nStart Time:       Thu, 09 Mar 2023 09:17:43 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 04c77613479de0c5f333bda9c76f0ff3fc81c7f7722a6c27bf4f1cd7ee128e46\n                  cni.projectcalico.org/podIP: 172.16.0.125/32\n                  cni.projectcalico.org/podIPs: 172.16.0.125/32\nStatus:           Running\nIP:               172.16.0.125\nIPs:\n  IP:           172.16.0.125\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://cffcea1f45f29072ead28614ee0c77dabc81ba777cc8f0d1b7853b59ae08c5bf\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 09 Mar 2023 09:17:44 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-n4qmr (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-n4qmr:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Pulled     3s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    3s    kubelet            Created container agnhost-primary\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-225/agnhost-primary-qsvdd to k8s-worker1\n  Normal  Started    3s    kubelet            Started container agnhost-primary\n"
Mar  9 09:17:47.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe rc agnhost-primary'
Mar  9 09:17:47.188: INFO: stderr: ""
Mar  9 09:17:47.188: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-225\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-qsvdd\n"
Mar  9 09:17:47.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe service agnhost-primary'
Mar  9 09:17:47.364: INFO: stderr: ""
Mar  9 09:17:47.364: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-225\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.109.31.104\nIPs:               10.109.31.104\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         172.16.0.125:6379\nSession Affinity:  None\nEvents:            <none>\n"
Mar  9 09:17:47.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe node k8s-master'
Mar  9 09:17:47.568: INFO: stderr: ""
Mar  9 09:17:47.568: INFO: stdout: "Name:               k8s-master\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-master\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.0.101/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 172.16.0.192\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 08 Mar 2023 01:36:30 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-master\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 09 Mar 2023 09:17:45 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 08 Mar 2023 01:45:32 +0000   Wed, 08 Mar 2023 01:45:32 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Thu, 09 Mar 2023 09:16:56 +0000   Wed, 08 Mar 2023 01:36:27 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 09 Mar 2023 09:16:56 +0000   Wed, 08 Mar 2023 01:36:27 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 09 Mar 2023 09:16:56 +0000   Wed, 08 Mar 2023 01:36:27 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 09 Mar 2023 09:16:56 +0000   Wed, 08 Mar 2023 10:09:08 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.0.101\n  Hostname:    k8s-master\nCapacity:\n  cpu:                8\n  ephemeral-storage:  237203320Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15975324Ki\n  pods:               110\nAllocatable:\n  cpu:                8\n  ephemeral-storage:  218606579351\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15872924Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 eddda8cc68dd41f7aab4c884c641d50f\n  System UUID:                03000200-0400-0500-0006-000700080009\n  Boot ID:                    421d5ae4-674e-4020-9083-489f9c3c1daf\n  Kernel Version:             3.10.0-1160.el7.x86_64\n  OS Image:                   CentOS Linux 7 (Core)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.18\n  Kubelet Version:            v1.26.2\n  Kube-Proxy Version:         v1.26.2\nPodCIDR:                      172.16.0.0/24\nPodCIDRs:                     172.16.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-qb4kw                                          250m (3%)     0 (0%)      0 (0%)           0 (0%)         31h\n  kube-system                 coredns-787d4945fb-hdqwk                                   100m (1%)     0 (0%)      70Mi (0%)        170Mi (1%)     31h\n  kube-system                 coredns-787d4945fb-zl64w                                   100m (1%)     0 (0%)      70Mi (0%)        170Mi (1%)     31h\n  kube-system                 etcd-k8s-master                                            100m (1%)     0 (0%)      100Mi (0%)       0 (0%)         31h\n  kube-system                 kube-apiserver-k8s-master                                  250m (3%)     0 (0%)      0 (0%)           0 (0%)         31h\n  kube-system                 kube-controller-manager-k8s-master                         200m (2%)     0 (0%)      0 (0%)           0 (0%)         31h\n  kube-system                 kube-proxy-mgznx                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         31h\n  kube-system                 kube-scheduler-k8s-master                                  100m (1%)     0 (0%)      0 (0%)           0 (0%)         31h\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-dhwqq    0 (0%)        0 (0%)      0 (0%)           0 (0%)         80m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1100m (13%)  0 (0%)\n  memory             240Mi (1%)   340Mi (2%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:              <none>\n"
Mar  9 09:17:47.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe namespace kubectl-225'
Mar  9 09:17:47.733: INFO: stderr: ""
Mar  9 09:17:47.733: INFO: stdout: "Name:         kubectl-225\nLabels:       e2e-framework=kubectl\n              e2e-run=ac892d85-34a4-4743-9959-6e8abcea2ae2\n              kubernetes.io/metadata.name=kubectl-225\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 09:17:47.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-225" for this suite. 03/09/23 09:17:47.74
------------------------------
â€¢ [4.928 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl describe
  test/e2e/kubectl/kubectl.go:1270
    should check if kubectl describe prints relevant information for rc and pods  [Conformance]
    test/e2e/kubectl/kubectl.go:1276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:17:42.82
    Mar  9 09:17:42.820: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 09:17:42.821
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:42.836
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:42.841
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
      test/e2e/kubectl/kubectl.go:1276
    Mar  9 09:17:42.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 create -f -'
    Mar  9 09:17:44.292: INFO: stderr: ""
    Mar  9 09:17:44.292: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    Mar  9 09:17:44.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 create -f -'
    Mar  9 09:17:44.811: INFO: stderr: ""
    Mar  9 09:17:44.811: INFO: stdout: "service/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 03/09/23 09:17:44.811
    Mar  9 09:17:45.816: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:17:45.816: INFO: Found 0 / 1
    Mar  9 09:17:46.816: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:17:46.816: INFO: Found 1 / 1
    Mar  9 09:17:46.816: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Mar  9 09:17:46.820: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:17:46.820: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Mar  9 09:17:46.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe pod agnhost-primary-qsvdd'
    Mar  9 09:17:47.008: INFO: stderr: ""
    Mar  9 09:17:47.008: INFO: stdout: "Name:             agnhost-primary-qsvdd\nNamespace:        kubectl-225\nPriority:         0\nService Account:  default\nNode:             k8s-worker1/192.168.0.102\nStart Time:       Thu, 09 Mar 2023 09:17:43 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 04c77613479de0c5f333bda9c76f0ff3fc81c7f7722a6c27bf4f1cd7ee128e46\n                  cni.projectcalico.org/podIP: 172.16.0.125/32\n                  cni.projectcalico.org/podIPs: 172.16.0.125/32\nStatus:           Running\nIP:               172.16.0.125\nIPs:\n  IP:           172.16.0.125\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://cffcea1f45f29072ead28614ee0c77dabc81ba777cc8f0d1b7853b59ae08c5bf\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 09 Mar 2023 09:17:44 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-n4qmr (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-n4qmr:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Pulled     3s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    3s    kubelet            Created container agnhost-primary\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-225/agnhost-primary-qsvdd to k8s-worker1\n  Normal  Started    3s    kubelet            Started container agnhost-primary\n"
    Mar  9 09:17:47.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe rc agnhost-primary'
    Mar  9 09:17:47.188: INFO: stderr: ""
    Mar  9 09:17:47.188: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-225\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-qsvdd\n"
    Mar  9 09:17:47.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe service agnhost-primary'
    Mar  9 09:17:47.364: INFO: stderr: ""
    Mar  9 09:17:47.364: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-225\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.109.31.104\nIPs:               10.109.31.104\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         172.16.0.125:6379\nSession Affinity:  None\nEvents:            <none>\n"
    Mar  9 09:17:47.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe node k8s-master'
    Mar  9 09:17:47.568: INFO: stderr: ""
    Mar  9 09:17:47.568: INFO: stdout: "Name:               k8s-master\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-master\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.0.101/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 172.16.0.192\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 08 Mar 2023 01:36:30 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-master\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 09 Mar 2023 09:17:45 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 08 Mar 2023 01:45:32 +0000   Wed, 08 Mar 2023 01:45:32 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Thu, 09 Mar 2023 09:16:56 +0000   Wed, 08 Mar 2023 01:36:27 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 09 Mar 2023 09:16:56 +0000   Wed, 08 Mar 2023 01:36:27 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 09 Mar 2023 09:16:56 +0000   Wed, 08 Mar 2023 01:36:27 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 09 Mar 2023 09:16:56 +0000   Wed, 08 Mar 2023 10:09:08 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.0.101\n  Hostname:    k8s-master\nCapacity:\n  cpu:                8\n  ephemeral-storage:  237203320Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15975324Ki\n  pods:               110\nAllocatable:\n  cpu:                8\n  ephemeral-storage:  218606579351\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15872924Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 eddda8cc68dd41f7aab4c884c641d50f\n  System UUID:                03000200-0400-0500-0006-000700080009\n  Boot ID:                    421d5ae4-674e-4020-9083-489f9c3c1daf\n  Kernel Version:             3.10.0-1160.el7.x86_64\n  OS Image:                   CentOS Linux 7 (Core)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.18\n  Kubelet Version:            v1.26.2\n  Kube-Proxy Version:         v1.26.2\nPodCIDR:                      172.16.0.0/24\nPodCIDRs:                     172.16.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-qb4kw                                          250m (3%)     0 (0%)      0 (0%)           0 (0%)         31h\n  kube-system                 coredns-787d4945fb-hdqwk                                   100m (1%)     0 (0%)      70Mi (0%)        170Mi (1%)     31h\n  kube-system                 coredns-787d4945fb-zl64w                                   100m (1%)     0 (0%)      70Mi (0%)        170Mi (1%)     31h\n  kube-system                 etcd-k8s-master                                            100m (1%)     0 (0%)      100Mi (0%)       0 (0%)         31h\n  kube-system                 kube-apiserver-k8s-master                                  250m (3%)     0 (0%)      0 (0%)           0 (0%)         31h\n  kube-system                 kube-controller-manager-k8s-master                         200m (2%)     0 (0%)      0 (0%)           0 (0%)         31h\n  kube-system                 kube-proxy-mgznx                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         31h\n  kube-system                 kube-scheduler-k8s-master                                  100m (1%)     0 (0%)      0 (0%)           0 (0%)         31h\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-4fd65e942a1d4d54-dhwqq    0 (0%)        0 (0%)      0 (0%)           0 (0%)         80m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1100m (13%)  0 (0%)\n  memory             240Mi (1%)   340Mi (2%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:              <none>\n"
    Mar  9 09:17:47.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-225 describe namespace kubectl-225'
    Mar  9 09:17:47.733: INFO: stderr: ""
    Mar  9 09:17:47.733: INFO: stdout: "Name:         kubectl-225\nLabels:       e2e-framework=kubectl\n              e2e-run=ac892d85-34a4-4743-9959-6e8abcea2ae2\n              kubernetes.io/metadata.name=kubectl-225\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:17:47.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-225" for this suite. 03/09/23 09:17:47.74
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:17:47.752
Mar  9 09:17:47.752: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename statefulset 03/09/23 09:17:47.754
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:47.775
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:47.781
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-7879 03/09/23 09:17:47.786
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
Mar  9 09:17:47.809: INFO: Found 0 stateful pods, waiting for 1
Mar  9 09:17:57.814: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet 03/09/23 09:17:57.821
W0309 09:17:57.834618      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Mar  9 09:17:57.843: INFO: Found 1 stateful pods, waiting for 2
Mar  9 09:18:07.851: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Mar  9 09:18:07.851: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets 03/09/23 09:18:07.86
STEP: Delete all of the StatefulSets 03/09/23 09:18:07.864
STEP: Verify that StatefulSets have been deleted 03/09/23 09:18:07.882
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar  9 09:18:07.886: INFO: Deleting all statefulset in ns statefulset-7879
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar  9 09:18:07.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-7879" for this suite. 03/09/23 09:18:07.908
------------------------------
â€¢ [SLOW TEST] [20.168 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/apps/statefulset.go:908

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:17:47.752
    Mar  9 09:17:47.752: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename statefulset 03/09/23 09:17:47.754
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:17:47.775
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:17:47.781
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-7879 03/09/23 09:17:47.786
    [It] should list, patch and delete a collection of StatefulSets [Conformance]
      test/e2e/apps/statefulset.go:908
    Mar  9 09:17:47.809: INFO: Found 0 stateful pods, waiting for 1
    Mar  9 09:17:57.814: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: patching the StatefulSet 03/09/23 09:17:57.821
    W0309 09:17:57.834618      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Mar  9 09:17:57.843: INFO: Found 1 stateful pods, waiting for 2
    Mar  9 09:18:07.851: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Mar  9 09:18:07.851: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Listing all StatefulSets 03/09/23 09:18:07.86
    STEP: Delete all of the StatefulSets 03/09/23 09:18:07.864
    STEP: Verify that StatefulSets have been deleted 03/09/23 09:18:07.882
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar  9 09:18:07.886: INFO: Deleting all statefulset in ns statefulset-7879
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:18:07.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-7879" for this suite. 03/09/23 09:18:07.908
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
[BeforeEach] [sig-network] IngressClass API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:18:07.932
Mar  9 09:18:07.933: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename ingressclass 03/09/23 09:18:07.935
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:07.951
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:07.955
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:211
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
STEP: getting /apis 03/09/23 09:18:07.961
STEP: getting /apis/networking.k8s.io 03/09/23 09:18:07.965
STEP: getting /apis/networking.k8s.iov1 03/09/23 09:18:07.967
STEP: creating 03/09/23 09:18:07.969
STEP: getting 03/09/23 09:18:07.988
STEP: listing 03/09/23 09:18:08.001
STEP: watching 03/09/23 09:18:08.006
Mar  9 09:18:08.006: INFO: starting watch
STEP: patching 03/09/23 09:18:08.008
STEP: updating 03/09/23 09:18:08.014
Mar  9 09:18:08.020: INFO: waiting for watch events with expected annotations
Mar  9 09:18:08.020: INFO: saw patched and updated annotations
STEP: deleting 03/09/23 09:18:08.02
STEP: deleting a collection 03/09/23 09:18:08.033
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/node/init/init.go:32
Mar  9 09:18:08.048: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] IngressClass API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] IngressClass API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingressclass-1479" for this suite. 03/09/23 09:18:08.053
------------------------------
â€¢ [0.128 seconds]
[sig-network] IngressClass API
test/e2e/network/common/framework.go:23
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] IngressClass API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:18:07.932
    Mar  9 09:18:07.933: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename ingressclass 03/09/23 09:18:07.935
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:07.951
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:07.955
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/network/ingressclass.go:211
    [It]  should support creating IngressClass API operations [Conformance]
      test/e2e/network/ingressclass.go:223
    STEP: getting /apis 03/09/23 09:18:07.961
    STEP: getting /apis/networking.k8s.io 03/09/23 09:18:07.965
    STEP: getting /apis/networking.k8s.iov1 03/09/23 09:18:07.967
    STEP: creating 03/09/23 09:18:07.969
    STEP: getting 03/09/23 09:18:07.988
    STEP: listing 03/09/23 09:18:08.001
    STEP: watching 03/09/23 09:18:08.006
    Mar  9 09:18:08.006: INFO: starting watch
    STEP: patching 03/09/23 09:18:08.008
    STEP: updating 03/09/23 09:18:08.014
    Mar  9 09:18:08.020: INFO: waiting for watch events with expected annotations
    Mar  9 09:18:08.020: INFO: saw patched and updated annotations
    STEP: deleting 03/09/23 09:18:08.02
    STEP: deleting a collection 03/09/23 09:18:08.033
    [AfterEach] [sig-network] IngressClass API
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:18:08.048: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] IngressClass API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] IngressClass API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingressclass-1479" for this suite. 03/09/23 09:18:08.053
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose
  should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:18:08.061
Mar  9 09:18:08.061: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubectl 03/09/23 09:18:08.062
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:08.085
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:08.089
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
STEP: creating Agnhost RC 03/09/23 09:18:08.094
Mar  9 09:18:08.094: INFO: namespace kubectl-8437
Mar  9 09:18:08.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8437 create -f -'
Mar  9 09:18:08.609: INFO: stderr: ""
Mar  9 09:18:08.609: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 03/09/23 09:18:08.609
Mar  9 09:18:09.619: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:18:09.619: INFO: Found 0 / 1
Mar  9 09:18:10.614: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:18:10.614: INFO: Found 1 / 1
Mar  9 09:18:10.614: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Mar  9 09:18:10.619: INFO: Selector matched 1 pods for map[app:agnhost]
Mar  9 09:18:10.619: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Mar  9 09:18:10.619: INFO: wait on agnhost-primary startup in kubectl-8437 
Mar  9 09:18:10.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8437 logs agnhost-primary-zmlpn agnhost-primary'
Mar  9 09:18:10.816: INFO: stderr: ""
Mar  9 09:18:10.816: INFO: stdout: "Paused\n"
STEP: exposing RC 03/09/23 09:18:10.816
Mar  9 09:18:10.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8437 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Mar  9 09:18:11.000: INFO: stderr: ""
Mar  9 09:18:11.000: INFO: stdout: "service/rm2 exposed\n"
Mar  9 09:18:11.004: INFO: Service rm2 in namespace kubectl-8437 found.
STEP: exposing service 03/09/23 09:18:13.012
Mar  9 09:18:13.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8437 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Mar  9 09:18:13.215: INFO: stderr: ""
Mar  9 09:18:13.215: INFO: stdout: "service/rm3 exposed\n"
Mar  9 09:18:13.220: INFO: Service rm3 in namespace kubectl-8437 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Mar  9 09:18:15.230: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8437" for this suite. 03/09/23 09:18:15.236
------------------------------
â€¢ [SLOW TEST] [7.182 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1409
    should create services for rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1415

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:18:08.061
    Mar  9 09:18:08.061: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubectl 03/09/23 09:18:08.062
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:08.085
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:08.089
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create services for rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1415
    STEP: creating Agnhost RC 03/09/23 09:18:08.094
    Mar  9 09:18:08.094: INFO: namespace kubectl-8437
    Mar  9 09:18:08.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8437 create -f -'
    Mar  9 09:18:08.609: INFO: stderr: ""
    Mar  9 09:18:08.609: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 03/09/23 09:18:08.609
    Mar  9 09:18:09.619: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:18:09.619: INFO: Found 0 / 1
    Mar  9 09:18:10.614: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:18:10.614: INFO: Found 1 / 1
    Mar  9 09:18:10.614: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Mar  9 09:18:10.619: INFO: Selector matched 1 pods for map[app:agnhost]
    Mar  9 09:18:10.619: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Mar  9 09:18:10.619: INFO: wait on agnhost-primary startup in kubectl-8437 
    Mar  9 09:18:10.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8437 logs agnhost-primary-zmlpn agnhost-primary'
    Mar  9 09:18:10.816: INFO: stderr: ""
    Mar  9 09:18:10.816: INFO: stdout: "Paused\n"
    STEP: exposing RC 03/09/23 09:18:10.816
    Mar  9 09:18:10.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8437 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
    Mar  9 09:18:11.000: INFO: stderr: ""
    Mar  9 09:18:11.000: INFO: stdout: "service/rm2 exposed\n"
    Mar  9 09:18:11.004: INFO: Service rm2 in namespace kubectl-8437 found.
    STEP: exposing service 03/09/23 09:18:13.012
    Mar  9 09:18:13.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=kubectl-8437 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
    Mar  9 09:18:13.215: INFO: stderr: ""
    Mar  9 09:18:13.215: INFO: stdout: "service/rm3 exposed\n"
    Mar  9 09:18:13.220: INFO: Service rm3 in namespace kubectl-8437 found.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:18:15.230: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8437" for this suite. 03/09/23 09:18:15.236
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:18:15.246
Mar  9 09:18:15.246: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename security-context-test 03/09/23 09:18:15.248
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:15.264
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:15.269
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
Mar  9 09:18:15.295: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca" in namespace "security-context-test-7399" to be "Succeeded or Failed"
Mar  9 09:18:15.299: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Pending", Reason="", readiness=false. Elapsed: 4.693795ms
Mar  9 09:18:17.304: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009725974s
Mar  9 09:18:19.305: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009819866s
Mar  9 09:18:21.304: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Pending", Reason="", readiness=false. Elapsed: 6.009426822s
Mar  9 09:18:23.305: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.010596105s
Mar  9 09:18:23.305: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar  9 09:18:23.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-7399" for this suite. 03/09/23 09:18:23.32
------------------------------
â€¢ [SLOW TEST] [8.083 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:555
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:609

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:18:15.246
    Mar  9 09:18:15.246: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename security-context-test 03/09/23 09:18:15.248
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:15.264
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:15.269
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:609
    Mar  9 09:18:15.295: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca" in namespace "security-context-test-7399" to be "Succeeded or Failed"
    Mar  9 09:18:15.299: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Pending", Reason="", readiness=false. Elapsed: 4.693795ms
    Mar  9 09:18:17.304: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009725974s
    Mar  9 09:18:19.305: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009819866s
    Mar  9 09:18:21.304: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Pending", Reason="", readiness=false. Elapsed: 6.009426822s
    Mar  9 09:18:23.305: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.010596105s
    Mar  9 09:18:23.305: INFO: Pod "alpine-nnp-false-3b4dc18a-64bc-4362-b5c7-033e8c2a77ca" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:18:23.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-7399" for this suite. 03/09/23 09:18:23.32
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:18:23.331
Mar  9 09:18:23.331: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename deployment 03/09/23 09:18:23.333
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:23.348
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:23.353
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
Mar  9 09:18:23.369: INFO: Pod name rollover-pod: Found 0 pods out of 1
Mar  9 09:18:28.378: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 03/09/23 09:18:28.378
Mar  9 09:18:28.378: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Mar  9 09:18:30.382: INFO: Creating deployment "test-rollover-deployment"
Mar  9 09:18:30.394: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Mar  9 09:18:32.402: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Mar  9 09:18:32.411: INFO: Ensure that both replica sets have 1 created replica
Mar  9 09:18:32.419: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Mar  9 09:18:32.432: INFO: Updating deployment test-rollover-deployment
Mar  9 09:18:32.432: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Mar  9 09:18:34.444: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Mar  9 09:18:34.452: INFO: Make sure deployment "test-rollover-deployment" is complete
Mar  9 09:18:34.460: INFO: all replica sets need to contain the pod-template-hash label
Mar  9 09:18:34.460: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 09:18:36.469: INFO: all replica sets need to contain the pod-template-hash label
Mar  9 09:18:36.469: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 09:18:38.471: INFO: all replica sets need to contain the pod-template-hash label
Mar  9 09:18:38.471: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 09:18:40.471: INFO: all replica sets need to contain the pod-template-hash label
Mar  9 09:18:40.471: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 09:18:42.470: INFO: all replica sets need to contain the pod-template-hash label
Mar  9 09:18:42.470: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 09:18:44.469: INFO: all replica sets need to contain the pod-template-hash label
Mar  9 09:18:44.469: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Mar  9 09:18:46.470: INFO: 
Mar  9 09:18:46.470: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar  9 09:18:46.482: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-3155  a17e8a1c-95ef-48d6-b769-06955dd7ef13 279294 2 2023-03-09 09:18:30 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc005e1dda8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-09 09:18:30 +0000 UTC,LastTransitionTime:2023-03-09 09:18:30 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-03-09 09:18:44 +0000 UTC,LastTransitionTime:2023-03-09 09:18:30 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Mar  9 09:18:46.487: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-3155  cbfa6c26-a27e-49b6-8110-4aee44b65202 279284 2 2023-03-09 09:18:32 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment a17e8a1c-95ef-48d6-b769-06955dd7ef13 0xc00514c277 0xc00514c278}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17e8a1c-95ef-48d6-b769-06955dd7ef13\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:44 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00514c328 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Mar  9 09:18:46.487: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Mar  9 09:18:46.487: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-3155  dc0ffc1d-1e47-4c52-b9a6-7020ecd10223 279293 2 2023-03-09 09:18:23 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment a17e8a1c-95ef-48d6-b769-06955dd7ef13 0xc00514c147 0xc00514c148}] [] [{e2e.test Update apps/v1 2023-03-09 09:18:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17e8a1c-95ef-48d6-b769-06955dd7ef13\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:44 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00514c208 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar  9 09:18:46.487: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-3155  12c74b02-1637-4e3a-a425-0fdd46e02e92 279240 2 2023-03-09 09:18:30 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment a17e8a1c-95ef-48d6-b769-06955dd7ef13 0xc00514c397 0xc00514c398}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17e8a1c-95ef-48d6-b769-06955dd7ef13\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00514c448 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Mar  9 09:18:46.492: INFO: Pod "test-rollover-deployment-6c6df9974f-bcc99" is available:
&Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-bcc99 test-rollover-deployment-6c6df9974f- deployment-3155  0d2b04ec-6a70-44ea-b1e9-2ccea4a08427 279263 0 2023-03-09 09:18:32 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[cni.projectcalico.org/containerID:f667e9eedfa4eef913a3690265ef1bb3d0a14b54671345122e74b28140ea5e38 cni.projectcalico.org/podIP:172.16.0.74/32 cni.projectcalico.org/podIPs:172.16.0.74/32] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f cbfa6c26-a27e-49b6-8110-4aee44b65202 0xc005901207 0xc005901208}] [] [{kube-controller-manager Update v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cbfa6c26-a27e-49b6-8110-4aee44b65202\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 09:18:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 09:18:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7hdcz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7hdcz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:18:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:18:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:18:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.74,StartTime:2023-03-09 09:18:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:18:32 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://46b587dee87336d453e70f5a7c213bb6bb7f965040e4149b5d95faac7f7995a8,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.74,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar  9 09:18:46.492: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-3155" for this suite. 03/09/23 09:18:46.498
------------------------------
â€¢ [SLOW TEST] [23.176 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:18:23.331
    Mar  9 09:18:23.331: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename deployment 03/09/23 09:18:23.333
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:23.348
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:23.353
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support rollover [Conformance]
      test/e2e/apps/deployment.go:132
    Mar  9 09:18:23.369: INFO: Pod name rollover-pod: Found 0 pods out of 1
    Mar  9 09:18:28.378: INFO: Pod name rollover-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 03/09/23 09:18:28.378
    Mar  9 09:18:28.378: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
    Mar  9 09:18:30.382: INFO: Creating deployment "test-rollover-deployment"
    Mar  9 09:18:30.394: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
    Mar  9 09:18:32.402: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
    Mar  9 09:18:32.411: INFO: Ensure that both replica sets have 1 created replica
    Mar  9 09:18:32.419: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
    Mar  9 09:18:32.432: INFO: Updating deployment test-rollover-deployment
    Mar  9 09:18:32.432: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
    Mar  9 09:18:34.444: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
    Mar  9 09:18:34.452: INFO: Make sure deployment "test-rollover-deployment" is complete
    Mar  9 09:18:34.460: INFO: all replica sets need to contain the pod-template-hash label
    Mar  9 09:18:34.460: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 09:18:36.469: INFO: all replica sets need to contain the pod-template-hash label
    Mar  9 09:18:36.469: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 09:18:38.471: INFO: all replica sets need to contain the pod-template-hash label
    Mar  9 09:18:38.471: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 09:18:40.471: INFO: all replica sets need to contain the pod-template-hash label
    Mar  9 09:18:40.471: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 09:18:42.470: INFO: all replica sets need to contain the pod-template-hash label
    Mar  9 09:18:42.470: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 09:18:44.469: INFO: all replica sets need to contain the pod-template-hash label
    Mar  9 09:18:44.469: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.March, 9, 9, 18, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.March, 9, 9, 18, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Mar  9 09:18:46.470: INFO: 
    Mar  9 09:18:46.470: INFO: Ensure that both old replica sets have no replicas
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar  9 09:18:46.482: INFO: Deployment "test-rollover-deployment":
    &Deployment{ObjectMeta:{test-rollover-deployment  deployment-3155  a17e8a1c-95ef-48d6-b769-06955dd7ef13 279294 2 2023-03-09 09:18:30 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc005e1dda8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-03-09 09:18:30 +0000 UTC,LastTransitionTime:2023-03-09 09:18:30 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-03-09 09:18:44 +0000 UTC,LastTransitionTime:2023-03-09 09:18:30 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Mar  9 09:18:46.487: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
    &ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-3155  cbfa6c26-a27e-49b6-8110-4aee44b65202 279284 2 2023-03-09 09:18:32 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment a17e8a1c-95ef-48d6-b769-06955dd7ef13 0xc00514c277 0xc00514c278}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17e8a1c-95ef-48d6-b769-06955dd7ef13\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:44 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00514c328 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 09:18:46.487: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
    Mar  9 09:18:46.487: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-3155  dc0ffc1d-1e47-4c52-b9a6-7020ecd10223 279293 2 2023-03-09 09:18:23 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment a17e8a1c-95ef-48d6-b769-06955dd7ef13 0xc00514c147 0xc00514c148}] [] [{e2e.test Update apps/v1 2023-03-09 09:18:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17e8a1c-95ef-48d6-b769-06955dd7ef13\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:44 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00514c208 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 09:18:46.487: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-3155  12c74b02-1637-4e3a-a425-0fdd46e02e92 279240 2 2023-03-09 09:18:30 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment a17e8a1c-95ef-48d6-b769-06955dd7ef13 0xc00514c397 0xc00514c398}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17e8a1c-95ef-48d6-b769-06955dd7ef13\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00514c448 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Mar  9 09:18:46.492: INFO: Pod "test-rollover-deployment-6c6df9974f-bcc99" is available:
    &Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-bcc99 test-rollover-deployment-6c6df9974f- deployment-3155  0d2b04ec-6a70-44ea-b1e9-2ccea4a08427 279263 0 2023-03-09 09:18:32 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[cni.projectcalico.org/containerID:f667e9eedfa4eef913a3690265ef1bb3d0a14b54671345122e74b28140ea5e38 cni.projectcalico.org/podIP:172.16.0.74/32 cni.projectcalico.org/podIPs:172.16.0.74/32] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f cbfa6c26-a27e-49b6-8110-4aee44b65202 0xc005901207 0xc005901208}] [] [{kube-controller-manager Update v1 2023-03-09 09:18:32 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cbfa6c26-a27e-49b6-8110-4aee44b65202\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 09:18:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 09:18:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7hdcz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7hdcz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:18:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:18:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:18:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:18:32 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.74,StartTime:2023-03-09 09:18:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:18:32 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://46b587dee87336d453e70f5a7c213bb6bb7f965040e4149b5d95faac7f7995a8,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.74,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:18:46.492: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-3155" for this suite. 03/09/23 09:18:46.498
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:18:46.508
Mar  9 09:18:46.508: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 09:18:46.51
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:46.526
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:46.531
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
STEP: Creating a pod to test downward api env vars 03/09/23 09:18:46.536
Mar  9 09:18:46.546: INFO: Waiting up to 5m0s for pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1" in namespace "downward-api-4251" to be "Succeeded or Failed"
Mar  9 09:18:46.550: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.160678ms
Mar  9 09:18:48.557: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01046506s
Mar  9 09:18:50.555: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008931004s
Mar  9 09:18:52.556: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009541061s
STEP: Saw pod success 03/09/23 09:18:52.556
Mar  9 09:18:52.556: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1" satisfied condition "Succeeded or Failed"
Mar  9 09:18:52.559: INFO: Trying to get logs from node k8s-worker1 pod downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1 container dapi-container: <nil>
STEP: delete the pod 03/09/23 09:18:52.568
Mar  9 09:18:52.582: INFO: Waiting for pod downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1 to disappear
Mar  9 09:18:52.585: INFO: Pod downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Mar  9 09:18:52.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-4251" for this suite. 03/09/23 09:18:52.59
------------------------------
â€¢ [SLOW TEST] [6.089 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:18:46.508
    Mar  9 09:18:46.508: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 09:18:46.51
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:46.526
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:46.531
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide host IP as an env var [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:90
    STEP: Creating a pod to test downward api env vars 03/09/23 09:18:46.536
    Mar  9 09:18:46.546: INFO: Waiting up to 5m0s for pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1" in namespace "downward-api-4251" to be "Succeeded or Failed"
    Mar  9 09:18:46.550: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.160678ms
    Mar  9 09:18:48.557: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01046506s
    Mar  9 09:18:50.555: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1": Phase="Pending", Reason="", readiness=false. Elapsed: 4.008931004s
    Mar  9 09:18:52.556: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009541061s
    STEP: Saw pod success 03/09/23 09:18:52.556
    Mar  9 09:18:52.556: INFO: Pod "downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1" satisfied condition "Succeeded or Failed"
    Mar  9 09:18:52.559: INFO: Trying to get logs from node k8s-worker1 pod downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1 container dapi-container: <nil>
    STEP: delete the pod 03/09/23 09:18:52.568
    Mar  9 09:18:52.582: INFO: Waiting for pod downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1 to disappear
    Mar  9 09:18:52.585: INFO: Pod downward-api-d7ee2cd6-e76f-4e1a-a213-a7c42edffdb1 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:18:52.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-4251" for this suite. 03/09/23 09:18:52.59
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases
  should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:18:52.599
Mar  9 09:18:52.599: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename kubelet-test 03/09/23 09:18:52.6
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:52.616
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:52.62
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
STEP: Waiting for pod completion 03/09/23 09:18:52.635
Mar  9 09:18:52.635: INFO: Waiting up to 3m0s for pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e" in namespace "kubelet-test-992" to be "completed"
Mar  9 09:18:52.639: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.636642ms
Mar  9 09:18:54.644: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008416569s
Mar  9 09:18:56.645: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009365106s
Mar  9 09:18:58.645: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009708088s
Mar  9 09:18:58.645: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e" satisfied condition "completed"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Mar  9 09:18:58.654: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-992" for this suite. 03/09/23 09:18:58.66
------------------------------
â€¢ [SLOW TEST] [6.069 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling an agnhost Pod with hostAliases
  test/e2e/common/node/kubelet.go:140
    should write entries to /etc/hosts [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:148

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:18:52.599
    Mar  9 09:18:52.599: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename kubelet-test 03/09/23 09:18:52.6
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:52.616
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:52.62
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should write entries to /etc/hosts [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:148
    STEP: Waiting for pod completion 03/09/23 09:18:52.635
    Mar  9 09:18:52.635: INFO: Waiting up to 3m0s for pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e" in namespace "kubelet-test-992" to be "completed"
    Mar  9 09:18:52.639: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.636642ms
    Mar  9 09:18:54.644: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008416569s
    Mar  9 09:18:56.645: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009365106s
    Mar  9 09:18:58.645: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009708088s
    Mar  9 09:18:58.645: INFO: Pod "agnhost-host-aliases08be9d46-b8a9-48a0-9af1-e9f4c68db90e" satisfied condition "completed"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:18:58.654: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-992" for this suite. 03/09/23 09:18:58.66
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:18:58.672
Mar  9 09:18:58.672: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 09:18:58.673
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:58.69
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:58.697
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
STEP: Creating secret with name secret-test-0c7ed2d9-b69f-43b2-b255-5a30db56f2da 03/09/23 09:18:58.702
STEP: Creating a pod to test consume secrets 03/09/23 09:18:58.709
Mar  9 09:18:58.722: INFO: Waiting up to 5m0s for pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46" in namespace "secrets-6529" to be "Succeeded or Failed"
Mar  9 09:18:58.726: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46": Phase="Pending", Reason="", readiness=false. Elapsed: 4.467326ms
Mar  9 09:19:00.732: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010124737s
Mar  9 09:19:02.732: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009972299s
Mar  9 09:19:04.731: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009734298s
STEP: Saw pod success 03/09/23 09:19:04.731
Mar  9 09:19:04.731: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46" satisfied condition "Succeeded or Failed"
Mar  9 09:19:04.735: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46 container secret-volume-test: <nil>
STEP: delete the pod 03/09/23 09:19:04.744
Mar  9 09:19:04.760: INFO: Waiting for pod pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46 to disappear
Mar  9 09:19:04.765: INFO: Pod pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 09:19:04.765: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-6529" for this suite. 03/09/23 09:19:04.772
------------------------------
â€¢ [SLOW TEST] [6.108 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:18:58.672
    Mar  9 09:18:58.672: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 09:18:58.673
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:18:58.69
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:18:58.697
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:125
    STEP: Creating secret with name secret-test-0c7ed2d9-b69f-43b2-b255-5a30db56f2da 03/09/23 09:18:58.702
    STEP: Creating a pod to test consume secrets 03/09/23 09:18:58.709
    Mar  9 09:18:58.722: INFO: Waiting up to 5m0s for pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46" in namespace "secrets-6529" to be "Succeeded or Failed"
    Mar  9 09:18:58.726: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46": Phase="Pending", Reason="", readiness=false. Elapsed: 4.467326ms
    Mar  9 09:19:00.732: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010124737s
    Mar  9 09:19:02.732: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009972299s
    Mar  9 09:19:04.731: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009734298s
    STEP: Saw pod success 03/09/23 09:19:04.731
    Mar  9 09:19:04.731: INFO: Pod "pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46" satisfied condition "Succeeded or Failed"
    Mar  9 09:19:04.735: INFO: Trying to get logs from node k8s-worker1 pod pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46 container secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 09:19:04.744
    Mar  9 09:19:04.760: INFO: Waiting for pod pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46 to disappear
    Mar  9 09:19:04.765: INFO: Pod pod-secrets-795b9149-6e69-45c1-8972-d098e56c9b46 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:19:04.765: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-6529" for this suite. 03/09/23 09:19:04.772
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:19:04.783
Mar  9 09:19:04.783: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 09:19:04.784
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:04.8
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:04.805
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
Mar  9 09:19:04.810: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:19:11.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-3649" for this suite. 03/09/23 09:19:11.19
------------------------------
â€¢ [SLOW TEST] [6.416 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:85

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:19:04.783
    Mar  9 09:19:04.783: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename custom-resource-definition 03/09/23 09:19:04.784
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:04.8
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:04.805
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] listing custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:85
    Mar  9 09:19:04.810: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:19:11.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-3649" for this suite. 03/09/23 09:19:11.19
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:19:11.202
Mar  9 09:19:11.202: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 09:19:11.204
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:11.23
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:11.235
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
STEP: creating service endpoint-test2 in namespace services-973 03/09/23 09:19:11.241
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[] 03/09/23 09:19:11.259
Mar  9 09:19:11.264: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Mar  9 09:19:12.275: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-973 03/09/23 09:19:12.275
Mar  9 09:19:12.287: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-973" to be "running and ready"
Mar  9 09:19:12.291: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.913354ms
Mar  9 09:19:12.291: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:19:14.295: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.008605281s
Mar  9 09:19:14.295: INFO: The phase of Pod pod1 is Running (Ready = true)
Mar  9 09:19:14.295: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[pod1:[80]] 03/09/23 09:19:14.299
Mar  9 09:19:14.312: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1 03/09/23 09:19:14.312
Mar  9 09:19:14.312: INFO: Creating new exec pod
Mar  9 09:19:14.320: INFO: Waiting up to 5m0s for pod "execpodw8qqk" in namespace "services-973" to be "running"
Mar  9 09:19:14.324: INFO: Pod "execpodw8qqk": Phase="Pending", Reason="", readiness=false. Elapsed: 4.138805ms
Mar  9 09:19:16.330: INFO: Pod "execpodw8qqk": Phase="Running", Reason="", readiness=true. Elapsed: 2.009589061s
Mar  9 09:19:16.330: INFO: Pod "execpodw8qqk" satisfied condition "running"
Mar  9 09:19:17.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Mar  9 09:19:17.620: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Mar  9 09:19:17.620: INFO: stdout: ""
Mar  9 09:19:17.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 10.109.121.146 80'
Mar  9 09:19:17.880: INFO: stderr: "+ nc -v -z -w 2 10.109.121.146 80\nConnection to 10.109.121.146 80 port [tcp/http] succeeded!\n"
Mar  9 09:19:17.880: INFO: stdout: ""
STEP: Creating pod pod2 in namespace services-973 03/09/23 09:19:17.88
Mar  9 09:19:17.889: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-973" to be "running and ready"
Mar  9 09:19:17.895: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.215034ms
Mar  9 09:19:17.895: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:19:19.900: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.010791934s
Mar  9 09:19:19.900: INFO: The phase of Pod pod2 is Running (Ready = true)
Mar  9 09:19:19.900: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[pod1:[80] pod2:[80]] 03/09/23 09:19:19.903
Mar  9 09:19:19.920: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2 03/09/23 09:19:19.92
Mar  9 09:19:20.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Mar  9 09:19:21.201: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Mar  9 09:19:21.201: INFO: stdout: ""
Mar  9 09:19:21.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 10.109.121.146 80'
Mar  9 09:19:21.477: INFO: stderr: "+ nc -v -z -w 2 10.109.121.146 80\nConnection to 10.109.121.146 80 port [tcp/http] succeeded!\n"
Mar  9 09:19:21.477: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-973 03/09/23 09:19:21.478
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[pod2:[80]] 03/09/23 09:19:21.496
Mar  9 09:19:21.511: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2 03/09/23 09:19:21.512
Mar  9 09:19:22.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Mar  9 09:19:22.786: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Mar  9 09:19:22.786: INFO: stdout: ""
Mar  9 09:19:22.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 10.109.121.146 80'
Mar  9 09:19:23.070: INFO: stderr: "+ nc -v -z -w 2 10.109.121.146 80\nConnection to 10.109.121.146 80 port [tcp/http] succeeded!\n"
Mar  9 09:19:23.070: INFO: stdout: ""
STEP: Deleting pod pod2 in namespace services-973 03/09/23 09:19:23.07
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[] 03/09/23 09:19:23.086
Mar  9 09:19:25.102: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 09:19:25.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-973" for this suite. 03/09/23 09:19:25.136
------------------------------
â€¢ [SLOW TEST] [13.940 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:19:11.202
    Mar  9 09:19:11.202: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 09:19:11.204
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:11.23
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:11.235
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve a basic endpoint from pods  [Conformance]
      test/e2e/network/service.go:787
    STEP: creating service endpoint-test2 in namespace services-973 03/09/23 09:19:11.241
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[] 03/09/23 09:19:11.259
    Mar  9 09:19:11.264: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
    Mar  9 09:19:12.275: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-973 03/09/23 09:19:12.275
    Mar  9 09:19:12.287: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-973" to be "running and ready"
    Mar  9 09:19:12.291: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.913354ms
    Mar  9 09:19:12.291: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:19:14.295: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.008605281s
    Mar  9 09:19:14.295: INFO: The phase of Pod pod1 is Running (Ready = true)
    Mar  9 09:19:14.295: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[pod1:[80]] 03/09/23 09:19:14.299
    Mar  9 09:19:14.312: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[pod1:[80]]
    STEP: Checking if the Service forwards traffic to pod1 03/09/23 09:19:14.312
    Mar  9 09:19:14.312: INFO: Creating new exec pod
    Mar  9 09:19:14.320: INFO: Waiting up to 5m0s for pod "execpodw8qqk" in namespace "services-973" to be "running"
    Mar  9 09:19:14.324: INFO: Pod "execpodw8qqk": Phase="Pending", Reason="", readiness=false. Elapsed: 4.138805ms
    Mar  9 09:19:16.330: INFO: Pod "execpodw8qqk": Phase="Running", Reason="", readiness=true. Elapsed: 2.009589061s
    Mar  9 09:19:16.330: INFO: Pod "execpodw8qqk" satisfied condition "running"
    Mar  9 09:19:17.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Mar  9 09:19:17.620: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Mar  9 09:19:17.620: INFO: stdout: ""
    Mar  9 09:19:17.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 10.109.121.146 80'
    Mar  9 09:19:17.880: INFO: stderr: "+ nc -v -z -w 2 10.109.121.146 80\nConnection to 10.109.121.146 80 port [tcp/http] succeeded!\n"
    Mar  9 09:19:17.880: INFO: stdout: ""
    STEP: Creating pod pod2 in namespace services-973 03/09/23 09:19:17.88
    Mar  9 09:19:17.889: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-973" to be "running and ready"
    Mar  9 09:19:17.895: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 6.215034ms
    Mar  9 09:19:17.895: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:19:19.900: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.010791934s
    Mar  9 09:19:19.900: INFO: The phase of Pod pod2 is Running (Ready = true)
    Mar  9 09:19:19.900: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[pod1:[80] pod2:[80]] 03/09/23 09:19:19.903
    Mar  9 09:19:19.920: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[pod1:[80] pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod1 and pod2 03/09/23 09:19:19.92
    Mar  9 09:19:20.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Mar  9 09:19:21.201: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Mar  9 09:19:21.201: INFO: stdout: ""
    Mar  9 09:19:21.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 10.109.121.146 80'
    Mar  9 09:19:21.477: INFO: stderr: "+ nc -v -z -w 2 10.109.121.146 80\nConnection to 10.109.121.146 80 port [tcp/http] succeeded!\n"
    Mar  9 09:19:21.477: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-973 03/09/23 09:19:21.478
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[pod2:[80]] 03/09/23 09:19:21.496
    Mar  9 09:19:21.511: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod2 03/09/23 09:19:21.512
    Mar  9 09:19:22.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Mar  9 09:19:22.786: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Mar  9 09:19:22.786: INFO: stdout: ""
    Mar  9 09:19:22.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-973 exec execpodw8qqk -- /bin/sh -x -c nc -v -z -w 2 10.109.121.146 80'
    Mar  9 09:19:23.070: INFO: stderr: "+ nc -v -z -w 2 10.109.121.146 80\nConnection to 10.109.121.146 80 port [tcp/http] succeeded!\n"
    Mar  9 09:19:23.070: INFO: stdout: ""
    STEP: Deleting pod pod2 in namespace services-973 03/09/23 09:19:23.07
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-973 to expose endpoints map[] 03/09/23 09:19:23.086
    Mar  9 09:19:25.102: INFO: successfully validated that service endpoint-test2 in namespace services-973 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:19:25.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-973" for this suite. 03/09/23 09:19:25.136
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:19:25.143
Mar  9 09:19:25.144: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 09:19:25.145
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:25.162
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:25.166
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
STEP: Creating the pod 03/09/23 09:19:25.171
Mar  9 09:19:25.181: INFO: Waiting up to 5m0s for pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333" in namespace "downward-api-7227" to be "running and ready"
Mar  9 09:19:25.185: INFO: Pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333": Phase="Pending", Reason="", readiness=false. Elapsed: 3.82632ms
Mar  9 09:19:25.185: INFO: The phase of Pod annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:19:27.190: INFO: Pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333": Phase="Running", Reason="", readiness=true. Elapsed: 2.008419783s
Mar  9 09:19:27.190: INFO: The phase of Pod annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333 is Running (Ready = true)
Mar  9 09:19:27.190: INFO: Pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333" satisfied condition "running and ready"
Mar  9 09:19:27.720: INFO: Successfully updated pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 09:19:29.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-7227" for this suite. 03/09/23 09:19:29.743
------------------------------
â€¢ [4.608 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:19:25.143
    Mar  9 09:19:25.144: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 09:19:25.145
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:25.162
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:25.166
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:162
    STEP: Creating the pod 03/09/23 09:19:25.171
    Mar  9 09:19:25.181: INFO: Waiting up to 5m0s for pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333" in namespace "downward-api-7227" to be "running and ready"
    Mar  9 09:19:25.185: INFO: Pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333": Phase="Pending", Reason="", readiness=false. Elapsed: 3.82632ms
    Mar  9 09:19:25.185: INFO: The phase of Pod annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:19:27.190: INFO: Pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333": Phase="Running", Reason="", readiness=true. Elapsed: 2.008419783s
    Mar  9 09:19:27.190: INFO: The phase of Pod annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333 is Running (Ready = true)
    Mar  9 09:19:27.190: INFO: Pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333" satisfied condition "running and ready"
    Mar  9 09:19:27.720: INFO: Successfully updated pod "annotationupdate805d8b27-7118-47cb-8f1d-b639bd182333"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:19:29.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-7227" for this suite. 03/09/23 09:19:29.743
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:19:29.753
Mar  9 09:19:29.753: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename proxy 03/09/23 09:19:29.754
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:29.77
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:29.774
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
STEP: starting an echo server on multiple ports 03/09/23 09:19:29.799
STEP: creating replication controller proxy-service-swkpc in namespace proxy-7411 03/09/23 09:19:29.799
I0309 09:19:29.810469      23 runners.go:193] Created replication controller with name: proxy-service-swkpc, namespace: proxy-7411, replica count: 1
I0309 09:19:30.861793      23 runners.go:193] proxy-service-swkpc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0309 09:19:31.862962      23 runners.go:193] proxy-service-swkpc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Mar  9 09:19:31.871: INFO: setup took 2.093015852s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts 03/09/23 09:19:31.871
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 12.65819ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 12.62991ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 12.923776ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 12.677681ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 13.374624ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 13.019686ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 12.938449ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 12.940679ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 13.220407ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 13.203831ms)
Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 13.14963ms)
Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 26.053827ms)
Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 26.342495ms)
Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 26.411255ms)
Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 26.880908ms)
Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 27.102485ms)
Mar  9 09:19:31.908: INFO: (1) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.140849ms)
Mar  9 09:19:31.908: INFO: (1) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 8.443528ms)
Mar  9 09:19:31.909: INFO: (1) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.207493ms)
Mar  9 09:19:31.909: INFO: (1) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.799768ms)
Mar  9 09:19:31.909: INFO: (1) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.454068ms)
Mar  9 09:19:31.909: INFO: (1) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 10.112725ms)
Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.839339ms)
Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.91242ms)
Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 10.187484ms)
Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 9.926879ms)
Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.504442ms)
Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.357356ms)
Mar  9 09:19:31.911: INFO: (1) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 11.07436ms)
Mar  9 09:19:31.911: INFO: (1) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 11.13249ms)
Mar  9 09:19:31.911: INFO: (1) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.404598ms)
Mar  9 09:19:31.911: INFO: (1) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 11.841787ms)
Mar  9 09:19:31.921: INFO: (2) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 9.887666ms)
Mar  9 09:19:31.921: INFO: (2) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.784827ms)
Mar  9 09:19:31.921: INFO: (2) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 9.635159ms)
Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 10.117665ms)
Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.573085ms)
Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.181268ms)
Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 10.127392ms)
Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 10.424483ms)
Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.750486ms)
Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.682015ms)
Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 10.596248ms)
Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 11.357546ms)
Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 11.233249ms)
Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 11.472012ms)
Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 11.542589ms)
Mar  9 09:19:31.924: INFO: (2) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.484508ms)
Mar  9 09:19:31.929: INFO: (3) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 5.357258ms)
Mar  9 09:19:31.929: INFO: (3) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 5.895631ms)
Mar  9 09:19:31.933: INFO: (3) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.846911ms)
Mar  9 09:19:31.933: INFO: (3) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.813854ms)
Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.70755ms)
Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.248455ms)
Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 9.919199ms)
Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 10.02839ms)
Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.305123ms)
Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 10.282529ms)
Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 10.216618ms)
Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 10.684463ms)
Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.857396ms)
Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.693806ms)
Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 10.927102ms)
Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 10.532888ms)
Mar  9 09:19:31.941: INFO: (4) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 5.982438ms)
Mar  9 09:19:31.944: INFO: (4) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.182373ms)
Mar  9 09:19:31.944: INFO: (4) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.008252ms)
Mar  9 09:19:31.944: INFO: (4) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.879465ms)
Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.227389ms)
Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 10.040066ms)
Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.748555ms)
Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.026993ms)
Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 9.882057ms)
Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.802107ms)
Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 10.13246ms)
Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.316506ms)
Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 11.054245ms)
Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.342621ms)
Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 11.207467ms)
Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 11.230505ms)
Mar  9 09:19:31.954: INFO: (5) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 6.62849ms)
Mar  9 09:19:31.954: INFO: (5) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 7.508674ms)
Mar  9 09:19:31.954: INFO: (5) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.493789ms)
Mar  9 09:19:31.955: INFO: (5) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.768345ms)
Mar  9 09:19:31.955: INFO: (5) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.481069ms)
Mar  9 09:19:31.956: INFO: (5) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.168493ms)
Mar  9 09:19:31.956: INFO: (5) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.960883ms)
Mar  9 09:19:31.956: INFO: (5) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 9.186007ms)
Mar  9 09:19:31.956: INFO: (5) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.053502ms)
Mar  9 09:19:31.957: INFO: (5) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.742849ms)
Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.929862ms)
Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.91997ms)
Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 11.875704ms)
Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 11.67757ms)
Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 11.735923ms)
Mar  9 09:19:31.959: INFO: (5) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.630678ms)
Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.193084ms)
Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 7.819019ms)
Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 7.876391ms)
Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 8.311467ms)
Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.299769ms)
Mar  9 09:19:31.968: INFO: (6) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 8.962257ms)
Mar  9 09:19:31.968: INFO: (6) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.101937ms)
Mar  9 09:19:31.968: INFO: (6) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.855684ms)
Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.369812ms)
Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.79031ms)
Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.157344ms)
Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.813717ms)
Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.15373ms)
Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.953256ms)
Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 10.132398ms)
Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.373965ms)
Mar  9 09:19:31.974: INFO: (7) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 4.345888ms)
Mar  9 09:19:31.977: INFO: (7) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.338109ms)
Mar  9 09:19:31.977: INFO: (7) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.80349ms)
Mar  9 09:19:31.977: INFO: (7) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.461754ms)
Mar  9 09:19:31.978: INFO: (7) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.056568ms)
Mar  9 09:19:31.978: INFO: (7) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.433311ms)
Mar  9 09:19:31.978: INFO: (7) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.674111ms)
Mar  9 09:19:31.978: INFO: (7) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 8.846271ms)
Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.932443ms)
Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.264186ms)
Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 8.99775ms)
Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 8.830494ms)
Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.933543ms)
Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.955773ms)
Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.535095ms)
Mar  9 09:19:31.980: INFO: (7) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.85507ms)
Mar  9 09:19:31.984: INFO: (8) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 4.641711ms)
Mar  9 09:19:31.986: INFO: (8) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.206313ms)
Mar  9 09:19:31.987: INFO: (8) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.330239ms)
Mar  9 09:19:31.988: INFO: (8) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.415772ms)
Mar  9 09:19:31.989: INFO: (8) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 7.306358ms)
Mar  9 09:19:31.989: INFO: (8) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.695434ms)
Mar  9 09:19:31.990: INFO: (8) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 7.720764ms)
Mar  9 09:19:31.990: INFO: (8) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.782282ms)
Mar  9 09:19:31.990: INFO: (8) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.225805ms)
Mar  9 09:19:31.990: INFO: (8) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.376943ms)
Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 9.677894ms)
Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.196148ms)
Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.149077ms)
Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.920931ms)
Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.479327ms)
Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 10.354563ms)
Mar  9 09:19:31.996: INFO: (9) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 4.881058ms)
Mar  9 09:19:31.998: INFO: (9) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.856034ms)
Mar  9 09:19:31.999: INFO: (9) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.540621ms)
Mar  9 09:19:32.000: INFO: (9) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.508324ms)
Mar  9 09:19:32.000: INFO: (9) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.221068ms)
Mar  9 09:19:32.000: INFO: (9) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 8.92002ms)
Mar  9 09:19:32.000: INFO: (9) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.767659ms)
Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.334631ms)
Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.871355ms)
Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.831828ms)
Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 10.110148ms)
Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.252918ms)
Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.756461ms)
Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.845864ms)
Mar  9 09:19:32.002: INFO: (9) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 10.510168ms)
Mar  9 09:19:32.002: INFO: (9) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.606404ms)
Mar  9 09:19:32.006: INFO: (10) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 4.358993ms)
Mar  9 09:19:32.012: INFO: (10) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.578318ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 10.506262ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.696809ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 10.364698ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.371174ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.465195ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 10.696565ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 10.831864ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 11.175439ms)
Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 11.462227ms)
Mar  9 09:19:32.014: INFO: (10) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 11.276204ms)
Mar  9 09:19:32.014: INFO: (10) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 11.344908ms)
Mar  9 09:19:32.014: INFO: (10) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 11.555454ms)
Mar  9 09:19:32.014: INFO: (10) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 11.949394ms)
Mar  9 09:19:32.015: INFO: (10) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 12.911571ms)
Mar  9 09:19:32.023: INFO: (11) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.230027ms)
Mar  9 09:19:32.023: INFO: (11) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.59187ms)
Mar  9 09:19:32.023: INFO: (11) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 8.073825ms)
Mar  9 09:19:32.023: INFO: (11) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.485984ms)
Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.191205ms)
Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.299759ms)
Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.55105ms)
Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.202833ms)
Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.475305ms)
Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 8.368563ms)
Mar  9 09:19:32.031: INFO: (11) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 16.031378ms)
Mar  9 09:19:32.031: INFO: (11) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 16.376543ms)
Mar  9 09:19:32.036: INFO: (11) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 20.98924ms)
Mar  9 09:19:32.038: INFO: (11) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 21.905312ms)
Mar  9 09:19:32.038: INFO: (11) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 22.234589ms)
Mar  9 09:19:32.038: INFO: (11) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 22.337083ms)
Mar  9 09:19:32.043: INFO: (12) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 4.747801ms)
Mar  9 09:19:32.044: INFO: (12) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 5.925942ms)
Mar  9 09:19:32.048: INFO: (12) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.557469ms)
Mar  9 09:19:32.048: INFO: (12) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.849142ms)
Mar  9 09:19:32.048: INFO: (12) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 10.000208ms)
Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 10.346979ms)
Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 9.144949ms)
Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.700619ms)
Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 10.575552ms)
Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.796041ms)
Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.205828ms)
Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 11.009781ms)
Mar  9 09:19:32.050: INFO: (12) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 11.521082ms)
Mar  9 09:19:32.050: INFO: (12) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 11.479821ms)
Mar  9 09:19:32.050: INFO: (12) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 11.431731ms)
Mar  9 09:19:32.050: INFO: (12) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 11.53641ms)
Mar  9 09:19:32.057: INFO: (13) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 6.322ms)
Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 5.457195ms)
Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 6.031829ms)
Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 7.254461ms)
Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 7.710279ms)
Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 7.615093ms)
Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.182572ms)
Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 6.823614ms)
Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.115013ms)
Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 6.600468ms)
Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.875652ms)
Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 8.916144ms)
Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 7.557349ms)
Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 7.023272ms)
Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 7.000496ms)
Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 7.000174ms)
Mar  9 09:19:32.066: INFO: (14) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 5.704888ms)
Mar  9 09:19:32.066: INFO: (14) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 5.819628ms)
Mar  9 09:19:32.066: INFO: (14) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 6.503582ms)
Mar  9 09:19:32.066: INFO: (14) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 6.4622ms)
Mar  9 09:19:32.067: INFO: (14) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.551754ms)
Mar  9 09:19:32.067: INFO: (14) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 7.467637ms)
Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 7.452087ms)
Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 7.974186ms)
Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 7.841138ms)
Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.163415ms)
Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.574281ms)
Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.868665ms)
Mar  9 09:19:32.069: INFO: (14) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 8.096971ms)
Mar  9 09:19:32.069: INFO: (14) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 8.350619ms)
Mar  9 09:19:32.069: INFO: (14) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 8.478045ms)
Mar  9 09:19:32.069: INFO: (14) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.839482ms)
Mar  9 09:19:32.076: INFO: (15) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.685925ms)
Mar  9 09:19:32.076: INFO: (15) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 6.644952ms)
Mar  9 09:19:32.077: INFO: (15) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.708198ms)
Mar  9 09:19:32.077: INFO: (15) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.992774ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.347552ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.620695ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 8.595927ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 8.484935ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 8.75048ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.650998ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.063821ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.935648ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.940711ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.097727ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.204712ms)
Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.155295ms)
Mar  9 09:19:32.084: INFO: (16) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 5.79011ms)
Mar  9 09:19:32.086: INFO: (16) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.124515ms)
Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 7.879991ms)
Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.970484ms)
Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.906838ms)
Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 7.872808ms)
Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 8.30609ms)
Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 8.837086ms)
Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.449909ms)
Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.748259ms)
Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 8.442838ms)
Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 8.617413ms)
Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.10036ms)
Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.580173ms)
Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.405095ms)
Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.086528ms)
Mar  9 09:19:32.095: INFO: (17) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.902319ms)
Mar  9 09:19:32.096: INFO: (17) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 7.204365ms)
Mar  9 09:19:32.096: INFO: (17) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.385612ms)
Mar  9 09:19:32.096: INFO: (17) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.553317ms)
Mar  9 09:19:32.097: INFO: (17) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.201772ms)
Mar  9 09:19:32.097: INFO: (17) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 8.255083ms)
Mar  9 09:19:32.097: INFO: (17) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 8.311005ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.992835ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 8.899182ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.054096ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.427527ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.367602ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.437312ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 9.344178ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.657613ms)
Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.544241ms)
Mar  9 09:19:32.105: INFO: (18) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 6.221697ms)
Mar  9 09:19:32.106: INFO: (18) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 7.536952ms)
Mar  9 09:19:32.106: INFO: (18) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.491037ms)
Mar  9 09:19:32.106: INFO: (18) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 7.721349ms)
Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.944283ms)
Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.302729ms)
Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.362314ms)
Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.169143ms)
Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.225942ms)
Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.41523ms)
Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.774498ms)
Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 9.445783ms)
Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.721887ms)
Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.705561ms)
Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.892807ms)
Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.89513ms)
Mar  9 09:19:32.115: INFO: (19) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 6.54922ms)
Mar  9 09:19:32.116: INFO: (19) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.295357ms)
Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.464972ms)
Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.604978ms)
Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.827307ms)
Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.573006ms)
Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.467114ms)
Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 8.559973ms)
Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.077996ms)
Mar  9 09:19:32.118: INFO: (19) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.353769ms)
Mar  9 09:19:32.118: INFO: (19) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.560335ms)
Mar  9 09:19:32.118: INFO: (19) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.705678ms)
Mar  9 09:19:32.118: INFO: (19) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.451166ms)
Mar  9 09:19:32.119: INFO: (19) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 10.408443ms)
Mar  9 09:19:32.119: INFO: (19) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 10.267915ms)
Mar  9 09:19:32.119: INFO: (19) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.410264ms)
STEP: deleting ReplicationController proxy-service-swkpc in namespace proxy-7411, will wait for the garbage collector to delete the pods 03/09/23 09:19:32.119
Mar  9 09:19:32.180: INFO: Deleting ReplicationController proxy-service-swkpc took: 6.796252ms
Mar  9 09:19:32.280: INFO: Terminating ReplicationController proxy-service-swkpc pods took: 100.326205ms
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Mar  9 09:19:34.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-7411" for this suite. 03/09/23 09:19:34.887
------------------------------
â€¢ [SLOW TEST] [5.141 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/network/proxy.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:19:29.753
    Mar  9 09:19:29.753: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename proxy 03/09/23 09:19:29.754
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:29.77
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:29.774
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] should proxy through a service and a pod  [Conformance]
      test/e2e/network/proxy.go:101
    STEP: starting an echo server on multiple ports 03/09/23 09:19:29.799
    STEP: creating replication controller proxy-service-swkpc in namespace proxy-7411 03/09/23 09:19:29.799
    I0309 09:19:29.810469      23 runners.go:193] Created replication controller with name: proxy-service-swkpc, namespace: proxy-7411, replica count: 1
    I0309 09:19:30.861793      23 runners.go:193] proxy-service-swkpc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I0309 09:19:31.862962      23 runners.go:193] proxy-service-swkpc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Mar  9 09:19:31.871: INFO: setup took 2.093015852s, starting test cases
    STEP: running 16 cases, 20 attempts per case, 320 total attempts 03/09/23 09:19:31.871
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 12.65819ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 12.62991ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 12.923776ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 12.677681ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 13.374624ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 13.019686ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 12.938449ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 12.940679ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 13.220407ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 13.203831ms)
    Mar  9 09:19:31.885: INFO: (0) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 13.14963ms)
    Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 26.053827ms)
    Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 26.342495ms)
    Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 26.411255ms)
    Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 26.880908ms)
    Mar  9 09:19:31.899: INFO: (0) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 27.102485ms)
    Mar  9 09:19:31.908: INFO: (1) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.140849ms)
    Mar  9 09:19:31.908: INFO: (1) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 8.443528ms)
    Mar  9 09:19:31.909: INFO: (1) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.207493ms)
    Mar  9 09:19:31.909: INFO: (1) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.799768ms)
    Mar  9 09:19:31.909: INFO: (1) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.454068ms)
    Mar  9 09:19:31.909: INFO: (1) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 10.112725ms)
    Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.839339ms)
    Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.91242ms)
    Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 10.187484ms)
    Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 9.926879ms)
    Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.504442ms)
    Mar  9 09:19:31.910: INFO: (1) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.357356ms)
    Mar  9 09:19:31.911: INFO: (1) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 11.07436ms)
    Mar  9 09:19:31.911: INFO: (1) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 11.13249ms)
    Mar  9 09:19:31.911: INFO: (1) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.404598ms)
    Mar  9 09:19:31.911: INFO: (1) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 11.841787ms)
    Mar  9 09:19:31.921: INFO: (2) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 9.887666ms)
    Mar  9 09:19:31.921: INFO: (2) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.784827ms)
    Mar  9 09:19:31.921: INFO: (2) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 9.635159ms)
    Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 10.117665ms)
    Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.573085ms)
    Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.181268ms)
    Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 10.127392ms)
    Mar  9 09:19:31.922: INFO: (2) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 10.424483ms)
    Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.750486ms)
    Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.682015ms)
    Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 10.596248ms)
    Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 11.357546ms)
    Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 11.233249ms)
    Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 11.472012ms)
    Mar  9 09:19:31.923: INFO: (2) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 11.542589ms)
    Mar  9 09:19:31.924: INFO: (2) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.484508ms)
    Mar  9 09:19:31.929: INFO: (3) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 5.357258ms)
    Mar  9 09:19:31.929: INFO: (3) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 5.895631ms)
    Mar  9 09:19:31.933: INFO: (3) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.846911ms)
    Mar  9 09:19:31.933: INFO: (3) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.813854ms)
    Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.70755ms)
    Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.248455ms)
    Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 9.919199ms)
    Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 10.02839ms)
    Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.305123ms)
    Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 10.282529ms)
    Mar  9 09:19:31.934: INFO: (3) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 10.216618ms)
    Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 10.684463ms)
    Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.857396ms)
    Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.693806ms)
    Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 10.927102ms)
    Mar  9 09:19:31.935: INFO: (3) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 10.532888ms)
    Mar  9 09:19:31.941: INFO: (4) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 5.982438ms)
    Mar  9 09:19:31.944: INFO: (4) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.182373ms)
    Mar  9 09:19:31.944: INFO: (4) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.008252ms)
    Mar  9 09:19:31.944: INFO: (4) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.879465ms)
    Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.227389ms)
    Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 10.040066ms)
    Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.748555ms)
    Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.026993ms)
    Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 9.882057ms)
    Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.802107ms)
    Mar  9 09:19:31.945: INFO: (4) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 10.13246ms)
    Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.316506ms)
    Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 11.054245ms)
    Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.342621ms)
    Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 11.207467ms)
    Mar  9 09:19:31.946: INFO: (4) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 11.230505ms)
    Mar  9 09:19:31.954: INFO: (5) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 6.62849ms)
    Mar  9 09:19:31.954: INFO: (5) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 7.508674ms)
    Mar  9 09:19:31.954: INFO: (5) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.493789ms)
    Mar  9 09:19:31.955: INFO: (5) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.768345ms)
    Mar  9 09:19:31.955: INFO: (5) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.481069ms)
    Mar  9 09:19:31.956: INFO: (5) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.168493ms)
    Mar  9 09:19:31.956: INFO: (5) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.960883ms)
    Mar  9 09:19:31.956: INFO: (5) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 9.186007ms)
    Mar  9 09:19:31.956: INFO: (5) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.053502ms)
    Mar  9 09:19:31.957: INFO: (5) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.742849ms)
    Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.929862ms)
    Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.91997ms)
    Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 11.875704ms)
    Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 11.67757ms)
    Mar  9 09:19:31.958: INFO: (5) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 11.735923ms)
    Mar  9 09:19:31.959: INFO: (5) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.630678ms)
    Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.193084ms)
    Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 7.819019ms)
    Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 7.876391ms)
    Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 8.311467ms)
    Mar  9 09:19:31.967: INFO: (6) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.299769ms)
    Mar  9 09:19:31.968: INFO: (6) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 8.962257ms)
    Mar  9 09:19:31.968: INFO: (6) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.101937ms)
    Mar  9 09:19:31.968: INFO: (6) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.855684ms)
    Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.369812ms)
    Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.79031ms)
    Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.157344ms)
    Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.813717ms)
    Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.15373ms)
    Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.953256ms)
    Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 10.132398ms)
    Mar  9 09:19:31.969: INFO: (6) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.373965ms)
    Mar  9 09:19:31.974: INFO: (7) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 4.345888ms)
    Mar  9 09:19:31.977: INFO: (7) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.338109ms)
    Mar  9 09:19:31.977: INFO: (7) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.80349ms)
    Mar  9 09:19:31.977: INFO: (7) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.461754ms)
    Mar  9 09:19:31.978: INFO: (7) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.056568ms)
    Mar  9 09:19:31.978: INFO: (7) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.433311ms)
    Mar  9 09:19:31.978: INFO: (7) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.674111ms)
    Mar  9 09:19:31.978: INFO: (7) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 8.846271ms)
    Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.932443ms)
    Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.264186ms)
    Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 8.99775ms)
    Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 8.830494ms)
    Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.933543ms)
    Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.955773ms)
    Mar  9 09:19:31.979: INFO: (7) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.535095ms)
    Mar  9 09:19:31.980: INFO: (7) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.85507ms)
    Mar  9 09:19:31.984: INFO: (8) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 4.641711ms)
    Mar  9 09:19:31.986: INFO: (8) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.206313ms)
    Mar  9 09:19:31.987: INFO: (8) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.330239ms)
    Mar  9 09:19:31.988: INFO: (8) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.415772ms)
    Mar  9 09:19:31.989: INFO: (8) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 7.306358ms)
    Mar  9 09:19:31.989: INFO: (8) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.695434ms)
    Mar  9 09:19:31.990: INFO: (8) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 7.720764ms)
    Mar  9 09:19:31.990: INFO: (8) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.782282ms)
    Mar  9 09:19:31.990: INFO: (8) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.225805ms)
    Mar  9 09:19:31.990: INFO: (8) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.376943ms)
    Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 9.677894ms)
    Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.196148ms)
    Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.149077ms)
    Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.920931ms)
    Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.479327ms)
    Mar  9 09:19:31.991: INFO: (8) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 10.354563ms)
    Mar  9 09:19:31.996: INFO: (9) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 4.881058ms)
    Mar  9 09:19:31.998: INFO: (9) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.856034ms)
    Mar  9 09:19:31.999: INFO: (9) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.540621ms)
    Mar  9 09:19:32.000: INFO: (9) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.508324ms)
    Mar  9 09:19:32.000: INFO: (9) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.221068ms)
    Mar  9 09:19:32.000: INFO: (9) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 8.92002ms)
    Mar  9 09:19:32.000: INFO: (9) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.767659ms)
    Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.334631ms)
    Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.871355ms)
    Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.831828ms)
    Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 10.110148ms)
    Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 10.252918ms)
    Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.756461ms)
    Mar  9 09:19:32.001: INFO: (9) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.845864ms)
    Mar  9 09:19:32.002: INFO: (9) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 10.510168ms)
    Mar  9 09:19:32.002: INFO: (9) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.606404ms)
    Mar  9 09:19:32.006: INFO: (10) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 4.358993ms)
    Mar  9 09:19:32.012: INFO: (10) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.578318ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 10.506262ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.696809ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 10.364698ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.371174ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.465195ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 10.696565ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 10.831864ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 11.175439ms)
    Mar  9 09:19:32.013: INFO: (10) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 11.462227ms)
    Mar  9 09:19:32.014: INFO: (10) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 11.276204ms)
    Mar  9 09:19:32.014: INFO: (10) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 11.344908ms)
    Mar  9 09:19:32.014: INFO: (10) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 11.555454ms)
    Mar  9 09:19:32.014: INFO: (10) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 11.949394ms)
    Mar  9 09:19:32.015: INFO: (10) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 12.911571ms)
    Mar  9 09:19:32.023: INFO: (11) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.230027ms)
    Mar  9 09:19:32.023: INFO: (11) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.59187ms)
    Mar  9 09:19:32.023: INFO: (11) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 8.073825ms)
    Mar  9 09:19:32.023: INFO: (11) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.485984ms)
    Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.191205ms)
    Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.299759ms)
    Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.55105ms)
    Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.202833ms)
    Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.475305ms)
    Mar  9 09:19:32.024: INFO: (11) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 8.368563ms)
    Mar  9 09:19:32.031: INFO: (11) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 16.031378ms)
    Mar  9 09:19:32.031: INFO: (11) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 16.376543ms)
    Mar  9 09:19:32.036: INFO: (11) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 20.98924ms)
    Mar  9 09:19:32.038: INFO: (11) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 21.905312ms)
    Mar  9 09:19:32.038: INFO: (11) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 22.234589ms)
    Mar  9 09:19:32.038: INFO: (11) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 22.337083ms)
    Mar  9 09:19:32.043: INFO: (12) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 4.747801ms)
    Mar  9 09:19:32.044: INFO: (12) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 5.925942ms)
    Mar  9 09:19:32.048: INFO: (12) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 9.557469ms)
    Mar  9 09:19:32.048: INFO: (12) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.849142ms)
    Mar  9 09:19:32.048: INFO: (12) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 10.000208ms)
    Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 10.346979ms)
    Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 9.144949ms)
    Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 10.700619ms)
    Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 10.575552ms)
    Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 10.796041ms)
    Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 11.205828ms)
    Mar  9 09:19:32.049: INFO: (12) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 11.009781ms)
    Mar  9 09:19:32.050: INFO: (12) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 11.521082ms)
    Mar  9 09:19:32.050: INFO: (12) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 11.479821ms)
    Mar  9 09:19:32.050: INFO: (12) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 11.431731ms)
    Mar  9 09:19:32.050: INFO: (12) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 11.53641ms)
    Mar  9 09:19:32.057: INFO: (13) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 6.322ms)
    Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 5.457195ms)
    Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 6.031829ms)
    Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 7.254461ms)
    Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 7.710279ms)
    Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 7.615093ms)
    Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.182572ms)
    Mar  9 09:19:32.058: INFO: (13) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 6.823614ms)
    Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.115013ms)
    Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 6.600468ms)
    Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.875652ms)
    Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 8.916144ms)
    Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 7.557349ms)
    Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 7.023272ms)
    Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 7.000496ms)
    Mar  9 09:19:32.059: INFO: (13) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 7.000174ms)
    Mar  9 09:19:32.066: INFO: (14) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 5.704888ms)
    Mar  9 09:19:32.066: INFO: (14) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 5.819628ms)
    Mar  9 09:19:32.066: INFO: (14) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 6.503582ms)
    Mar  9 09:19:32.066: INFO: (14) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 6.4622ms)
    Mar  9 09:19:32.067: INFO: (14) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.551754ms)
    Mar  9 09:19:32.067: INFO: (14) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 7.467637ms)
    Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 7.452087ms)
    Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 7.974186ms)
    Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 7.841138ms)
    Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.163415ms)
    Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.574281ms)
    Mar  9 09:19:32.068: INFO: (14) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.868665ms)
    Mar  9 09:19:32.069: INFO: (14) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 8.096971ms)
    Mar  9 09:19:32.069: INFO: (14) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 8.350619ms)
    Mar  9 09:19:32.069: INFO: (14) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 8.478045ms)
    Mar  9 09:19:32.069: INFO: (14) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.839482ms)
    Mar  9 09:19:32.076: INFO: (15) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.685925ms)
    Mar  9 09:19:32.076: INFO: (15) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 6.644952ms)
    Mar  9 09:19:32.077: INFO: (15) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.708198ms)
    Mar  9 09:19:32.077: INFO: (15) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.992774ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.347552ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.620695ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 8.595927ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 8.484935ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 8.75048ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.650998ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.063821ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.935648ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.940711ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.097727ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.204712ms)
    Mar  9 09:19:32.078: INFO: (15) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.155295ms)
    Mar  9 09:19:32.084: INFO: (16) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 5.79011ms)
    Mar  9 09:19:32.086: INFO: (16) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.124515ms)
    Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 7.879991ms)
    Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.970484ms)
    Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.906838ms)
    Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 7.872808ms)
    Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 8.30609ms)
    Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 8.837086ms)
    Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.449909ms)
    Mar  9 09:19:32.087: INFO: (16) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.748259ms)
    Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 8.442838ms)
    Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 8.617413ms)
    Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.10036ms)
    Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.580173ms)
    Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.405095ms)
    Mar  9 09:19:32.088: INFO: (16) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.086528ms)
    Mar  9 09:19:32.095: INFO: (17) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 6.902319ms)
    Mar  9 09:19:32.096: INFO: (17) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 7.204365ms)
    Mar  9 09:19:32.096: INFO: (17) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 7.385612ms)
    Mar  9 09:19:32.096: INFO: (17) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.553317ms)
    Mar  9 09:19:32.097: INFO: (17) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.201772ms)
    Mar  9 09:19:32.097: INFO: (17) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 8.255083ms)
    Mar  9 09:19:32.097: INFO: (17) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 8.311005ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.992835ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 8.899182ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 9.054096ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.427527ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 9.367602ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.437312ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 9.344178ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.657613ms)
    Mar  9 09:19:32.098: INFO: (17) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.544241ms)
    Mar  9 09:19:32.105: INFO: (18) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 6.221697ms)
    Mar  9 09:19:32.106: INFO: (18) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 7.536952ms)
    Mar  9 09:19:32.106: INFO: (18) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 7.491037ms)
    Mar  9 09:19:32.106: INFO: (18) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 7.721349ms)
    Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.944283ms)
    Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.302729ms)
    Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 8.362314ms)
    Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.169143ms)
    Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.225942ms)
    Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 8.41523ms)
    Mar  9 09:19:32.107: INFO: (18) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 8.774498ms)
    Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 9.445783ms)
    Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.721887ms)
    Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 9.705561ms)
    Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.892807ms)
    Mar  9 09:19:32.108: INFO: (18) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 9.89513ms)
    Mar  9 09:19:32.115: INFO: (19) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:162/proxy/: bar (200; 6.54922ms)
    Mar  9 09:19:32.116: INFO: (19) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:1080/proxy/rewriteme">... (200; 7.295357ms)
    Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:443/proxy/tlsrewritem... (200; 8.464972ms)
    Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:462/proxy/: tls qux (200; 8.604978ms)
    Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.827307ms)
    Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/http:proxy-service-swkpc-s55qs:160/proxy/: foo (200; 8.573006ms)
    Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/https:proxy-service-swkpc-s55qs:460/proxy/: tls baz (200; 8.467114ms)
    Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:1080/proxy/rewriteme">test<... (200; 8.559973ms)
    Mar  9 09:19:32.117: INFO: (19) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname2/proxy/: tls qux (200; 9.077996ms)
    Mar  9 09:19:32.118: INFO: (19) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs:162/proxy/: bar (200; 9.353769ms)
    Mar  9 09:19:32.118: INFO: (19) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname1/proxy/: foo (200; 9.560335ms)
    Mar  9 09:19:32.118: INFO: (19) /api/v1/namespaces/proxy-7411/services/http:proxy-service-swkpc:portname2/proxy/: bar (200; 9.705678ms)
    Mar  9 09:19:32.118: INFO: (19) /api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/: <a href="/api/v1/namespaces/proxy-7411/pods/proxy-service-swkpc-s55qs/proxy/rewriteme">test</a> (200; 9.451166ms)
    Mar  9 09:19:32.119: INFO: (19) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname2/proxy/: bar (200; 10.408443ms)
    Mar  9 09:19:32.119: INFO: (19) /api/v1/namespaces/proxy-7411/services/https:proxy-service-swkpc:tlsportname1/proxy/: tls baz (200; 10.267915ms)
    Mar  9 09:19:32.119: INFO: (19) /api/v1/namespaces/proxy-7411/services/proxy-service-swkpc:portname1/proxy/: foo (200; 10.410264ms)
    STEP: deleting ReplicationController proxy-service-swkpc in namespace proxy-7411, will wait for the garbage collector to delete the pods 03/09/23 09:19:32.119
    Mar  9 09:19:32.180: INFO: Deleting ReplicationController proxy-service-swkpc took: 6.796252ms
    Mar  9 09:19:32.280: INFO: Terminating ReplicationController proxy-service-swkpc pods took: 100.326205ms
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:19:34.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-7411" for this suite. 03/09/23 09:19:34.887
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:19:34.895
Mar  9 09:19:34.895: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename var-expansion 03/09/23 09:19:34.897
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:34.912
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:34.916
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
STEP: creating the pod with failed condition 03/09/23 09:19:34.921
Mar  9 09:19:34.931: INFO: Waiting up to 2m0s for pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" in namespace "var-expansion-6825" to be "running"
Mar  9 09:19:34.935: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.858623ms
Mar  9 09:19:36.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008507009s
Mar  9 09:19:38.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009144772s
Mar  9 09:19:40.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.008977812s
Mar  9 09:19:42.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.011022308s
Mar  9 09:19:44.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 10.009201658s
Mar  9 09:19:46.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 12.008500171s
Mar  9 09:19:48.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 14.009319879s
Mar  9 09:19:50.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 16.009762549s
Mar  9 09:19:52.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 18.008366381s
Mar  9 09:19:54.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 20.008590671s
Mar  9 09:19:56.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 22.009262275s
Mar  9 09:19:58.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 24.008292187s
Mar  9 09:20:00.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 26.009224748s
Mar  9 09:20:02.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 28.009762061s
Mar  9 09:20:04.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 30.009669409s
Mar  9 09:20:06.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 32.009886333s
Mar  9 09:20:08.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 34.009354152s
Mar  9 09:20:10.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 36.00920412s
Mar  9 09:20:12.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 38.008859148s
Mar  9 09:20:14.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 40.009518619s
Mar  9 09:20:16.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 42.010733066s
Mar  9 09:20:18.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 44.008758857s
Mar  9 09:20:20.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 46.009684323s
Mar  9 09:20:22.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 48.009908258s
Mar  9 09:20:24.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 50.009046992s
Mar  9 09:20:26.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 52.010195409s
Mar  9 09:20:28.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 54.009359047s
Mar  9 09:20:30.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 56.008378978s
Mar  9 09:20:32.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 58.009748172s
Mar  9 09:20:34.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.00896708s
Mar  9 09:20:36.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.010339547s
Mar  9 09:20:38.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.009997119s
Mar  9 09:20:40.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.008538461s
Mar  9 09:20:42.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.009588829s
Mar  9 09:20:44.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.008850889s
Mar  9 09:20:46.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.009918369s
Mar  9 09:20:48.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.010669289s
Mar  9 09:20:50.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.009518257s
Mar  9 09:20:52.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.009752753s
Mar  9 09:20:54.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.009195706s
Mar  9 09:20:56.945: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.014170237s
Mar  9 09:20:58.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.009209838s
Mar  9 09:21:00.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.009071261s
Mar  9 09:21:02.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.009101182s
Mar  9 09:21:04.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.00881571s
Mar  9 09:21:06.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.009871464s
Mar  9 09:21:08.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.009967054s
Mar  9 09:21:10.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.010615261s
Mar  9 09:21:12.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.009108367s
Mar  9 09:21:14.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.008390258s
Mar  9 09:21:16.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.009374255s
Mar  9 09:21:18.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.009072851s
Mar  9 09:21:20.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.008778561s
Mar  9 09:21:22.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.010739836s
Mar  9 09:21:24.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.00917861s
Mar  9 09:21:26.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.010470831s
Mar  9 09:21:28.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.008697663s
Mar  9 09:21:30.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.00921683s
Mar  9 09:21:32.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.009173601s
Mar  9 09:21:34.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.007912125s
Mar  9 09:21:34.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.011056982s
STEP: updating the pod 03/09/23 09:21:34.942
Mar  9 09:21:35.461: INFO: Successfully updated pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d"
STEP: waiting for pod running 03/09/23 09:21:35.461
Mar  9 09:21:35.462: INFO: Waiting up to 2m0s for pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" in namespace "var-expansion-6825" to be "running"
Mar  9 09:21:35.465: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.90024ms
Mar  9 09:21:37.476: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Running", Reason="", readiness=true. Elapsed: 2.014812709s
Mar  9 09:21:37.476: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" satisfied condition "running"
STEP: deleting the pod gracefully 03/09/23 09:21:37.476
Mar  9 09:21:37.477: INFO: Deleting pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" in namespace "var-expansion-6825"
Mar  9 09:21:37.486: INFO: Wait up to 5m0s for pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Mar  9 09:22:09.495: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-6825" for this suite. 03/09/23 09:22:09.501
------------------------------
â€¢ [SLOW TEST] [154.614 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:19:34.895
    Mar  9 09:19:34.895: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename var-expansion 03/09/23 09:19:34.897
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:19:34.912
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:19:34.916
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:225
    STEP: creating the pod with failed condition 03/09/23 09:19:34.921
    Mar  9 09:19:34.931: INFO: Waiting up to 2m0s for pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" in namespace "var-expansion-6825" to be "running"
    Mar  9 09:19:34.935: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.858623ms
    Mar  9 09:19:36.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008507009s
    Mar  9 09:19:38.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.009144772s
    Mar  9 09:19:40.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.008977812s
    Mar  9 09:19:42.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.011022308s
    Mar  9 09:19:44.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 10.009201658s
    Mar  9 09:19:46.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 12.008500171s
    Mar  9 09:19:48.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 14.009319879s
    Mar  9 09:19:50.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 16.009762549s
    Mar  9 09:19:52.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 18.008366381s
    Mar  9 09:19:54.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 20.008590671s
    Mar  9 09:19:56.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 22.009262275s
    Mar  9 09:19:58.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 24.008292187s
    Mar  9 09:20:00.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 26.009224748s
    Mar  9 09:20:02.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 28.009762061s
    Mar  9 09:20:04.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 30.009669409s
    Mar  9 09:20:06.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 32.009886333s
    Mar  9 09:20:08.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 34.009354152s
    Mar  9 09:20:10.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 36.00920412s
    Mar  9 09:20:12.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 38.008859148s
    Mar  9 09:20:14.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 40.009518619s
    Mar  9 09:20:16.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 42.010733066s
    Mar  9 09:20:18.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 44.008758857s
    Mar  9 09:20:20.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 46.009684323s
    Mar  9 09:20:22.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 48.009908258s
    Mar  9 09:20:24.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 50.009046992s
    Mar  9 09:20:26.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 52.010195409s
    Mar  9 09:20:28.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 54.009359047s
    Mar  9 09:20:30.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 56.008378978s
    Mar  9 09:20:32.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 58.009748172s
    Mar  9 09:20:34.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.00896708s
    Mar  9 09:20:36.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.010339547s
    Mar  9 09:20:38.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.009997119s
    Mar  9 09:20:40.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.008538461s
    Mar  9 09:20:42.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.009588829s
    Mar  9 09:20:44.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.008850889s
    Mar  9 09:20:46.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.009918369s
    Mar  9 09:20:48.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.010669289s
    Mar  9 09:20:50.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.009518257s
    Mar  9 09:20:52.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.009752753s
    Mar  9 09:20:54.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.009195706s
    Mar  9 09:20:56.945: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.014170237s
    Mar  9 09:20:58.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.009209838s
    Mar  9 09:21:00.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.009071261s
    Mar  9 09:21:02.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.009101182s
    Mar  9 09:21:04.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.00881571s
    Mar  9 09:21:06.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.009871464s
    Mar  9 09:21:08.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.009967054s
    Mar  9 09:21:10.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.010615261s
    Mar  9 09:21:12.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.009108367s
    Mar  9 09:21:14.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.008390258s
    Mar  9 09:21:16.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.009374255s
    Mar  9 09:21:18.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.009072851s
    Mar  9 09:21:20.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.008778561s
    Mar  9 09:21:22.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.010739836s
    Mar  9 09:21:24.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.00917861s
    Mar  9 09:21:26.941: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.010470831s
    Mar  9 09:21:28.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.008697663s
    Mar  9 09:21:30.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.00921683s
    Mar  9 09:21:32.940: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.009173601s
    Mar  9 09:21:34.939: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.007912125s
    Mar  9 09:21:34.942: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.011056982s
    STEP: updating the pod 03/09/23 09:21:34.942
    Mar  9 09:21:35.461: INFO: Successfully updated pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d"
    STEP: waiting for pod running 03/09/23 09:21:35.461
    Mar  9 09:21:35.462: INFO: Waiting up to 2m0s for pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" in namespace "var-expansion-6825" to be "running"
    Mar  9 09:21:35.465: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.90024ms
    Mar  9 09:21:37.476: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d": Phase="Running", Reason="", readiness=true. Elapsed: 2.014812709s
    Mar  9 09:21:37.476: INFO: Pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" satisfied condition "running"
    STEP: deleting the pod gracefully 03/09/23 09:21:37.476
    Mar  9 09:21:37.477: INFO: Deleting pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" in namespace "var-expansion-6825"
    Mar  9 09:21:37.486: INFO: Wait up to 5m0s for pod "var-expansion-65100156-e556-4791-af2d-3edce784d09d" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:22:09.495: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-6825" for this suite. 03/09/23 09:22:09.501
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:22:09.51
Mar  9 09:22:09.510: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 09:22:09.512
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:09.529
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:09.534
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
STEP: Creating configMap configmap-5632/configmap-test-dbc0fb6f-b023-4157-88e7-d603bda90e30 03/09/23 09:22:09.539
STEP: Creating a pod to test consume configMaps 03/09/23 09:22:09.545
Mar  9 09:22:09.554: INFO: Waiting up to 5m0s for pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af" in namespace "configmap-5632" to be "Succeeded or Failed"
Mar  9 09:22:09.559: INFO: Pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af": Phase="Pending", Reason="", readiness=false. Elapsed: 4.636873ms
Mar  9 09:22:11.563: INFO: Pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009152635s
Mar  9 09:22:13.563: INFO: Pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009172141s
STEP: Saw pod success 03/09/23 09:22:13.563
Mar  9 09:22:13.564: INFO: Pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af" satisfied condition "Succeeded or Failed"
Mar  9 09:22:13.567: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af container env-test: <nil>
STEP: delete the pod 03/09/23 09:22:13.598
Mar  9 09:22:13.612: INFO: Waiting for pod pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af to disappear
Mar  9 09:22:13.615: INFO: Pod pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:22:13.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5632" for this suite. 03/09/23 09:22:13.622
------------------------------
â€¢ [4.119 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:22:09.51
    Mar  9 09:22:09.510: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 09:22:09.512
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:09.529
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:09.534
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:93
    STEP: Creating configMap configmap-5632/configmap-test-dbc0fb6f-b023-4157-88e7-d603bda90e30 03/09/23 09:22:09.539
    STEP: Creating a pod to test consume configMaps 03/09/23 09:22:09.545
    Mar  9 09:22:09.554: INFO: Waiting up to 5m0s for pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af" in namespace "configmap-5632" to be "Succeeded or Failed"
    Mar  9 09:22:09.559: INFO: Pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af": Phase="Pending", Reason="", readiness=false. Elapsed: 4.636873ms
    Mar  9 09:22:11.563: INFO: Pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009152635s
    Mar  9 09:22:13.563: INFO: Pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009172141s
    STEP: Saw pod success 03/09/23 09:22:13.563
    Mar  9 09:22:13.564: INFO: Pod "pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af" satisfied condition "Succeeded or Failed"
    Mar  9 09:22:13.567: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af container env-test: <nil>
    STEP: delete the pod 03/09/23 09:22:13.598
    Mar  9 09:22:13.612: INFO: Waiting for pod pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af to disappear
    Mar  9 09:22:13.615: INFO: Pod pod-configmaps-fc58713a-d08d-4a20-af27-f792ad5cb9af no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:22:13.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5632" for this suite. 03/09/23 09:22:13.622
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:22:13.631
Mar  9 09:22:13.631: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 09:22:13.633
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:13.649
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:13.654
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
STEP: Creating a pod to test emptydir 0777 on tmpfs 03/09/23 09:22:13.659
Mar  9 09:22:13.671: INFO: Waiting up to 5m0s for pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0" in namespace "emptydir-1744" to be "Succeeded or Failed"
Mar  9 09:22:13.675: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.16897ms
Mar  9 09:22:15.680: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0": Phase="Running", Reason="", readiness=true. Elapsed: 2.009285983s
Mar  9 09:22:17.682: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0": Phase="Running", Reason="", readiness=false. Elapsed: 4.011231092s
Mar  9 09:22:19.681: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009907049s
STEP: Saw pod success 03/09/23 09:22:19.681
Mar  9 09:22:19.681: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0" satisfied condition "Succeeded or Failed"
Mar  9 09:22:19.685: INFO: Trying to get logs from node k8s-worker1 pod pod-f0818fbf-555c-4fd3-a164-4db5633d91e0 container test-container: <nil>
STEP: delete the pod 03/09/23 09:22:19.693
Mar  9 09:22:19.709: INFO: Waiting for pod pod-f0818fbf-555c-4fd3-a164-4db5633d91e0 to disappear
Mar  9 09:22:19.715: INFO: Pod pod-f0818fbf-555c-4fd3-a164-4db5633d91e0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 09:22:19.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-1744" for this suite. 03/09/23 09:22:19.721
------------------------------
â€¢ [SLOW TEST] [6.099 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:22:13.631
    Mar  9 09:22:13.631: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 09:22:13.633
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:13.649
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:13.654
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:147
    STEP: Creating a pod to test emptydir 0777 on tmpfs 03/09/23 09:22:13.659
    Mar  9 09:22:13.671: INFO: Waiting up to 5m0s for pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0" in namespace "emptydir-1744" to be "Succeeded or Failed"
    Mar  9 09:22:13.675: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.16897ms
    Mar  9 09:22:15.680: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0": Phase="Running", Reason="", readiness=true. Elapsed: 2.009285983s
    Mar  9 09:22:17.682: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0": Phase="Running", Reason="", readiness=false. Elapsed: 4.011231092s
    Mar  9 09:22:19.681: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009907049s
    STEP: Saw pod success 03/09/23 09:22:19.681
    Mar  9 09:22:19.681: INFO: Pod "pod-f0818fbf-555c-4fd3-a164-4db5633d91e0" satisfied condition "Succeeded or Failed"
    Mar  9 09:22:19.685: INFO: Trying to get logs from node k8s-worker1 pod pod-f0818fbf-555c-4fd3-a164-4db5633d91e0 container test-container: <nil>
    STEP: delete the pod 03/09/23 09:22:19.693
    Mar  9 09:22:19.709: INFO: Waiting for pod pod-f0818fbf-555c-4fd3-a164-4db5633d91e0 to disappear
    Mar  9 09:22:19.715: INFO: Pod pod-f0818fbf-555c-4fd3-a164-4db5633d91e0 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:22:19.715: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-1744" for this suite. 03/09/23 09:22:19.721
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:22:19.731
Mar  9 09:22:19.731: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 09:22:19.733
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:19.75
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:19.754
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
STEP: Creating configMap with name configmap-test-volume-map-726415dd-6254-45d4-ba22-f84b36afefa6 03/09/23 09:22:19.76
STEP: Creating a pod to test consume configMaps 03/09/23 09:22:19.766
Mar  9 09:22:19.777: INFO: Waiting up to 5m0s for pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56" in namespace "configmap-1435" to be "Succeeded or Failed"
Mar  9 09:22:19.782: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56": Phase="Pending", Reason="", readiness=false. Elapsed: 4.437003ms
Mar  9 09:22:21.787: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56": Phase="Running", Reason="", readiness=true. Elapsed: 2.009852576s
Mar  9 09:22:23.787: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56": Phase="Running", Reason="", readiness=false. Elapsed: 4.009340208s
Mar  9 09:22:25.787: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009689299s
STEP: Saw pod success 03/09/23 09:22:25.787
Mar  9 09:22:25.787: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56" satisfied condition "Succeeded or Failed"
Mar  9 09:22:25.792: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 09:22:25.809
Mar  9 09:22:25.825: INFO: Waiting for pod pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56 to disappear
Mar  9 09:22:25.828: INFO: Pod pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:22:25.828: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-1435" for this suite. 03/09/23 09:22:25.834
------------------------------
â€¢ [SLOW TEST] [6.110 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:22:19.731
    Mar  9 09:22:19.731: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 09:22:19.733
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:19.75
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:19.754
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:99
    STEP: Creating configMap with name configmap-test-volume-map-726415dd-6254-45d4-ba22-f84b36afefa6 03/09/23 09:22:19.76
    STEP: Creating a pod to test consume configMaps 03/09/23 09:22:19.766
    Mar  9 09:22:19.777: INFO: Waiting up to 5m0s for pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56" in namespace "configmap-1435" to be "Succeeded or Failed"
    Mar  9 09:22:19.782: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56": Phase="Pending", Reason="", readiness=false. Elapsed: 4.437003ms
    Mar  9 09:22:21.787: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56": Phase="Running", Reason="", readiness=true. Elapsed: 2.009852576s
    Mar  9 09:22:23.787: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56": Phase="Running", Reason="", readiness=false. Elapsed: 4.009340208s
    Mar  9 09:22:25.787: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009689299s
    STEP: Saw pod success 03/09/23 09:22:25.787
    Mar  9 09:22:25.787: INFO: Pod "pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56" satisfied condition "Succeeded or Failed"
    Mar  9 09:22:25.792: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 09:22:25.809
    Mar  9 09:22:25.825: INFO: Waiting for pod pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56 to disappear
    Mar  9 09:22:25.828: INFO: Pod pod-configmaps-8723df56-215e-4dcc-a04b-3def72973b56 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:22:25.828: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-1435" for this suite. 03/09/23 09:22:25.834
  << End Captured GinkgoWriter Output
------------------------------
[sig-apps] ReplicaSet
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:22:25.842
Mar  9 09:22:25.842: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replicaset 03/09/23 09:22:25.844
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:25.86
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:25.865
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
Mar  9 09:22:25.869: INFO: Creating ReplicaSet my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55
Mar  9 09:22:25.880: INFO: Pod name my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55: Found 0 pods out of 1
Mar  9 09:22:30.885: INFO: Pod name my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55: Found 1 pods out of 1
Mar  9 09:22:30.885: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55" is running
Mar  9 09:22:30.885: INFO: Waiting up to 5m0s for pod "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj" in namespace "replicaset-7922" to be "running"
Mar  9 09:22:30.888: INFO: Pod "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj": Phase="Running", Reason="", readiness=true. Elapsed: 3.496428ms
Mar  9 09:22:30.888: INFO: Pod "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj" satisfied condition "running"
Mar  9 09:22:30.888: INFO: Pod "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 09:22:24 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 09:22:26 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 09:22:26 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 09:22:25 +0000 UTC Reason: Message:}])
Mar  9 09:22:30.888: INFO: Trying to dial the pod
Mar  9 09:22:35.902: INFO: Controller my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55: Got expected result from replica 1 [my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj]: "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Mar  9 09:22:35.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-7922" for this suite. 03/09/23 09:22:35.908
------------------------------
â€¢ [SLOW TEST] [10.076 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:22:25.842
    Mar  9 09:22:25.842: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replicaset 03/09/23 09:22:25.844
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:25.86
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:25.865
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/replica_set.go:111
    Mar  9 09:22:25.869: INFO: Creating ReplicaSet my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55
    Mar  9 09:22:25.880: INFO: Pod name my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55: Found 0 pods out of 1
    Mar  9 09:22:30.885: INFO: Pod name my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55: Found 1 pods out of 1
    Mar  9 09:22:30.885: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55" is running
    Mar  9 09:22:30.885: INFO: Waiting up to 5m0s for pod "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj" in namespace "replicaset-7922" to be "running"
    Mar  9 09:22:30.888: INFO: Pod "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj": Phase="Running", Reason="", readiness=true. Elapsed: 3.496428ms
    Mar  9 09:22:30.888: INFO: Pod "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj" satisfied condition "running"
    Mar  9 09:22:30.888: INFO: Pod "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 09:22:24 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 09:22:26 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 09:22:26 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-03-09 09:22:25 +0000 UTC Reason: Message:}])
    Mar  9 09:22:30.888: INFO: Trying to dial the pod
    Mar  9 09:22:35.902: INFO: Controller my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55: Got expected result from replica 1 [my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj]: "my-hostname-basic-ef697221-7be4-4af8-85f0-07426ff8ca55-rgjhj", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:22:35.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-7922" for this suite. 03/09/23 09:22:35.908
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:22:35.92
Mar  9 09:22:35.920: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 09:22:35.922
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:35.938
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:35.943
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
STEP: creating secret secrets-1383/secret-test-fd7d4f53-7817-4889-bf8e-00f338fc8cd4 03/09/23 09:22:35.948
STEP: Creating a pod to test consume secrets 03/09/23 09:22:35.954
Mar  9 09:22:35.967: INFO: Waiting up to 5m0s for pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d" in namespace "secrets-1383" to be "Succeeded or Failed"
Mar  9 09:22:35.972: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.71996ms
Mar  9 09:22:37.977: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010001028s
Mar  9 09:22:39.978: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010187181s
Mar  9 09:22:41.978: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010412368s
STEP: Saw pod success 03/09/23 09:22:41.978
Mar  9 09:22:41.978: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d" satisfied condition "Succeeded or Failed"
Mar  9 09:22:41.982: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d container env-test: <nil>
STEP: delete the pod 03/09/23 09:22:41.994
Mar  9 09:22:42.009: INFO: Waiting for pod pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d to disappear
Mar  9 09:22:42.012: INFO: Pod pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 09:22:42.012: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-1383" for this suite. 03/09/23 09:22:42.021
------------------------------
â€¢ [SLOW TEST] [6.108 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:22:35.92
    Mar  9 09:22:35.920: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 09:22:35.922
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:35.938
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:35.943
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:95
    STEP: creating secret secrets-1383/secret-test-fd7d4f53-7817-4889-bf8e-00f338fc8cd4 03/09/23 09:22:35.948
    STEP: Creating a pod to test consume secrets 03/09/23 09:22:35.954
    Mar  9 09:22:35.967: INFO: Waiting up to 5m0s for pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d" in namespace "secrets-1383" to be "Succeeded or Failed"
    Mar  9 09:22:35.972: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.71996ms
    Mar  9 09:22:37.977: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010001028s
    Mar  9 09:22:39.978: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010187181s
    Mar  9 09:22:41.978: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010412368s
    STEP: Saw pod success 03/09/23 09:22:41.978
    Mar  9 09:22:41.978: INFO: Pod "pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d" satisfied condition "Succeeded or Failed"
    Mar  9 09:22:41.982: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d container env-test: <nil>
    STEP: delete the pod 03/09/23 09:22:41.994
    Mar  9 09:22:42.009: INFO: Waiting for pod pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d to disappear
    Mar  9 09:22:42.012: INFO: Pod pod-configmaps-26cfc711-0270-4621-b17d-fb259c19fd7d no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:22:42.012: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-1383" for this suite. 03/09/23 09:22:42.021
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:22:42.03
Mar  9 09:22:42.030: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename dns 03/09/23 09:22:42.032
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:42.047
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:42.052
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
STEP: Creating a test headless service 03/09/23 09:22:42.057
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local;sleep 1; done
 03/09/23 09:22:42.063
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local;sleep 1; done
 03/09/23 09:22:42.064
STEP: creating a pod to probe DNS 03/09/23 09:22:42.064
STEP: submitting the pod to kubernetes 03/09/23 09:22:42.064
Mar  9 09:22:42.077: INFO: Waiting up to 15m0s for pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de" in namespace "dns-4383" to be "running"
Mar  9 09:22:42.081: INFO: Pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de": Phase="Pending", Reason="", readiness=false. Elapsed: 4.727251ms
Mar  9 09:22:44.087: INFO: Pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010342299s
Mar  9 09:22:46.087: INFO: Pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de": Phase="Running", Reason="", readiness=true. Elapsed: 4.01051913s
Mar  9 09:22:46.087: INFO: Pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de" satisfied condition "running"
STEP: retrieving the pod 03/09/23 09:22:46.087
STEP: looking for the results for each expected name from probers 03/09/23 09:22:46.091
Mar  9 09:22:46.098: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:46.103: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:46.108: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:46.114: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:46.119: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:46.124: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:46.129: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:46.134: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:46.134: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

Mar  9 09:22:51.142: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:51.146: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:51.151: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:51.156: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:51.160: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:51.165: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:51.170: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:51.174: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:51.174: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

Mar  9 09:22:56.140: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:56.145: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:56.150: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:56.154: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:56.159: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:56.163: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:56.168: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:56.173: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:22:56.173: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

Mar  9 09:23:01.140: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:01.145: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:01.150: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:01.155: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:01.159: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:01.164: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:01.169: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:01.173: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:01.173: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

Mar  9 09:23:06.139: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:06.147: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:06.152: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:06.157: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:06.161: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:06.165: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:06.170: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:06.174: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:06.174: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

Mar  9 09:23:11.140: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:11.144: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:11.150: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:11.155: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:11.159: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:11.164: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:11.168: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:11.173: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
Mar  9 09:23:11.173: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

Mar  9 09:23:16.176: INFO: DNS probes using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de succeeded

STEP: deleting the pod 03/09/23 09:23:16.176
STEP: deleting the test headless service 03/09/23 09:23:16.2
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Mar  9 09:23:16.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-4383" for this suite. 03/09/23 09:23:16.223
------------------------------
â€¢ [SLOW TEST] [34.200 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:22:42.03
    Mar  9 09:22:42.030: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename dns 03/09/23 09:22:42.032
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:22:42.047
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:22:42.052
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Subdomain [Conformance]
      test/e2e/network/dns.go:290
    STEP: Creating a test headless service 03/09/23 09:22:42.057
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local;sleep 1; done
     03/09/23 09:22:42.063
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4383.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local;sleep 1; done
     03/09/23 09:22:42.064
    STEP: creating a pod to probe DNS 03/09/23 09:22:42.064
    STEP: submitting the pod to kubernetes 03/09/23 09:22:42.064
    Mar  9 09:22:42.077: INFO: Waiting up to 15m0s for pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de" in namespace "dns-4383" to be "running"
    Mar  9 09:22:42.081: INFO: Pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de": Phase="Pending", Reason="", readiness=false. Elapsed: 4.727251ms
    Mar  9 09:22:44.087: INFO: Pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010342299s
    Mar  9 09:22:46.087: INFO: Pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de": Phase="Running", Reason="", readiness=true. Elapsed: 4.01051913s
    Mar  9 09:22:46.087: INFO: Pod "dns-test-fc77ed05-995f-4a99-8fde-978cf54641de" satisfied condition "running"
    STEP: retrieving the pod 03/09/23 09:22:46.087
    STEP: looking for the results for each expected name from probers 03/09/23 09:22:46.091
    Mar  9 09:22:46.098: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:46.103: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:46.108: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:46.114: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:46.119: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:46.124: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:46.129: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:46.134: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:46.134: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

    Mar  9 09:22:51.142: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:51.146: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:51.151: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:51.156: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:51.160: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:51.165: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:51.170: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:51.174: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:51.174: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

    Mar  9 09:22:56.140: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:56.145: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:56.150: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:56.154: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:56.159: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:56.163: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:56.168: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:56.173: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:22:56.173: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

    Mar  9 09:23:01.140: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:01.145: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:01.150: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:01.155: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:01.159: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:01.164: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:01.169: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:01.173: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:01.173: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

    Mar  9 09:23:06.139: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:06.147: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:06.152: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:06.157: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:06.161: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:06.165: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:06.170: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:06.174: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:06.174: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

    Mar  9 09:23:11.140: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:11.144: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:11.150: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:11.155: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:11.159: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:11.164: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:11.168: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:11.173: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local from pod dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de: the server could not find the requested resource (get pods dns-test-fc77ed05-995f-4a99-8fde-978cf54641de)
    Mar  9 09:23:11.173: INFO: Lookups using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4383.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4383.svc.cluster.local jessie_udp@dns-test-service-2.dns-4383.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4383.svc.cluster.local]

    Mar  9 09:23:16.176: INFO: DNS probes using dns-4383/dns-test-fc77ed05-995f-4a99-8fde-978cf54641de succeeded

    STEP: deleting the pod 03/09/23 09:23:16.176
    STEP: deleting the test headless service 03/09/23 09:23:16.2
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:23:16.218: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-4383" for this suite. 03/09/23 09:23:16.223
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:23:16.238
Mar  9 09:23:16.238: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 09:23:16.239
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:23:16.254
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:23:16.259
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
STEP: Creating secret with name s-test-opt-del-71351795-4d1b-46da-94b0-e341d81915cf 03/09/23 09:23:16.268
STEP: Creating secret with name s-test-opt-upd-0934c72e-615e-457c-80ec-822cb8c32689 03/09/23 09:23:16.274
STEP: Creating the pod 03/09/23 09:23:16.28
Mar  9 09:23:16.290: INFO: Waiting up to 5m0s for pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8" in namespace "secrets-7636" to be "running and ready"
Mar  9 09:23:16.295: INFO: Pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8": Phase="Pending", Reason="", readiness=false. Elapsed: 5.726768ms
Mar  9 09:23:16.295: INFO: The phase of Pod pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:23:18.301: INFO: Pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011291611s
Mar  9 09:23:18.301: INFO: The phase of Pod pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:23:20.301: INFO: Pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8": Phase="Running", Reason="", readiness=true. Elapsed: 4.011560773s
Mar  9 09:23:20.301: INFO: The phase of Pod pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8 is Running (Ready = true)
Mar  9 09:23:20.301: INFO: Pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-71351795-4d1b-46da-94b0-e341d81915cf 03/09/23 09:23:20.333
STEP: Updating secret s-test-opt-upd-0934c72e-615e-457c-80ec-822cb8c32689 03/09/23 09:23:20.347
STEP: Creating secret with name s-test-opt-create-4e973e8d-739f-4192-9289-7d2a41a1286d 03/09/23 09:23:20.354
STEP: waiting to observe update in volume 03/09/23 09:23:20.36
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 09:24:50.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-7636" for this suite. 03/09/23 09:24:50.896
------------------------------
â€¢ [SLOW TEST] [94.668 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:23:16.238
    Mar  9 09:23:16.238: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 09:23:16.239
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:23:16.254
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:23:16.259
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:205
    STEP: Creating secret with name s-test-opt-del-71351795-4d1b-46da-94b0-e341d81915cf 03/09/23 09:23:16.268
    STEP: Creating secret with name s-test-opt-upd-0934c72e-615e-457c-80ec-822cb8c32689 03/09/23 09:23:16.274
    STEP: Creating the pod 03/09/23 09:23:16.28
    Mar  9 09:23:16.290: INFO: Waiting up to 5m0s for pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8" in namespace "secrets-7636" to be "running and ready"
    Mar  9 09:23:16.295: INFO: Pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8": Phase="Pending", Reason="", readiness=false. Elapsed: 5.726768ms
    Mar  9 09:23:16.295: INFO: The phase of Pod pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:23:18.301: INFO: Pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011291611s
    Mar  9 09:23:18.301: INFO: The phase of Pod pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:23:20.301: INFO: Pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8": Phase="Running", Reason="", readiness=true. Elapsed: 4.011560773s
    Mar  9 09:23:20.301: INFO: The phase of Pod pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8 is Running (Ready = true)
    Mar  9 09:23:20.301: INFO: Pod "pod-secrets-f84773db-3a0f-49b9-a3bf-e3aacf4f37f8" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-71351795-4d1b-46da-94b0-e341d81915cf 03/09/23 09:23:20.333
    STEP: Updating secret s-test-opt-upd-0934c72e-615e-457c-80ec-822cb8c32689 03/09/23 09:23:20.347
    STEP: Creating secret with name s-test-opt-create-4e973e8d-739f-4192-9289-7d2a41a1286d 03/09/23 09:23:20.354
    STEP: waiting to observe update in volume 03/09/23 09:23:20.36
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:24:50.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-7636" for this suite. 03/09/23 09:24:50.896
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:24:50.908
Mar  9 09:24:50.908: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename tables 03/09/23 09:24:50.91
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:50.926
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:50.931
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/node/init/init.go:32
Mar  9 09:24:50.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  tear down framework | framework.go:193
STEP: Destroying namespace "tables-1294" for this suite. 03/09/23 09:24:50.946
------------------------------
â€¢ [0.047 seconds]
[sig-api-machinery] Servers with support for Table transformation
test/e2e/apimachinery/framework.go:23
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:24:50.908
    Mar  9 09:24:50.908: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename tables 03/09/23 09:24:50.91
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:50.926
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:50.931
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/apimachinery/table_conversion.go:49
    [It] should return a 406 for a backend which does not implement metadata [Conformance]
      test/e2e/apimachinery/table_conversion.go:154
    [AfterEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:24:50.940: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      tear down framework | framework.go:193
    STEP: Destroying namespace "tables-1294" for this suite. 03/09/23 09:24:50.946
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:24:50.959
Mar  9 09:24:50.959: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 09:24:50.961
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:50.978
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:50.983
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 09:24:51.005
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 09:24:52.11
STEP: Deploying the webhook pod 03/09/23 09:24:52.122
STEP: Wait for the deployment to be ready 03/09/23 09:24:52.136
Mar  9 09:24:52.146: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 09:24:54.16
STEP: Verifying the service has paired with the endpoint 03/09/23 09:24:54.177
Mar  9 09:24:55.178: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
STEP: Registering the mutating pod webhook via the AdmissionRegistration API 03/09/23 09:24:55.182
STEP: create a pod that should be updated by the webhook 03/09/23 09:24:55.21
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:24:55.250: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-3894" for this suite. 03/09/23 09:24:55.308
STEP: Destroying namespace "webhook-3894-markers" for this suite. 03/09/23 09:24:55.315
------------------------------
â€¢ [4.364 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:24:50.959
    Mar  9 09:24:50.959: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 09:24:50.961
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:50.978
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:50.983
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 09:24:51.005
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 09:24:52.11
    STEP: Deploying the webhook pod 03/09/23 09:24:52.122
    STEP: Wait for the deployment to be ready 03/09/23 09:24:52.136
    Mar  9 09:24:52.146: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 09:24:54.16
    STEP: Verifying the service has paired with the endpoint 03/09/23 09:24:54.177
    Mar  9 09:24:55.178: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate pod and apply defaults after mutation [Conformance]
      test/e2e/apimachinery/webhook.go:264
    STEP: Registering the mutating pod webhook via the AdmissionRegistration API 03/09/23 09:24:55.182
    STEP: create a pod that should be updated by the webhook 03/09/23 09:24:55.21
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:24:55.250: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-3894" for this suite. 03/09/23 09:24:55.308
    STEP: Destroying namespace "webhook-3894-markers" for this suite. 03/09/23 09:24:55.315
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:24:55.325
Mar  9 09:24:55.325: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:24:55.327
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:55.353
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:55.358
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
STEP: Creating configMap with name projected-configmap-test-volume-map-7319ee9c-b740-488d-8385-fa8b5c6e6ac2 03/09/23 09:24:55.367
STEP: Creating a pod to test consume configMaps 03/09/23 09:24:55.373
Mar  9 09:24:55.386: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71" in namespace "projected-1220" to be "Succeeded or Failed"
Mar  9 09:24:55.390: INFO: Pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71": Phase="Pending", Reason="", readiness=false. Elapsed: 4.057338ms
Mar  9 09:24:57.395: INFO: Pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00951256s
Mar  9 09:24:59.395: INFO: Pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00928403s
STEP: Saw pod success 03/09/23 09:24:59.395
Mar  9 09:24:59.395: INFO: Pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71" satisfied condition "Succeeded or Failed"
Mar  9 09:24:59.399: INFO: Trying to get logs from node k8s-worker2 pod pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71 container agnhost-container: <nil>
STEP: delete the pod 03/09/23 09:24:59.433
Mar  9 09:24:59.446: INFO: Waiting for pod pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71 to disappear
Mar  9 09:24:59.449: INFO: Pod pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:24:59.449: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1220" for this suite. 03/09/23 09:24:59.455
------------------------------
â€¢ [4.137 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:24:55.325
    Mar  9 09:24:55.325: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:24:55.327
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:55.353
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:55.358
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:99
    STEP: Creating configMap with name projected-configmap-test-volume-map-7319ee9c-b740-488d-8385-fa8b5c6e6ac2 03/09/23 09:24:55.367
    STEP: Creating a pod to test consume configMaps 03/09/23 09:24:55.373
    Mar  9 09:24:55.386: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71" in namespace "projected-1220" to be "Succeeded or Failed"
    Mar  9 09:24:55.390: INFO: Pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71": Phase="Pending", Reason="", readiness=false. Elapsed: 4.057338ms
    Mar  9 09:24:57.395: INFO: Pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00951256s
    Mar  9 09:24:59.395: INFO: Pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.00928403s
    STEP: Saw pod success 03/09/23 09:24:59.395
    Mar  9 09:24:59.395: INFO: Pod "pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71" satisfied condition "Succeeded or Failed"
    Mar  9 09:24:59.399: INFO: Trying to get logs from node k8s-worker2 pod pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71 container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 09:24:59.433
    Mar  9 09:24:59.446: INFO: Waiting for pod pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71 to disappear
    Mar  9 09:24:59.449: INFO: Pod pod-projected-configmaps-67a1ea5a-4568-440b-962f-e8628e93dd71 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:24:59.449: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1220" for this suite. 03/09/23 09:24:59.455
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:24:59.466
Mar  9 09:24:59.466: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename namespaces 03/09/23 09:24:59.468
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:59.484
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:59.489
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
STEP: creating a Namespace 03/09/23 09:24:59.494
STEP: patching the Namespace 03/09/23 09:24:59.509
STEP: get the Namespace and ensuring it has the label 03/09/23 09:24:59.519
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:24:59.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-7237" for this suite. 03/09/23 09:24:59.528
STEP: Destroying namespace "nspatchtest-9e3b5e9d-d357-44ae-a339-976f12baac67-5656" for this suite. 03/09/23 09:24:59.535
------------------------------
â€¢ [0.077 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:24:59.466
    Mar  9 09:24:59.466: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename namespaces 03/09/23 09:24:59.468
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:59.484
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:59.489
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:268
    STEP: creating a Namespace 03/09/23 09:24:59.494
    STEP: patching the Namespace 03/09/23 09:24:59.509
    STEP: get the Namespace and ensuring it has the label 03/09/23 09:24:59.519
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:24:59.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-7237" for this suite. 03/09/23 09:24:59.528
    STEP: Destroying namespace "nspatchtest-9e3b5e9d-d357-44ae-a339-976f12baac67-5656" for this suite. 03/09/23 09:24:59.535
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:24:59.545
Mar  9 09:24:59.545: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 09:24:59.546
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:59.56
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:59.565
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
STEP: Creating a pod to test downward API volume plugin 03/09/23 09:24:59.57
Mar  9 09:24:59.582: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c" in namespace "downward-api-533" to be "Succeeded or Failed"
Mar  9 09:24:59.586: INFO: Pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.077933ms
Mar  9 09:25:01.591: INFO: Pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009008351s
Mar  9 09:25:03.592: INFO: Pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010296514s
STEP: Saw pod success 03/09/23 09:25:03.592
Mar  9 09:25:03.592: INFO: Pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c" satisfied condition "Succeeded or Failed"
Mar  9 09:25:03.596: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c container client-container: <nil>
STEP: delete the pod 03/09/23 09:25:03.605
Mar  9 09:25:03.618: INFO: Waiting for pod downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c to disappear
Mar  9 09:25:03.621: INFO: Pod downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 09:25:03.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-533" for this suite. 03/09/23 09:25:03.628
------------------------------
â€¢ [4.092 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:24:59.545
    Mar  9 09:24:59.545: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 09:24:59.546
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:24:59.56
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:24:59.565
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:221
    STEP: Creating a pod to test downward API volume plugin 03/09/23 09:24:59.57
    Mar  9 09:24:59.582: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c" in namespace "downward-api-533" to be "Succeeded or Failed"
    Mar  9 09:24:59.586: INFO: Pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.077933ms
    Mar  9 09:25:01.591: INFO: Pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009008351s
    Mar  9 09:25:03.592: INFO: Pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010296514s
    STEP: Saw pod success 03/09/23 09:25:03.592
    Mar  9 09:25:03.592: INFO: Pod "downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c" satisfied condition "Succeeded or Failed"
    Mar  9 09:25:03.596: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c container client-container: <nil>
    STEP: delete the pod 03/09/23 09:25:03.605
    Mar  9 09:25:03.618: INFO: Waiting for pod downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c to disappear
    Mar  9 09:25:03.621: INFO: Pod downwardapi-volume-cf9a336b-aa9e-4719-a682-c7f5ef45026c no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:25:03.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-533" for this suite. 03/09/23 09:25:03.628
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:25:03.637
Mar  9 09:25:03.637: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename statefulset 03/09/23 09:25:03.639
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:03.675
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:03.68
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-2837 03/09/23 09:25:03.685
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
STEP: Creating statefulset ss in namespace statefulset-2837 03/09/23 09:25:03.698
Mar  9 09:25:03.710: INFO: Found 0 stateful pods, waiting for 1
Mar  9 09:25:13.714: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label 03/09/23 09:25:13.721
STEP: Getting /status 03/09/23 09:25:13.733
Mar  9 09:25:13.739: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status 03/09/23 09:25:13.739
Mar  9 09:25:13.751: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated 03/09/23 09:25:13.751
Mar  9 09:25:13.754: INFO: Observed &StatefulSet event: ADDED
Mar  9 09:25:13.754: INFO: Found Statefulset ss in namespace statefulset-2837 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Mar  9 09:25:13.754: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status 03/09/23 09:25:13.754
Mar  9 09:25:13.755: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Mar  9 09:25:13.765: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched 03/09/23 09:25:13.765
Mar  9 09:25:13.768: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar  9 09:25:13.768: INFO: Deleting all statefulset in ns statefulset-2837
Mar  9 09:25:13.771: INFO: Scaling statefulset ss to 0
Mar  9 09:25:23.791: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 09:25:23.804: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar  9 09:25:23.822: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-2837" for this suite. 03/09/23 09:25:23.828
------------------------------
â€¢ [SLOW TEST] [20.198 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/apps/statefulset.go:977

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:25:03.637
    Mar  9 09:25:03.637: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename statefulset 03/09/23 09:25:03.639
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:03.675
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:03.68
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-2837 03/09/23 09:25:03.685
    [It] should validate Statefulset Status endpoints [Conformance]
      test/e2e/apps/statefulset.go:977
    STEP: Creating statefulset ss in namespace statefulset-2837 03/09/23 09:25:03.698
    Mar  9 09:25:03.710: INFO: Found 0 stateful pods, waiting for 1
    Mar  9 09:25:13.714: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Patch Statefulset to include a label 03/09/23 09:25:13.721
    STEP: Getting /status 03/09/23 09:25:13.733
    Mar  9 09:25:13.739: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
    STEP: updating the StatefulSet Status 03/09/23 09:25:13.739
    Mar  9 09:25:13.751: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the statefulset status to be updated 03/09/23 09:25:13.751
    Mar  9 09:25:13.754: INFO: Observed &StatefulSet event: ADDED
    Mar  9 09:25:13.754: INFO: Found Statefulset ss in namespace statefulset-2837 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Mar  9 09:25:13.754: INFO: Statefulset ss has an updated status
    STEP: patching the Statefulset Status 03/09/23 09:25:13.754
    Mar  9 09:25:13.755: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Mar  9 09:25:13.765: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Statefulset status to be patched 03/09/23 09:25:13.765
    Mar  9 09:25:13.768: INFO: Observed &StatefulSet event: ADDED
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar  9 09:25:13.768: INFO: Deleting all statefulset in ns statefulset-2837
    Mar  9 09:25:13.771: INFO: Scaling statefulset ss to 0
    Mar  9 09:25:23.791: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 09:25:23.804: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:25:23.822: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-2837" for this suite. 03/09/23 09:25:23.828
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:25:23.836
Mar  9 09:25:23.836: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename runtimeclass 03/09/23 09:25:23.839
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:23.854
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:23.859
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
Mar  9 09:25:23.879: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-417 to be scheduled
Mar  9 09:25:23.883: INFO: 1 pods are not scheduled: [runtimeclass-417/test-runtimeclass-runtimeclass-417-preconfigured-handler-86h7b(bb635324-c54f-4e1f-b432-facce621edf8)]
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Mar  9 09:25:25.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-417" for this suite. 03/09/23 09:25:25.902
------------------------------
â€¢ [2.074 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:25:23.836
    Mar  9 09:25:23.836: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename runtimeclass 03/09/23 09:25:23.839
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:23.854
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:23.859
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:104
    Mar  9 09:25:23.879: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-417 to be scheduled
    Mar  9 09:25:23.883: INFO: 1 pods are not scheduled: [runtimeclass-417/test-runtimeclass-runtimeclass-417-preconfigured-handler-86h7b(bb635324-c54f-4e1f-b432-facce621edf8)]
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:25:25.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-417" for this suite. 03/09/23 09:25:25.902
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:25:25.913
Mar  9 09:25:25.913: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename webhook 03/09/23 09:25:25.915
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:25.93
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:25.935
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 03/09/23 09:25:25.957
STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 09:25:26.909
STEP: Deploying the webhook pod 03/09/23 09:25:26.917
STEP: Wait for the deployment to be ready 03/09/23 09:25:26.931
Mar  9 09:25:26.941: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 03/09/23 09:25:28.954
STEP: Verifying the service has paired with the endpoint 03/09/23 09:25:28.973
Mar  9 09:25:29.973: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 03/09/23 09:25:29.977
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 03/09/23 09:25:30.005
STEP: Creating a dummy validating-webhook-configuration object 03/09/23 09:25:30.033
STEP: Deleting the validating-webhook-configuration, which should be possible to remove 03/09/23 09:25:30.045
STEP: Creating a dummy mutating-webhook-configuration object 03/09/23 09:25:30.052
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 03/09/23 09:25:30.064
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:25:30.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5220" for this suite. 03/09/23 09:25:30.138
STEP: Destroying namespace "webhook-5220-markers" for this suite. 03/09/23 09:25:30.147
------------------------------
â€¢ [4.243 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:25:25.913
    Mar  9 09:25:25.913: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename webhook 03/09/23 09:25:25.915
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:25.93
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:25.935
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 03/09/23 09:25:25.957
    STEP: Create role binding to let webhook read extension-apiserver-authentication 03/09/23 09:25:26.909
    STEP: Deploying the webhook pod 03/09/23 09:25:26.917
    STEP: Wait for the deployment to be ready 03/09/23 09:25:26.931
    Mar  9 09:25:26.941: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 03/09/23 09:25:28.954
    STEP: Verifying the service has paired with the endpoint 03/09/23 09:25:28.973
    Mar  9 09:25:29.973: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
      test/e2e/apimachinery/webhook.go:277
    STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 03/09/23 09:25:29.977
    STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 03/09/23 09:25:30.005
    STEP: Creating a dummy validating-webhook-configuration object 03/09/23 09:25:30.033
    STEP: Deleting the validating-webhook-configuration, which should be possible to remove 03/09/23 09:25:30.045
    STEP: Creating a dummy mutating-webhook-configuration object 03/09/23 09:25:30.052
    STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 03/09/23 09:25:30.064
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:25:30.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5220" for this suite. 03/09/23 09:25:30.138
    STEP: Destroying namespace "webhook-5220-markers" for this suite. 03/09/23 09:25:30.147
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:25:30.159
Mar  9 09:25:30.159: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename init-container 03/09/23 09:25:30.161
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:30.177
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:30.183
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
STEP: creating the pod 03/09/23 09:25:30.189
Mar  9 09:25:30.189: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:25:35.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-6389" for this suite. 03/09/23 09:25:35.249
------------------------------
â€¢ [SLOW TEST] [5.097 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:25:30.159
    Mar  9 09:25:30.159: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename init-container 03/09/23 09:25:30.161
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:30.177
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:30.183
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:458
    STEP: creating the pod 03/09/23 09:25:30.189
    Mar  9 09:25:30.189: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:25:35.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-6389" for this suite. 03/09/23 09:25:35.249
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:25:35.265
Mar  9 09:25:35.265: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 09:25:35.267
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:35.286
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:35.291
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
STEP: creating pod 03/09/23 09:25:35.295
Mar  9 09:25:35.304: INFO: Waiting up to 5m0s for pod "pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d" in namespace "pods-5785" to be "running and ready"
Mar  9 09:25:35.308: INFO: Pod "pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.959555ms
Mar  9 09:25:35.308: INFO: The phase of Pod pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:25:37.313: INFO: Pod "pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d": Phase="Running", Reason="", readiness=true. Elapsed: 2.009273084s
Mar  9 09:25:37.313: INFO: The phase of Pod pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d is Running (Ready = true)
Mar  9 09:25:37.313: INFO: Pod "pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d" satisfied condition "running and ready"
Mar  9 09:25:37.321: INFO: Pod pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d has hostIP: 192.168.0.102
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 09:25:37.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-5785" for this suite. 03/09/23 09:25:37.328
------------------------------
â€¢ [2.070 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:25:35.265
    Mar  9 09:25:35.265: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 09:25:35.267
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:35.286
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:35.291
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should get a host IP [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:204
    STEP: creating pod 03/09/23 09:25:35.295
    Mar  9 09:25:35.304: INFO: Waiting up to 5m0s for pod "pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d" in namespace "pods-5785" to be "running and ready"
    Mar  9 09:25:35.308: INFO: Pod "pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.959555ms
    Mar  9 09:25:35.308: INFO: The phase of Pod pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:25:37.313: INFO: Pod "pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d": Phase="Running", Reason="", readiness=true. Elapsed: 2.009273084s
    Mar  9 09:25:37.313: INFO: The phase of Pod pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d is Running (Ready = true)
    Mar  9 09:25:37.313: INFO: Pod "pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d" satisfied condition "running and ready"
    Mar  9 09:25:37.321: INFO: Pod pod-hostip-140aeb8e-c0e6-42fb-a46b-a5298db8943d has hostIP: 192.168.0.102
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:25:37.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-5785" for this suite. 03/09/23 09:25:37.328
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:25:37.336
Mar  9 09:25:37.337: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:25:37.339
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:37.354
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:37.359
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
STEP: Creating projection with secret that has name projected-secret-test-9bd88051-e175-472f-b4ac-53bf4cc28c40 03/09/23 09:25:37.364
STEP: Creating a pod to test consume secrets 03/09/23 09:25:37.371
Mar  9 09:25:37.382: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076" in namespace "projected-7871" to be "Succeeded or Failed"
Mar  9 09:25:37.386: INFO: Pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076": Phase="Pending", Reason="", readiness=false. Elapsed: 4.282189ms
Mar  9 09:25:39.391: INFO: Pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008882266s
Mar  9 09:25:41.392: INFO: Pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010085021s
STEP: Saw pod success 03/09/23 09:25:41.392
Mar  9 09:25:41.392: INFO: Pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076" satisfied condition "Succeeded or Failed"
Mar  9 09:25:41.396: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076 container projected-secret-volume-test: <nil>
STEP: delete the pod 03/09/23 09:25:41.404
Mar  9 09:25:41.418: INFO: Waiting for pod pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076 to disappear
Mar  9 09:25:41.422: INFO: Pod pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Mar  9 09:25:41.422: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7871" for this suite. 03/09/23 09:25:41.428
------------------------------
â€¢ [4.099 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:25:37.336
    Mar  9 09:25:37.337: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:25:37.339
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:37.354
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:37.359
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:46
    STEP: Creating projection with secret that has name projected-secret-test-9bd88051-e175-472f-b4ac-53bf4cc28c40 03/09/23 09:25:37.364
    STEP: Creating a pod to test consume secrets 03/09/23 09:25:37.371
    Mar  9 09:25:37.382: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076" in namespace "projected-7871" to be "Succeeded or Failed"
    Mar  9 09:25:37.386: INFO: Pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076": Phase="Pending", Reason="", readiness=false. Elapsed: 4.282189ms
    Mar  9 09:25:39.391: INFO: Pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008882266s
    Mar  9 09:25:41.392: INFO: Pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010085021s
    STEP: Saw pod success 03/09/23 09:25:41.392
    Mar  9 09:25:41.392: INFO: Pod "pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076" satisfied condition "Succeeded or Failed"
    Mar  9 09:25:41.396: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076 container projected-secret-volume-test: <nil>
    STEP: delete the pod 03/09/23 09:25:41.404
    Mar  9 09:25:41.418: INFO: Waiting for pod pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076 to disappear
    Mar  9 09:25:41.422: INFO: Pod pod-projected-secrets-a539e1ca-50b4-4b1e-94ff-b6357d522076 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:25:41.422: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7871" for this suite. 03/09/23 09:25:41.428
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:25:41.438
Mar  9 09:25:41.439: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename limitrange 03/09/23 09:25:41.44
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:41.456
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:41.462
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
STEP: Creating a LimitRange 03/09/23 09:25:41.467
STEP: Setting up watch 03/09/23 09:25:41.467
STEP: Submitting a LimitRange 03/09/23 09:25:41.572
STEP: Verifying LimitRange creation was observed 03/09/23 09:25:41.583
STEP: Fetching the LimitRange to ensure it has proper values 03/09/23 09:25:41.583
Mar  9 09:25:41.589: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Mar  9 09:25:41.589: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements 03/09/23 09:25:41.589
STEP: Ensuring Pod has resource requirements applied from LimitRange 03/09/23 09:25:41.598
Mar  9 09:25:41.602: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Mar  9 09:25:41.602: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements 03/09/23 09:25:41.602
STEP: Ensuring Pod has merged resource requirements applied from LimitRange 03/09/23 09:25:41.611
Mar  9 09:25:41.616: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Mar  9 09:25:41.616: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources 03/09/23 09:25:41.616
STEP: Failing to create a Pod with more than max resources 03/09/23 09:25:41.62
STEP: Updating a LimitRange 03/09/23 09:25:41.624
STEP: Verifying LimitRange updating is effective 03/09/23 09:25:41.633
STEP: Creating a Pod with less than former min resources 03/09/23 09:25:43.639
STEP: Failing to create a Pod with more than max resources 03/09/23 09:25:43.646
STEP: Deleting a LimitRange 03/09/23 09:25:43.651
STEP: Verifying the LimitRange was deleted 03/09/23 09:25:43.658
Mar  9 09:25:48.662: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources 03/09/23 09:25:48.662
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Mar  9 09:25:48.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-7867" for this suite. 03/09/23 09:25:48.681
------------------------------
â€¢ [SLOW TEST] [7.251 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:25:41.438
    Mar  9 09:25:41.439: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename limitrange 03/09/23 09:25:41.44
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:41.456
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:41.462
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
      test/e2e/scheduling/limit_range.go:61
    STEP: Creating a LimitRange 03/09/23 09:25:41.467
    STEP: Setting up watch 03/09/23 09:25:41.467
    STEP: Submitting a LimitRange 03/09/23 09:25:41.572
    STEP: Verifying LimitRange creation was observed 03/09/23 09:25:41.583
    STEP: Fetching the LimitRange to ensure it has proper values 03/09/23 09:25:41.583
    Mar  9 09:25:41.589: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Mar  9 09:25:41.589: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with no resource requirements 03/09/23 09:25:41.589
    STEP: Ensuring Pod has resource requirements applied from LimitRange 03/09/23 09:25:41.598
    Mar  9 09:25:41.602: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Mar  9 09:25:41.602: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with partial resource requirements 03/09/23 09:25:41.602
    STEP: Ensuring Pod has merged resource requirements applied from LimitRange 03/09/23 09:25:41.611
    Mar  9 09:25:41.616: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
    Mar  9 09:25:41.616: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Failing to create a Pod with less than min resources 03/09/23 09:25:41.616
    STEP: Failing to create a Pod with more than max resources 03/09/23 09:25:41.62
    STEP: Updating a LimitRange 03/09/23 09:25:41.624
    STEP: Verifying LimitRange updating is effective 03/09/23 09:25:41.633
    STEP: Creating a Pod with less than former min resources 03/09/23 09:25:43.639
    STEP: Failing to create a Pod with more than max resources 03/09/23 09:25:43.646
    STEP: Deleting a LimitRange 03/09/23 09:25:43.651
    STEP: Verifying the LimitRange was deleted 03/09/23 09:25:43.658
    Mar  9 09:25:48.662: INFO: limitRange is already deleted
    STEP: Creating a Pod with more than former max resources 03/09/23 09:25:48.662
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:25:48.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-7867" for this suite. 03/09/23 09:25:48.681
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:25:48.691
Mar  9 09:25:48.691: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 09:25:48.693
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:48.71
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:48.715
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
STEP: set up a multi version CRD 03/09/23 09:25:48.72
Mar  9 09:25:48.721: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: mark a version not serverd 03/09/23 09:25:54.854
STEP: check the unserved version gets removed 03/09/23 09:25:54.892
STEP: check the other version is not changed 03/09/23 09:25:56.317
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:26:00.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-5176" for this suite. 03/09/23 09:26:00.853
------------------------------
â€¢ [SLOW TEST] [12.169 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:25:48.691
    Mar  9 09:25:48.691: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename crd-publish-openapi 03/09/23 09:25:48.693
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:25:48.71
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:25:48.715
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] removes definition from spec when one version gets changed to not be served [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:442
    STEP: set up a multi version CRD 03/09/23 09:25:48.72
    Mar  9 09:25:48.721: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: mark a version not serverd 03/09/23 09:25:54.854
    STEP: check the unserved version gets removed 03/09/23 09:25:54.892
    STEP: check the other version is not changed 03/09/23 09:25:56.317
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:26:00.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-5176" for this suite. 03/09/23 09:26:00.853
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:26:00.866
Mar  9 09:26:00.866: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-probe 03/09/23 09:26:00.868
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:26:00.885
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:26:00.892
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
STEP: Creating pod liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e in namespace container-probe-8937 03/09/23 09:26:00.897
Mar  9 09:26:00.909: INFO: Waiting up to 5m0s for pod "liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e" in namespace "container-probe-8937" to be "not pending"
Mar  9 09:26:00.913: INFO: Pod "liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.186096ms
Mar  9 09:26:02.919: INFO: Pod "liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e": Phase="Running", Reason="", readiness=true. Elapsed: 2.009787049s
Mar  9 09:26:02.919: INFO: Pod "liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e" satisfied condition "not pending"
Mar  9 09:26:02.919: INFO: Started pod liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e in namespace container-probe-8937
STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 09:26:02.919
Mar  9 09:26:02.923: INFO: Initial restart count of pod liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e is 0
STEP: deleting the pod 03/09/23 09:30:03.587
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar  9 09:30:03.610: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-8937" for this suite. 03/09/23 09:30:03.616
------------------------------
â€¢ [SLOW TEST] [242.757 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:26:00.866
    Mar  9 09:26:00.866: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-probe 03/09/23 09:26:00.868
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:26:00.885
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:26:00.892
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:184
    STEP: Creating pod liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e in namespace container-probe-8937 03/09/23 09:26:00.897
    Mar  9 09:26:00.909: INFO: Waiting up to 5m0s for pod "liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e" in namespace "container-probe-8937" to be "not pending"
    Mar  9 09:26:00.913: INFO: Pod "liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.186096ms
    Mar  9 09:26:02.919: INFO: Pod "liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e": Phase="Running", Reason="", readiness=true. Elapsed: 2.009787049s
    Mar  9 09:26:02.919: INFO: Pod "liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e" satisfied condition "not pending"
    Mar  9 09:26:02.919: INFO: Started pod liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e in namespace container-probe-8937
    STEP: checking the pod's current state and verifying that restartCount is present 03/09/23 09:26:02.919
    Mar  9 09:26:02.923: INFO: Initial restart count of pod liveness-ca10168c-a300-45f2-8d75-bf505f9cea6e is 0
    STEP: deleting the pod 03/09/23 09:30:03.587
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:30:03.610: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-8937" for this suite. 03/09/23 09:30:03.616
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin]
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:30:03.627
Mar  9 09:30:03.627: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename certificates 03/09/23 09:30:03.629
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:03.644
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:03.649
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
STEP: getting /apis 03/09/23 09:30:04.431
STEP: getting /apis/certificates.k8s.io 03/09/23 09:30:04.436
STEP: getting /apis/certificates.k8s.io/v1 03/09/23 09:30:04.438
STEP: creating 03/09/23 09:30:04.44
STEP: getting 03/09/23 09:30:04.459
STEP: listing 03/09/23 09:30:04.463
STEP: watching 03/09/23 09:30:04.467
Mar  9 09:30:04.467: INFO: starting watch
STEP: patching 03/09/23 09:30:04.468
STEP: updating 03/09/23 09:30:04.476
Mar  9 09:30:04.485: INFO: waiting for watch events with expected annotations
Mar  9 09:30:04.485: INFO: saw patched and updated annotations
STEP: getting /approval 03/09/23 09:30:04.485
STEP: patching /approval 03/09/23 09:30:04.489
STEP: updating /approval 03/09/23 09:30:04.498
STEP: getting /status 03/09/23 09:30:04.506
STEP: patching /status 03/09/23 09:30:04.514
STEP: updating /status 03/09/23 09:30:04.525
STEP: deleting 03/09/23 09:30:04.535
STEP: deleting a collection 03/09/23 09:30:04.548
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:30:04.565: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "certificates-3917" for this suite. 03/09/23 09:30:04.57
------------------------------
â€¢ [0.950 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin]
test/e2e/auth/framework.go:23
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:30:03.627
    Mar  9 09:30:03.627: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename certificates 03/09/23 09:30:03.629
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:03.644
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:03.649
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSR API operations [Conformance]
      test/e2e/auth/certificates.go:200
    STEP: getting /apis 03/09/23 09:30:04.431
    STEP: getting /apis/certificates.k8s.io 03/09/23 09:30:04.436
    STEP: getting /apis/certificates.k8s.io/v1 03/09/23 09:30:04.438
    STEP: creating 03/09/23 09:30:04.44
    STEP: getting 03/09/23 09:30:04.459
    STEP: listing 03/09/23 09:30:04.463
    STEP: watching 03/09/23 09:30:04.467
    Mar  9 09:30:04.467: INFO: starting watch
    STEP: patching 03/09/23 09:30:04.468
    STEP: updating 03/09/23 09:30:04.476
    Mar  9 09:30:04.485: INFO: waiting for watch events with expected annotations
    Mar  9 09:30:04.485: INFO: saw patched and updated annotations
    STEP: getting /approval 03/09/23 09:30:04.485
    STEP: patching /approval 03/09/23 09:30:04.489
    STEP: updating /approval 03/09/23 09:30:04.498
    STEP: getting /status 03/09/23 09:30:04.506
    STEP: patching /status 03/09/23 09:30:04.514
    STEP: updating /status 03/09/23 09:30:04.525
    STEP: deleting 03/09/23 09:30:04.535
    STEP: deleting a collection 03/09/23 09:30:04.548
    [AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:30:04.565: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "certificates-3917" for this suite. 03/09/23 09:30:04.57
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] server version
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
[BeforeEach] [sig-api-machinery] server version
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:30:04.578
Mar  9 09:30:04.578: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename server-version 03/09/23 09:30:04.58
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:04.595
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:04.6
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:31
[It] should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
STEP: Request ServerVersion 03/09/23 09:30:04.605
STEP: Confirm major version 03/09/23 09:30:04.607
Mar  9 09:30:04.607: INFO: Major version: 1
STEP: Confirm minor version 03/09/23 09:30:04.607
Mar  9 09:30:04.607: INFO: cleanMinorVersion: 26
Mar  9 09:30:04.607: INFO: Minor version: 26
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/node/init/init.go:32
Mar  9 09:30:04.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] server version
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] server version
  tear down framework | framework.go:193
STEP: Destroying namespace "server-version-2988" for this suite. 03/09/23 09:30:04.614
------------------------------
â€¢ [0.044 seconds]
[sig-api-machinery] server version
test/e2e/apimachinery/framework.go:23
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] server version
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:30:04.578
    Mar  9 09:30:04.578: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename server-version 03/09/23 09:30:04.58
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:04.595
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:04.6
    [BeforeEach] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:31
    [It] should find the server version [Conformance]
      test/e2e/apimachinery/server_version.go:39
    STEP: Request ServerVersion 03/09/23 09:30:04.605
    STEP: Confirm major version 03/09/23 09:30:04.607
    Mar  9 09:30:04.607: INFO: Major version: 1
    STEP: Confirm minor version 03/09/23 09:30:04.607
    Mar  9 09:30:04.607: INFO: cleanMinorVersion: 26
    Mar  9 09:30:04.607: INFO: Minor version: 26
    [AfterEach] [sig-api-machinery] server version
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:30:04.608: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] server version
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] server version
      tear down framework | framework.go:193
    STEP: Destroying namespace "server-version-2988" for this suite. 03/09/23 09:30:04.614
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:30:04.625
Mar  9 09:30:04.626: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename gc 03/09/23 09:30:04.628
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:04.642
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:04.647
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
STEP: create the rc 03/09/23 09:30:04.652
STEP: delete the rc 03/09/23 09:30:09.666
STEP: wait for all pods to be garbage collected 03/09/23 09:30:09.673
STEP: Gathering metrics 03/09/23 09:30:14.682
Mar  9 09:30:14.727: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
Mar  9 09:30:14.731: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 4.303041ms
Mar  9 09:30:14.731: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
Mar  9 09:30:14.731: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
Mar  9 09:30:14.910: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar  9 09:30:14.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-9517" for this suite. 03/09/23 09:30:14.916
------------------------------
â€¢ [SLOW TEST] [10.300 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:30:04.625
    Mar  9 09:30:04.626: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename gc 03/09/23 09:30:04.628
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:04.642
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:04.647
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete pods created by rc when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:312
    STEP: create the rc 03/09/23 09:30:04.652
    STEP: delete the rc 03/09/23 09:30:09.666
    STEP: wait for all pods to be garbage collected 03/09/23 09:30:09.673
    STEP: Gathering metrics 03/09/23 09:30:14.682
    Mar  9 09:30:14.727: INFO: Waiting up to 5m0s for pod "kube-controller-manager-k8s-master" in namespace "kube-system" to be "running and ready"
    Mar  9 09:30:14.731: INFO: Pod "kube-controller-manager-k8s-master": Phase="Running", Reason="", readiness=true. Elapsed: 4.303041ms
    Mar  9 09:30:14.731: INFO: The phase of Pod kube-controller-manager-k8s-master is Running (Ready = true)
    Mar  9 09:30:14.731: INFO: Pod "kube-controller-manager-k8s-master" satisfied condition "running and ready"
    Mar  9 09:30:14.910: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:30:14.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-9517" for this suite. 03/09/23 09:30:14.916
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:30:14.928
Mar  9 09:30:14.928: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename subpath 03/09/23 09:30:14.93
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:14.947
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:14.952
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/09/23 09:30:14.957
[It] should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
STEP: Creating pod pod-subpath-test-secret-f8r2 03/09/23 09:30:14.969
STEP: Creating a pod to test atomic-volume-subpath 03/09/23 09:30:14.969
Mar  9 09:30:14.981: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-f8r2" in namespace "subpath-7110" to be "Succeeded or Failed"
Mar  9 09:30:14.985: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.872631ms
Mar  9 09:30:16.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 2.009343203s
Mar  9 09:30:18.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 4.008502072s
Mar  9 09:30:20.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 6.008915282s
Mar  9 09:30:22.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 8.009855986s
Mar  9 09:30:24.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 10.009433435s
Mar  9 09:30:26.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 12.009668572s
Mar  9 09:30:28.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 14.008610225s
Mar  9 09:30:30.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 16.008842629s
Mar  9 09:30:32.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 18.009592206s
Mar  9 09:30:34.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 20.009236057s
Mar  9 09:30:36.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=false. Elapsed: 22.009151007s
Mar  9 09:30:38.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.009042879s
STEP: Saw pod success 03/09/23 09:30:38.99
Mar  9 09:30:38.990: INFO: Pod "pod-subpath-test-secret-f8r2" satisfied condition "Succeeded or Failed"
Mar  9 09:30:38.995: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-secret-f8r2 container test-container-subpath-secret-f8r2: <nil>
STEP: delete the pod 03/09/23 09:30:39.029
Mar  9 09:30:39.043: INFO: Waiting for pod pod-subpath-test-secret-f8r2 to disappear
Mar  9 09:30:39.047: INFO: Pod pod-subpath-test-secret-f8r2 no longer exists
STEP: Deleting pod pod-subpath-test-secret-f8r2 03/09/23 09:30:39.047
Mar  9 09:30:39.047: INFO: Deleting pod "pod-subpath-test-secret-f8r2" in namespace "subpath-7110"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar  9 09:30:39.050: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-7110" for this suite. 03/09/23 09:30:39.057
------------------------------
â€¢ [SLOW TEST] [24.136 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/storage/subpath.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:30:14.928
    Mar  9 09:30:14.928: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename subpath 03/09/23 09:30:14.93
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:14.947
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:14.952
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/09/23 09:30:14.957
    [It] should support subpaths with secret pod [Conformance]
      test/e2e/storage/subpath.go:60
    STEP: Creating pod pod-subpath-test-secret-f8r2 03/09/23 09:30:14.969
    STEP: Creating a pod to test atomic-volume-subpath 03/09/23 09:30:14.969
    Mar  9 09:30:14.981: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-f8r2" in namespace "subpath-7110" to be "Succeeded or Failed"
    Mar  9 09:30:14.985: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.872631ms
    Mar  9 09:30:16.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 2.009343203s
    Mar  9 09:30:18.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 4.008502072s
    Mar  9 09:30:20.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 6.008915282s
    Mar  9 09:30:22.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 8.009855986s
    Mar  9 09:30:24.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 10.009433435s
    Mar  9 09:30:26.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 12.009668572s
    Mar  9 09:30:28.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 14.008610225s
    Mar  9 09:30:30.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 16.008842629s
    Mar  9 09:30:32.991: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 18.009592206s
    Mar  9 09:30:34.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=true. Elapsed: 20.009236057s
    Mar  9 09:30:36.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Running", Reason="", readiness=false. Elapsed: 22.009151007s
    Mar  9 09:30:38.990: INFO: Pod "pod-subpath-test-secret-f8r2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.009042879s
    STEP: Saw pod success 03/09/23 09:30:38.99
    Mar  9 09:30:38.990: INFO: Pod "pod-subpath-test-secret-f8r2" satisfied condition "Succeeded or Failed"
    Mar  9 09:30:38.995: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-secret-f8r2 container test-container-subpath-secret-f8r2: <nil>
    STEP: delete the pod 03/09/23 09:30:39.029
    Mar  9 09:30:39.043: INFO: Waiting for pod pod-subpath-test-secret-f8r2 to disappear
    Mar  9 09:30:39.047: INFO: Pod pod-subpath-test-secret-f8r2 no longer exists
    STEP: Deleting pod pod-subpath-test-secret-f8r2 03/09/23 09:30:39.047
    Mar  9 09:30:39.047: INFO: Deleting pod "pod-subpath-test-secret-f8r2" in namespace "subpath-7110"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:30:39.050: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-7110" for this suite. 03/09/23 09:30:39.057
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:30:39.065
Mar  9 09:30:39.065: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename sysctl 03/09/23 09:30:39.067
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:39.086
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:39.091
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
STEP: Creating a pod with one valid and two invalid sysctls 03/09/23 09:30:39.096
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Mar  9 09:30:39.102: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-9687" for this suite. 03/09/23 09:30:39.112
------------------------------
â€¢ [0.055 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:30:39.065
    Mar  9 09:30:39.065: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename sysctl 03/09/23 09:30:39.067
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:39.086
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:39.091
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:123
    STEP: Creating a pod with one valid and two invalid sysctls 03/09/23 09:30:39.096
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:30:39.102: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-9687" for this suite. 03/09/23 09:30:39.112
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:30:39.12
Mar  9 09:30:39.120: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename subpath 03/09/23 09:30:39.122
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:39.138
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:39.143
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 03/09/23 09:30:39.148
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
STEP: Creating pod pod-subpath-test-configmap-pzrh 03/09/23 09:30:39.159
STEP: Creating a pod to test atomic-volume-subpath 03/09/23 09:30:39.159
Mar  9 09:30:39.169: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-pzrh" in namespace "subpath-7145" to be "Succeeded or Failed"
Mar  9 09:30:39.174: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Pending", Reason="", readiness=false. Elapsed: 4.346666ms
Mar  9 09:30:41.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 2.00944806s
Mar  9 09:30:43.180: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 4.01078305s
Mar  9 09:30:45.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 6.009615299s
Mar  9 09:30:47.180: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 8.010883441s
Mar  9 09:30:49.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 10.009642769s
Mar  9 09:30:51.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 12.009755779s
Mar  9 09:30:53.178: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 14.008941875s
Mar  9 09:30:55.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 16.009144254s
Mar  9 09:30:57.180: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 18.010301625s
Mar  9 09:30:59.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 20.010012736s
Mar  9 09:31:01.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=false. Elapsed: 22.009178788s
Mar  9 09:31:03.180: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.01015598s
STEP: Saw pod success 03/09/23 09:31:03.18
Mar  9 09:31:03.180: INFO: Pod "pod-subpath-test-configmap-pzrh" satisfied condition "Succeeded or Failed"
Mar  9 09:31:03.184: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-configmap-pzrh container test-container-subpath-configmap-pzrh: <nil>
STEP: delete the pod 03/09/23 09:31:03.193
Mar  9 09:31:03.208: INFO: Waiting for pod pod-subpath-test-configmap-pzrh to disappear
Mar  9 09:31:03.212: INFO: Pod pod-subpath-test-configmap-pzrh no longer exists
STEP: Deleting pod pod-subpath-test-configmap-pzrh 03/09/23 09:31:03.212
Mar  9 09:31:03.212: INFO: Deleting pod "pod-subpath-test-configmap-pzrh" in namespace "subpath-7145"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:03.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-7145" for this suite. 03/09/23 09:31:03.222
------------------------------
â€¢ [SLOW TEST] [24.110 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/storage/subpath.go:70

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:30:39.12
    Mar  9 09:30:39.120: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename subpath 03/09/23 09:30:39.122
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:30:39.138
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:30:39.143
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 03/09/23 09:30:39.148
    [It] should support subpaths with configmap pod [Conformance]
      test/e2e/storage/subpath.go:70
    STEP: Creating pod pod-subpath-test-configmap-pzrh 03/09/23 09:30:39.159
    STEP: Creating a pod to test atomic-volume-subpath 03/09/23 09:30:39.159
    Mar  9 09:30:39.169: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-pzrh" in namespace "subpath-7145" to be "Succeeded or Failed"
    Mar  9 09:30:39.174: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Pending", Reason="", readiness=false. Elapsed: 4.346666ms
    Mar  9 09:30:41.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 2.00944806s
    Mar  9 09:30:43.180: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 4.01078305s
    Mar  9 09:30:45.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 6.009615299s
    Mar  9 09:30:47.180: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 8.010883441s
    Mar  9 09:30:49.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 10.009642769s
    Mar  9 09:30:51.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 12.009755779s
    Mar  9 09:30:53.178: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 14.008941875s
    Mar  9 09:30:55.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 16.009144254s
    Mar  9 09:30:57.180: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 18.010301625s
    Mar  9 09:30:59.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=true. Elapsed: 20.010012736s
    Mar  9 09:31:01.179: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Running", Reason="", readiness=false. Elapsed: 22.009178788s
    Mar  9 09:31:03.180: INFO: Pod "pod-subpath-test-configmap-pzrh": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.01015598s
    STEP: Saw pod success 03/09/23 09:31:03.18
    Mar  9 09:31:03.180: INFO: Pod "pod-subpath-test-configmap-pzrh" satisfied condition "Succeeded or Failed"
    Mar  9 09:31:03.184: INFO: Trying to get logs from node k8s-worker1 pod pod-subpath-test-configmap-pzrh container test-container-subpath-configmap-pzrh: <nil>
    STEP: delete the pod 03/09/23 09:31:03.193
    Mar  9 09:31:03.208: INFO: Waiting for pod pod-subpath-test-configmap-pzrh to disappear
    Mar  9 09:31:03.212: INFO: Pod pod-subpath-test-configmap-pzrh no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-pzrh 03/09/23 09:31:03.212
    Mar  9 09:31:03.212: INFO: Deleting pod "pod-subpath-test-configmap-pzrh" in namespace "subpath-7145"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:03.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-7145" for this suite. 03/09/23 09:31:03.222
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:03.234
Mar  9 09:31:03.235: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename svcaccounts 03/09/23 09:31:03.236
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:03.252
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:03.256
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
Mar  9 09:31:03.265: INFO: Got root ca configmap in namespace "svcaccounts-787"
Mar  9 09:31:03.271: INFO: Deleted root ca configmap in namespace "svcaccounts-787"
STEP: waiting for a new root ca configmap created 03/09/23 09:31:03.772
Mar  9 09:31:03.776: INFO: Recreated root ca configmap in namespace "svcaccounts-787"
Mar  9 09:31:03.782: INFO: Updated root ca configmap in namespace "svcaccounts-787"
STEP: waiting for the root ca configmap reconciled 03/09/23 09:31:04.283
Mar  9 09:31:04.288: INFO: Reconciled root ca configmap in namespace "svcaccounts-787"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:04.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-787" for this suite. 03/09/23 09:31:04.294
------------------------------
â€¢ [1.066 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:03.234
    Mar  9 09:31:03.235: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename svcaccounts 03/09/23 09:31:03.236
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:03.252
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:03.256
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
      test/e2e/auth/service_accounts.go:742
    Mar  9 09:31:03.265: INFO: Got root ca configmap in namespace "svcaccounts-787"
    Mar  9 09:31:03.271: INFO: Deleted root ca configmap in namespace "svcaccounts-787"
    STEP: waiting for a new root ca configmap created 03/09/23 09:31:03.772
    Mar  9 09:31:03.776: INFO: Recreated root ca configmap in namespace "svcaccounts-787"
    Mar  9 09:31:03.782: INFO: Updated root ca configmap in namespace "svcaccounts-787"
    STEP: waiting for the root ca configmap reconciled 03/09/23 09:31:04.283
    Mar  9 09:31:04.288: INFO: Reconciled root ca configmap in namespace "svcaccounts-787"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:04.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-787" for this suite. 03/09/23 09:31:04.294
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:04.301
Mar  9 09:31:04.301: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:31:04.305
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:04.32
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:04.324
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
STEP: Creating configMap with name projected-configmap-test-volume-map-a821f0fb-75a7-4304-83b8-8364506aa75c 03/09/23 09:31:04.329
STEP: Creating a pod to test consume configMaps 03/09/23 09:31:04.335
Mar  9 09:31:04.346: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd" in namespace "projected-3174" to be "Succeeded or Failed"
Mar  9 09:31:04.350: INFO: Pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd": Phase="Pending", Reason="", readiness=false. Elapsed: 3.914757ms
Mar  9 09:31:06.355: INFO: Pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009336926s
Mar  9 09:31:08.356: INFO: Pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009614502s
STEP: Saw pod success 03/09/23 09:31:08.356
Mar  9 09:31:08.356: INFO: Pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd" satisfied condition "Succeeded or Failed"
Mar  9 09:31:08.362: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd container agnhost-container: <nil>
STEP: delete the pod 03/09/23 09:31:08.37
Mar  9 09:31:08.382: INFO: Waiting for pod pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd to disappear
Mar  9 09:31:08.385: INFO: Pod pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:08.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3174" for this suite. 03/09/23 09:31:08.392
------------------------------
â€¢ [4.098 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:04.301
    Mar  9 09:31:04.301: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:31:04.305
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:04.32
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:04.324
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:89
    STEP: Creating configMap with name projected-configmap-test-volume-map-a821f0fb-75a7-4304-83b8-8364506aa75c 03/09/23 09:31:04.329
    STEP: Creating a pod to test consume configMaps 03/09/23 09:31:04.335
    Mar  9 09:31:04.346: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd" in namespace "projected-3174" to be "Succeeded or Failed"
    Mar  9 09:31:04.350: INFO: Pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd": Phase="Pending", Reason="", readiness=false. Elapsed: 3.914757ms
    Mar  9 09:31:06.355: INFO: Pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009336926s
    Mar  9 09:31:08.356: INFO: Pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.009614502s
    STEP: Saw pod success 03/09/23 09:31:08.356
    Mar  9 09:31:08.356: INFO: Pod "pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd" satisfied condition "Succeeded or Failed"
    Mar  9 09:31:08.362: INFO: Trying to get logs from node k8s-worker1 pod pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 09:31:08.37
    Mar  9 09:31:08.382: INFO: Waiting for pod pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd to disappear
    Mar  9 09:31:08.385: INFO: Pod pod-projected-configmaps-644d396c-4e0b-4f6e-bf97-38cb21c080fd no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:08.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3174" for this suite. 03/09/23 09:31:08.392
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:08.401
Mar  9 09:31:08.402: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename security-context-test 03/09/23 09:31:08.403
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:08.417
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:08.423
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
Mar  9 09:31:08.438: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173" in namespace "security-context-test-5089" to be "Succeeded or Failed"
Mar  9 09:31:08.442: INFO: Pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173": Phase="Pending", Reason="", readiness=false. Elapsed: 4.410439ms
Mar  9 09:31:10.448: INFO: Pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010029073s
Mar  9 09:31:12.448: INFO: Pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010108325s
Mar  9 09:31:12.448: INFO: Pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173" satisfied condition "Succeeded or Failed"
Mar  9 09:31:12.456: INFO: Got logs for pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:12.456: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-5089" for this suite. 03/09/23 09:31:12.463
------------------------------
â€¢ [4.071 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with privileged
  test/e2e/common/node/security_context.go:491
    should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:528

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:08.401
    Mar  9 09:31:08.402: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename security-context-test 03/09/23 09:31:08.403
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:08.417
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:08.423
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:528
    Mar  9 09:31:08.438: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173" in namespace "security-context-test-5089" to be "Succeeded or Failed"
    Mar  9 09:31:08.442: INFO: Pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173": Phase="Pending", Reason="", readiness=false. Elapsed: 4.410439ms
    Mar  9 09:31:10.448: INFO: Pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010029073s
    Mar  9 09:31:12.448: INFO: Pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010108325s
    Mar  9 09:31:12.448: INFO: Pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173" satisfied condition "Succeeded or Failed"
    Mar  9 09:31:12.456: INFO: Got logs for pod "busybox-privileged-false-0d7ff634-eb24-4f0e-9fa1-fb217ba5c173": "ip: RTNETLINK answers: Operation not permitted\n"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:12.456: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-5089" for this suite. 03/09/23 09:31:12.463
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
[BeforeEach] [sig-architecture] Conformance Tests
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:12.474
Mar  9 09:31:12.475: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename conformance-tests 03/09/23 09:31:12.477
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:12.497
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:12.502
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:31
[It] should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
STEP: Getting node addresses 03/09/23 09:31:12.507
Mar  9 09:31:12.507: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:12.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  tear down framework | framework.go:193
STEP: Destroying namespace "conformance-tests-2659" for this suite. 03/09/23 09:31:12.523
------------------------------
â€¢ [0.057 seconds]
[sig-architecture] Conformance Tests
test/e2e/architecture/framework.go:23
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-architecture] Conformance Tests
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:12.474
    Mar  9 09:31:12.475: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename conformance-tests 03/09/23 09:31:12.477
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:12.497
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:12.502
    [BeforeEach] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:31
    [It] should have at least two untainted nodes [Conformance]
      test/e2e/architecture/conformance.go:38
    STEP: Getting node addresses 03/09/23 09:31:12.507
    Mar  9 09:31:12.507: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    [AfterEach] [sig-architecture] Conformance Tests
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:12.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      tear down framework | framework.go:193
    STEP: Destroying namespace "conformance-tests-2659" for this suite. 03/09/23 09:31:12.523
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:12.534
Mar  9 09:31:12.534: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename svcaccounts 03/09/23 09:31:12.536
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:12.552
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:12.557
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
Mar  9 09:31:12.583: INFO: created pod pod-service-account-defaultsa
Mar  9 09:31:12.583: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Mar  9 09:31:12.592: INFO: created pod pod-service-account-mountsa
Mar  9 09:31:12.592: INFO: pod pod-service-account-mountsa service account token volume mount: true
Mar  9 09:31:12.601: INFO: created pod pod-service-account-nomountsa
Mar  9 09:31:12.601: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Mar  9 09:31:12.608: INFO: created pod pod-service-account-defaultsa-mountspec
Mar  9 09:31:12.608: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Mar  9 09:31:12.615: INFO: created pod pod-service-account-mountsa-mountspec
Mar  9 09:31:12.615: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Mar  9 09:31:12.624: INFO: created pod pod-service-account-nomountsa-mountspec
Mar  9 09:31:12.624: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Mar  9 09:31:12.633: INFO: created pod pod-service-account-defaultsa-nomountspec
Mar  9 09:31:12.633: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Mar  9 09:31:12.645: INFO: created pod pod-service-account-mountsa-nomountspec
Mar  9 09:31:12.645: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Mar  9 09:31:12.658: INFO: created pod pod-service-account-nomountsa-nomountspec
Mar  9 09:31:12.658: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:12.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-2765" for this suite. 03/09/23 09:31:12.667
------------------------------
â€¢ [0.141 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:12.534
    Mar  9 09:31:12.534: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename svcaccounts 03/09/23 09:31:12.536
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:12.552
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:12.557
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow opting out of API token automount  [Conformance]
      test/e2e/auth/service_accounts.go:161
    Mar  9 09:31:12.583: INFO: created pod pod-service-account-defaultsa
    Mar  9 09:31:12.583: INFO: pod pod-service-account-defaultsa service account token volume mount: true
    Mar  9 09:31:12.592: INFO: created pod pod-service-account-mountsa
    Mar  9 09:31:12.592: INFO: pod pod-service-account-mountsa service account token volume mount: true
    Mar  9 09:31:12.601: INFO: created pod pod-service-account-nomountsa
    Mar  9 09:31:12.601: INFO: pod pod-service-account-nomountsa service account token volume mount: false
    Mar  9 09:31:12.608: INFO: created pod pod-service-account-defaultsa-mountspec
    Mar  9 09:31:12.608: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
    Mar  9 09:31:12.615: INFO: created pod pod-service-account-mountsa-mountspec
    Mar  9 09:31:12.615: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
    Mar  9 09:31:12.624: INFO: created pod pod-service-account-nomountsa-mountspec
    Mar  9 09:31:12.624: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
    Mar  9 09:31:12.633: INFO: created pod pod-service-account-defaultsa-nomountspec
    Mar  9 09:31:12.633: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
    Mar  9 09:31:12.645: INFO: created pod pod-service-account-mountsa-nomountspec
    Mar  9 09:31:12.645: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
    Mar  9 09:31:12.658: INFO: created pod pod-service-account-nomountsa-nomountspec
    Mar  9 09:31:12.658: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:12.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-2765" for this suite. 03/09/23 09:31:12.667
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:12.678
Mar  9 09:31:12.678: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename downward-api 03/09/23 09:31:12.683
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:12.717
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:12.722
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
STEP: Creating a pod to test downward API volume plugin 03/09/23 09:31:12.729
Mar  9 09:31:12.766: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8" in namespace "downward-api-4880" to be "Succeeded or Failed"
Mar  9 09:31:12.771: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.242923ms
Mar  9 09:31:14.776: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009515889s
Mar  9 09:31:16.777: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01051439s
Mar  9 09:31:18.777: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010639406s
STEP: Saw pod success 03/09/23 09:31:18.777
Mar  9 09:31:18.777: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8" satisfied condition "Succeeded or Failed"
Mar  9 09:31:18.781: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8 container client-container: <nil>
STEP: delete the pod 03/09/23 09:31:18.789
Mar  9 09:31:18.813: INFO: Waiting for pod downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8 to disappear
Mar  9 09:31:18.817: INFO: Pod downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:18.817: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-4880" for this suite. 03/09/23 09:31:18.823
------------------------------
â€¢ [SLOW TEST] [6.153 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:12.678
    Mar  9 09:31:12.678: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename downward-api 03/09/23 09:31:12.683
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:12.717
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:12.722
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:235
    STEP: Creating a pod to test downward API volume plugin 03/09/23 09:31:12.729
    Mar  9 09:31:12.766: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8" in namespace "downward-api-4880" to be "Succeeded or Failed"
    Mar  9 09:31:12.771: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.242923ms
    Mar  9 09:31:14.776: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009515889s
    Mar  9 09:31:16.777: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.01051439s
    Mar  9 09:31:18.777: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.010639406s
    STEP: Saw pod success 03/09/23 09:31:18.777
    Mar  9 09:31:18.777: INFO: Pod "downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8" satisfied condition "Succeeded or Failed"
    Mar  9 09:31:18.781: INFO: Trying to get logs from node k8s-worker1 pod downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8 container client-container: <nil>
    STEP: delete the pod 03/09/23 09:31:18.789
    Mar  9 09:31:18.813: INFO: Waiting for pod downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8 to disappear
    Mar  9 09:31:18.817: INFO: Pod downwardapi-volume-8c8ffe51-dcda-4a08-b83a-644db89486d8 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:18.817: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-4880" for this suite. 03/09/23 09:31:18.823
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:18.833
Mar  9 09:31:18.833: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename deployment 03/09/23 09:31:18.834
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:18.848
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:18.853
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
STEP: creating a Deployment 03/09/23 09:31:18.863
STEP: waiting for Deployment to be created 03/09/23 09:31:18.872
STEP: waiting for all Replicas to be Ready 03/09/23 09:31:18.875
Mar  9 09:31:18.878: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar  9 09:31:18.878: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar  9 09:31:18.905: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar  9 09:31:18.905: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar  9 09:31:18.921: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar  9 09:31:18.921: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar  9 09:31:18.967: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar  9 09:31:18.967: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Mar  9 09:31:20.254: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Mar  9 09:31:20.254: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Mar  9 09:31:21.382: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment 03/09/23 09:31:21.382
W0309 09:31:21.393206      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Mar  9 09:31:21.395: INFO: observed event type ADDED
STEP: waiting for Replicas to scale 03/09/23 09:31:21.395
Mar  9 09:31:21.398: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
Mar  9 09:31:21.398: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
Mar  9 09:31:21.398: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
Mar  9 09:31:21.398: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:21.415: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:21.415: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:21.444: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:21.444: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:21.454: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:21.454: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:21.470: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:21.470: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:23.052: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:23.052: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:23.084: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
STEP: listing Deployments 03/09/23 09:31:23.084
Mar  9 09:31:23.089: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment 03/09/23 09:31:23.089
Mar  9 09:31:23.115: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
STEP: fetching the DeploymentStatus 03/09/23 09:31:23.115
Mar  9 09:31:23.126: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:23.130: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:23.151: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:23.174: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:23.191: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:25.058: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:25.088: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:25.099: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:25.117: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Mar  9 09:31:26.330: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus 03/09/23 09:31:26.359
STEP: fetching the DeploymentStatus 03/09/23 09:31:26.37
Mar  9 09:31:26.378: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:26.378: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:26.378: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:26.378: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 3
STEP: deleting the Deployment 03/09/23 09:31:26.379
Mar  9 09:31:26.392: INFO: observed event type MODIFIED
Mar  9 09:31:26.392: INFO: observed event type MODIFIED
Mar  9 09:31:26.393: INFO: observed event type MODIFIED
Mar  9 09:31:26.393: INFO: observed event type MODIFIED
Mar  9 09:31:26.393: INFO: observed event type MODIFIED
Mar  9 09:31:26.393: INFO: observed event type MODIFIED
Mar  9 09:31:26.393: INFO: observed event type MODIFIED
Mar  9 09:31:26.394: INFO: observed event type MODIFIED
Mar  9 09:31:26.394: INFO: observed event type MODIFIED
Mar  9 09:31:26.394: INFO: observed event type MODIFIED
Mar  9 09:31:26.394: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Mar  9 09:31:26.398: INFO: Log out all the ReplicaSets if there is no deployment created
Mar  9 09:31:26.403: INFO: ReplicaSet "test-deployment-7b7876f9d6":
&ReplicaSet{ObjectMeta:{test-deployment-7b7876f9d6  deployment-8165  ffa56439-33d0-4935-b329-f84e883cf153 282252 2 2023-03-09 09:31:23 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment f9679278-214a-4b9b-8e8c-847b2c4a1401 0xc003f4d627 0xc003f4d628}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:31:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9679278-214a-4b9b-8e8c-847b2c4a1401\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:31:26 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7b7876f9d6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f4d6b0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Mar  9 09:31:26.408: INFO: pod: "test-deployment-7b7876f9d6-m8sgj":
&Pod{ObjectMeta:{test-deployment-7b7876f9d6-m8sgj test-deployment-7b7876f9d6- deployment-8165  d474741d-c858-4e0f-8434-97411ceca482 282220 0 2023-03-09 09:31:23 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[cni.projectcalico.org/containerID:84ce3fe79851d0c51109945264dfbe6605b66c78940ba8bf01ae01cba41e2763 cni.projectcalico.org/podIP:172.16.0.19/32 cni.projectcalico.org/podIPs:172.16.0.19/32] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 ffa56439-33d0-4935-b329-f84e883cf153 0xc003f4db67 0xc003f4db68}] [] [{Go-http-client Update v1 2023-03-09 09:31:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-09 09:31:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffa56439-33d0-4935-b329-f84e883cf153\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 09:31:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.19\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-72bf2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-72bf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.19,StartTime:2023-03-09 09:31:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:31:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://977d85b80a12482760055c0acc16cbb9e4670ed0c822b91682fb4a3e785d2a00,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.19,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Mar  9 09:31:26.409: INFO: pod: "test-deployment-7b7876f9d6-tghzn":
&Pod{ObjectMeta:{test-deployment-7b7876f9d6-tghzn test-deployment-7b7876f9d6- deployment-8165  1c13f058-c0a0-44ab-80d9-57efedfde862 282251 0 2023-03-09 09:31:24 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[cni.projectcalico.org/containerID:cfa62747cc9dc6524b0fa28fe580607dcee0174794f9f37e510c50660233556c cni.projectcalico.org/podIP:172.16.0.102/32 cni.projectcalico.org/podIPs:172.16.0.102/32] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 ffa56439-33d0-4935-b329-f84e883cf153 0xc003f4dda7 0xc003f4dda8}] [] [{kube-controller-manager Update v1 2023-03-09 09:31:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffa56439-33d0-4935-b329-f84e883cf153\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 09:31:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 09:31:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.102\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mrlqs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mrlqs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.102,StartTime:2023-03-09 09:31:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:31:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://4423d3f8aac6a11dd96825b54b380aae96a66033870113667015f4ef06b7c3c4,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.102,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Mar  9 09:31:26.409: INFO: ReplicaSet "test-deployment-7df74c55ff":
&ReplicaSet{ObjectMeta:{test-deployment-7df74c55ff  deployment-8165  8f16de7d-1b34-40eb-bfb9-0edf0864fc1f 282260 4 2023-03-09 09:31:21 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment f9679278-214a-4b9b-8e8c-847b2c4a1401 0xc003f4d717 0xc003f4d718}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:31:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9679278-214a-4b9b-8e8c-847b2c4a1401\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:31:26 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7df74c55ff,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/pause:3.9 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f4d7a0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Mar  9 09:31:26.415: INFO: pod: "test-deployment-7df74c55ff-kf8pz":
&Pod{ObjectMeta:{test-deployment-7df74c55ff-kf8pz test-deployment-7df74c55ff- deployment-8165  90f65a67-430a-4af7-a640-5db6a84abf6f 282255 0 2023-03-09 09:31:21 +0000 UTC 2023-03-09 09:31:27 +0000 UTC 0xc005596218 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[cni.projectcalico.org/containerID:0e86d89265697b62f94303f58fc2197368f4cb9c5821a2ef69411ba25ece18b1 cni.projectcalico.org/podIP:172.16.0.36/32 cni.projectcalico.org/podIPs:172.16.0.36/32] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 8f16de7d-1b34-40eb-bfb9-0edf0864fc1f 0xc005596267 0xc005596268}] [] [{kube-controller-manager Update v1 2023-03-09 09:31:21 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8f16de7d-1b34-40eb-bfb9-0edf0864fc1f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 09:31:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 09:31:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.36\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dqr6b,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dqr6b,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:21 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.36,StartTime:2023-03-09 09:31:21 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:31:22 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:containerd://d4b4178968c3cd07d4edf300abbe28965deefb55597e1913b190bbfb44ab3643,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.36,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Mar  9 09:31:26.415: INFO: pod: "test-deployment-7df74c55ff-qnggd":
&Pod{ObjectMeta:{test-deployment-7df74c55ff-qnggd test-deployment-7df74c55ff- deployment-8165  3fe1e65b-c72f-4ce8-8e23-14226fe592fa 282241 0 2023-03-09 09:31:23 +0000 UTC 2023-03-09 09:31:25 +0000 UTC 0xc005596460 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[cni.projectcalico.org/containerID:fb698e94948089eba6a358539cf20f1000d54e225e6b02712fdc22ecb0aa1209 cni.projectcalico.org/podIP:172.16.0.124/32 cni.projectcalico.org/podIPs:172.16.0.124/32] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 8f16de7d-1b34-40eb-bfb9-0edf0864fc1f 0xc0055964b7 0xc0055964b8}] [] [{Go-http-client Update v1 2023-03-09 09:31:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-09 09:31:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8f16de7d-1b34-40eb-bfb9-0edf0864fc1f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 09:31:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2grqn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2grqn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.124,StartTime:2023-03-09 09:31:22 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:31:23 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:containerd://0dda4fef851a342692e7b6abb0687b2ef140f25b8dc9fdf737491e6149de90b5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.124,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Mar  9 09:31:26.416: INFO: ReplicaSet "test-deployment-f4dbc4647":
&ReplicaSet{ObjectMeta:{test-deployment-f4dbc4647  deployment-8165  bbe4985f-09c7-4e60-9cbf-562cb3e5d220 282157 3 2023-03-09 09:31:18 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment f9679278-214a-4b9b-8e8c-847b2c4a1401 0xc003f4d807 0xc003f4d808}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:31:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9679278-214a-4b9b-8e8c-847b2c4a1401\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:31:22 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: f4dbc4647,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f4d890 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:26.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-8165" for this suite. 03/09/23 09:31:26.427
------------------------------
â€¢ [SLOW TEST] [7.607 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:18.833
    Mar  9 09:31:18.833: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename deployment 03/09/23 09:31:18.834
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:18.848
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:18.853
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should run the lifecycle of a Deployment [Conformance]
      test/e2e/apps/deployment.go:185
    STEP: creating a Deployment 03/09/23 09:31:18.863
    STEP: waiting for Deployment to be created 03/09/23 09:31:18.872
    STEP: waiting for all Replicas to be Ready 03/09/23 09:31:18.875
    Mar  9 09:31:18.878: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar  9 09:31:18.878: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar  9 09:31:18.905: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar  9 09:31:18.905: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar  9 09:31:18.921: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar  9 09:31:18.921: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar  9 09:31:18.967: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar  9 09:31:18.967: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Mar  9 09:31:20.254: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Mar  9 09:31:20.254: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Mar  9 09:31:21.382: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment-static:true]
    STEP: patching the Deployment 03/09/23 09:31:21.382
    W0309 09:31:21.393206      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Mar  9 09:31:21.395: INFO: observed event type ADDED
    STEP: waiting for Replicas to scale 03/09/23 09:31:21.395
    Mar  9 09:31:21.398: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
    Mar  9 09:31:21.398: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
    Mar  9 09:31:21.398: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
    Mar  9 09:31:21.398: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 0
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:21.399: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:21.415: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:21.415: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:21.444: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:21.444: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:21.454: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:21.454: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:21.470: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:21.470: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:23.052: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:23.052: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:23.084: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    STEP: listing Deployments 03/09/23 09:31:23.084
    Mar  9 09:31:23.089: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
    STEP: updating the Deployment 03/09/23 09:31:23.089
    Mar  9 09:31:23.115: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    STEP: fetching the DeploymentStatus 03/09/23 09:31:23.115
    Mar  9 09:31:23.126: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:23.130: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:23.151: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:23.174: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:23.191: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:25.058: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:25.088: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:25.099: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:25.117: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Mar  9 09:31:26.330: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    STEP: patching the DeploymentStatus 03/09/23 09:31:26.359
    STEP: fetching the DeploymentStatus 03/09/23 09:31:26.37
    Mar  9 09:31:26.378: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:26.378: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:26.378: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:26.378: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 1
    Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 2
    Mar  9 09:31:26.379: INFO: observed Deployment test-deployment in namespace deployment-8165 with ReadyReplicas 3
    STEP: deleting the Deployment 03/09/23 09:31:26.379
    Mar  9 09:31:26.392: INFO: observed event type MODIFIED
    Mar  9 09:31:26.392: INFO: observed event type MODIFIED
    Mar  9 09:31:26.393: INFO: observed event type MODIFIED
    Mar  9 09:31:26.393: INFO: observed event type MODIFIED
    Mar  9 09:31:26.393: INFO: observed event type MODIFIED
    Mar  9 09:31:26.393: INFO: observed event type MODIFIED
    Mar  9 09:31:26.393: INFO: observed event type MODIFIED
    Mar  9 09:31:26.394: INFO: observed event type MODIFIED
    Mar  9 09:31:26.394: INFO: observed event type MODIFIED
    Mar  9 09:31:26.394: INFO: observed event type MODIFIED
    Mar  9 09:31:26.394: INFO: observed event type MODIFIED
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Mar  9 09:31:26.398: INFO: Log out all the ReplicaSets if there is no deployment created
    Mar  9 09:31:26.403: INFO: ReplicaSet "test-deployment-7b7876f9d6":
    &ReplicaSet{ObjectMeta:{test-deployment-7b7876f9d6  deployment-8165  ffa56439-33d0-4935-b329-f84e883cf153 282252 2 2023-03-09 09:31:23 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment f9679278-214a-4b9b-8e8c-847b2c4a1401 0xc003f4d627 0xc003f4d628}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:31:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9679278-214a-4b9b-8e8c-847b2c4a1401\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:31:26 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7b7876f9d6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f4d6b0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

    Mar  9 09:31:26.408: INFO: pod: "test-deployment-7b7876f9d6-m8sgj":
    &Pod{ObjectMeta:{test-deployment-7b7876f9d6-m8sgj test-deployment-7b7876f9d6- deployment-8165  d474741d-c858-4e0f-8434-97411ceca482 282220 0 2023-03-09 09:31:23 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[cni.projectcalico.org/containerID:84ce3fe79851d0c51109945264dfbe6605b66c78940ba8bf01ae01cba41e2763 cni.projectcalico.org/podIP:172.16.0.19/32 cni.projectcalico.org/podIPs:172.16.0.19/32] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 ffa56439-33d0-4935-b329-f84e883cf153 0xc003f4db67 0xc003f4db68}] [] [{Go-http-client Update v1 2023-03-09 09:31:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-09 09:31:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffa56439-33d0-4935-b329-f84e883cf153\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 09:31:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.19\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-72bf2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-72bf2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.19,StartTime:2023-03-09 09:31:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:31:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://977d85b80a12482760055c0acc16cbb9e4670ed0c822b91682fb4a3e785d2a00,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.19,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Mar  9 09:31:26.409: INFO: pod: "test-deployment-7b7876f9d6-tghzn":
    &Pod{ObjectMeta:{test-deployment-7b7876f9d6-tghzn test-deployment-7b7876f9d6- deployment-8165  1c13f058-c0a0-44ab-80d9-57efedfde862 282251 0 2023-03-09 09:31:24 +0000 UTC <nil> <nil> map[pod-template-hash:7b7876f9d6 test-deployment-static:true] map[cni.projectcalico.org/containerID:cfa62747cc9dc6524b0fa28fe580607dcee0174794f9f37e510c50660233556c cni.projectcalico.org/podIP:172.16.0.102/32 cni.projectcalico.org/podIPs:172.16.0.102/32] [{apps/v1 ReplicaSet test-deployment-7b7876f9d6 ffa56439-33d0-4935-b329-f84e883cf153 0xc003f4dda7 0xc003f4dda8}] [] [{kube-controller-manager Update v1 2023-03-09 09:31:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffa56439-33d0-4935-b329-f84e883cf153\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 09:31:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 09:31:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.102\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mrlqs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mrlqs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.102,StartTime:2023-03-09 09:31:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:31:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://4423d3f8aac6a11dd96825b54b380aae96a66033870113667015f4ef06b7c3c4,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.102,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Mar  9 09:31:26.409: INFO: ReplicaSet "test-deployment-7df74c55ff":
    &ReplicaSet{ObjectMeta:{test-deployment-7df74c55ff  deployment-8165  8f16de7d-1b34-40eb-bfb9-0edf0864fc1f 282260 4 2023-03-09 09:31:21 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment f9679278-214a-4b9b-8e8c-847b2c4a1401 0xc003f4d717 0xc003f4d718}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:31:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9679278-214a-4b9b-8e8c-847b2c4a1401\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:31:26 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 7df74c55ff,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:7df74c55ff test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/pause:3.9 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f4d7a0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

    Mar  9 09:31:26.415: INFO: pod: "test-deployment-7df74c55ff-kf8pz":
    &Pod{ObjectMeta:{test-deployment-7df74c55ff-kf8pz test-deployment-7df74c55ff- deployment-8165  90f65a67-430a-4af7-a640-5db6a84abf6f 282255 0 2023-03-09 09:31:21 +0000 UTC 2023-03-09 09:31:27 +0000 UTC 0xc005596218 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[cni.projectcalico.org/containerID:0e86d89265697b62f94303f58fc2197368f4cb9c5821a2ef69411ba25ece18b1 cni.projectcalico.org/podIP:172.16.0.36/32 cni.projectcalico.org/podIPs:172.16.0.36/32] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 8f16de7d-1b34-40eb-bfb9-0edf0864fc1f 0xc005596267 0xc005596268}] [] [{kube-controller-manager Update v1 2023-03-09 09:31:21 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8f16de7d-1b34-40eb-bfb9-0edf0864fc1f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {Go-http-client Update v1 2023-03-09 09:31:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2023-03-09 09:31:22 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.36\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dqr6b,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dqr6b,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker2,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:21 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.103,PodIP:172.16.0.36,StartTime:2023-03-09 09:31:21 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:31:22 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:containerd://d4b4178968c3cd07d4edf300abbe28965deefb55597e1913b190bbfb44ab3643,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.36,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Mar  9 09:31:26.415: INFO: pod: "test-deployment-7df74c55ff-qnggd":
    &Pod{ObjectMeta:{test-deployment-7df74c55ff-qnggd test-deployment-7df74c55ff- deployment-8165  3fe1e65b-c72f-4ce8-8e23-14226fe592fa 282241 0 2023-03-09 09:31:23 +0000 UTC 2023-03-09 09:31:25 +0000 UTC 0xc005596460 map[pod-template-hash:7df74c55ff test-deployment-static:true] map[cni.projectcalico.org/containerID:fb698e94948089eba6a358539cf20f1000d54e225e6b02712fdc22ecb0aa1209 cni.projectcalico.org/podIP:172.16.0.124/32 cni.projectcalico.org/podIPs:172.16.0.124/32] [{apps/v1 ReplicaSet test-deployment-7df74c55ff 8f16de7d-1b34-40eb-bfb9-0edf0864fc1f 0xc0055964b7 0xc0055964b8}] [] [{Go-http-client Update v1 2023-03-09 09:31:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kube-controller-manager Update v1 2023-03-09 09:31:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8f16de7d-1b34-40eb-bfb9-0edf0864fc1f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-03-09 09:31:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.0.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2grqn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:registry.k8s.io/pause:3.9,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2grqn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:k8s-worker1,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-03-09 09:31:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:192.168.0.102,PodIP:172.16.0.124,StartTime:2023-03-09 09:31:22 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-03-09 09:31:23 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/pause:3.9,ImageID:registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097,ContainerID:containerd://0dda4fef851a342692e7b6abb0687b2ef140f25b8dc9fdf737491e6149de90b5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:172.16.0.124,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

    Mar  9 09:31:26.416: INFO: ReplicaSet "test-deployment-f4dbc4647":
    &ReplicaSet{ObjectMeta:{test-deployment-f4dbc4647  deployment-8165  bbe4985f-09c7-4e60-9cbf-562cb3e5d220 282157 3 2023-03-09 09:31:18 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment f9679278-214a-4b9b-8e8c-847b2c4a1401 0xc003f4d807 0xc003f4d808}] [] [{kube-controller-manager Update apps/v1 2023-03-09 09:31:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9679278-214a-4b9b-8e8c-847b2c4a1401\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-03-09 09:31:22 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: f4dbc4647,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:f4dbc4647 test-deployment-static:true] map[] [] [] []} {[] [] [{test-deployment registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003f4d890 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:26.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-8165" for this suite. 03/09/23 09:31:26.427
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:26.447
Mar  9 09:31:26.447: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename gc 03/09/23 09:31:26.45
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:26.468
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:26.473
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
Mar  9 09:31:26.514: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"bcd9f16c-73e9-4293-846e-51da01f67d6a", Controller:(*bool)(0xc005f7c6fa), BlockOwnerDeletion:(*bool)(0xc005f7c6fb)}}
Mar  9 09:31:26.526: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"9330f10c-174d-4d56-aeca-02fa8cc3ef07", Controller:(*bool)(0xc00349890a), BlockOwnerDeletion:(*bool)(0xc00349890b)}}
Mar  9 09:31:26.535: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"dd1b4668-4fec-4b5a-933f-afbac1a5f442", Controller:(*bool)(0xc003498b32), BlockOwnerDeletion:(*bool)(0xc003498b33)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:31.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-8366" for this suite. 03/09/23 09:31:31.557
------------------------------
â€¢ [SLOW TEST] [5.118 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:26.447
    Mar  9 09:31:26.447: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename gc 03/09/23 09:31:26.45
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:26.468
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:26.473
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be blocked by dependency circle [Conformance]
      test/e2e/apimachinery/garbage_collector.go:849
    Mar  9 09:31:26.514: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"bcd9f16c-73e9-4293-846e-51da01f67d6a", Controller:(*bool)(0xc005f7c6fa), BlockOwnerDeletion:(*bool)(0xc005f7c6fb)}}
    Mar  9 09:31:26.526: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"9330f10c-174d-4d56-aeca-02fa8cc3ef07", Controller:(*bool)(0xc00349890a), BlockOwnerDeletion:(*bool)(0xc00349890b)}}
    Mar  9 09:31:26.535: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"dd1b4668-4fec-4b5a-933f-afbac1a5f442", Controller:(*bool)(0xc003498b32), BlockOwnerDeletion:(*bool)(0xc003498b33)}}
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:31.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-8366" for this suite. 03/09/23 09:31:31.557
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:31.567
Mar  9 09:31:31.567: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename emptydir 03/09/23 09:31:31.568
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:31.588
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:31.593
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
STEP: Creating a pod to test emptydir 0777 on tmpfs 03/09/23 09:31:31.599
Mar  9 09:31:31.611: INFO: Waiting up to 5m0s for pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b" in namespace "emptydir-664" to be "Succeeded or Failed"
Mar  9 09:31:31.617: INFO: Pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.419987ms
Mar  9 09:31:33.622: INFO: Pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010787729s
Mar  9 09:31:35.622: INFO: Pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011255156s
STEP: Saw pod success 03/09/23 09:31:35.622
Mar  9 09:31:35.623: INFO: Pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b" satisfied condition "Succeeded or Failed"
Mar  9 09:31:35.627: INFO: Trying to get logs from node k8s-worker2 pod pod-6d4b74df-b102-46a2-9a8e-41c45645de4b container test-container: <nil>
STEP: delete the pod 03/09/23 09:31:35.658
Mar  9 09:31:35.681: INFO: Waiting for pod pod-6d4b74df-b102-46a2-9a8e-41c45645de4b to disappear
Mar  9 09:31:35.685: INFO: Pod pod-6d4b74df-b102-46a2-9a8e-41c45645de4b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:35.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-664" for this suite. 03/09/23 09:31:35.692
------------------------------
â€¢ [4.132 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:31.567
    Mar  9 09:31:31.567: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename emptydir 03/09/23 09:31:31.568
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:31.588
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:31.593
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:117
    STEP: Creating a pod to test emptydir 0777 on tmpfs 03/09/23 09:31:31.599
    Mar  9 09:31:31.611: INFO: Waiting up to 5m0s for pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b" in namespace "emptydir-664" to be "Succeeded or Failed"
    Mar  9 09:31:31.617: INFO: Pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.419987ms
    Mar  9 09:31:33.622: INFO: Pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010787729s
    Mar  9 09:31:35.622: INFO: Pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011255156s
    STEP: Saw pod success 03/09/23 09:31:35.622
    Mar  9 09:31:35.623: INFO: Pod "pod-6d4b74df-b102-46a2-9a8e-41c45645de4b" satisfied condition "Succeeded or Failed"
    Mar  9 09:31:35.627: INFO: Trying to get logs from node k8s-worker2 pod pod-6d4b74df-b102-46a2-9a8e-41c45645de4b container test-container: <nil>
    STEP: delete the pod 03/09/23 09:31:35.658
    Mar  9 09:31:35.681: INFO: Waiting for pod pod-6d4b74df-b102-46a2-9a8e-41c45645de4b to disappear
    Mar  9 09:31:35.685: INFO: Pod pod-6d4b74df-b102-46a2-9a8e-41c45645de4b no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:35.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-664" for this suite. 03/09/23 09:31:35.692
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:35.701
Mar  9 09:31:35.701: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename resourcequota 03/09/23 09:31:35.703
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:35.722
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:35.727
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
STEP: Counting existing ResourceQuota 03/09/23 09:31:35.732
STEP: Creating a ResourceQuota 03/09/23 09:31:40.737
STEP: Ensuring resource quota status is calculated 03/09/23 09:31:40.747
STEP: Creating a Service 03/09/23 09:31:42.753
STEP: Creating a NodePort Service 03/09/23 09:31:42.789
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 03/09/23 09:31:42.823
STEP: Ensuring resource quota status captures service creation 03/09/23 09:31:42.862
STEP: Deleting Services 03/09/23 09:31:44.867
STEP: Ensuring resource quota status released usage 03/09/23 09:31:44.923
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Mar  9 09:31:46.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-3350" for this suite. 03/09/23 09:31:46.944
------------------------------
â€¢ [SLOW TEST] [11.253 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:35.701
    Mar  9 09:31:35.701: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename resourcequota 03/09/23 09:31:35.703
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:35.722
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:35.727
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a service. [Conformance]
      test/e2e/apimachinery/resource_quota.go:100
    STEP: Counting existing ResourceQuota 03/09/23 09:31:35.732
    STEP: Creating a ResourceQuota 03/09/23 09:31:40.737
    STEP: Ensuring resource quota status is calculated 03/09/23 09:31:40.747
    STEP: Creating a Service 03/09/23 09:31:42.753
    STEP: Creating a NodePort Service 03/09/23 09:31:42.789
    STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 03/09/23 09:31:42.823
    STEP: Ensuring resource quota status captures service creation 03/09/23 09:31:42.862
    STEP: Deleting Services 03/09/23 09:31:44.867
    STEP: Ensuring resource quota status released usage 03/09/23 09:31:44.923
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:31:46.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-3350" for this suite. 03/09/23 09:31:46.944
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:31:46.955
Mar  9 09:31:46.955: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename cronjob 03/09/23 09:31:46.956
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:46.971
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:46.976
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
STEP: Creating a suspended cronjob 03/09/23 09:31:46.981
STEP: Ensuring no jobs are scheduled 03/09/23 09:31:46.988
STEP: Ensuring no job exists by listing jobs explicitly 03/09/23 09:36:46.998
STEP: Removing cronjob 03/09/23 09:36:47.002
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Mar  9 09:36:47.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-2206" for this suite. 03/09/23 09:36:47.017
------------------------------
â€¢ [SLOW TEST] [300.070 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:31:46.955
    Mar  9 09:31:46.955: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename cronjob 03/09/23 09:31:46.956
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:31:46.971
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:31:46.976
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule jobs when suspended [Slow] [Conformance]
      test/e2e/apps/cronjob.go:96
    STEP: Creating a suspended cronjob 03/09/23 09:31:46.981
    STEP: Ensuring no jobs are scheduled 03/09/23 09:31:46.988
    STEP: Ensuring no job exists by listing jobs explicitly 03/09/23 09:36:46.998
    STEP: Removing cronjob 03/09/23 09:36:47.002
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:36:47.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-2206" for this suite. 03/09/23 09:36:47.017
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:36:47.036
Mar  9 09:36:47.036: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename containers 03/09/23 09:36:47.037
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:36:47.053
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:36:47.057
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
STEP: Creating a pod to test override all 03/09/23 09:36:47.062
Mar  9 09:36:47.071: INFO: Waiting up to 5m0s for pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb" in namespace "containers-768" to be "Succeeded or Failed"
Mar  9 09:36:47.076: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.372022ms
Mar  9 09:36:49.082: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010392012s
Mar  9 09:36:51.082: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010228152s
Mar  9 09:36:53.081: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009548667s
STEP: Saw pod success 03/09/23 09:36:53.081
Mar  9 09:36:53.081: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb" satisfied condition "Succeeded or Failed"
Mar  9 09:36:53.085: INFO: Trying to get logs from node k8s-worker1 pod client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb container agnhost-container: <nil>
STEP: delete the pod 03/09/23 09:36:53.115
Mar  9 09:36:53.130: INFO: Waiting for pod client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb to disappear
Mar  9 09:36:53.134: INFO: Pod client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Mar  9 09:36:53.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-768" for this suite. 03/09/23 09:36:53.14
------------------------------
â€¢ [SLOW TEST] [6.112 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:36:47.036
    Mar  9 09:36:47.036: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename containers 03/09/23 09:36:47.037
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:36:47.053
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:36:47.057
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:87
    STEP: Creating a pod to test override all 03/09/23 09:36:47.062
    Mar  9 09:36:47.071: INFO: Waiting up to 5m0s for pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb" in namespace "containers-768" to be "Succeeded or Failed"
    Mar  9 09:36:47.076: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.372022ms
    Mar  9 09:36:49.082: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010392012s
    Mar  9 09:36:51.082: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.010228152s
    Mar  9 09:36:53.081: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.009548667s
    STEP: Saw pod success 03/09/23 09:36:53.081
    Mar  9 09:36:53.081: INFO: Pod "client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb" satisfied condition "Succeeded or Failed"
    Mar  9 09:36:53.085: INFO: Trying to get logs from node k8s-worker1 pod client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb container agnhost-container: <nil>
    STEP: delete the pod 03/09/23 09:36:53.115
    Mar  9 09:36:53.130: INFO: Waiting for pod client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb to disappear
    Mar  9 09:36:53.134: INFO: Pod client-containers-a6ac13a3-5ed8-42d0-bed8-28606f7df7bb no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:36:53.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-768" for this suite. 03/09/23 09:36:53.14
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:36:53.148
Mar  9 09:36:53.149: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename statefulset 03/09/23 09:36:53.151
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:36:53.166
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:36:53.171
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-4887 03/09/23 09:36:53.176
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
STEP: Looking for a node to schedule stateful set and pod 03/09/23 09:36:53.183
STEP: Creating pod with conflicting port in namespace statefulset-4887 03/09/23 09:36:53.189
STEP: Waiting until pod test-pod will start running in namespace statefulset-4887 03/09/23 09:36:53.201
Mar  9 09:36:53.201: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-4887" to be "running"
Mar  9 09:36:53.205: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.040766ms
Mar  9 09:36:55.210: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008907953s
Mar  9 09:36:55.210: INFO: Pod "test-pod" satisfied condition "running"
STEP: Creating statefulset with conflicting port in namespace statefulset-4887 03/09/23 09:36:55.21
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4887 03/09/23 09:36:55.217
Mar  9 09:36:55.233: INFO: Observed stateful pod in namespace: statefulset-4887, name: ss-0, uid: 6e4d0243-7096-4218-8a7d-bdee74a96299, status phase: Pending. Waiting for statefulset controller to delete.
Mar  9 09:36:55.250: INFO: Observed stateful pod in namespace: statefulset-4887, name: ss-0, uid: 6e4d0243-7096-4218-8a7d-bdee74a96299, status phase: Failed. Waiting for statefulset controller to delete.
Mar  9 09:36:55.259: INFO: Observed stateful pod in namespace: statefulset-4887, name: ss-0, uid: 6e4d0243-7096-4218-8a7d-bdee74a96299, status phase: Failed. Waiting for statefulset controller to delete.
Mar  9 09:36:55.262: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4887
STEP: Removing pod with conflicting port in namespace statefulset-4887 03/09/23 09:36:55.262
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4887 and will be in running state 03/09/23 09:36:55.281
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Mar  9 09:36:57.291: INFO: Deleting all statefulset in ns statefulset-4887
Mar  9 09:36:57.295: INFO: Scaling statefulset ss to 0
Mar  9 09:37:07.319: INFO: Waiting for statefulset status.replicas updated to 0
Mar  9 09:37:07.323: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Mar  9 09:37:07.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-4887" for this suite. 03/09/23 09:37:07.348
------------------------------
â€¢ [SLOW TEST] [14.206 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Should recreate evicted statefulset [Conformance]
    test/e2e/apps/statefulset.go:739

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:36:53.148
    Mar  9 09:36:53.149: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename statefulset 03/09/23 09:36:53.151
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:36:53.166
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:36:53.171
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-4887 03/09/23 09:36:53.176
    [It] Should recreate evicted statefulset [Conformance]
      test/e2e/apps/statefulset.go:739
    STEP: Looking for a node to schedule stateful set and pod 03/09/23 09:36:53.183
    STEP: Creating pod with conflicting port in namespace statefulset-4887 03/09/23 09:36:53.189
    STEP: Waiting until pod test-pod will start running in namespace statefulset-4887 03/09/23 09:36:53.201
    Mar  9 09:36:53.201: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-4887" to be "running"
    Mar  9 09:36:53.205: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.040766ms
    Mar  9 09:36:55.210: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.008907953s
    Mar  9 09:36:55.210: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Creating statefulset with conflicting port in namespace statefulset-4887 03/09/23 09:36:55.21
    STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4887 03/09/23 09:36:55.217
    Mar  9 09:36:55.233: INFO: Observed stateful pod in namespace: statefulset-4887, name: ss-0, uid: 6e4d0243-7096-4218-8a7d-bdee74a96299, status phase: Pending. Waiting for statefulset controller to delete.
    Mar  9 09:36:55.250: INFO: Observed stateful pod in namespace: statefulset-4887, name: ss-0, uid: 6e4d0243-7096-4218-8a7d-bdee74a96299, status phase: Failed. Waiting for statefulset controller to delete.
    Mar  9 09:36:55.259: INFO: Observed stateful pod in namespace: statefulset-4887, name: ss-0, uid: 6e4d0243-7096-4218-8a7d-bdee74a96299, status phase: Failed. Waiting for statefulset controller to delete.
    Mar  9 09:36:55.262: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4887
    STEP: Removing pod with conflicting port in namespace statefulset-4887 03/09/23 09:36:55.262
    STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4887 and will be in running state 03/09/23 09:36:55.281
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Mar  9 09:36:57.291: INFO: Deleting all statefulset in ns statefulset-4887
    Mar  9 09:36:57.295: INFO: Scaling statefulset ss to 0
    Mar  9 09:37:07.319: INFO: Waiting for statefulset status.replicas updated to 0
    Mar  9 09:37:07.323: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:37:07.341: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-4887" for this suite. 03/09/23 09:37:07.348
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:37:07.355
Mar  9 09:37:07.355: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename csiinlinevolumes 03/09/23 09:37:07.357
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:07.374
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:07.379
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
STEP: creating 03/09/23 09:37:07.383
STEP: getting 03/09/23 09:37:07.403
STEP: listing in namespace 03/09/23 09:37:07.407
STEP: patching 03/09/23 09:37:07.411
STEP: deleting 03/09/23 09:37:07.433
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Mar  9 09:37:07.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-2018" for this suite. 03/09/23 09:37:07.45
------------------------------
â€¢ [0.103 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:37:07.355
    Mar  9 09:37:07.355: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename csiinlinevolumes 03/09/23 09:37:07.357
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:07.374
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:07.379
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSIVolumeSource in Pod API [Conformance]
      test/e2e/storage/csi_inline.go:131
    STEP: creating 03/09/23 09:37:07.383
    STEP: getting 03/09/23 09:37:07.403
    STEP: listing in namespace 03/09/23 09:37:07.407
    STEP: patching 03/09/23 09:37:07.411
    STEP: deleting 03/09/23 09:37:07.433
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:37:07.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-2018" for this suite. 03/09/23 09:37:07.45
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:37:07.46
Mar  9 09:37:07.460: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pod-network-test 03/09/23 09:37:07.462
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:07.478
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:07.483
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
STEP: Performing setup for networking test in namespace pod-network-test-1745 03/09/23 09:37:07.489
STEP: creating a selector 03/09/23 09:37:07.489
STEP: Creating the service pods in kubernetes 03/09/23 09:37:07.489
Mar  9 09:37:07.489: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Mar  9 09:37:07.522: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-1745" to be "running and ready"
Mar  9 09:37:07.527: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.786906ms
Mar  9 09:37:07.527: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:37:09.532: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.009573358s
Mar  9 09:37:09.532: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:11.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.011026824s
Mar  9 09:37:11.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:13.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.011381871s
Mar  9 09:37:13.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:15.532: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009950081s
Mar  9 09:37:15.532: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:17.532: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.010217485s
Mar  9 09:37:17.532: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:19.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.0108803s
Mar  9 09:37:19.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:21.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.010734347s
Mar  9 09:37:21.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:23.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.010960205s
Mar  9 09:37:23.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:25.532: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.009792348s
Mar  9 09:37:25.532: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:27.534: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.012089442s
Mar  9 09:37:27.534: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Mar  9 09:37:29.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.010524494s
Mar  9 09:37:29.533: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Mar  9 09:37:29.533: INFO: Pod "netserver-0" satisfied condition "running and ready"
Mar  9 09:37:29.537: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-1745" to be "running and ready"
Mar  9 09:37:29.541: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 3.994838ms
Mar  9 09:37:29.541: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Mar  9 09:37:29.541: INFO: Pod "netserver-1" satisfied condition "running and ready"
STEP: Creating test pods 03/09/23 09:37:29.545
Mar  9 09:37:29.561: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-1745" to be "running"
Mar  9 09:37:29.566: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.596764ms
Mar  9 09:37:31.571: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.009903052s
Mar  9 09:37:31.571: INFO: Pod "test-container-pod" satisfied condition "running"
Mar  9 09:37:31.575: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-1745" to be "running"
Mar  9 09:37:31.579: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 3.718153ms
Mar  9 09:37:31.579: INFO: Pod "host-test-container-pod" satisfied condition "running"
Mar  9 09:37:31.583: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Mar  9 09:37:31.583: INFO: Going to poll 172.16.0.119 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Mar  9 09:37:31.586: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.0.119 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1745 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 09:37:31.586: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 09:37:31.587: INFO: ExecWithOptions: Clientset creation
Mar  9 09:37:31.587: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1745/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.0.119+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar  9 09:37:32.713: INFO: Found all 1 expected endpoints: [netserver-0]
Mar  9 09:37:32.713: INFO: Going to poll 172.16.0.59 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Mar  9 09:37:32.718: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.0.59 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1745 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Mar  9 09:37:32.718: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
Mar  9 09:37:32.719: INFO: ExecWithOptions: Clientset creation
Mar  9 09:37:32.719: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1745/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.0.59+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Mar  9 09:37:33.838: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Mar  9 09:37:33.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-1745" for this suite. 03/09/23 09:37:33.845
------------------------------
â€¢ [SLOW TEST] [26.394 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:37:07.46
    Mar  9 09:37:07.460: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pod-network-test 03/09/23 09:37:07.462
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:07.478
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:07.483
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:122
    STEP: Performing setup for networking test in namespace pod-network-test-1745 03/09/23 09:37:07.489
    STEP: creating a selector 03/09/23 09:37:07.489
    STEP: Creating the service pods in kubernetes 03/09/23 09:37:07.489
    Mar  9 09:37:07.489: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Mar  9 09:37:07.522: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-1745" to be "running and ready"
    Mar  9 09:37:07.527: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.786906ms
    Mar  9 09:37:07.527: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:37:09.532: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.009573358s
    Mar  9 09:37:09.532: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:11.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.011026824s
    Mar  9 09:37:11.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:13.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.011381871s
    Mar  9 09:37:13.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:15.532: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.009950081s
    Mar  9 09:37:15.532: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:17.532: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.010217485s
    Mar  9 09:37:17.532: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:19.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.0108803s
    Mar  9 09:37:19.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:21.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.010734347s
    Mar  9 09:37:21.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:23.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.010960205s
    Mar  9 09:37:23.533: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:25.532: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.009792348s
    Mar  9 09:37:25.532: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:27.534: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.012089442s
    Mar  9 09:37:27.534: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Mar  9 09:37:29.533: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.010524494s
    Mar  9 09:37:29.533: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Mar  9 09:37:29.533: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Mar  9 09:37:29.537: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-1745" to be "running and ready"
    Mar  9 09:37:29.541: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 3.994838ms
    Mar  9 09:37:29.541: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Mar  9 09:37:29.541: INFO: Pod "netserver-1" satisfied condition "running and ready"
    STEP: Creating test pods 03/09/23 09:37:29.545
    Mar  9 09:37:29.561: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-1745" to be "running"
    Mar  9 09:37:29.566: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.596764ms
    Mar  9 09:37:31.571: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.009903052s
    Mar  9 09:37:31.571: INFO: Pod "test-container-pod" satisfied condition "running"
    Mar  9 09:37:31.575: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-1745" to be "running"
    Mar  9 09:37:31.579: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 3.718153ms
    Mar  9 09:37:31.579: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Mar  9 09:37:31.583: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
    Mar  9 09:37:31.583: INFO: Going to poll 172.16.0.119 on port 8081 at least 0 times, with a maximum of 34 tries before failing
    Mar  9 09:37:31.586: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.0.119 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1745 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 09:37:31.586: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 09:37:31.587: INFO: ExecWithOptions: Clientset creation
    Mar  9 09:37:31.587: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1745/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.0.119+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar  9 09:37:32.713: INFO: Found all 1 expected endpoints: [netserver-0]
    Mar  9 09:37:32.713: INFO: Going to poll 172.16.0.59 on port 8081 at least 0 times, with a maximum of 34 tries before failing
    Mar  9 09:37:32.718: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.0.59 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1745 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Mar  9 09:37:32.718: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    Mar  9 09:37:32.719: INFO: ExecWithOptions: Clientset creation
    Mar  9 09:37:32.719: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1745/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.0.59+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Mar  9 09:37:33.838: INFO: Found all 1 expected endpoints: [netserver-1]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:37:33.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-1745" for this suite. 03/09/23 09:37:33.845
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:37:33.855
Mar  9 09:37:33.855: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename container-probe 03/09/23 09:37:33.857
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:33.874
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:33.879
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
Mar  9 09:37:33.895: INFO: Waiting up to 5m0s for pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5" in namespace "container-probe-7095" to be "running and ready"
Mar  9 09:37:33.899: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.981273ms
Mar  9 09:37:33.899: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:37:35.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 2.008920444s
Mar  9 09:37:35.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:37.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 4.009709927s
Mar  9 09:37:37.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:39.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 6.00852352s
Mar  9 09:37:39.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:41.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 8.00964238s
Mar  9 09:37:41.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:43.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 10.008804286s
Mar  9 09:37:43.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:45.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 12.009194192s
Mar  9 09:37:45.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:47.907: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 14.011246712s
Mar  9 09:37:47.907: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:49.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 16.008444703s
Mar  9 09:37:49.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:51.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 18.010053585s
Mar  9 09:37:51.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:53.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 20.009293441s
Mar  9 09:37:53.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
Mar  9 09:37:55.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=true. Elapsed: 22.008688716s
Mar  9 09:37:55.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = true)
Mar  9 09:37:55.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5" satisfied condition "running and ready"
Mar  9 09:37:55.908: INFO: Container started at 2023-03-09 09:37:35 +0000 UTC, pod became ready at 2023-03-09 09:37:54 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Mar  9 09:37:55.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-7095" for this suite. 03/09/23 09:37:55.913
------------------------------
â€¢ [SLOW TEST] [22.069 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:37:33.855
    Mar  9 09:37:33.855: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename container-probe 03/09/23 09:37:33.857
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:33.874
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:33.879
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:72
    Mar  9 09:37:33.895: INFO: Waiting up to 5m0s for pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5" in namespace "container-probe-7095" to be "running and ready"
    Mar  9 09:37:33.899: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.981273ms
    Mar  9 09:37:33.899: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:37:35.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 2.008920444s
    Mar  9 09:37:35.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:37.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 4.009709927s
    Mar  9 09:37:37.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:39.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 6.00852352s
    Mar  9 09:37:39.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:41.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 8.00964238s
    Mar  9 09:37:41.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:43.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 10.008804286s
    Mar  9 09:37:43.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:45.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 12.009194192s
    Mar  9 09:37:45.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:47.907: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 14.011246712s
    Mar  9 09:37:47.907: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:49.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 16.008444703s
    Mar  9 09:37:49.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:51.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 18.010053585s
    Mar  9 09:37:51.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:53.905: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=false. Elapsed: 20.009293441s
    Mar  9 09:37:53.905: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = false)
    Mar  9 09:37:55.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5": Phase="Running", Reason="", readiness=true. Elapsed: 22.008688716s
    Mar  9 09:37:55.904: INFO: The phase of Pod test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5 is Running (Ready = true)
    Mar  9 09:37:55.904: INFO: Pod "test-webserver-926c3b53-81b3-4e3b-8767-74efa6b4f4c5" satisfied condition "running and ready"
    Mar  9 09:37:55.908: INFO: Container started at 2023-03-09 09:37:35 +0000 UTC, pod became ready at 2023-03-09 09:37:54 +0000 UTC
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:37:55.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-7095" for this suite. 03/09/23 09:37:55.913
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:37:55.925
Mar  9 09:37:55.925: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename secrets 03/09/23 09:37:55.927
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:55.942
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:55.947
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Mar  9 09:37:56.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-8358" for this suite. 03/09/23 09:37:56.006
------------------------------
â€¢ [0.088 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:37:55.925
    Mar  9 09:37:55.925: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename secrets 03/09/23 09:37:55.927
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:55.942
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:55.947
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/secrets_volume.go:386
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:37:56.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-8358" for this suite. 03/09/23 09:37:56.006
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:37:56.016
Mar  9 09:37:56.016: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename projected 03/09/23 09:37:56.018
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:56.034
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:56.042
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
STEP: Creating projection with configMap that has name projected-configmap-test-upd-eee3402e-f1ec-4323-bc33-3db15fb62bd9 03/09/23 09:37:56.054
STEP: Creating the pod 03/09/23 09:37:56.06
Mar  9 09:37:56.072: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0" in namespace "projected-4002" to be "running and ready"
Mar  9 09:37:56.077: INFO: Pod "pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.335426ms
Mar  9 09:37:56.077: INFO: The phase of Pod pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:37:58.083: INFO: Pod "pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0": Phase="Running", Reason="", readiness=true. Elapsed: 2.010367389s
Mar  9 09:37:58.083: INFO: The phase of Pod pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0 is Running (Ready = true)
Mar  9 09:37:58.083: INFO: Pod "pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0" satisfied condition "running and ready"
STEP: Updating configmap projected-configmap-test-upd-eee3402e-f1ec-4323-bc33-3db15fb62bd9 03/09/23 09:37:58.095
STEP: waiting to observe update in volume 03/09/23 09:37:58.102
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:38:00.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4002" for this suite. 03/09/23 09:38:00.125
------------------------------
â€¢ [4.117 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:37:56.016
    Mar  9 09:37:56.016: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename projected 03/09/23 09:37:56.018
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:37:56.034
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:37:56.042
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:124
    STEP: Creating projection with configMap that has name projected-configmap-test-upd-eee3402e-f1ec-4323-bc33-3db15fb62bd9 03/09/23 09:37:56.054
    STEP: Creating the pod 03/09/23 09:37:56.06
    Mar  9 09:37:56.072: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0" in namespace "projected-4002" to be "running and ready"
    Mar  9 09:37:56.077: INFO: Pod "pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.335426ms
    Mar  9 09:37:56.077: INFO: The phase of Pod pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:37:58.083: INFO: Pod "pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0": Phase="Running", Reason="", readiness=true. Elapsed: 2.010367389s
    Mar  9 09:37:58.083: INFO: The phase of Pod pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0 is Running (Ready = true)
    Mar  9 09:37:58.083: INFO: Pod "pod-projected-configmaps-d7648383-0b38-424f-8b6f-962e2a36e5b0" satisfied condition "running and ready"
    STEP: Updating configmap projected-configmap-test-upd-eee3402e-f1ec-4323-bc33-3db15fb62bd9 03/09/23 09:37:58.095
    STEP: waiting to observe update in volume 03/09/23 09:37:58.102
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:38:00.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4002" for this suite. 03/09/23 09:38:00.125
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] Services
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:38:00.134
Mar  9 09:38:00.134: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename services 03/09/23 09:38:00.136
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:38:00.152
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:38:00.157
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6456 03/09/23 09:38:00.162
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 03/09/23 09:38:00.178
STEP: creating service externalsvc in namespace services-6456 03/09/23 09:38:00.179
STEP: creating replication controller externalsvc in namespace services-6456 03/09/23 09:38:00.201
I0309 09:38:00.210407      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6456, replica count: 2
I0309 09:38:03.261943      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName 03/09/23 09:38:03.266
Mar  9 09:38:03.285: INFO: Creating new exec pod
Mar  9 09:38:03.292: INFO: Waiting up to 5m0s for pod "execpod6vj6c" in namespace "services-6456" to be "running"
Mar  9 09:38:03.299: INFO: Pod "execpod6vj6c": Phase="Pending", Reason="", readiness=false. Elapsed: 7.526046ms
Mar  9 09:38:05.307: INFO: Pod "execpod6vj6c": Phase="Running", Reason="", readiness=true. Elapsed: 2.014774538s
Mar  9 09:38:05.307: INFO: Pod "execpod6vj6c" satisfied condition "running"
Mar  9 09:38:05.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6456 exec execpod6vj6c -- /bin/sh -x -c nslookup clusterip-service.services-6456.svc.cluster.local'
Mar  9 09:38:05.624: INFO: stderr: "+ nslookup clusterip-service.services-6456.svc.cluster.local\n"
Mar  9 09:38:05.624: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-6456.svc.cluster.local\tcanonical name = externalsvc.services-6456.svc.cluster.local.\nName:\texternalsvc.services-6456.svc.cluster.local\nAddress: 10.100.243.240\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-6456, will wait for the garbage collector to delete the pods 03/09/23 09:38:05.624
Mar  9 09:38:05.685: INFO: Deleting ReplicationController externalsvc took: 6.982626ms
Mar  9 09:38:05.786: INFO: Terminating ReplicationController externalsvc pods took: 100.504366ms
Mar  9 09:38:08.409: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Mar  9 09:38:08.422: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6456" for this suite. 03/09/23 09:38:08.431
------------------------------
â€¢ [SLOW TEST] [8.304 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:38:00.134
    Mar  9 09:38:00.134: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename services 03/09/23 09:38:00.136
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:38:00.152
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:38:00.157
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ClusterIP to ExternalName [Conformance]
      test/e2e/network/service.go:1515
    STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6456 03/09/23 09:38:00.162
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 03/09/23 09:38:00.178
    STEP: creating service externalsvc in namespace services-6456 03/09/23 09:38:00.179
    STEP: creating replication controller externalsvc in namespace services-6456 03/09/23 09:38:00.201
    I0309 09:38:00.210407      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6456, replica count: 2
    I0309 09:38:03.261943      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the ClusterIP service to type=ExternalName 03/09/23 09:38:03.266
    Mar  9 09:38:03.285: INFO: Creating new exec pod
    Mar  9 09:38:03.292: INFO: Waiting up to 5m0s for pod "execpod6vj6c" in namespace "services-6456" to be "running"
    Mar  9 09:38:03.299: INFO: Pod "execpod6vj6c": Phase="Pending", Reason="", readiness=false. Elapsed: 7.526046ms
    Mar  9 09:38:05.307: INFO: Pod "execpod6vj6c": Phase="Running", Reason="", readiness=true. Elapsed: 2.014774538s
    Mar  9 09:38:05.307: INFO: Pod "execpod6vj6c" satisfied condition "running"
    Mar  9 09:38:05.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-14557691 --namespace=services-6456 exec execpod6vj6c -- /bin/sh -x -c nslookup clusterip-service.services-6456.svc.cluster.local'
    Mar  9 09:38:05.624: INFO: stderr: "+ nslookup clusterip-service.services-6456.svc.cluster.local\n"
    Mar  9 09:38:05.624: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-6456.svc.cluster.local\tcanonical name = externalsvc.services-6456.svc.cluster.local.\nName:\texternalsvc.services-6456.svc.cluster.local\nAddress: 10.100.243.240\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-6456, will wait for the garbage collector to delete the pods 03/09/23 09:38:05.624
    Mar  9 09:38:05.685: INFO: Deleting ReplicationController externalsvc took: 6.982626ms
    Mar  9 09:38:05.786: INFO: Terminating ReplicationController externalsvc pods took: 100.504366ms
    Mar  9 09:38:08.409: INFO: Cleaning up the ClusterIP to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:38:08.422: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6456" for this suite. 03/09/23 09:38:08.431
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Pods
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:38:08.439
Mar  9 09:38:08.440: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename pods 03/09/23 09:38:08.441
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:38:08.459
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:38:08.464
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
STEP: creating the pod 03/09/23 09:38:08.469
STEP: submitting the pod to kubernetes 03/09/23 09:38:08.469
Mar  9 09:38:08.483: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11" in namespace "pods-3750" to be "running and ready"
Mar  9 09:38:08.487: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Pending", Reason="", readiness=false. Elapsed: 4.037391ms
Mar  9 09:38:08.487: INFO: The phase of Pod pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:38:10.492: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009235469s
Mar  9 09:38:10.492: INFO: The phase of Pod pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11 is Pending, waiting for it to be Running (with Ready = true)
Mar  9 09:38:12.493: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Running", Reason="", readiness=true. Elapsed: 4.010225261s
Mar  9 09:38:12.493: INFO: The phase of Pod pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11 is Running (Ready = true)
Mar  9 09:38:12.493: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 03/09/23 09:38:12.497
STEP: updating the pod 03/09/23 09:38:12.5
Mar  9 09:38:13.020: INFO: Successfully updated pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11"
Mar  9 09:38:13.020: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11" in namespace "pods-3750" to be "terminated with reason DeadlineExceeded"
Mar  9 09:38:13.024: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Running", Reason="", readiness=true. Elapsed: 3.554894ms
Mar  9 09:38:15.037: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Running", Reason="", readiness=false. Elapsed: 2.017340062s
Mar  9 09:38:17.030: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.0099179s
Mar  9 09:38:17.030: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11" satisfied condition "terminated with reason DeadlineExceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Mar  9 09:38:17.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3750" for this suite. 03/09/23 09:38:17.036
------------------------------
â€¢ [SLOW TEST] [8.604 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:38:08.439
    Mar  9 09:38:08.440: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename pods 03/09/23 09:38:08.441
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:38:08.459
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:38:08.464
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:398
    STEP: creating the pod 03/09/23 09:38:08.469
    STEP: submitting the pod to kubernetes 03/09/23 09:38:08.469
    Mar  9 09:38:08.483: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11" in namespace "pods-3750" to be "running and ready"
    Mar  9 09:38:08.487: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Pending", Reason="", readiness=false. Elapsed: 4.037391ms
    Mar  9 09:38:08.487: INFO: The phase of Pod pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:38:10.492: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009235469s
    Mar  9 09:38:10.492: INFO: The phase of Pod pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11 is Pending, waiting for it to be Running (with Ready = true)
    Mar  9 09:38:12.493: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Running", Reason="", readiness=true. Elapsed: 4.010225261s
    Mar  9 09:38:12.493: INFO: The phase of Pod pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11 is Running (Ready = true)
    Mar  9 09:38:12.493: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 03/09/23 09:38:12.497
    STEP: updating the pod 03/09/23 09:38:12.5
    Mar  9 09:38:13.020: INFO: Successfully updated pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11"
    Mar  9 09:38:13.020: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11" in namespace "pods-3750" to be "terminated with reason DeadlineExceeded"
    Mar  9 09:38:13.024: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Running", Reason="", readiness=true. Elapsed: 3.554894ms
    Mar  9 09:38:15.037: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Running", Reason="", readiness=false. Elapsed: 2.017340062s
    Mar  9 09:38:17.030: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.0099179s
    Mar  9 09:38:17.030: INFO: Pod "pod-update-activedeadlineseconds-30e00f05-f0c4-4e67-811b-2c31cf645e11" satisfied condition "terminated with reason DeadlineExceeded"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:38:17.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3750" for this suite. 03/09/23 09:38:17.036
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:38:17.045
Mar  9 09:38:17.045: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename replication-controller 03/09/23 09:38:17.047
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:38:17.063
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:38:17.068
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
Mar  9 09:38:17.073: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 03/09/23 09:38:18.088
STEP: Checking rc "condition-test" has the desired failure condition set 03/09/23 09:38:18.095
STEP: Scaling down rc "condition-test" to satisfy pod quota 03/09/23 09:38:19.106
Mar  9 09:38:19.119: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set 03/09/23 09:38:19.119
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Mar  9 09:38:20.127: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-8845" for this suite. 03/09/23 09:38:20.133
------------------------------
â€¢ [3.095 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:38:17.045
    Mar  9 09:38:17.045: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename replication-controller 03/09/23 09:38:17.047
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:38:17.063
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:38:17.068
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should surface a failure condition on a common issue like exceeded quota [Conformance]
      test/e2e/apps/rc.go:83
    Mar  9 09:38:17.073: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
    STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 03/09/23 09:38:18.088
    STEP: Checking rc "condition-test" has the desired failure condition set 03/09/23 09:38:18.095
    STEP: Scaling down rc "condition-test" to satisfy pod quota 03/09/23 09:38:19.106
    Mar  9 09:38:19.119: INFO: Updating replication controller "condition-test"
    STEP: Checking rc "condition-test" has no failure condition set 03/09/23 09:38:19.119
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:38:20.127: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-8845" for this suite. 03/09/23 09:38:20.133
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 03/09/23 09:38:20.158
Mar  9 09:38:20.158: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
STEP: Building a namespace api object, basename configmap 03/09/23 09:38:20.16
STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:38:20.177
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:38:20.182
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
STEP: Creating configMap configmap-4263/configmap-test-e9221964-1d6d-48cf-ba1f-5c8c42279339 03/09/23 09:38:20.187
STEP: Creating a pod to test consume configMaps 03/09/23 09:38:20.193
Mar  9 09:38:20.204: INFO: Waiting up to 5m0s for pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0" in namespace "configmap-4263" to be "Succeeded or Failed"
Mar  9 09:38:20.208: INFO: Pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.050373ms
Mar  9 09:38:22.213: INFO: Pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009000284s
Mar  9 09:38:24.214: INFO: Pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01002105s
STEP: Saw pod success 03/09/23 09:38:24.214
Mar  9 09:38:24.214: INFO: Pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0" satisfied condition "Succeeded or Failed"
Mar  9 09:38:24.217: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0 container env-test: <nil>
STEP: delete the pod 03/09/23 09:38:24.226
Mar  9 09:38:24.242: INFO: Waiting for pod pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0 to disappear
Mar  9 09:38:24.245: INFO: Pod pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Mar  9 09:38:24.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4263" for this suite. 03/09/23 09:38:24.251
------------------------------
â€¢ [4.100 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 03/09/23 09:38:20.158
    Mar  9 09:38:20.158: INFO: >>> kubeConfig: /tmp/kubeconfig-14557691
    STEP: Building a namespace api object, basename configmap 03/09/23 09:38:20.16
    STEP: Waiting for a default service account to be provisioned in namespace 03/09/23 09:38:20.177
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 03/09/23 09:38:20.182
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via environment variable [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:45
    STEP: Creating configMap configmap-4263/configmap-test-e9221964-1d6d-48cf-ba1f-5c8c42279339 03/09/23 09:38:20.187
    STEP: Creating a pod to test consume configMaps 03/09/23 09:38:20.193
    Mar  9 09:38:20.204: INFO: Waiting up to 5m0s for pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0" in namespace "configmap-4263" to be "Succeeded or Failed"
    Mar  9 09:38:20.208: INFO: Pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.050373ms
    Mar  9 09:38:22.213: INFO: Pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009000284s
    Mar  9 09:38:24.214: INFO: Pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01002105s
    STEP: Saw pod success 03/09/23 09:38:24.214
    Mar  9 09:38:24.214: INFO: Pod "pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0" satisfied condition "Succeeded or Failed"
    Mar  9 09:38:24.217: INFO: Trying to get logs from node k8s-worker1 pod pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0 container env-test: <nil>
    STEP: delete the pod 03/09/23 09:38:24.226
    Mar  9 09:38:24.242: INFO: Waiting for pod pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0 to disappear
    Mar  9 09:38:24.245: INFO: Pod pod-configmaps-f9beabce-59cb-474b-9a11-10195e0feba0 no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Mar  9 09:38:24.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4263" for this suite. 03/09/23 09:38:24.251
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
Mar  9 09:38:24.263: INFO: Running AfterSuite actions on node 1
Mar  9 09:38:24.263: INFO: Skipping dumping logs from cluster
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88

  Begin Captured GinkgoWriter Output >>
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    Mar  9 09:38:24.263: INFO: Running AfterSuite actions on node 1
    Mar  9 09:38:24.263: INFO: Skipping dumping logs from cluster
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153
[ReportAfterSuite] TOP-LEVEL
  test/e2e/e2e_test.go:153
------------------------------
[ReportAfterSuite] PASSED [0.000 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/e2e_test.go:153
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529
[ReportAfterSuite] TOP-LEVEL
  test/e2e/framework/test_context.go:529
------------------------------
[ReportAfterSuite] PASSED [0.208 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/framework/test_context.go:529
  << End Captured GinkgoWriter Output
------------------------------

Ran 368 of 7069 Specs in 6094.111 seconds
SUCCESS! -- 368 Passed | 0 Failed | 0 Pending | 6701 Skipped
PASS

Ginkgo ran 1 suite in 1h41m34.835874455s
Test Suite Passed
[38;5;228mYou're using deprecated Ginkgo functionality:[0m
[38;5;228m=============================================[0m
  [38;5;11m--noColor is deprecated, use --no-color instead[0m
  [1mLearn more at:[0m [38;5;14m[4mhttps://onsi.github.io/ginkgo/MIGRATING_TO_V2#changed-command-line-flags[0m

[38;5;243mTo silence deprecations that can be silenced set the following environment variable:[0m
  [38;5;243mACK_GINKGO_DEPRECATIONS=2.4.0[0m

